/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2013-08-16 10:26:13.771734
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64;
x0=IKcos(j[1]);
x1=IKsin(j[1]);
x2=IKsin(j[3]);
x3=IKcos(j[2]);
x4=IKcos(j[3]);
x5=IKcos(j[4]);
x6=IKsin(j[2]);
x7=IKsin(j[4]);
x8=IKsin(j[6]);
x9=IKcos(j[6]);
x10=IKcos(j[5]);
x11=IKsin(j[5]);
x12=IKcos(j[0]);
x13=IKsin(j[0]);
x14=((IkReal(0.955073215884961))*(x12));
x15=((IkReal(0.296369958496401))*(x13));
x16=((IkReal(1.00000000000000))*(x7));
x17=((IkReal(1.00000000000000))*(x10));
x18=((IkReal(1.00000000000000))*(x5));
x19=((IkReal(0.000500000000000000))*(x5));
x20=((IkReal(0.0570000000000000))*(x7));
x21=((IkReal(0.0570000000000000))*(x5));
x22=((IkReal(1.00000000000000))*(x11));
x23=((IkReal(0.390000000000000))*(x3));
x24=((IkReal(1.00000000000000))*(x3));
x25=((IkReal(0.000500000000000000))*(x3));
x26=((x2)*(x6));
x27=((x0)*(x6));
x28=((x0)*(x4));
x29=((x0)*(x2));
x30=((x1)*(x6));
x31=((x1)*(x4));
x32=((x1)*(x2));
x33=((x4)*(x6));
x34=((((IkReal(-1.00000000000000))*(x14)))+(x15));
x35=((((IkReal(-1.00000000000000))*(x15)))+(x14));
x36=((IkReal(1.00000000000000))*(x29));
x37=((IkReal(0.0570000000000000))*(x2)*(x3));
x38=((((IkReal(-0.296369958496401))*(x12)))+(((IkReal(-0.955073215884961))*(x13))));
x39=((x22)*(x26));
x40=((x16)*(x27));
x41=((x16)*(x30));
x42=((((IkReal(-1.00000000000000))*(x18)*(x3)))+(((x33)*(x7))));
x43=((((x29)*(x3)))+(((IkReal(-1.00000000000000))*(x31))));
x44=((x32)+(((x28)*(x3))));
x45=((((x3)*(x32)))+(x28));
x46=((((IkReal(-1.00000000000000))*(x36)))+(((x3)*(x31))));
x47=((((IkReal(-1.00000000000000))*(x18)*(x33)))+(((IkReal(-1.00000000000000))*(x16)*(x3))));
x48=((((x18)*(x33)))+(((x16)*(x3))));
x49=((x11)*(x43));
x50=((x11)*(x45));
x51=((x46)*(x5));
x52=((((IkReal(-1.00000000000000))*(x40)))+(((x44)*(x5))));
x53=((((IkReal(-1.00000000000000))*(x41)))+(x51));
x54=((((IkReal(-1.00000000000000))*(x18)*(x30)))+(((x7)*(((x36)+(((IkReal(-1.00000000000000))*(x24)*(x31))))))));
x55=((((IkReal(-1.00000000000000))*(x18)*(x27)))+(((x7)*(((((IkReal(-1.00000000000000))*(x32)))+(((IkReal(-1.00000000000000))*(x24)*(x28))))))));
x56=((((x11)*(x48)))+(((IkReal(-1.00000000000000))*(x17)*(x26))));
x57=((x10)*(x53));
x58=((((x10)*(x43)))+(((x11)*(((((IkReal(-1.00000000000000))*(x18)*(x44)))+(x40))))));
x59=((((x42)*(x8)))+(((x9)*(((((IkReal(-1.00000000000000))*(x39)))+(((x10)*(x47))))))));
x60=((((x42)*(x9)))+(((x8)*(((((IkReal(-1.00000000000000))*(x17)*(x47)))+(x39))))));
x61=((((IkReal(-1.00000000000000))*(x19)*(x3)))+(((IkReal(-0.0570000000000000))*(x10)*(x26)))+(((IkReal(0.000500000000000000))*(x33)*(x7)))+(((x11)*(((((x21)*(x33)))+(((x20)*(x3)))))))+(((IkReal(-0.390000000000000))*(x26))));
x62=((((x9)*(((((x10)*(x52)))+(x49)))))+(((x55)*(x8))));
x63=((((x8)*(((((IkReal(-1.00000000000000))*(x22)*(x43)))+(((IkReal(-1.00000000000000))*(x17)*(x52)))))))+(((x55)*(x9))));
x64=((((x11)*(((((IkReal(-1.00000000000000))*(x21)*(x44)))+(((x20)*(x27)))))))+(((x10)*(((((IkReal(-0.0570000000000000))*(x31)))+(((IkReal(0.0570000000000000))*(x29)*(x3)))))))+(((x7)*(((((IkReal(-1.00000000000000))*(x25)*(x28)))+(((IkReal(-0.000500000000000000))*(x32)))))))+(((x23)*(x29)))+(((IkReal(-1.00000000000000))*(x19)*(x27)))+(((IkReal(-0.390000000000000))*(x31)))+(((IkReal(-0.400000000000000))*(x1))));
eerot[0]=((((x38)*(x59)))+(((x34)*(x62))));
eerot[1]=((((x38)*(x60)))+(((x34)*(x63))));
eerot[2]=((((x38)*(x56)))+(((x34)*(x58))));
eetrans[0]=((((x38)*(x61)))+(((x34)*(x64))));
eerot[3]=((((x38)*(x62)))+(((x35)*(x59))));
eerot[4]=((((x38)*(x63)))+(((x35)*(x60))));
eerot[5]=((((x38)*(x58)))+(((x35)*(x56))));
eetrans[1]=((((x38)*(x64)))+(((x35)*(x61))));
eerot[6]=((((x9)*(((x57)+(x50)))))+(((x54)*(x8))));
eerot[7]=((((x8)*(((((IkReal(-1.00000000000000))*(x22)*(x45)))+(((IkReal(-1.00000000000000))*(x17)*(x53)))))))+(((x54)*(x9))));
eerot[8]=((((x11)*(((((IkReal(-1.00000000000000))*(x18)*(x46)))+(x41)))))+(((x10)*(x45))));
eetrans[2]=((IkReal(0.191500000000000))+(((x23)*(x32)))+(((x11)*(((((x20)*(x30)))+(((IkReal(-1.00000000000000))*(x21)*(x46)))))))+(((x10)*(((((IkReal(0.0570000000000000))*(x28)))+(((IkReal(0.0570000000000000))*(x3)*(x32)))))))+(((IkReal(0.400000000000000))*(x0)))+(((IkReal(-1.00000000000000))*(x19)*(x30)))+(((x7)*(((((IkReal(-1.00000000000000))*(x25)*(x31)))+(((IkReal(0.000500000000000000))*(x29)))))))+(((IkReal(0.390000000000000))*(x28))));
}

IKFAST_API int GetNumFreeParameters() { return 1; }
IKFAST_API int* GetFreeParameters() { static int freeparams[] = {0}; return freeparams; }
IKFAST_API int GetNumJoints() { return 7; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j1,cj1,sj1,htj1,j2,cj2,sj2,htj2,j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,j6,cj6,sj6,htj6,j0,cj0,sj0,htj0,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij1[2], _nj1,_ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5,_ij6[2], _nj6,_ij0[2], _nj0;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j1=numeric_limits<IkReal>::quiet_NaN(); _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j2=numeric_limits<IkReal>::quiet_NaN(); _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; j6=numeric_limits<IkReal>::quiet_NaN(); _ij6[0] = -1; _ij6[1] = -1; _nj6 = -1;  _ij0[0] = -1; _ij0[1] = -1; _nj0 = 0; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
j0=pfree[0]; cj0=cos(pfree[0]); sj0=sin(pfree[0]);
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

IkReal x65=IKsin(j0);
IkReal x66=IKcos(j0);
new_r00=((((IkReal(-0.955073215884961))*(r00)*(x66)))+(((IkReal(-0.955073215884961))*(r10)*(x65)))+(((IkReal(0.296369958496401))*(r00)*(x65)))+(((IkReal(-0.296369958496401))*(r10)*(x66))));
IkReal x67=IKsin(j0);
IkReal x68=IKcos(j0);
new_r01=((((IkReal(0.296369958496401))*(r01)*(x67)))+(((IkReal(-0.955073215884961))*(r01)*(x68)))+(((IkReal(-0.296369958496401))*(r11)*(x68)))+(((IkReal(-0.955073215884961))*(r11)*(x67))));
IkReal x69=IKsin(j0);
IkReal x70=IKcos(j0);
new_r02=((((IkReal(-0.955073215884961))*(r02)*(x70)))+(((IkReal(-0.955073215884961))*(r12)*(x69)))+(((IkReal(-0.296369958496401))*(r12)*(x70)))+(((IkReal(0.296369958496401))*(r02)*(x69))));
IkReal x71=IKsin(j0);
IkReal x72=IKcos(j0);
new_px=((((IkReal(0.0544391733054428))*(r12)*(x71)))+(((IkReal(0.0168930876342949))*(r12)*(x72)))+(((IkReal(-0.955073215884961))*(px)*(x72)))+(((IkReal(0.296369958496401))*(px)*(x71)))+(((IkReal(0.0544391733054428))*(r02)*(x72)))+(((IkReal(-0.296369958496401))*(py)*(x72)))+(((IkReal(-0.955073215884961))*(py)*(x71)))+(((IkReal(-0.0168930876342949))*(r02)*(x71))));
new_r10=r20;
new_r11=r21;
new_r12=r22;
new_py=((IkReal(-0.191500000000000))+(pz)+(((IkReal(-0.0570000000000000))*(r22))));
IkReal x73=IKsin(j0);
IkReal x74=IKcos(j0);
new_r20=((((IkReal(-0.296369958496401))*(r00)*(x74)))+(((IkReal(0.955073215884961))*(r10)*(x74)))+(((IkReal(-0.296369958496401))*(r10)*(x73)))+(((IkReal(-0.955073215884961))*(r00)*(x73))));
IkReal x75=IKsin(j0);
IkReal x76=IKcos(j0);
new_r21=((((IkReal(0.955073215884961))*(r11)*(x76)))+(((IkReal(-0.296369958496401))*(r11)*(x75)))+(((IkReal(-0.296369958496401))*(r01)*(x76)))+(((IkReal(-0.955073215884961))*(r01)*(x75))));
IkReal x77=IKsin(j0);
IkReal x78=IKcos(j0);
new_r22=((((IkReal(-0.955073215884961))*(r02)*(x77)))+(((IkReal(-0.296369958496401))*(r12)*(x77)))+(((IkReal(0.955073215884961))*(r12)*(x78)))+(((IkReal(-0.296369958496401))*(r02)*(x78))));
IkReal x79=IKsin(j0);
IkReal x80=IKcos(j0);
new_pz=((((IkReal(-0.296369958496401))*(px)*(x80)))+(((IkReal(0.0168930876342949))*(r02)*(x80)))+(((IkReal(0.0168930876342949))*(r12)*(x79)))+(((IkReal(-0.955073215884961))*(px)*(x79)))+(((IkReal(-0.0544391733054428))*(r12)*(x80)))+(((IkReal(0.0544391733054428))*(r02)*(x79)))+(((IkReal(-0.296369958496401))*(py)*(x79)))+(((IkReal(0.955073215884961))*(py)*(x80))));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
npx=((((px)*(r00)))+(((py)*(r10)))+(((pz)*(r20))));
npy=((((px)*(r01)))+(((py)*(r11)))+(((pz)*(r21))));
npz=((((px)*(r02)))+(((py)*(r12)))+(((pz)*(r22))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((IkReal(-1.00000000000000))*(px)*(r10)))+(((py)*(r00))));
rxp1_0=((((IkReal(-1.00000000000000))*(py)*(r21)))+(((pz)*(r11))));
rxp1_1=((((px)*(r21)))+(((IkReal(-1.00000000000000))*(pz)*(r01))));
rxp1_2=((((IkReal(-1.00000000000000))*(px)*(r11)))+(((py)*(r01))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((IkReal(-1.00000000000000))*(px)*(r12)))+(((py)*(r02))));
IkReal op[6+1], zeror[6];
int numroots;
IkReal x81=(pp)*(pp);
IkReal x82=(py)*(py);
IkReal x83=(px)*(px);
IkReal x84=((npy)*(r10));
IkReal x85=((IkReal(0.549547826086957))*(py));
IkReal x86=((IkReal(222.608695652174))*(npx));
IkReal x87=((npy)*(r00));
IkReal x88=((IkReal(111.304347826087))*(npx));
IkReal x89=((npx)*(r11));
IkReal x90=((IkReal(139.130434782609))*(py));
IkReal x91=((npx)*(r01));
IkReal x92=((IkReal(278.260869565217))*(px));
IkReal x93=((IkReal(2.19819130434783))*(px));
IkReal x94=((px)*(py));
IkReal x95=((IkReal(0.686934782608696))*(pp));
IkReal x96=((IkReal(1.09909565217391))*(px));
IkReal x97=((IkReal(1.09909565217391))*(py));
IkReal x98=((IkReal(0.00271330652445652))*(x89));
IkReal x99=((IkReal(0.00271330652445652))*(x84));
IkReal x100=((IkReal(0.00542661304891304))*(x91));
IkReal x101=((IkReal(0.00542661304891304))*(x87));
IkReal x102=((r11)*(x94));
IkReal x103=((pp)*(x91));
IkReal x104=((IkReal(27.8260869565217))*(x82));
IkReal x105=((IkReal(111.304347826087))*(x83));
IkReal x106=((IkReal(173.913043478261))*(x81));
IkReal x107=((IkReal(43.4782608695652))*(x81));
IkReal x108=((IkReal(69.5652173913043))*(pp)*(py));
IkReal x109=((IkReal(55.6521739130435))*(x82));
IkReal x110=((IkReal(83.4782608695652))*(x82));
IkReal x111=((IkReal(86.9565217391304))*(x81));
IkReal x112=((IkReal(139.130434782609))*(pp)*(px));
IkReal x113=((x84)*(x85));
IkReal x114=((x89)*(x95));
IkReal x115=((x85)*(x89));
IkReal x116=((x84)*(x95));
IkReal x117=((x91)*(x93));
IkReal x118=((x87)*(x93));
IkReal x119=((x84)*(x96));
IkReal x120=((IkReal(1.37386956521739))*(x103));
IkReal x121=((x87)*(x97));
IkReal x122=((x89)*(x96));
IkReal x123=((IkReal(1.37386956521739))*(pp)*(x87));
IkReal x124=((x91)*(x97));
IkReal x125=((x108)*(x84));
IkReal x126=((x107)*(x89));
IkReal x127=((x107)*(x84));
IkReal x128=((x108)*(x89));
IkReal x129=((x103)*(x92));
IkReal x130=((IkReal(222.608695652174))*(x87)*(x94));
IkReal x131=((x110)*(x89));
IkReal x132=((x105)*(x84));
IkReal x133=((r11)*(x83)*(x88));
IkReal x134=((x110)*(x84));
IkReal x135=((r01)*(x86)*(x94));
IkReal x136=((pp)*(x87)*(x92));
IkReal x137=((x111)*(x91));
IkReal x138=((x112)*(x84));
IkReal x139=((pp)*(x87)*(x90));
IkReal x140=((x109)*(x91));
IkReal x141=((x102)*(x88));
IkReal x142=((x103)*(x90));
IkReal x143=((x109)*(x87));
IkReal x144=((x111)*(x87));
IkReal x145=((x112)*(x89));
IkReal x146=((IkReal(111.304347826087))*(x84)*(x94));
IkReal x147=((x104)*(x84));
IkReal x148=((x104)*(x89));
IkReal x149=((x125)+(x113));
IkReal x150=((x128)+(x115));
IkReal x151=((x136)+(x118));
IkReal x152=((x129)+(x117));
IkReal x153=((x126)+(x114)+(x98));
IkReal x154=((x135)+(x134)+(x133));
IkReal x155=((x147)+(x127)+(x116)+(x99));
IkReal x156=((x139)+(x138)+(x121)+(x119));
IkReal x157=((x142)+(x145)+(x124)+(x122));
IkReal x158=((x140)+(x141)+(x137)+(x120)+(x100));
IkReal x159=((x143)+(x144)+(x146)+(x123)+(x101));
IkReal x160=((x131)+(x130)+(x132)+(x127)+(x116)+(x99));
op[0]=((((IkReal(-1.00000000000000))*(x149)))+(((IkReal(-1.00000000000000))*(x155)))+(x153)+(x150)+(x148));
op[1]=((((IkReal(-1.00000000000000))*(x156)))+(((IkReal(-1.00000000000000))*(x159)))+(x157)+(x158));
op[2]=((((IkReal(-1.00000000000000))*(x150)))+(((IkReal(-1.00000000000000))*(x151)))+(((IkReal(-1.00000000000000))*(x160)))+(x154)+(x153)+(x152)+(x149));
op[3]=((((IkReal(111.304347826087))*(x82)*(x87)))+(((IkReal(-1.00000000000000))*(x102)*(x86)))+(((IkReal(-2.74773913043478))*(pp)*(x87)))+(((IkReal(2.74773913043478))*(x103)))+(((IkReal(-0.0108532260978261))*(x87)))+(((x106)*(x91)))+(((r01)*(x83)*(x86)))+(((IkReal(-1.00000000000000))*(r01)*(x82)*(x88)))+(((IkReal(222.608695652174))*(x84)*(x94)))+(((IkReal(0.0108532260978261))*(x91)))+(((IkReal(-222.608695652174))*(x83)*(x87)))+(((IkReal(-1.00000000000000))*(x106)*(x87))));
op[4]=((((IkReal(-1.00000000000000))*(x150)))+(((IkReal(-1.00000000000000))*(x151)))+(((IkReal(-1.00000000000000))*(x153)))+(((IkReal(-1.00000000000000))*(x154)))+(x160)+(x152)+(x149));
op[5]=((((IkReal(-1.00000000000000))*(x157)))+(((IkReal(-1.00000000000000))*(x159)))+(x156)+(x158));
op[6]=((((IkReal(-1.00000000000000))*(x149)))+(((IkReal(-1.00000000000000))*(x148)))+(((IkReal(-1.00000000000000))*(x153)))+(x155)+(x150));
polyroots6(op,zeror,numroots);
IkReal j1array[6], cj1array[6], sj1array[6], tempj1array[1];
int numsolutions = 0;
for(int ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=((IkReal(2.00000000000000))*(atan(htj1)));
for(int kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[6]={true,true,true,true,true,true};
_nj1 = 6;
for(int ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
{
IkReal dummyeval[1];
IkReal x161=(sj1)*(sj1);
IkReal x162=(cj1)*(cj1);
IkReal x163=((cj1)*(r11));
IkReal x164=((IkReal(2.00000000000000))*(sj1));
IkReal x165=((IkReal(5.00000000000000))*(npy));
IkReal x166=((cj1)*(r10));
IkReal x167=((IkReal(5.00000000000000))*(npx));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x166)*(x167)))+(((IkReal(6.25000000000000))*((npy)*(npy))))+(((IkReal(-1.00000000000000))*(x163)*(x165)))+(((IkReal(6.25000000000000))*((npx)*(npx))))+(((x161)*((r01)*(r01))))+(((x161)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r01)*(x163)*(x164)))+(((IkReal(-1.00000000000000))*(r00)*(x164)*(x166)))+(((r01)*(sj1)*(x165)))+(((r00)*(sj1)*(x167)))+(((x162)*((r10)*(r10))))+(((x162)*((r11)*(r11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal x168=(sj1)*(sj1);
IkReal x169=(cj1)*(cj1);
IkReal x170=((cj1)*(r11));
IkReal x171=((IkReal(2.00000000000000))*(sj1));
IkReal x172=((IkReal(5.00000000000000))*(npy));
IkReal x173=((cj1)*(r10));
IkReal x174=((IkReal(5.00000000000000))*(npx));
dummyeval[0]=((((IkReal(6.25000000000000))*((npy)*(npy))))+(((IkReal(-1.00000000000000))*(r01)*(x170)*(x171)))+(((x169)*((r10)*(r10))))+(((IkReal(6.25000000000000))*((npx)*(npx))))+(((x169)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x170)*(x172)))+(((x168)*((r01)*(r01))))+(((x168)*((r00)*(r00))))+(((r01)*(sj1)*(x172)))+(((r00)*(sj1)*(x174)))+(((IkReal(-1.00000000000000))*(r00)*(x171)*(x173)))+(((IkReal(-1.00000000000000))*(x173)*(x174))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=((((IkReal(12.8163947321414))*(cj1)*(pp)*(r01)*(r11)*(sj1)))+(((IkReal(41.0649934825152))*(cj1)*(npx)*(pp)*(py)*(r00)*(sj1)))+(((IkReal(41.0649934825152))*((npx)*(npx))*((px)*(px))*((sj1)*(sj1))))+(((IkReal(12.8163947321414))*(npy)*(px)*(r01)*((sj1)*(sj1))))+(((IkReal(12.8163947321414))*(npx)*(px)*(r00)*((sj1)*(sj1))))+(((IkReal(10.2662483706288))*((pp)*(pp))*((r00)*(r00))*((sj1)*(sj1))))+(((IkReal(-6.40819736607068))*(pp)*((r01)*(r01))*((sj1)*(sj1))))+(((IkReal(16.4259973930061))*(cj1)*(npx)*(pp)*(r10)))+(((IkReal(-82.1299869650303))*(cj1)*(px)*(py)*(sj1)*((npx)*(npx))))+(((IkReal(10.2662483706288))*((pp)*(pp))*((r01)*(r01))*((sj1)*(sj1))))+(((IkReal(10.2662483706288))*((cj1)*(cj1))*((pp)*(pp))*((r11)*(r11))))+(((IkReal(-12.8163947321414))*(cj1)*(npy)*(py)*(r01)*(sj1)))+(((IkReal(-5.12655789285654))*(cj1)*(npy)*(r11)))+(((IkReal(41.0649934825152))*(cj1)*(npy)*(pp)*(py)*(r01)*(sj1)))+(((IkReal(-41.0649934825152))*(npy)*(pp)*(py)*(r11)*((cj1)*(cj1))))+((((r01)*(r01))*((sj1)*(sj1))))+(((IkReal(-41.0649934825152))*(npx)*(pp)*(py)*(r10)*((cj1)*(cj1))))+(((IkReal(41.0649934825152))*((npy)*(npy))*((px)*(px))*((sj1)*(sj1))))+(((IkReal(12.8163947321414))*(cj1)*(pp)*(r00)*(r10)*(sj1)))+(((IkReal(-5.12655789285654))*(cj1)*(npx)*(r10)))+(((IkReal(12.8163947321414))*(npx)*(py)*(r10)*((cj1)*(cj1))))+(((IkReal(-20.5324967412576))*(cj1)*(r00)*(r10)*(sj1)*((pp)*(pp))))+(((IkReal(32.8519947860121))*(px)*(sj1)*((npx)*(npx))))+((((cj1)*(cj1))*((r10)*(r10))))+(((IkReal(-41.0649934825152))*(npy)*(pp)*(px)*(r01)*((sj1)*(sj1))))+(((IkReal(41.0649934825152))*((cj1)*(cj1))*((npy)*(npy))*((py)*(py))))+((((r00)*(r00))*((sj1)*(sj1))))+(((IkReal(-12.8163947321414))*(cj1)*(npx)*(px)*(r10)*(sj1)))+(((IkReal(12.8163947321414))*(npy)*(py)*(r11)*((cj1)*(cj1))))+(((IkReal(-2.00000000000000))*(cj1)*(r00)*(r10)*(sj1)))+(((IkReal(-2.00000000000000))*(cj1)*(r01)*(r11)*(sj1)))+(((IkReal(10.2662483706288))*((cj1)*(cj1))*((pp)*(pp))*((r10)*(r10))))+(((IkReal(-16.4259973930061))*(npx)*(pp)*(r00)*(sj1)))+(((IkReal(5.12655789285654))*(npy)*(r01)*(sj1)))+(((IkReal(-20.5324967412576))*(cj1)*(r01)*(r11)*(sj1)*((pp)*(pp))))+(((IkReal(41.0649934825152))*(cj1)*(npx)*(pp)*(px)*(r10)*(sj1)))+(((IkReal(-6.40819736607068))*(pp)*((cj1)*(cj1))*((r11)*(r11))))+(((IkReal(41.0649934825152))*(cj1)*(npy)*(pp)*(px)*(r11)*(sj1)))+(((IkReal(-12.8163947321414))*(cj1)*(npy)*(px)*(r11)*(sj1)))+(((IkReal(-41.0649934825152))*(npx)*(pp)*(px)*(r00)*((sj1)*(sj1))))+((((cj1)*(cj1))*((r11)*(r11))))+(((IkReal(6.57039895720243))*((npx)*(npx))))+(((IkReal(-6.40819736607068))*(pp)*((cj1)*(cj1))*((r10)*(r10))))+(((IkReal(6.57039895720243))*((npy)*(npy))))+(((IkReal(41.0649934825152))*((cj1)*(cj1))*((npx)*(npx))*((py)*(py))))+(((IkReal(16.4259973930061))*(cj1)*(npy)*(pp)*(r11)))+(((IkReal(-32.8519947860121))*(cj1)*(py)*((npy)*(npy))))+(((IkReal(5.12655789285654))*(npx)*(r00)*(sj1)))+(((IkReal(-12.8163947321414))*(cj1)*(npx)*(py)*(r00)*(sj1)))+(((IkReal(32.8519947860121))*(px)*(sj1)*((npy)*(npy))))+(((IkReal(-82.1299869650303))*(cj1)*(px)*(py)*(sj1)*((npy)*(npy))))+(((IkReal(-16.4259973930061))*(npy)*(pp)*(r01)*(sj1)))+(((IkReal(-6.40819736607068))*(pp)*((r00)*(r00))*((sj1)*(sj1))))+(((IkReal(-32.8519947860121))*(cj1)*(py)*((npx)*(npx)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j6array[2], cj6array[2], sj6array[2];
bool j6valid[2]={false};
_nj6 = 2;
IkReal x175=((cj1)*(r10));
IkReal x176=((IkReal(10.8695652173913))*(pp));
IkReal x177=((cj1)*(py));
IkReal x178=((cj1)*(r11));
IkReal x179=((IkReal(21.7391304347826))*(npx));
IkReal x180=((r00)*(sj1));
IkReal x181=((r01)*(sj1));
IkReal x182=((px)*(sj1));
IkReal x183=((IkReal(21.7391304347826))*(npy));
IkReal x184=((((x177)*(x183)))+(((x176)*(x181)))+(((IkReal(-1.00000000000000))*(x176)*(x178)))+(((IkReal(-3.39239402173913))*(x181)))+(((IkReal(-8.69565217391304))*(npy)))+(((IkReal(3.39239402173913))*(x178)))+(((IkReal(-1.00000000000000))*(x182)*(x183))));
IkReal x185=((((IkReal(-1.00000000000000))*(x175)*(x176)))+(((x176)*(x180)))+(((IkReal(-3.39239402173913))*(x180)))+(((IkReal(-8.69565217391304))*(npx)))+(((IkReal(3.39239402173913))*(x175)))+(((IkReal(-1.00000000000000))*(x179)*(x182)))+(((x177)*(x179))));
if( IKabs(x184) < IKFAST_ATAN2_MAGTHRESH && IKabs(x185) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x186=((IkReal(1.00000000000000))*(IKatan2(x184, x185)));
if( ((((x184)*(x184))+((x185)*(x185)))) < (IkReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt((((x184)*(x184))+((x185)*(x185)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x184)*(x184))+((x185)*(x185))))))):(IkReal)1.0e30))*(((IkReal(0.00434782608695652))+(((IkReal(-0.0108695652173913))*(x177)))+(((IkReal(0.0108695652173913))*(x182))))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt((((x184)*(x184))+((x185)*(x185)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x184)*(x184))+((x185)*(x185))))))):(IkReal)1.0e30))*(((IkReal(0.00434782608695652))+(((IkReal(-0.0108695652173913))*(x177)))+(((IkReal(0.0108695652173913))*(x182))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x187=IKasin(((((IKabs(IKabs(IKsqrt((((x184)*(x184))+((x185)*(x185)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x184)*(x184))+((x185)*(x185))))))):(IkReal)1.0e30))*(((IkReal(0.00434782608695652))+(((IkReal(-0.0108695652173913))*(x177)))+(((IkReal(0.0108695652173913))*(x182)))))));
j6array[0]=((((IkReal(-1.00000000000000))*(x186)))+(((IkReal(-1.00000000000000))*(x187))));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
j6array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x186)))+(x187));
sj6array[1]=IKsin(j6array[1]);
cj6array[1]=IKcos(j6array[1]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
if( j6array[1] > IKPI )
{
    j6array[1]-=IK2PI;
}
else if( j6array[1] < -IKPI )
{    j6array[1]+=IK2PI;
}
j6valid[1] = true;
for(int ij6 = 0; ij6 < 2; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
for(int iij6 = ij6+1; iij6 < 2; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[2];
IkReal x188=IKsin(j6);
IkReal x189=IKcos(j6);
IkReal x190=((IkReal(0.400000000000000))*(sj1));
IkReal x191=((IkReal(0.400000000000000))*(cj1));
IkReal x192=((IkReal(0.0364000000000000))*(sj1));
IkReal x193=((IkReal(0.0364000000000000))*(cj1));
IkReal x194=((r01)*(x189));
IkReal x195=((r00)*(x188));
IkReal x196=((r10)*(x188));
IkReal x197=((npx)*(x188));
IkReal x198=((r11)*(x189));
IkReal x199=((npy)*(x189));
evalcond[0]=((IkReal(-0.000500000000000000))+(((IkReal(-1.00000000000000))*(x191)*(x198)))+(((IkReal(-1.00000000000000))*(x191)*(x196)))+(x199)+(x197)+(((x190)*(x194)))+(((x190)*(x195))));
evalcond[1]=((IkReal(0.00785425000000000))+(((IkReal(0.0910000000000000))*(x197)))+(((IkReal(0.0910000000000000))*(x199)))+(((IkReal(0.800000000000000))*(px)*(sj1)))+(((x192)*(x194)))+(((x192)*(x195)))+(pp)+(((IkReal(-0.800000000000000))*(cj1)*(py)))+(((IkReal(-1.00000000000000))*(x193)*(x198)))+(((IkReal(-1.00000000000000))*(x193)*(x196))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=((((IkReal(-2.50000000000000))*(cj6)*(npx)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(sj6)))+(((cj1)*(cj6)*(r10)))+(((r01)*(sj1)*(sj6)))+(((IkReal(2.50000000000000))*(npy)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj1))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x200=((IkReal(0.400000000000000))*(sj1));
IkReal x201=((IkReal(0.400000000000000))*(cj1));
IkReal x202=((IKabs(((((r01)*(sj6)*(x200)))+(((cj6)*(r10)*(x201)))+(((IkReal(-1.00000000000000))*(cj6)*(npx)))+(((npy)*(sj6)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x201)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x200))))) != 0)?((IkReal)1/(((((r01)*(sj6)*(x200)))+(((cj6)*(r10)*(x201)))+(((IkReal(-1.00000000000000))*(cj6)*(npx)))+(((npy)*(sj6)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x201)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x200)))))):(IkReal)1.0e30);
j5array[0]=((IkReal(-2.00000000000000))*(atan(((((r12)*(x201)*(((IKabs(((((r01)*(sj6)*(x200)))+(((IkReal(-1.00000000000000))*(cj6)*(npx)))+(((npy)*(sj6)))+(((IkReal(-0.400000000000000))*(cj1)*(r11)*(sj6)))+(((IkReal(0.400000000000000))*(cj1)*(cj6)*(r10)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x200))))) != 0)?((IkReal)1/(((((r01)*(sj6)*(x200)))+(((IkReal(-1.00000000000000))*(cj6)*(npx)))+(((npy)*(sj6)))+(((IkReal(-0.400000000000000))*(cj1)*(r11)*(sj6)))+(((IkReal(0.400000000000000))*(cj1)*(cj6)*(r10)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x200)))))):(IkReal)1.0e30))))+(((IkReal(-1.00000000000000))*(r02)*(x200)*(((IKabs(((((cj6)*(r10)*(x201)))+(((IkReal(0.400000000000000))*(r01)*(sj1)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(npx)))+(((npy)*(sj6)))+(((IkReal(-0.400000000000000))*(cj6)*(r00)*(sj1)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x201))))) != 0)?((IkReal)1/(((((cj6)*(r10)*(x201)))+(((IkReal(0.400000000000000))*(r01)*(sj1)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(npx)))+(((npy)*(sj6)))+(((IkReal(-0.400000000000000))*(cj6)*(r00)*(sj1)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x201)))))):(IkReal)1.0e30))))+(((IkReal(-1.00000000000000))*(npz)*(x202)))+(((IkReal(0.390000000000000))*(x202)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];

{
IkReal dummyeval[1];
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[2], cj3array[2], sj3array[2];
bool j3valid[2]={false};
_nj3 = 2;
IkReal x203=((sj1)*(sj5));
IkReal x204=((cj1)*(sj5));
cj3array[0]=((((IKabs(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r01)*(sj6)*(x203)))+(((IkReal(1.00000000000000))*(cj5)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(cj5)*(r12)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x204)))+(((IkReal(1.00000000000000))*(cj6)*(r00)*(x203)))+(((IkReal(1.00000000000000))*(r11)*(sj6)*(x204))))));
if( cj3array[0] >= -1-IKFAST_SINCOS_THRESH && cj3array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j3valid[0] = j3valid[1] = true;
    j3array[0] = IKacos(cj3array[0]);
    sj3array[0] = IKsin(j3array[0]);
    cj3array[1] = cj3array[0];
    j3array[1] = -j3array[0];
    sj3array[1] = -sj3array[0];
}
else if( isnan(cj3array[0]) )
{
    // probably any value will work
    j3valid[0] = true;
    cj3array[0] = 1; sj3array[0] = 0; j3array[0] = 0;
}
for(int ij3 = 0; ij3 < 2; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 2; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];

{
IkReal dummyeval[2];
dummyeval[0]=sj3;
dummyeval[1]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj3;
dummyeval[1]=cj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x205=((IkReal(1.00000000000000))*(sj6));
IkReal x206=((r02)*(sj1));
IkReal x207=((IkReal(1.00000000000000))*(cj6));
IkReal x208=((cj1)*(r11));
IkReal x209=((IkReal(0.400000000000000))*(sj1));
IkReal x210=((cj6)*(r01));
IkReal x211=((r00)*(sj6));
IkReal x212=((cj1)*(r12));
IkReal x213=((r01)*(sj6));
IkReal x214=((cj6)*(r00)*(sj1));
IkReal x215=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x216=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-0.390000000000000))*(cj5)))+(((IkReal(0.400000000000000))*(x206)))+(((IkReal(-0.400000000000000))*(x212)))+(npz));
evalcond[2]=((x212)+(((IkReal(-1.00000000000000))*(x206)))+(((IkReal(-1.00000000000000))*(cj5))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x207)*(x208)))+(((sj1)*(x211)))+(((sj1)*(x210)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x205))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(0.400000000000000))*(cj6)*(x208)))+(((IkReal(-1.00000000000000))*(npy)*(x207)))+(((IkReal(-1.00000000000000))*(npx)*(x205)))+(((IkReal(-1.00000000000000))*(x209)*(x210)))+(((IkReal(-1.00000000000000))*(x209)*(x211)))+(((r10)*(x215))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj5)))+(x216)+(((sj1)*(x213)))+(((IkReal(-1.00000000000000))*(x205)*(x208)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x207))));
evalcond[6]=((((IkReal(-0.390000000000000))*(sj5)))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(x205)))+(((IkReal(-0.400000000000000))*(x216)))+(((IkReal(0.400000000000000))*(sj6)*(x208)))+(((IkReal(-1.00000000000000))*(x209)*(x213)))+(((cj6)*(r00)*(x209))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(sj6)))+(((cj6)*(r20)*(sj5))));
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
IkReal op[6+1], zeror[6];
int numroots;
IkReal j2evalpoly[4];
IkReal x217=((IkReal(8.00000000000000))*(cj5));
IkReal x218=((cj1)*(r02));
IkReal x219=((r12)*(sj1));
IkReal x220=((IkReal(16.0000000000000))*(sj5));
IkReal x221=((IkReal(4.00000000000000))*(sj5));
IkReal x222=((IkReal(16.0000000000000))*(cj5));
IkReal x223=((IkReal(8.00000000000000))*(sj5));
IkReal x224=((r11)*(sj1)*(sj6));
IkReal x225=((cj1)*(cj6)*(r00));
IkReal x226=((cj6)*(r10)*(sj1));
IkReal x227=((r21)*(sj6)*(x221));
IkReal x228=((cj1)*(r01)*(sj5)*(sj6));
IkReal x229=((((IkReal(4.00000000000000))*(cj5)*(r22)))+(((cj6)*(r20)*(x221))));
IkReal x230=((x229)+(((IkReal(-1.00000000000000))*(x227))));
IkReal x231=((x227)+(((IkReal(-1.00000000000000))*(x229))));
IkReal x232=((((x223)*(x224)))+(((IkReal(-1.00000000000000))*(x217)*(x219)))+(((IkReal(-1.00000000000000))*(x217)*(x218)))+(((IkReal(-1.00000000000000))*(x223)*(x225)))+(((IkReal(-1.00000000000000))*(x223)*(x226)))+(((cj1)*(r01)*(sj6)*(x223))));
op[0]=x230;
op[1]=x232;
op[2]=x230;
op[3]=((((IkReal(-1.00000000000000))*(x219)*(x222)))+(((x220)*(x224)))+(((IkReal(-1.00000000000000))*(x220)*(x225)))+(((IkReal(-1.00000000000000))*(x220)*(x226)))+(((IkReal(-1.00000000000000))*(x218)*(x222)))+(((cj1)*(r01)*(sj6)*(x220))));
op[4]=x231;
op[5]=x232;
op[6]=x231;
polyroots6(op,zeror,numroots);
IkReal j2array[6], cj2array[6], sj2array[6], tempj2array[1];
int numsolutions = 0;
for(int ij2 = 0; ij2 < numroots; ++ij2)
{
IkReal htj2 = zeror[ij2];
tempj2array[0]=((IkReal(2.00000000000000))*(atan(htj2)));
for(int kj2 = 0; kj2 < 1; ++kj2)
{
j2array[numsolutions] = tempj2array[kj2];
if( j2array[numsolutions] > IKPI )
{
    j2array[numsolutions]-=IK2PI;
}
else if( j2array[numsolutions] < -IKPI )
{
    j2array[numsolutions]+=IK2PI;
}
sj2array[numsolutions] = IKsin(j2array[numsolutions]);
cj2array[numsolutions] = IKcos(j2array[numsolutions]);
numsolutions++;
}
}
bool j2valid[6]={true,true,true,true,true,true};
_nj2 = 6;
for(int ij2 = 0; ij2 < numsolutions; ++ij2)
    {
if( !j2valid[ij2] )
{
    continue;
}
    j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
htj2 = IKtan(j2/2);

IkReal x233=(htj2)*(htj2)*(htj2)*(htj2)*(htj2);
IkReal x234=(cj5)*(cj5);
IkReal x235=(htj2)*(htj2);
IkReal x236=(htj2)*(htj2)*(htj2);
IkReal x237=(htj2)*(htj2)*(htj2)*(htj2);
IkReal x238=(htj2)*(htj2)*(htj2)*(htj2)*(htj2)*(htj2);
IkReal x239=(sj5)*(sj5);
IkReal x240=((cj1)*(r02));
IkReal x241=((r11)*(sj1));
IkReal x242=((IkReal(4.00000000000000))*(sj5));
IkReal x243=((cj1)*(r01));
IkReal x244=((IkReal(16.0000000000000))*(r20));
IkReal x245=((IkReal(16.0000000000000))*(sj5));
IkReal x246=((cj6)*(r21));
IkReal x247=((cj5)*(cj6));
IkReal x248=((r12)*(sj1));
IkReal x249=((cj5)*(sj5));
IkReal x250=((IkReal(4.00000000000000))*(r22));
IkReal x251=((IkReal(8.00000000000000))*(r20));
IkReal x252=((r10)*(sj1));
IkReal x253=((IkReal(8.00000000000000))*(sj6));
IkReal x254=((IkReal(8.00000000000000))*(sj5));
IkReal x255=((cj5)*(sj6));
IkReal x256=((cj1)*(r00));
IkReal x257=((sj5)*(sj6));
IkReal x258=((IkReal(16.0000000000000))*(x234));
IkReal x259=((IkReal(16.0000000000000))*(x248));
IkReal x260=((cj6)*(x239));
IkReal x261=((IkReal(8.00000000000000))*(x256));
IkReal x262=((sj6)*(x239));
IkReal x263=((IkReal(8.00000000000000))*(x234));
IkReal x264=((r21)*(x242)*(x255));
IkReal x265=((IkReal(4.00000000000000))*(r21)*(x262));
IkReal x266=((((r20)*(x242)*(x247)))+(((x234)*(x250))));
IkReal x267=((((IkReal(4.00000000000000))*(r20)*(x260)))+(((cj5)*(r22)*(x242))));
IkReal x268=((((x246)*(x254)))+(((x251)*(x257)))+(((IkReal(-8.00000000000000))*(x248)))+(((IkReal(-8.00000000000000))*(x240))));
IkReal x269=((x266)+(((IkReal(-1.00000000000000))*(x264))));
IkReal x270=((x267)+(((IkReal(-1.00000000000000))*(x265))));
IkReal x271=((((IkReal(-1.00000000000000))*(x240)*(x254)))+(((IkReal(-1.00000000000000))*(x248)*(x254)))+(((x251)*(x262)))+(((IkReal(8.00000000000000))*(x239)*(x246))));
IkReal x272=((((cj6)*(x242)*(x243)))+(((sj6)*(x242)*(x256)))+(((sj6)*(x242)*(x252)))+(x250)+(((cj6)*(x241)*(x242))));
IkReal x273=((((IkReal(4.00000000000000))*(x256)*(x262)))+(((r22)*(x242)))+(((IkReal(4.00000000000000))*(x241)*(x260)))+(((IkReal(4.00000000000000))*(x243)*(x260)))+(((IkReal(4.00000000000000))*(x252)*(x262))));
IkReal x274=((((IkReal(-1.00000000000000))*(x247)*(x254)*(x256)))+(((x241)*(x249)*(x253)))+(((IkReal(-1.00000000000000))*(x240)*(x263)))+(((x243)*(x249)*(x253)))+(((IkReal(-1.00000000000000))*(x247)*(x252)*(x254)))+(((IkReal(-1.00000000000000))*(x248)*(x263))));
IkReal x275=((((x239)*(x241)*(x253)))+(((IkReal(-8.00000000000000))*(x248)*(x249)))+(((IkReal(-8.00000000000000))*(x240)*(x249)))+(((IkReal(-8.00000000000000))*(x252)*(x260)))+(((x239)*(x243)*(x253)))+(((IkReal(-1.00000000000000))*(x260)*(x261))));
j2evalpoly[0]=((((htj2)*(x268)))+(((x233)*(x268)))+(((x237)*(x272)))+(((x238)*(x272)))+(((x236)*(((((IkReal(-16.0000000000000))*(x240)))+(((x245)*(x246)))+(((x244)*(x257)))+(((IkReal(-1.00000000000000))*(x259)))))))+(((IkReal(-1.00000000000000))*(x235)*(x272)))+(((IkReal(-1.00000000000000))*(x272))));
j2evalpoly[1]=((((htj2)*(x274)))+(((x233)*(x274)))+(((x237)*(x269)))+(((x238)*(x269)))+(((x236)*(((((x243)*(x245)*(x255)))+(((IkReal(-1.00000000000000))*(x240)*(x258)))+(((IkReal(-1.00000000000000))*(x248)*(x258)))+(((x241)*(x245)*(x255)))+(((IkReal(-1.00000000000000))*(x245)*(x247)*(x252)))+(((IkReal(-1.00000000000000))*(x245)*(x247)*(x256)))))))+(x264)+(((x235)*(((x264)+(((IkReal(-1.00000000000000))*(x266)))))))+(((IkReal(-1.00000000000000))*(x266))));
j2evalpoly[2]=((((x235)*(((x265)+(((IkReal(-1.00000000000000))*(x267)))))))+(((htj2)*(x275)))+(((x233)*(x275)))+(((x237)*(x270)))+(((x238)*(x270)))+(((x236)*(((((IkReal(16.0000000000000))*(x243)*(x262)))+(((IkReal(-1.00000000000000))*(cj5)*(x245)*(x248)))+(((IkReal(-1.00000000000000))*(cj5)*(x240)*(x245)))+(((IkReal(16.0000000000000))*(x241)*(x262)))+(((IkReal(-16.0000000000000))*(x252)*(x260)))+(((IkReal(-16.0000000000000))*(x256)*(x260)))))))+(x265)+(((IkReal(-1.00000000000000))*(x267))));
j2evalpoly[3]=((((htj2)*(x271)))+(((x233)*(x271)))+(((x237)*(x273)))+(((x236)*(((((IkReal(16.0000000000000))*(x239)*(x246)))+(((x244)*(x262)))+(((IkReal(-1.00000000000000))*(x240)*(x245)))+(((IkReal(-1.00000000000000))*(x245)*(x248)))))))+(((x238)*(x273)))+(((IkReal(-1.00000000000000))*(x235)*(x273)))+(((IkReal(-1.00000000000000))*(x273))));
if( IKabs(j2evalpoly[0]) > 0.0000001000000000  || IKabs(j2evalpoly[1]) > 0.0000001000000000  || IKabs(j2evalpoly[2]) > 0.0000001000000000  || IKabs(j2evalpoly[3]) > 0.0000001000000000  )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < numsolutions; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(sj5);
dummyeval[0]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj5;
dummyeval[1]=cj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x276=((IkReal(1.00000000000000))*(sj6));
IkReal x277=((IkReal(1.00000000000000))*(r02));
IkReal x278=((cj1)*(r11));
IkReal x279=((IkReal(1.00000000000000))*(cj6));
IkReal x280=((IkReal(0.400000000000000))*(sj6));
IkReal x281=((r00)*(sj1));
IkReal x282=((cj1)*(r12));
IkReal x283=((r12)*(sj1));
IkReal x284=((r01)*(sj1));
IkReal x285=((cj1)*(r10));
IkReal x286=((cj6)*(x281));
IkReal x287=((cj6)*(x284));
IkReal x288=((cj6)*(x285));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(((IkReal(-0.400000000000000))*(x282)))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1))));
evalcond[2]=((((sj2)*(x283)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(sj1)*(x277)))+(x282));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj2)*(x283)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(x277))));
evalcond[5]=((((sj6)*(x281)))+(((IkReal(-1.00000000000000))*(x276)*(x285)))+(x287)+(((IkReal(-1.00000000000000))*(x278)*(x279))));
evalcond[6]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x279)))+(((IkReal(-1.00000000000000))*(npx)*(x276)))+(((IkReal(-0.400000000000000))*(x287)))+(((IkReal(-1.00000000000000))*(x280)*(x281)))+(((x280)*(x285)))+(((IkReal(0.400000000000000))*(cj6)*(x278))));
evalcond[7]=((((sj6)*(x284)))+(x288)+(((IkReal(-1.00000000000000))*(x279)*(x281)))+(((IkReal(-1.00000000000000))*(x276)*(x278))));
evalcond[8]=((((IkReal(-1.00000000000000))*(npy)*(x276)))+(((cj6)*(npx)))+(((x278)*(x280)))+(((IkReal(-0.400000000000000))*(x288)))+(((IkReal(-1.00000000000000))*(x280)*(x284)))+(((IkReal(0.400000000000000))*(x286))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x289=((sj2)*(sj6));
IkReal x290=((r11)*(sj1));
IkReal x291=((cj2)*(sj6));
IkReal x292=((cj2)*(cj6));
IkReal x293=((r10)*(sj1));
IkReal x294=((IkReal(1.00000000000000))*(r20));
IkReal x295=((cj6)*(sj2));
IkReal x296=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((IkReal(-1.00000000000000))*(x293)*(x295)))+(((x289)*(x290)))+(((cj1)*(r01)*(x289)))+(((IkReal(-1.00000000000000))*(r00)*(x295)*(x296)))+(((r21)*(x291)))+(((IkReal(-1.00000000000000))*(x292)*(x294))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x290)*(x291)))+(((r21)*(x289)))+(((IkReal(-1.00000000000000))*(r01)*(x291)*(x296)))+(((x292)*(x293)))+(((cj1)*(r00)*(x292)))+(((IkReal(-1.00000000000000))*(x294)*(x295))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x293)*(x295)))+(((x289)*(x290)))+(((cj1)*(r01)*(x289)))+(((IkReal(-1.00000000000000))*(r00)*(x295)*(x296)))+(((r21)*(x291)))+(((IkReal(-1.00000000000000))*(x292)*(x294)))))+IKsqr(((((IkReal(-1.00000000000000))*(x290)*(x291)))+(((r21)*(x289)))+(((IkReal(-1.00000000000000))*(r01)*(x291)*(x296)))+(((x292)*(x293)))+(((cj1)*(r00)*(x292)))+(((IkReal(-1.00000000000000))*(x294)*(x295)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x293)*(x295)))+(((x289)*(x290)))+(((cj1)*(r01)*(x289)))+(((IkReal(-1.00000000000000))*(r00)*(x295)*(x296)))+(((r21)*(x291)))+(((IkReal(-1.00000000000000))*(x292)*(x294)))), ((((IkReal(-1.00000000000000))*(x290)*(x291)))+(((r21)*(x289)))+(((IkReal(-1.00000000000000))*(r01)*(x291)*(x296)))+(((x292)*(x293)))+(((cj1)*(r00)*(x292)))+(((IkReal(-1.00000000000000))*(x294)*(x295)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x297=IKsin(j4);
IkReal x298=IKcos(j4);
IkReal x299=((cj2)*(sj6));
IkReal x300=((cj1)*(r00));
IkReal x301=((IkReal(1.00000000000000))*(r21));
IkReal x302=((cj6)*(sj2));
IkReal x303=((r10)*(sj1));
IkReal x304=((cj2)*(cj6));
IkReal x305=((cj1)*(r01));
IkReal x306=((r11)*(sj1));
IkReal x307=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(x301)*(x302)))+(((IkReal(-1.00000000000000))*(r20)*(x307)))+(((x299)*(x303)))+(((x299)*(x300)))+(x297)+(((x304)*(x306)))+(((x304)*(x305))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x306)*(x307)))+(x297)+(((r20)*(x304)))+(((IkReal(-1.00000000000000))*(x299)*(x301)))+(((x302)*(x303)))+(((IkReal(-1.00000000000000))*(x305)*(x307)))+(((x300)*(x302))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x298)))+(((IkReal(-1.00000000000000))*(x301)*(x304)))+(((IkReal(-1.00000000000000))*(x302)*(x305)))+(((IkReal(-1.00000000000000))*(x302)*(x306)))+(((IkReal(-1.00000000000000))*(x303)*(x307)))+(((IkReal(-1.00000000000000))*(r20)*(x299)))+(((IkReal(-1.00000000000000))*(x300)*(x307))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x303)*(x304)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x301)))+(((x299)*(x306)))+(((x299)*(x305)))+(x298)+(((r20)*(x302)))+(((IkReal(-1.00000000000000))*(x300)*(x304))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x308=((IkReal(1.00000000000000))*(sj6));
IkReal x309=((IkReal(1.00000000000000))*(r02));
IkReal x310=((cj1)*(r11));
IkReal x311=((IkReal(1.00000000000000))*(cj6));
IkReal x312=((IkReal(0.400000000000000))*(sj6));
IkReal x313=((r00)*(sj1));
IkReal x314=((cj1)*(r12));
IkReal x315=((r12)*(sj1));
IkReal x316=((r01)*(sj1));
IkReal x317=((cj1)*(r10));
IkReal x318=((cj6)*(x313));
IkReal x319=((cj6)*(x316));
IkReal x320=((cj6)*(x317));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(((IkReal(-0.400000000000000))*(x314)))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1))));
evalcond[2]=((((cj2)*(r22)))+(((sj2)*(x315)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(sj1)*(x309)))+(x314));
evalcond[4]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x315)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(x309))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x310)*(x311)))+(((sj6)*(x313)))+(((IkReal(-1.00000000000000))*(x308)*(x317)))+(x319));
evalcond[6]=((IkReal(0.000500000000000000))+(((x312)*(x317)))+(((IkReal(0.400000000000000))*(cj6)*(x310)))+(((IkReal(-1.00000000000000))*(x312)*(x313)))+(((IkReal(-0.400000000000000))*(x319)))+(((IkReal(-1.00000000000000))*(npx)*(x308)))+(((IkReal(-1.00000000000000))*(npy)*(x311))));
evalcond[7]=((((sj6)*(x316)))+(((IkReal(-1.00000000000000))*(x308)*(x310)))+(x320)+(((IkReal(-1.00000000000000))*(x311)*(x313))));
evalcond[8]=((((x310)*(x312)))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x312)*(x316)))+(((IkReal(0.400000000000000))*(x318)))+(((IkReal(-0.400000000000000))*(x320)))+(((IkReal(-1.00000000000000))*(npy)*(x308))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x321=((cj2)*(sj6));
IkReal x322=((IkReal(1.00000000000000))*(sj1));
IkReal x323=((r20)*(sj2));
IkReal x324=((cj1)*(r01));
IkReal x325=((cj2)*(cj6));
IkReal x326=((r21)*(sj2));
IkReal x327=((IkReal(1.00000000000000))*(cj1)*(r00));
if( IKabs(((((IkReal(-1.00000000000000))*(r11)*(x322)*(x325)))+(((IkReal(-1.00000000000000))*(x321)*(x327)))+(((IkReal(-1.00000000000000))*(x324)*(x325)))+(((IkReal(-1.00000000000000))*(r10)*(x321)*(x322)))+(((sj6)*(x323)))+(((cj6)*(x326))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x325)*(x327)))+(((IkReal(-1.00000000000000))*(sj6)*(x326)))+(((r11)*(sj1)*(x321)))+(((IkReal(-1.00000000000000))*(r10)*(x322)*(x325)))+(((cj6)*(x323)))+(((x321)*(x324))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r11)*(x322)*(x325)))+(((IkReal(-1.00000000000000))*(x321)*(x327)))+(((IkReal(-1.00000000000000))*(x324)*(x325)))+(((IkReal(-1.00000000000000))*(r10)*(x321)*(x322)))+(((sj6)*(x323)))+(((cj6)*(x326)))))+IKsqr(((((IkReal(-1.00000000000000))*(x325)*(x327)))+(((IkReal(-1.00000000000000))*(sj6)*(x326)))+(((r11)*(sj1)*(x321)))+(((IkReal(-1.00000000000000))*(r10)*(x322)*(x325)))+(((cj6)*(x323)))+(((x321)*(x324)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r11)*(x322)*(x325)))+(((IkReal(-1.00000000000000))*(x321)*(x327)))+(((IkReal(-1.00000000000000))*(x324)*(x325)))+(((IkReal(-1.00000000000000))*(r10)*(x321)*(x322)))+(((sj6)*(x323)))+(((cj6)*(x326)))), ((((IkReal(-1.00000000000000))*(x325)*(x327)))+(((IkReal(-1.00000000000000))*(sj6)*(x326)))+(((r11)*(sj1)*(x321)))+(((IkReal(-1.00000000000000))*(r10)*(x322)*(x325)))+(((cj6)*(x323)))+(((x321)*(x324)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x328=IKsin(j4);
IkReal x329=((cj2)*(sj6));
IkReal x330=((cj1)*(r00));
IkReal x331=((IkReal(1.00000000000000))*(r21));
IkReal x332=((cj6)*(sj2));
IkReal x333=((r10)*(sj1));
IkReal x334=((cj2)*(cj6));
IkReal x335=((cj1)*(r01));
IkReal x336=((r11)*(sj1));
IkReal x337=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x338=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((x334)*(x335)))+(((x334)*(x336)))+(((IkReal(-1.00000000000000))*(r20)*(x338)))+(x328)+(((x329)*(x330)))+(((x329)*(x333)))+(((IkReal(-1.00000000000000))*(x331)*(x332))));
evalcond[1]=((((x330)*(x332)))+(((IkReal(-1.00000000000000))*(x329)*(x331)))+(((x332)*(x333)))+(((IkReal(-1.00000000000000))*(x328)))+(((r20)*(x334)))+(((IkReal(-1.00000000000000))*(x335)*(x338)))+(((IkReal(-1.00000000000000))*(x336)*(x338))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x332)*(x336)))+(((IkReal(-1.00000000000000))*(x332)*(x335)))+(((IkReal(-1.00000000000000))*(x333)*(x338)))+(((IkReal(-1.00000000000000))*(x330)*(x338)))+(((IkReal(-1.00000000000000))*(x331)*(x334)))+(((IkReal(-1.00000000000000))*(x337)))+(((IkReal(-1.00000000000000))*(r20)*(x329))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x330)*(x334)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x331)))+(((r20)*(x332)))+(((IkReal(-1.00000000000000))*(x333)*(x334)))+(((x329)*(x336)))+(((x329)*(x335)))+(((IkReal(-1.00000000000000))*(x337))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x339=((IkReal(1.00000000000000))*(sj6));
IkReal x340=((r02)*(sj1));
IkReal x341=((cj1)*(cj6));
IkReal x342=((cj6)*(sj1));
IkReal x343=((IkReal(0.400000000000000))*(r01));
IkReal x344=((IkReal(1.00000000000000))*(cj2));
IkReal x345=((r11)*(sj1));
IkReal x346=((cj2)*(sj6));
IkReal x347=((cj1)*(r01));
IkReal x348=((cj1)*(r12));
IkReal x349=((cj6)*(r20));
IkReal x350=((sj1)*(sj6));
IkReal x351=((r00)*(x342));
IkReal x352=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x353=((r00)*(x350));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((npz)+(((IkReal(0.400000000000000))*(x340)))+(((IkReal(-0.400000000000000))*(x348))));
evalcond[2]=((x348)+(((IkReal(-1.00000000000000))*(x340))));
evalcond[3]=((((r01)*(x342)))+(((IkReal(-1.00000000000000))*(r11)*(x341)))+(x353)+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x339))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(0.400000000000000))*(r11)*(x341)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((IkReal(-0.400000000000000))*(x353)))+(((r10)*(x352)))+(((IkReal(-1.00000000000000))*(npx)*(x339)))+(((IkReal(-1.00000000000000))*(x342)*(x343))));
evalcond[5]=((IkReal(-1.00000000000000))+(((r01)*(x350)))+(((IkReal(-1.00000000000000))*(x351)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x339)))+(((r10)*(x341))));
evalcond[6]=((IkReal(-0.390000000000000))+(((cj6)*(npx)))+(((r11)*(x352)))+(((IkReal(-1.00000000000000))*(x343)*(x350)))+(((IkReal(0.400000000000000))*(x351)))+(((IkReal(-1.00000000000000))*(npy)*(x339)))+(((IkReal(-0.400000000000000))*(r10)*(x341))));
evalcond[7]=((((r10)*(sj2)*(x342)))+(((r00)*(sj2)*(x341)))+(((IkReal(-1.00000000000000))*(sj2)*(x339)*(x347)))+(((IkReal(-1.00000000000000))*(sj2)*(x339)*(x345)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x339)))+(((cj2)*(x349))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r21)*(sj2)*(x339)))+(((sj2)*(x349)))+(((IkReal(-1.00000000000000))*(r10)*(x342)*(x344)))+(((x345)*(x346)))+(((IkReal(-1.00000000000000))*(r00)*(x341)*(x344)))+(((x346)*(x347))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x354=((r12)*(sj1));
IkReal x355=((cj1)*(r02));
IkReal x356=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((sj2)*(x354)))+(((sj2)*(x355)))+(((cj2)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x354)*(x356)))+(((IkReal(-1.00000000000000))*(x355)*(x356))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj2)*(x354)))+(((sj2)*(x355)))+(((cj2)*(r22)))))+IKsqr(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x354)*(x356)))+(((IkReal(-1.00000000000000))*(x355)*(x356)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((sj2)*(x354)))+(((sj2)*(x355)))+(((cj2)*(r22)))), ((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x354)*(x356)))+(((IkReal(-1.00000000000000))*(x355)*(x356)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x357=IKsin(j4);
IkReal x358=((cj2)*(sj6));
IkReal x359=((cj1)*(r00));
IkReal x360=((sj1)*(sj2));
IkReal x361=((IkReal(1.00000000000000))*(sj6));
IkReal x362=((IkReal(1.00000000000000))*(cj1));
IkReal x363=((cj6)*(r01));
IkReal x364=((cj2)*(sj1));
IkReal x365=((cj6)*(r11));
IkReal x366=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x367=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((((IkReal(-1.00000000000000))*(x357)))+(((r12)*(x360)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x366)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x362)))+(((IkReal(-1.00000000000000))*(r12)*(x364))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(sj2)*(x361)))+(((x364)*(x365)))+(((IkReal(-1.00000000000000))*(sj2)*(x367)))+(x357)+(((x358)*(x359)))+(((cj1)*(cj2)*(x363)))+(((r10)*(sj1)*(x358))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x366)))+(((IkReal(-1.00000000000000))*(r10)*(x360)*(x361)))+(((IkReal(-1.00000000000000))*(sj2)*(x362)*(x363)))+(((IkReal(-1.00000000000000))*(x360)*(x365)))+(((IkReal(-1.00000000000000))*(sj2)*(x359)*(x361)))+(((IkReal(-1.00000000000000))*(cj2)*(x367)))+(((IkReal(-1.00000000000000))*(r20)*(x358))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x368=((IkReal(1.00000000000000))*(sj6));
IkReal x369=((r02)*(sj1));
IkReal x370=((cj1)*(cj6));
IkReal x371=((cj6)*(sj1));
IkReal x372=((IkReal(0.400000000000000))*(r01));
IkReal x373=((IkReal(1.00000000000000))*(cj2));
IkReal x374=((r11)*(sj1));
IkReal x375=((cj2)*(sj6));
IkReal x376=((cj1)*(r01));
IkReal x377=((cj1)*(r12));
IkReal x378=((cj6)*(r20));
IkReal x379=((sj1)*(sj6));
IkReal x380=((r00)*(x371));
IkReal x381=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x382=((r00)*(x379));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.400000000000000))*(x369)))+(npz)+(((IkReal(-0.400000000000000))*(x377))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x369)))+(x377));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x370)))+(((r01)*(x371)))+(x382)+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x368))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(0.400000000000000))*(r11)*(x370)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((r10)*(x381)))+(((IkReal(-1.00000000000000))*(x371)*(x372)))+(((IkReal(-1.00000000000000))*(npx)*(x368)))+(((IkReal(-0.400000000000000))*(x382))));
evalcond[5]=((IkReal(1.00000000000000))+(((r01)*(x379)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x368)))+(((IkReal(-1.00000000000000))*(x380)))+(((r10)*(x370))));
evalcond[6]=((IkReal(0.390000000000000))+(((cj6)*(npx)))+(((r11)*(x381)))+(((IkReal(-1.00000000000000))*(x372)*(x379)))+(((IkReal(-0.400000000000000))*(r10)*(x370)))+(((IkReal(0.400000000000000))*(x380)))+(((IkReal(-1.00000000000000))*(npy)*(x368))));
evalcond[7]=((((IkReal(-1.00000000000000))*(sj2)*(x368)*(x376)))+(((IkReal(-1.00000000000000))*(sj2)*(x368)*(x374)))+(((r00)*(sj2)*(x370)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x368)))+(((r10)*(sj2)*(x371)))+(((cj2)*(x378))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r10)*(x371)*(x373)))+(((IkReal(-1.00000000000000))*(r00)*(x370)*(x373)))+(((x375)*(x376)))+(((sj2)*(x378)))+(((x374)*(x375)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x368))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x383=((r12)*(sj1));
IkReal x384=((IkReal(1.00000000000000))*(sj2));
IkReal x385=((cj1)*(r02));
if( IKabs(((((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x384)*(x385)))+(((IkReal(-1.00000000000000))*(x383)*(x384))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj2)*(x385)))+(((cj2)*(x383)))+(((IkReal(-1.00000000000000))*(r22)*(x384))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x384)*(x385)))+(((IkReal(-1.00000000000000))*(x383)*(x384)))))+IKsqr(((((cj2)*(x385)))+(((cj2)*(x383)))+(((IkReal(-1.00000000000000))*(r22)*(x384)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x384)*(x385)))+(((IkReal(-1.00000000000000))*(x383)*(x384)))), ((((cj2)*(x385)))+(((cj2)*(x383)))+(((IkReal(-1.00000000000000))*(r22)*(x384)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x386=IKsin(j4);
IkReal x387=IKcos(j4);
IkReal x388=((cj2)*(sj6));
IkReal x389=((cj1)*(r00));
IkReal x390=((sj1)*(sj2));
IkReal x391=((IkReal(1.00000000000000))*(sj6));
IkReal x392=((IkReal(1.00000000000000))*(cj1));
IkReal x393=((cj6)*(r01));
IkReal x394=((cj2)*(sj1));
IkReal x395=((cj6)*(r11));
IkReal x396=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((x386)+(((cj2)*(r22)))+(((r12)*(x390)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x394)))+(((r22)*(sj2)))+(x387)+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x392))));
evalcond[2]=((((r10)*(sj1)*(x388)))+(((IkReal(-1.00000000000000))*(sj2)*(x396)))+(((x394)*(x395)))+(((x388)*(x389)))+(x386)+(((cj1)*(cj2)*(x393)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x391))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x387)))+(((IkReal(-1.00000000000000))*(r10)*(x390)*(x391)))+(((IkReal(-1.00000000000000))*(r20)*(x388)))+(((IkReal(-1.00000000000000))*(sj2)*(x392)*(x393)))+(((IkReal(-1.00000000000000))*(sj2)*(x389)*(x391)))+(((IkReal(-1.00000000000000))*(cj2)*(x396)))+(((IkReal(-1.00000000000000))*(x390)*(x395))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x397=((cj2)*(cj6));
IkReal x398=((IkReal(1.00000000000000))*(cj2)*(sj6));
if( IKabs(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r11)*(sj1)*(x398)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x398)))+(((cj1)*(r00)*(x397)))+(((r10)*(sj1)*(x397)))+(((r21)*(sj2)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(sj2))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))))))+IKsqr(((((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r11)*(sj1)*(x398)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x398)))+(((cj1)*(r00)*(x397)))+(((r10)*(sj1)*(x397)))+(((r21)*(sj2)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(sj2)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))))), ((((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r11)*(sj1)*(x398)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x398)))+(((cj1)*(r00)*(x397)))+(((r10)*(sj1)*(x397)))+(((r21)*(sj2)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(sj2)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x399=IKsin(j4);
IkReal x400=IKcos(j4);
IkReal x401=((cj2)*(sj6));
IkReal x402=((cj1)*(r00));
IkReal x403=((IkReal(1.00000000000000))*(r21));
IkReal x404=((cj6)*(sj2));
IkReal x405=((cj1)*(r02));
IkReal x406=((r10)*(sj1));
IkReal x407=((cj2)*(cj6));
IkReal x408=((cj1)*(r01));
IkReal x409=((IkReal(1.00000000000000))*(cj2));
IkReal x410=((r11)*(sj1));
IkReal x411=((r12)*(sj1));
IkReal x412=((IkReal(1.00000000000000))*(sj2)*(sj6));
IkReal x413=((IkReal(1.00000000000000))*(x400));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj5)*(x399)))+(((sj2)*(x411)))+(((sj2)*(x405)))+(((cj2)*(r22))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj5)*(x413)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x405)*(x409)))+(((IkReal(-1.00000000000000))*(x409)*(x411))));
evalcond[2]=((((x407)*(x408)))+(((x407)*(x410)))+(((IkReal(-1.00000000000000))*(r20)*(x412)))+(((IkReal(-1.00000000000000))*(x403)*(x404)))+(x399)+(((x401)*(x406)))+(((x401)*(x402))));
evalcond[3]=((((x404)*(x406)))+(((cj5)*(x399)))+(((IkReal(-1.00000000000000))*(x401)*(x403)))+(((r20)*(x407)))+(((IkReal(-1.00000000000000))*(x410)*(x412)))+(((x402)*(x404)))+(((IkReal(-1.00000000000000))*(x408)*(x412))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x406)*(x412)))+(((IkReal(-1.00000000000000))*(r20)*(x401)))+(((IkReal(-1.00000000000000))*(x402)*(x412)))+(((IkReal(-1.00000000000000))*(x403)*(x407)))+(((IkReal(-1.00000000000000))*(x404)*(x410)))+(((IkReal(-1.00000000000000))*(x404)*(x408)))+(((IkReal(-1.00000000000000))*(x413))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x402)*(x407)))+(((cj5)*(x400)))+(((IkReal(-1.00000000000000))*(x406)*(x407)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x403)))+(((r20)*(x404)))+(((x401)*(x410)))+(((x401)*(x408))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x414=((IkReal(1.00000000000000))*(cj2)*(sj1));
IkReal x415=((IkReal(1.00000000000000))*(cj1)*(cj2));
if( IKabs(((((r20)*(sj2)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x415)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x414)))+(((cj6)*(r21)*(sj2)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x415)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x414))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(r02)*(x415)))+(((IkReal(-1.00000000000000))*(r12)*(x414))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r20)*(sj2)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x415)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x414)))+(((cj6)*(r21)*(sj2)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x415)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x414)))))+IKsqr(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(r02)*(x415)))+(((IkReal(-1.00000000000000))*(r12)*(x414)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((r20)*(sj2)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x415)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x414)))+(((cj6)*(r21)*(sj2)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x415)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x414)))), ((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(r02)*(x415)))+(((IkReal(-1.00000000000000))*(r12)*(x414)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x416=IKsin(j4);
IkReal x417=IKcos(j4);
IkReal x418=((cj2)*(sj6));
IkReal x419=((cj1)*(r00));
IkReal x420=((IkReal(1.00000000000000))*(r21));
IkReal x421=((cj6)*(sj2));
IkReal x422=((cj1)*(r02));
IkReal x423=((r10)*(sj1));
IkReal x424=((cj2)*(cj6));
IkReal x425=((cj1)*(r01));
IkReal x426=((IkReal(1.00000000000000))*(cj2));
IkReal x427=((r11)*(sj1));
IkReal x428=((r12)*(sj1));
IkReal x429=((IkReal(1.00000000000000))*(sj2)*(sj6));
IkReal x430=((IkReal(1.00000000000000))*(x417));
evalcond[0]=((((cj2)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x416)))+(((sj2)*(x428)))+(((sj2)*(x422))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x422)*(x426)))+(((IkReal(-1.00000000000000))*(sj5)*(x430)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x426)*(x428))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x420)*(x421)))+(((x424)*(x427)))+(((x424)*(x425)))+(((x418)*(x423)))+(((IkReal(-1.00000000000000))*(r20)*(x429)))+(x416)+(((x418)*(x419))));
evalcond[3]=((((r20)*(x424)))+(((IkReal(-1.00000000000000))*(x427)*(x429)))+(((x419)*(x421)))+(((cj5)*(x416)))+(((IkReal(-1.00000000000000))*(x425)*(x429)))+(((IkReal(-1.00000000000000))*(x418)*(x420)))+(((x421)*(x423))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x430)))+(((IkReal(-1.00000000000000))*(x420)*(x424)))+(((IkReal(-1.00000000000000))*(x421)*(x425)))+(((IkReal(-1.00000000000000))*(x421)*(x427)))+(((IkReal(-1.00000000000000))*(r20)*(x418)))+(((IkReal(-1.00000000000000))*(x419)*(x429)))+(((IkReal(-1.00000000000000))*(x423)*(x429))));
evalcond[5]=((((r20)*(x421)))+(((IkReal(-1.00000000000000))*(x423)*(x424)))+(((x418)*(x427)))+(((x418)*(x425)))+(((cj5)*(x417)))+(((IkReal(-1.00000000000000))*(x419)*(x424)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x420))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x431=((r12)*(sj1));
IkReal x432=((cj1)*(r02));
IkReal x433=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((gconst2)*(((((cj2)*(r22)))+(((sj2)*(x431)))+(((sj2)*(x432))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x431)*(x433)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x432)*(x433))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst2)*(((((cj2)*(r22)))+(((sj2)*(x431)))+(((sj2)*(x432)))))), ((gconst2)*(((((IkReal(-1.00000000000000))*(x431)*(x433)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x432)*(x433)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x434=IKsin(j4);
IkReal x435=IKcos(j4);
IkReal x436=((cj2)*(sj6));
IkReal x437=((cj1)*(r00));
IkReal x438=((IkReal(1.00000000000000))*(r21));
IkReal x439=((cj6)*(sj2));
IkReal x440=((cj1)*(r02));
IkReal x441=((r10)*(sj1));
IkReal x442=((cj2)*(cj6));
IkReal x443=((cj1)*(r01));
IkReal x444=((IkReal(1.00000000000000))*(cj2));
IkReal x445=((r11)*(sj1));
IkReal x446=((r12)*(sj1));
IkReal x447=((IkReal(1.00000000000000))*(sj2)*(sj6));
IkReal x448=((IkReal(1.00000000000000))*(x435));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj5)*(x434)))+(((cj2)*(r22)))+(((sj2)*(x446)))+(((sj2)*(x440))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x444)*(x446)))+(((IkReal(-1.00000000000000))*(sj5)*(x448)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x440)*(x444))));
evalcond[2]=((((x436)*(x437)))+(((IkReal(-1.00000000000000))*(x438)*(x439)))+(x434)+(((IkReal(-1.00000000000000))*(r20)*(x447)))+(((x442)*(x445)))+(((x442)*(x443)))+(((x436)*(x441))));
evalcond[3]=((((x439)*(x441)))+(((IkReal(-1.00000000000000))*(x445)*(x447)))+(((cj5)*(x434)))+(((IkReal(-1.00000000000000))*(x436)*(x438)))+(((IkReal(-1.00000000000000))*(x443)*(x447)))+(((r20)*(x442)))+(((x437)*(x439))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x448)))+(((IkReal(-1.00000000000000))*(x437)*(x447)))+(((IkReal(-1.00000000000000))*(x438)*(x442)))+(((IkReal(-1.00000000000000))*(r20)*(x436)))+(((IkReal(-1.00000000000000))*(x439)*(x445)))+(((IkReal(-1.00000000000000))*(x439)*(x443)))+(((IkReal(-1.00000000000000))*(x441)*(x447))));
evalcond[5]=((((cj5)*(x435)))+(((IkReal(-1.00000000000000))*(x437)*(x442)))+(((IkReal(-1.00000000000000))*(x441)*(x442)))+(((r20)*(x439)))+(((x436)*(x445)))+(((x436)*(x443)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x438))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
    }

}

}

} else
{
IkReal x449=((IkReal(1.00000000000000))*(sj6));
IkReal x450=((r02)*(sj1));
IkReal x451=((IkReal(1.00000000000000))*(cj6));
IkReal x452=((cj1)*(r11));
IkReal x453=((IkReal(0.400000000000000))*(sj1));
IkReal x454=((cj6)*(r01));
IkReal x455=((r00)*(sj6));
IkReal x456=((cj1)*(r12));
IkReal x457=((r01)*(sj6));
IkReal x458=((cj6)*(r00)*(sj1));
IkReal x459=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x460=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-0.390000000000000))*(cj5)))+(((IkReal(-0.400000000000000))*(x456)))+(npz)+(((IkReal(0.400000000000000))*(x450))));
evalcond[2]=((cj5)+(((IkReal(-1.00000000000000))*(x450)))+(x456));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x449)))+(((sj1)*(x455)))+(((sj1)*(x454)))+(((IkReal(-1.00000000000000))*(x451)*(x452))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x449)))+(((IkReal(-1.00000000000000))*(x453)*(x454)))+(((IkReal(-1.00000000000000))*(x453)*(x455)))+(((IkReal(0.400000000000000))*(cj6)*(x452)))+(((r10)*(x459)))+(((IkReal(-1.00000000000000))*(npy)*(x451))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(sj1)*(x451)))+(sj5)+(x460)+(((sj1)*(x457)))+(((IkReal(-1.00000000000000))*(x449)*(x452))));
evalcond[6]=((((IkReal(-0.390000000000000))*(sj5)))+(((cj6)*(npx)))+(((IkReal(-0.400000000000000))*(x460)))+(((IkReal(-1.00000000000000))*(npy)*(x449)))+(((cj6)*(r00)*(x453)))+(((IkReal(-1.00000000000000))*(x453)*(x457)))+(((IkReal(0.400000000000000))*(sj6)*(x452))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(sj6)))+(((cj6)*(r20)*(sj5))));
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
IkReal op[6+1], zeror[6];
int numroots;
IkReal j2evalpoly[4];
IkReal x461=((IkReal(8.00000000000000))*(cj5));
IkReal x462=((cj1)*(r02));
IkReal x463=((r12)*(sj1));
IkReal x464=((IkReal(16.0000000000000))*(sj5));
IkReal x465=((IkReal(4.00000000000000))*(sj5));
IkReal x466=((IkReal(16.0000000000000))*(cj5));
IkReal x467=((IkReal(8.00000000000000))*(sj5));
IkReal x468=((r11)*(sj1)*(sj6));
IkReal x469=((cj1)*(cj6)*(r00));
IkReal x470=((cj6)*(r10)*(sj1));
IkReal x471=((r21)*(sj6)*(x465));
IkReal x472=((cj1)*(r01)*(sj5)*(sj6));
IkReal x473=((((cj6)*(r20)*(x465)))+(((IkReal(4.00000000000000))*(cj5)*(r22))));
IkReal x474=((((IkReal(-1.00000000000000))*(x471)))+(x473));
IkReal x475=((((IkReal(-1.00000000000000))*(x473)))+(x471));
IkReal x476=((((cj1)*(r01)*(sj6)*(x467)))+(((IkReal(-1.00000000000000))*(x467)*(x470)))+(((x467)*(x468)))+(((IkReal(-1.00000000000000))*(x461)*(x463)))+(((IkReal(-1.00000000000000))*(x461)*(x462)))+(((IkReal(-1.00000000000000))*(x467)*(x469))));
op[0]=x474;
op[1]=x476;
op[2]=x474;
op[3]=((((cj1)*(r01)*(sj6)*(x464)))+(((IkReal(-1.00000000000000))*(x462)*(x466)))+(((IkReal(-1.00000000000000))*(x463)*(x466)))+(((IkReal(-1.00000000000000))*(x464)*(x469)))+(((IkReal(-1.00000000000000))*(x464)*(x470)))+(((x464)*(x468))));
op[4]=x475;
op[5]=x476;
op[6]=x475;
polyroots6(op,zeror,numroots);
IkReal j2array[6], cj2array[6], sj2array[6], tempj2array[1];
int numsolutions = 0;
for(int ij2 = 0; ij2 < numroots; ++ij2)
{
IkReal htj2 = zeror[ij2];
tempj2array[0]=((IkReal(2.00000000000000))*(atan(htj2)));
for(int kj2 = 0; kj2 < 1; ++kj2)
{
j2array[numsolutions] = tempj2array[kj2];
if( j2array[numsolutions] > IKPI )
{
    j2array[numsolutions]-=IK2PI;
}
else if( j2array[numsolutions] < -IKPI )
{
    j2array[numsolutions]+=IK2PI;
}
sj2array[numsolutions] = IKsin(j2array[numsolutions]);
cj2array[numsolutions] = IKcos(j2array[numsolutions]);
numsolutions++;
}
}
bool j2valid[6]={true,true,true,true,true,true};
_nj2 = 6;
for(int ij2 = 0; ij2 < numsolutions; ++ij2)
    {
if( !j2valid[ij2] )
{
    continue;
}
    j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
htj2 = IKtan(j2/2);

IkReal x477=((IkReal(4.00000000000000))*(r22));
IkReal x478=(cj5)*(cj5);
IkReal x479=(htj2)*(htj2)*(htj2);
IkReal x480=(htj2)*(htj2)*(htj2)*(htj2)*(htj2);
IkReal x481=(htj2)*(htj2)*(htj2)*(htj2);
IkReal x482=(htj2)*(htj2)*(htj2)*(htj2)*(htj2)*(htj2);
IkReal x483=(htj2)*(htj2);
IkReal x484=(sj5)*(sj5);
IkReal x485=((cj1)*(r02));
IkReal x486=((IkReal(4.00000000000000))*(cj6));
IkReal x487=((cj1)*(r01));
IkReal x488=((IkReal(8.00000000000000))*(sj6));
IkReal x489=((r12)*(sj1));
IkReal x490=((IkReal(16.0000000000000))*(sj6));
IkReal x491=((IkReal(16.0000000000000))*(sj5));
IkReal x492=((cj6)*(r21));
IkReal x493=((r10)*(sj1));
IkReal x494=((cj5)*(sj5));
IkReal x495=((r11)*(sj1));
IkReal x496=((IkReal(8.00000000000000))*(cj6));
IkReal x497=((cj1)*(r00));
IkReal x498=((IkReal(4.00000000000000))*(sj6));
IkReal x499=((r20)*(sj5));
IkReal x500=((IkReal(8.00000000000000))*(sj5));
IkReal x501=((cj5)*(cj6));
IkReal x502=((sj5)*(x477));
IkReal x503=((IkReal(16.0000000000000))*(x478));
IkReal x504=((IkReal(16.0000000000000))*(x484));
IkReal x505=((IkReal(8.00000000000000))*(x478));
IkReal x506=((r20)*(x484));
IkReal x507=((x477)*(x478));
IkReal x508=((x477)*(x494));
IkReal x509=((x484)*(x495));
IkReal x510=((x484)*(x498));
IkReal x511=((r20)*(x486)*(x494));
IkReal x512=((r21)*(x494)*(x498));
IkReal x513=((x486)*(x506));
IkReal x514=((r21)*(x510));
IkReal x515=((x497)*(x510));
IkReal x516=((x484)*(x486)*(x487));
IkReal x517=((x486)*(x509));
IkReal x518=((x493)*(x510));
IkReal x519=((x507)+(x511));
IkReal x520=((x508)+(x513));
IkReal x521=((x512)+(((IkReal(-1.00000000000000))*(x519))));
IkReal x522=((((IkReal(-1.00000000000000))*(x520)))+(x514));
IkReal x523=((((x488)*(x499)))+(((x492)*(x500)))+(((IkReal(8.00000000000000))*(x485)))+(((IkReal(8.00000000000000))*(x489))));
IkReal x524=((((IkReal(-1.00000000000000))*(x489)*(x500)))+(((IkReal(-1.00000000000000))*(x488)*(x506)))+(((IkReal(-1.00000000000000))*(x485)*(x500)))+(((IkReal(-8.00000000000000))*(x484)*(x492))));
IkReal x525=((((sj5)*(x493)*(x498)))+(((sj5)*(x486)*(x495)))+(((sj5)*(x486)*(x487)))+(((sj5)*(x497)*(x498))));
IkReal x526=((((IkReal(-1.00000000000000))*(x477)))+(x525));
IkReal x527=((x518)+(x517)+(x516)+(x515));
IkReal x528=((((IkReal(-1.00000000000000))*(x527)))+(x502));
IkReal x529=((((IkReal(-1.00000000000000))*(x487)*(x488)*(x494)))+(((x489)*(x505)))+(((x494)*(x496)*(x497)))+(((x485)*(x505)))+(((x493)*(x494)*(x496)))+(((IkReal(-1.00000000000000))*(x488)*(x494)*(x495))));
IkReal x530=((((IkReal(-1.00000000000000))*(x488)*(x509)))+(((x484)*(x493)*(x496)))+(((IkReal(-1.00000000000000))*(x484)*(x487)*(x488)))+(((x484)*(x496)*(x497)))+(((IkReal(8.00000000000000))*(x485)*(x494)))+(((IkReal(8.00000000000000))*(x489)*(x494))));
j2evalpoly[0]=((((x481)*(x526)))+(((x483)*(((((IkReal(-1.00000000000000))*(x525)))+(x477)))))+(((x482)*(x526)))+(((IkReal(-1.00000000000000))*(x525)))+(((x479)*(((((x491)*(x492)))+(((x490)*(x499)))+(((IkReal(16.0000000000000))*(x485)))+(((IkReal(16.0000000000000))*(x489)))))))+(x477)+(((x480)*(x523)))+(((htj2)*(x523))));
j2evalpoly[1]=((((x481)*(x521)))+(((x482)*(x521)))+(((x483)*(((x519)+(((IkReal(-1.00000000000000))*(x512)))))))+(x519)+(((IkReal(-1.00000000000000))*(x512)))+(((x479)*(((((x489)*(x503)))+(((x485)*(x503)))+(((x491)*(x493)*(x501)))+(((x491)*(x497)*(x501)))+(((IkReal(-1.00000000000000))*(x487)*(x490)*(x494)))+(((IkReal(-1.00000000000000))*(x490)*(x494)*(x495)))))))+(((x480)*(x529)))+(((htj2)*(x529))));
j2evalpoly[2]=((((x481)*(x522)))+(((x482)*(x522)))+(((x479)*(((((IkReal(-1.00000000000000))*(x484)*(x487)*(x490)))+(((cj6)*(x497)*(x504)))+(((cj5)*(x485)*(x491)))+(((cj5)*(x489)*(x491)))+(((IkReal(-1.00000000000000))*(x490)*(x509)))+(((cj6)*(x493)*(x504)))))))+(x520)+(((x483)*(((x520)+(((IkReal(-1.00000000000000))*(x514)))))))+(((IkReal(-1.00000000000000))*(x514)))+(((x480)*(x530)))+(((htj2)*(x530))));
j2evalpoly[3]=((((x481)*(x528)))+(((x482)*(x528)))+(((IkReal(-1.00000000000000))*(x502)))+(((x483)*(((((IkReal(-1.00000000000000))*(x502)))+(x527)))))+(((x479)*(((((IkReal(-1.00000000000000))*(x489)*(x491)))+(((IkReal(-1.00000000000000))*(x490)*(x506)))+(((IkReal(-1.00000000000000))*(x492)*(x504)))+(((IkReal(-1.00000000000000))*(x485)*(x491)))))))+(x527)+(((x480)*(x524)))+(((htj2)*(x524))));
if( IKabs(j2evalpoly[0]) > 0.0000001000000000  || IKabs(j2evalpoly[1]) > 0.0000001000000000  || IKabs(j2evalpoly[2]) > 0.0000001000000000  || IKabs(j2evalpoly[3]) > 0.0000001000000000  )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < numsolutions; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(sj5);
dummyeval[0]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj5;
dummyeval[1]=cj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x531=((IkReal(1.00000000000000))*(sj6));
IkReal x532=((IkReal(1.00000000000000))*(r02));
IkReal x533=((cj1)*(r11));
IkReal x534=((IkReal(1.00000000000000))*(cj6));
IkReal x535=((IkReal(0.400000000000000))*(sj6));
IkReal x536=((r00)*(sj1));
IkReal x537=((cj1)*(r12));
IkReal x538=((r12)*(sj1));
IkReal x539=((r01)*(sj1));
IkReal x540=((cj1)*(r10));
IkReal x541=((cj6)*(x536));
IkReal x542=((cj6)*(x539));
IkReal x543=((cj6)*(x540));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1)))+(((IkReal(-0.400000000000000))*(x537))));
evalcond[2]=((((sj2)*(x538)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(sj1)*(x532)))+(x537));
evalcond[4]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(x532)))+(((IkReal(-1.00000000000000))*(cj2)*(x538))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x533)*(x534)))+(((IkReal(-1.00000000000000))*(x531)*(x540)))+(x542)+(((sj6)*(x536))));
evalcond[6]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x534)))+(((IkReal(-1.00000000000000))*(npx)*(x531)))+(((x535)*(x540)))+(((IkReal(-1.00000000000000))*(x535)*(x536)))+(((IkReal(-0.400000000000000))*(x542)))+(((IkReal(0.400000000000000))*(cj6)*(x533))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x534)*(x536)))+(((IkReal(-1.00000000000000))*(x531)*(x533)))+(x543)+(((sj6)*(x539))));
evalcond[8]=((((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(x531)))+(((IkReal(-1.00000000000000))*(x535)*(x539)))+(((IkReal(-0.400000000000000))*(x543)))+(((x533)*(x535)))+(((IkReal(0.400000000000000))*(x541))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x544=((cj1)*(cj2));
IkReal x545=((IkReal(1.00000000000000))*(cj6));
IkReal x546=((r21)*(sj2));
IkReal x547=((IkReal(1.00000000000000))*(sj6));
IkReal x548=((r20)*(sj2));
IkReal x549=((cj2)*(sj1));
IkReal x550=((sj6)*(x549));
if( IKabs(((((r00)*(sj6)*(x544)))+(((cj6)*(r01)*(x544)))+(((IkReal(-1.00000000000000))*(x545)*(x546)))+(((r10)*(x550)))+(((IkReal(-1.00000000000000))*(x547)*(x548)))+(((cj6)*(r11)*(x549))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r00)*(x544)*(x545)))+(((r01)*(sj6)*(x544)))+(((r11)*(x550)))+(((IkReal(-1.00000000000000))*(r10)*(x545)*(x549)))+(((cj6)*(x548)))+(((IkReal(-1.00000000000000))*(x546)*(x547))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r00)*(sj6)*(x544)))+(((cj6)*(r01)*(x544)))+(((IkReal(-1.00000000000000))*(x545)*(x546)))+(((r10)*(x550)))+(((IkReal(-1.00000000000000))*(x547)*(x548)))+(((cj6)*(r11)*(x549)))))+IKsqr(((((IkReal(-1.00000000000000))*(r00)*(x544)*(x545)))+(((r01)*(sj6)*(x544)))+(((r11)*(x550)))+(((IkReal(-1.00000000000000))*(r10)*(x545)*(x549)))+(((cj6)*(x548)))+(((IkReal(-1.00000000000000))*(x546)*(x547)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((r00)*(sj6)*(x544)))+(((cj6)*(r01)*(x544)))+(((IkReal(-1.00000000000000))*(x545)*(x546)))+(((r10)*(x550)))+(((IkReal(-1.00000000000000))*(x547)*(x548)))+(((cj6)*(r11)*(x549)))), ((((IkReal(-1.00000000000000))*(r00)*(x544)*(x545)))+(((r01)*(sj6)*(x544)))+(((r11)*(x550)))+(((IkReal(-1.00000000000000))*(r10)*(x545)*(x549)))+(((cj6)*(x548)))+(((IkReal(-1.00000000000000))*(x546)*(x547)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x551=IKsin(j4);
IkReal x552=((cj2)*(sj6));
IkReal x553=((cj1)*(r00));
IkReal x554=((IkReal(1.00000000000000))*(r21));
IkReal x555=((cj6)*(sj2));
IkReal x556=((r10)*(sj1));
IkReal x557=((cj2)*(cj6));
IkReal x558=((cj1)*(r01));
IkReal x559=((r11)*(sj1));
IkReal x560=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x561=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(x551)))+(((IkReal(-1.00000000000000))*(x554)*(x555)))+(((x557)*(x559)))+(((x557)*(x558)))+(((x552)*(x556)))+(((x552)*(x553)))+(((IkReal(-1.00000000000000))*(r20)*(x561))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x558)*(x561)))+(((r20)*(x557)))+(((x555)*(x556)))+(((IkReal(-1.00000000000000))*(x559)*(x561)))+(((IkReal(-1.00000000000000))*(x552)*(x554)))+(x551)+(((x553)*(x555))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x554)*(x557)))+(((IkReal(-1.00000000000000))*(r20)*(x552)))+(((IkReal(-1.00000000000000))*(x556)*(x561)))+(((IkReal(-1.00000000000000))*(x555)*(x558)))+(((IkReal(-1.00000000000000))*(x555)*(x559)))+(((IkReal(-1.00000000000000))*(x553)*(x561)))+(((IkReal(-1.00000000000000))*(x560))));
evalcond[3]=((((r20)*(x555)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x554)))+(((IkReal(-1.00000000000000))*(x553)*(x557)))+(((IkReal(-1.00000000000000))*(x556)*(x557)))+(((x552)*(x559)))+(((x552)*(x558)))+(((IkReal(-1.00000000000000))*(x560))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x562=((IkReal(1.00000000000000))*(sj6));
IkReal x563=((IkReal(1.00000000000000))*(r02));
IkReal x564=((cj1)*(r11));
IkReal x565=((IkReal(1.00000000000000))*(cj6));
IkReal x566=((IkReal(0.400000000000000))*(sj6));
IkReal x567=((r00)*(sj1));
IkReal x568=((cj1)*(r12));
IkReal x569=((r12)*(sj1));
IkReal x570=((r01)*(sj1));
IkReal x571=((cj1)*(r10));
IkReal x572=((cj6)*(x567));
IkReal x573=((cj6)*(x570));
IkReal x574=((cj6)*(x571));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(npz)+(((IkReal(-0.400000000000000))*(x568)))+(((IkReal(0.400000000000000))*(r02)*(sj1))));
evalcond[2]=((((cj2)*(r22)))+(((sj2)*(x569)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((IkReal(-1.00000000000000))+(x568)+(((IkReal(-1.00000000000000))*(sj1)*(x563))));
evalcond[4]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x569)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(x563))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x564)*(x565)))+(((sj6)*(x567)))+(x573)+(((IkReal(-1.00000000000000))*(x562)*(x571))));
evalcond[6]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(x566)*(x567)))+(((IkReal(0.400000000000000))*(cj6)*(x564)))+(((IkReal(-1.00000000000000))*(npy)*(x565)))+(((IkReal(-0.400000000000000))*(x573)))+(((IkReal(-1.00000000000000))*(npx)*(x562)))+(((x566)*(x571))));
evalcond[7]=((((sj6)*(x570)))+(((IkReal(-1.00000000000000))*(x562)*(x564)))+(x574)+(((IkReal(-1.00000000000000))*(x565)*(x567))));
evalcond[8]=((((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x566)*(x570)))+(((x564)*(x566)))+(((IkReal(-1.00000000000000))*(npy)*(x562)))+(((IkReal(-0.400000000000000))*(x574)))+(((IkReal(0.400000000000000))*(x572))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x575=((cj1)*(cj2));
IkReal x576=((sj2)*(sj6));
IkReal x577=((IkReal(1.00000000000000))*(sj6));
IkReal x578=((IkReal(1.00000000000000))*(cj6)*(sj2));
IkReal x579=((cj2)*(r10)*(sj1));
IkReal x580=((cj2)*(r11)*(sj1));
if( IKabs(((((r00)*(sj6)*(x575)))+(((cj6)*(x580)))+(((IkReal(-1.00000000000000))*(r20)*(x576)))+(((sj6)*(x579)))+(((cj6)*(r01)*(x575)))+(((IkReal(-1.00000000000000))*(r21)*(x578))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r01)*(x575)*(x577)))+(((cj6)*(r00)*(x575)))+(((IkReal(-1.00000000000000))*(x577)*(x580)))+(((cj6)*(x579)))+(((r21)*(x576)))+(((IkReal(-1.00000000000000))*(r20)*(x578))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r00)*(sj6)*(x575)))+(((cj6)*(x580)))+(((IkReal(-1.00000000000000))*(r20)*(x576)))+(((sj6)*(x579)))+(((cj6)*(r01)*(x575)))+(((IkReal(-1.00000000000000))*(r21)*(x578)))))+IKsqr(((((IkReal(-1.00000000000000))*(r01)*(x575)*(x577)))+(((cj6)*(r00)*(x575)))+(((IkReal(-1.00000000000000))*(x577)*(x580)))+(((cj6)*(x579)))+(((r21)*(x576)))+(((IkReal(-1.00000000000000))*(r20)*(x578)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((r00)*(sj6)*(x575)))+(((cj6)*(x580)))+(((IkReal(-1.00000000000000))*(r20)*(x576)))+(((sj6)*(x579)))+(((cj6)*(r01)*(x575)))+(((IkReal(-1.00000000000000))*(r21)*(x578)))), ((((IkReal(-1.00000000000000))*(r01)*(x575)*(x577)))+(((cj6)*(r00)*(x575)))+(((IkReal(-1.00000000000000))*(x577)*(x580)))+(((cj6)*(x579)))+(((r21)*(x576)))+(((IkReal(-1.00000000000000))*(r20)*(x578)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x581=IKcos(j4);
IkReal x582=((cj2)*(sj6));
IkReal x583=((cj1)*(r00));
IkReal x584=((IkReal(1.00000000000000))*(r21));
IkReal x585=((cj6)*(sj2));
IkReal x586=((r10)*(sj1));
IkReal x587=((cj2)*(cj6));
IkReal x588=((cj1)*(r01));
IkReal x589=((r11)*(sj1));
IkReal x590=((IkReal(1.00000000000000))*(IKsin(j4)));
IkReal x591=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x591)))+(((x582)*(x586)))+(((x582)*(x583)))+(((IkReal(-1.00000000000000))*(x584)*(x585)))+(((x587)*(x588)))+(((x587)*(x589)))+(((IkReal(-1.00000000000000))*(x590))));
evalcond[1]=((((r20)*(x587)))+(((x583)*(x585)))+(((IkReal(-1.00000000000000))*(x588)*(x591)))+(((IkReal(-1.00000000000000))*(x582)*(x584)))+(((IkReal(-1.00000000000000))*(x589)*(x591)))+(((x585)*(x586)))+(((IkReal(-1.00000000000000))*(x590))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x581)))+(((IkReal(-1.00000000000000))*(x586)*(x591)))+(((IkReal(-1.00000000000000))*(r20)*(x582)))+(((IkReal(-1.00000000000000))*(x584)*(x587)))+(((IkReal(-1.00000000000000))*(x583)*(x591)))+(((IkReal(-1.00000000000000))*(x585)*(x588)))+(((IkReal(-1.00000000000000))*(x585)*(x589))));
evalcond[3]=((((r20)*(x585)))+(((x582)*(x588)))+(((x582)*(x589)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x584)))+(x581)+(((IkReal(-1.00000000000000))*(x583)*(x587)))+(((IkReal(-1.00000000000000))*(x586)*(x587))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x592=((IkReal(1.00000000000000))*(sj6));
IkReal x593=((r02)*(sj1));
IkReal x594=((cj1)*(cj6));
IkReal x595=((cj6)*(sj1));
IkReal x596=((IkReal(0.400000000000000))*(r01));
IkReal x597=((IkReal(1.00000000000000))*(cj2));
IkReal x598=((r11)*(sj1));
IkReal x599=((cj2)*(sj6));
IkReal x600=((cj1)*(r01));
IkReal x601=((cj1)*(r12));
IkReal x602=((cj6)*(r20));
IkReal x603=((sj1)*(sj6));
IkReal x604=((r00)*(x595));
IkReal x605=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x606=((r00)*(x603));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-0.400000000000000))*(x601)))+(npz)+(((IkReal(0.400000000000000))*(x593))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x593)))+(x601));
evalcond[3]=((((r01)*(x595)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x592)))+(x606)+(((IkReal(-1.00000000000000))*(r11)*(x594))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x592)))+(((IkReal(-0.400000000000000))*(x606)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((IkReal(0.400000000000000))*(r11)*(x594)))+(((IkReal(-1.00000000000000))*(x595)*(x596)))+(((r10)*(x605))));
evalcond[5]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x592)))+(((IkReal(-1.00000000000000))*(x604)))+(((r10)*(x594)))+(((r01)*(x603))));
evalcond[6]=((IkReal(-0.390000000000000))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x596)*(x603)))+(((IkReal(0.400000000000000))*(x604)))+(((r11)*(x605)))+(((IkReal(-0.400000000000000))*(r10)*(x594)))+(((IkReal(-1.00000000000000))*(npy)*(x592))));
evalcond[7]=((((cj2)*(x602)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x592)))+(((r10)*(sj2)*(x595)))+(((IkReal(-1.00000000000000))*(sj2)*(x592)*(x598)))+(((r00)*(sj2)*(x594)))+(((IkReal(-1.00000000000000))*(sj2)*(x592)*(x600))));
evalcond[8]=((((x598)*(x599)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x592)))+(((x599)*(x600)))+(((IkReal(-1.00000000000000))*(r10)*(x595)*(x597)))+(((sj2)*(x602)))+(((IkReal(-1.00000000000000))*(r00)*(x594)*(x597))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x607=((r12)*(sj1));
IkReal x608=((cj1)*(r02));
if( IKabs(((((cj2)*(r22)))+(((sj2)*(x607)))+(((sj2)*(x608))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj2)*(x608)))+(((cj2)*(x607)))+(((IkReal(-1.00000000000000))*(r22)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj2)*(r22)))+(((sj2)*(x607)))+(((sj2)*(x608)))))+IKsqr(((((cj2)*(x608)))+(((cj2)*(x607)))+(((IkReal(-1.00000000000000))*(r22)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((cj2)*(r22)))+(((sj2)*(x607)))+(((sj2)*(x608)))), ((((cj2)*(x608)))+(((cj2)*(x607)))+(((IkReal(-1.00000000000000))*(r22)*(sj2)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x609=IKcos(j4);
IkReal x610=((cj2)*(sj6));
IkReal x611=((cj1)*(r00));
IkReal x612=((sj1)*(sj2));
IkReal x613=((IkReal(1.00000000000000))*(sj6));
IkReal x614=((IkReal(1.00000000000000))*(cj1));
IkReal x615=((cj6)*(r01));
IkReal x616=((cj2)*(sj1));
IkReal x617=((cj6)*(r11));
IkReal x618=((IkReal(1.00000000000000))*(IKsin(j4)));
IkReal x619=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((((r12)*(x612)))+(((cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x618)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(r12)*(x616)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x614)))+(x609));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj2)*(x619)))+(((cj1)*(cj2)*(x615)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x613)))+(((x616)*(x617)))+(((IkReal(-1.00000000000000))*(x618)))+(((x610)*(x611)))+(((r10)*(sj1)*(x610))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x612)*(x617)))+(((IkReal(-1.00000000000000))*(sj2)*(x614)*(x615)))+(((IkReal(-1.00000000000000))*(cj2)*(x619)))+(((IkReal(-1.00000000000000))*(r20)*(x610)))+(((IkReal(-1.00000000000000))*(x609)))+(((IkReal(-1.00000000000000))*(sj2)*(x611)*(x613)))+(((IkReal(-1.00000000000000))*(r10)*(x612)*(x613))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x620=((IkReal(1.00000000000000))*(sj6));
IkReal x621=((r02)*(sj1));
IkReal x622=((cj1)*(cj6));
IkReal x623=((cj6)*(sj1));
IkReal x624=((IkReal(0.400000000000000))*(r01));
IkReal x625=((IkReal(1.00000000000000))*(cj2));
IkReal x626=((r11)*(sj1));
IkReal x627=((cj2)*(sj6));
IkReal x628=((cj1)*(r01));
IkReal x629=((cj1)*(r12));
IkReal x630=((cj6)*(r20));
IkReal x631=((sj1)*(sj6));
IkReal x632=((r00)*(x623));
IkReal x633=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x634=((r00)*(x631));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((npz)+(((IkReal(0.400000000000000))*(x621)))+(((IkReal(-0.400000000000000))*(x629))));
evalcond[2]=((x629)+(((IkReal(-1.00000000000000))*(x621))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x622)))+(((r01)*(x623)))+(x634)+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x620))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(x623)*(x624)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((IkReal(0.400000000000000))*(r11)*(x622)))+(((r10)*(x633)))+(((IkReal(-0.400000000000000))*(x634)))+(((IkReal(-1.00000000000000))*(npx)*(x620))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x620)))+(((r10)*(x622)))+(((r01)*(x631)))+(((IkReal(-1.00000000000000))*(x632))));
evalcond[6]=((IkReal(0.390000000000000))+(((cj6)*(npx)))+(((IkReal(-0.400000000000000))*(r10)*(x622)))+(((IkReal(-1.00000000000000))*(x624)*(x631)))+(((IkReal(0.400000000000000))*(x632)))+(((IkReal(-1.00000000000000))*(npy)*(x620)))+(((r11)*(x633))));
evalcond[7]=((((r10)*(sj2)*(x623)))+(((r00)*(sj2)*(x622)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x620)))+(((IkReal(-1.00000000000000))*(sj2)*(x620)*(x626)))+(((IkReal(-1.00000000000000))*(sj2)*(x620)*(x628)))+(((cj2)*(x630))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r10)*(x623)*(x625)))+(((sj2)*(x630)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x620)))+(((IkReal(-1.00000000000000))*(r00)*(x622)*(x625)))+(((x627)*(x628)))+(((x626)*(x627))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x635=((IkReal(1.00000000000000))*(sj2));
IkReal x636=((r12)*(sj1));
IkReal x637=((cj1)*(r02));
IkReal x638=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IkReal(-1.00000000000000))*(x635)*(x637)))+(((IkReal(-1.00000000000000))*(x635)*(x636)))+(((IkReal(-1.00000000000000))*(r22)*(x638))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x637)*(x638)))+(((IkReal(-1.00000000000000))*(x636)*(x638))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x635)*(x637)))+(((IkReal(-1.00000000000000))*(x635)*(x636)))+(((IkReal(-1.00000000000000))*(r22)*(x638)))))+IKsqr(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x637)*(x638)))+(((IkReal(-1.00000000000000))*(x636)*(x638)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x635)*(x637)))+(((IkReal(-1.00000000000000))*(x635)*(x636)))+(((IkReal(-1.00000000000000))*(r22)*(x638)))), ((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x637)*(x638)))+(((IkReal(-1.00000000000000))*(x636)*(x638)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x639=IKsin(j4);
IkReal x640=((cj2)*(sj6));
IkReal x641=((cj1)*(r00));
IkReal x642=((sj1)*(sj2));
IkReal x643=((IkReal(1.00000000000000))*(sj6));
IkReal x644=((IkReal(1.00000000000000))*(cj1));
IkReal x645=((cj6)*(r01));
IkReal x646=((cj2)*(sj1));
IkReal x647=((cj6)*(r11));
IkReal x648=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x649=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((((cj2)*(r22)))+(((r12)*(x642)))+(x639)+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x648)))+(((IkReal(-1.00000000000000))*(r12)*(x646)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x644))));
evalcond[2]=((((r10)*(sj1)*(x640)))+(((IkReal(-1.00000000000000))*(sj2)*(x649)))+(((x640)*(x641)))+(((cj1)*(cj2)*(x645)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x643)))+(((IkReal(-1.00000000000000))*(x639)))+(((x646)*(x647))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(x641)*(x643)))+(((IkReal(-1.00000000000000))*(cj2)*(x649)))+(((IkReal(-1.00000000000000))*(x648)))+(((IkReal(-1.00000000000000))*(r20)*(x640)))+(((IkReal(-1.00000000000000))*(sj2)*(x644)*(x645)))+(((IkReal(-1.00000000000000))*(r10)*(x642)*(x643)))+(((IkReal(-1.00000000000000))*(x642)*(x647))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x650=((cj2)*(sj6));
IkReal x651=((IkReal(1.00000000000000))*(cj2)*(cj6));
if( IKabs(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((cj1)*(r01)*(x650)))+(((r11)*(sj1)*(x650)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x651)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(sj6)))+(((cj6)*(r20)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x651))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))))))+IKsqr(((((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((cj1)*(r01)*(x650)))+(((r11)*(sj1)*(x650)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x651)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(sj6)))+(((cj6)*(r20)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x651)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))))), ((((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((cj1)*(r01)*(x650)))+(((r11)*(sj1)*(x650)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x651)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(sj6)))+(((cj6)*(r20)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x651)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x652=IKsin(j4);
IkReal x653=IKcos(j4);
IkReal x654=((cj2)*(sj6));
IkReal x655=((cj1)*(r00));
IkReal x656=((IkReal(1.00000000000000))*(r21));
IkReal x657=((cj6)*(sj2));
IkReal x658=((cj1)*(r02));
IkReal x659=((r10)*(sj1));
IkReal x660=((cj2)*(cj6));
IkReal x661=((cj1)*(r01));
IkReal x662=((IkReal(1.00000000000000))*(cj2));
IkReal x663=((r11)*(sj1));
IkReal x664=((r12)*(sj1));
IkReal x665=((IkReal(1.00000000000000))*(sj2)*(sj6));
IkReal x666=((IkReal(1.00000000000000))*(x653));
IkReal x667=((IkReal(1.00000000000000))*(x652));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj5)*(x667)))+(((sj2)*(x658)))+(((cj2)*(r22)))+(((sj2)*(x664))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x662)*(x664)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x658)*(x662)))+(((sj5)*(x653))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x665)))+(((IkReal(-1.00000000000000))*(x656)*(x657)))+(((x654)*(x655)))+(((x654)*(x659)))+(((x660)*(x661)))+(((x660)*(x663)))+(((IkReal(-1.00000000000000))*(x667))));
evalcond[3]=((((cj5)*(x652)))+(((r20)*(x660)))+(((IkReal(-1.00000000000000))*(x663)*(x665)))+(((IkReal(-1.00000000000000))*(x661)*(x665)))+(((x657)*(x659)))+(((x655)*(x657)))+(((IkReal(-1.00000000000000))*(x654)*(x656))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x659)*(x665)))+(((IkReal(-1.00000000000000))*(r20)*(x654)))+(((IkReal(-1.00000000000000))*(x666)))+(((IkReal(-1.00000000000000))*(x656)*(x660)))+(((IkReal(-1.00000000000000))*(x655)*(x665)))+(((IkReal(-1.00000000000000))*(x657)*(x663)))+(((IkReal(-1.00000000000000))*(x657)*(x661))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x656)))+(((IkReal(-1.00000000000000))*(cj5)*(x666)))+(((x654)*(x663)))+(((x654)*(x661)))+(((IkReal(-1.00000000000000))*(x659)*(x660)))+(((IkReal(-1.00000000000000))*(x655)*(x660)))+(((r20)*(x657))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x668=((cj1)*(cj2));
IkReal x669=((cj2)*(sj1));
IkReal x670=((IkReal(1.00000000000000))*(sj2));
if( IKabs(((((r10)*(sj6)*(x669)))+(((cj6)*(r01)*(x668)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x670)))+(((r00)*(sj6)*(x668)))+(((cj6)*(r11)*(x669)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x670))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r22)*(x670)))+(((r12)*(x669)))+(((r02)*(x668))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r10)*(sj6)*(x669)))+(((cj6)*(r01)*(x668)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x670)))+(((r00)*(sj6)*(x668)))+(((cj6)*(r11)*(x669)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x670)))))+IKsqr(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r22)*(x670)))+(((r12)*(x669)))+(((r02)*(x668)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((r10)*(sj6)*(x669)))+(((cj6)*(r01)*(x668)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x670)))+(((r00)*(sj6)*(x668)))+(((cj6)*(r11)*(x669)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x670)))), ((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r22)*(x670)))+(((r12)*(x669)))+(((r02)*(x668)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x671=IKsin(j4);
IkReal x672=IKcos(j4);
IkReal x673=((cj2)*(sj6));
IkReal x674=((cj1)*(r00));
IkReal x675=((IkReal(1.00000000000000))*(r21));
IkReal x676=((cj6)*(sj2));
IkReal x677=((cj1)*(r02));
IkReal x678=((r10)*(sj1));
IkReal x679=((cj2)*(cj6));
IkReal x680=((cj1)*(r01));
IkReal x681=((IkReal(1.00000000000000))*(cj2));
IkReal x682=((r11)*(sj1));
IkReal x683=((r12)*(sj1));
IkReal x684=((IkReal(1.00000000000000))*(sj2)*(sj6));
IkReal x685=((IkReal(1.00000000000000))*(x672));
IkReal x686=((IkReal(1.00000000000000))*(x671));
evalcond[0]=((((sj2)*(x677)))+(((sj2)*(x683)))+(((cj2)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x686))));
evalcond[1]=((((sj5)*(x672)))+(((IkReal(-1.00000000000000))*(x681)*(x683)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x677)*(x681))));
evalcond[2]=((((x673)*(x674)))+(((x673)*(x678)))+(((IkReal(-1.00000000000000))*(x675)*(x676)))+(((IkReal(-1.00000000000000))*(x686)))+(((x679)*(x682)))+(((x679)*(x680)))+(((IkReal(-1.00000000000000))*(r20)*(x684))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x680)*(x684)))+(((x674)*(x676)))+(((x676)*(x678)))+(((r20)*(x679)))+(((IkReal(-1.00000000000000))*(x682)*(x684)))+(((cj5)*(x671)))+(((IkReal(-1.00000000000000))*(x673)*(x675))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x675)*(x679)))+(((IkReal(-1.00000000000000))*(r20)*(x673)))+(((IkReal(-1.00000000000000))*(x685)))+(((IkReal(-1.00000000000000))*(x676)*(x682)))+(((IkReal(-1.00000000000000))*(x676)*(x680)))+(((IkReal(-1.00000000000000))*(x678)*(x684)))+(((IkReal(-1.00000000000000))*(x674)*(x684))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x674)*(x679)))+(((IkReal(-1.00000000000000))*(cj5)*(x685)))+(((r20)*(x676)))+(((IkReal(-1.00000000000000))*(x678)*(x679)))+(((x673)*(x682)))+(((x673)*(x680)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x675))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x687=((r12)*(sj1));
IkReal x688=((cj1)*(r02));
if( IKabs(((gconst3)*(((((sj2)*(x688)))+(((sj2)*(x687)))+(((cj2)*(r22))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(r22)*(sj2)))+(((cj2)*(x688)))+(((cj2)*(x687))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(((((sj2)*(x688)))+(((sj2)*(x687)))+(((cj2)*(r22)))))), ((gconst3)*(((((IkReal(-1.00000000000000))*(r22)*(sj2)))+(((cj2)*(x688)))+(((cj2)*(x687)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x689=IKsin(j4);
IkReal x690=IKcos(j4);
IkReal x691=((cj2)*(sj6));
IkReal x692=((cj1)*(r00));
IkReal x693=((IkReal(1.00000000000000))*(r21));
IkReal x694=((cj6)*(sj2));
IkReal x695=((cj1)*(r02));
IkReal x696=((r10)*(sj1));
IkReal x697=((cj2)*(cj6));
IkReal x698=((cj1)*(r01));
IkReal x699=((IkReal(1.00000000000000))*(cj2));
IkReal x700=((r11)*(sj1));
IkReal x701=((r12)*(sj1));
IkReal x702=((IkReal(1.00000000000000))*(sj2)*(sj6));
IkReal x703=((IkReal(1.00000000000000))*(x690));
IkReal x704=((IkReal(1.00000000000000))*(x689));
evalcond[0]=((((sj2)*(x701)))+(((cj2)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x704)))+(((sj2)*(x695))));
evalcond[1]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x699)*(x701)))+(((sj5)*(x690)))+(((IkReal(-1.00000000000000))*(x695)*(x699))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x693)*(x694)))+(((x697)*(x698)))+(((x691)*(x692)))+(((x691)*(x696)))+(((x697)*(x700)))+(((IkReal(-1.00000000000000))*(x704)))+(((IkReal(-1.00000000000000))*(r20)*(x702))));
evalcond[3]=((((x694)*(x696)))+(((cj5)*(x689)))+(((r20)*(x697)))+(((x692)*(x694)))+(((IkReal(-1.00000000000000))*(x698)*(x702)))+(((IkReal(-1.00000000000000))*(x691)*(x693)))+(((IkReal(-1.00000000000000))*(x700)*(x702))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(x691)))+(((IkReal(-1.00000000000000))*(x693)*(x697)))+(((IkReal(-1.00000000000000))*(x694)*(x698)))+(((IkReal(-1.00000000000000))*(x694)*(x700)))+(((IkReal(-1.00000000000000))*(x692)*(x702)))+(((IkReal(-1.00000000000000))*(x703)))+(((IkReal(-1.00000000000000))*(x696)*(x702))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x696)*(x697)))+(((r20)*(x694)))+(((x691)*(x700)))+(((IkReal(-1.00000000000000))*(x692)*(x697)))+(((x691)*(x698)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x693)))+(((IkReal(-1.00000000000000))*(cj5)*(x703))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
    }

}

}

} else
{
IkReal x705=((IkReal(0.400000000000000))*(cj6));
IkReal x706=((r00)*(sj1));
IkReal x707=((IkReal(1.00000000000000))*(cj6));
IkReal x708=((cj1)*(r11));
IkReal x709=((IkReal(0.400000000000000))*(sj1));
IkReal x710=((cj1)*(r10));
IkReal x711=((IkReal(1.00000000000000))*(sj6));
IkReal x712=((IkReal(0.400000000000000))*(sj6));
IkReal x713=((r01)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((npz)+(((IkReal(-0.400000000000000))*(cj1)*(r12)))+(((r02)*(x709))));
evalcond[2]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x705)))+(((IkReal(-1.00000000000000))*(x706)*(x712)))+(((IkReal(-1.00000000000000))*(npy)*(x707)))+(((IkReal(-1.00000000000000))*(npx)*(x711)))+(((x710)*(x712)))+(((x705)*(x708))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x706)*(x707)))+(((sj1)*(x713)))+(((cj6)*(x710)))+(((IkReal(-1.00000000000000))*(x708)*(x711)))+(((IkReal(-1.00000000000000))*(cj3))));
evalcond[4]=((IkReal(-0.390000000000000))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(x711)))+(((IkReal(-1.00000000000000))*(x709)*(x713)))+(((IkReal(-1.00000000000000))*(x705)*(x710)))+(((x708)*(x712)))+(((x705)*(x706))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
IkReal x714=(sj1)*(sj1);
IkReal x715=(sj6)*(sj6);
IkReal x716=(cj1)*(cj1);
IkReal x717=(cj6)*(cj6);
IkReal x718=((IkReal(2.00000000000000))*(r11));
IkReal x719=((cj1)*(sj1));
IkReal x720=((IkReal(2.00000000000000))*(r00));
IkReal x721=((cj6)*(sj6));
IkReal x722=((r10)*(x721));
IkReal x723=((IkReal(1.00000000000000))*(x715));
IkReal x724=((IkReal(1.00000000000000))*(x717));
gconst4=IKsign(((((IkReal(-1.00000000000000))*(x716)*(x724)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x716)*(x723)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x723)*((r21)*(r21))))+(((r01)*(x716)*(x720)*(x721)))+(((IkReal(-1.00000000000000))*(r01)*(x715)*(x718)*(x719)))+(((x714)*(x718)*(x722)))+(((r00)*(x718)*(x719)*(x721)))+(((IkReal(-1.00000000000000))*(x714)*(x724)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x724)*((r20)*(r20))))+(((IkReal(2.00000000000000))*(r20)*(r21)*(x721)))+(((IkReal(-1.00000000000000))*(x714)*(x723)*((r11)*(r11))))+(((IkReal(2.00000000000000))*(r01)*(x719)*(x722)))+(((IkReal(-1.00000000000000))*(r10)*(x717)*(x719)*(x720)))));
IkReal x725=(sj1)*(sj1);
IkReal x726=(sj6)*(sj6);
IkReal x727=(cj1)*(cj1);
IkReal x728=(cj6)*(cj6);
IkReal x729=((IkReal(2.00000000000000))*(r11));
IkReal x730=((cj1)*(sj1));
IkReal x731=((IkReal(2.00000000000000))*(r00));
IkReal x732=((cj6)*(sj6));
IkReal x733=((r10)*(x732));
IkReal x734=((IkReal(1.00000000000000))*(x726));
IkReal x735=((IkReal(1.00000000000000))*(x728));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x725)*(x734)*((r11)*(r11))))+(((r01)*(x727)*(x731)*(x732)))+(((IkReal(2.00000000000000))*(r01)*(x730)*(x733)))+(((IkReal(-1.00000000000000))*(x734)*((r21)*(r21))))+(((IkReal(-1.00000000000000))*(r01)*(x726)*(x729)*(x730)))+(((IkReal(-1.00000000000000))*(r10)*(x728)*(x730)*(x731)))+(((IkReal(-1.00000000000000))*(x725)*(x735)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x735)*((r20)*(r20))))+(((IkReal(-1.00000000000000))*(x727)*(x735)*((r00)*(r00))))+(((x725)*(x729)*(x733)))+(((IkReal(-1.00000000000000))*(x727)*(x734)*((r01)*(r01))))+(((IkReal(2.00000000000000))*(r20)*(r21)*(x732)))+(((r00)*(x729)*(x730)*(x732))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x736=((IkReal(1.00000000000000))*(sj6));
IkReal x737=((r02)*(sj1));
IkReal x738=((IkReal(1.00000000000000))*(cj6));
IkReal x739=((cj1)*(r11));
IkReal x740=((IkReal(0.400000000000000))*(sj1));
IkReal x741=((cj6)*(r01));
IkReal x742=((r00)*(sj6));
IkReal x743=((cj1)*(r12));
IkReal x744=((r01)*(sj6));
IkReal x745=((cj6)*(r00)*(sj1));
IkReal x746=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x747=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.400000000000000))*(x737)))+(((IkReal(-0.400000000000000))*(x743)))+(npz));
evalcond[2]=((((IkReal(-1.00000000000000))*(x737)))+(x743));
evalcond[3]=((((sj1)*(x741)))+(((sj1)*(x742)))+(((IkReal(-1.00000000000000))*(x738)*(x739)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x736))));
evalcond[4]=((IkReal(0.000500000000000000))+(((r10)*(x746)))+(((IkReal(-1.00000000000000))*(npx)*(x736)))+(((IkReal(-1.00000000000000))*(npy)*(x738)))+(((IkReal(0.400000000000000))*(cj6)*(x739)))+(((IkReal(-1.00000000000000))*(x740)*(x742)))+(((IkReal(-1.00000000000000))*(x740)*(x741))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x738)))+(((IkReal(-1.00000000000000))*(x736)*(x739)))+(((sj1)*(x744)))+(x747));
evalcond[6]=((IkReal(-0.390000000000000))+(((IkReal(0.400000000000000))*(sj6)*(x739)))+(((cj6)*(npx)))+(((IkReal(-0.400000000000000))*(x747)))+(((IkReal(-1.00000000000000))*(npy)*(x736)))+(((cj6)*(r00)*(x740)))+(((IkReal(-1.00000000000000))*(x740)*(x744))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
IkReal x748=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(r21)*(x748)))+(((cj6)*(r20))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(r10)*(sj1)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x748)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x748)))+(((cj1)*(cj6)*(r00))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x749=IKatan2(((((IkReal(-1.00000000000000))*(r21)*(x748)))+(((cj6)*(r20)))), ((((cj6)*(r10)*(sj1)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x748)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x748)))+(((cj1)*(cj6)*(r00)))));
j2array[0]=((IkReal(-1.00000000000000))*(x749));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x749))));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[1];
IkReal x750=IKcos(j2);
IkReal x751=IKsin(j2);
IkReal x752=((IkReal(1.00000000000000))*(cj6));
IkReal x753=((cj1)*(x750));
IkReal x754=((sj1)*(x750));
evalcond[0]=((((r01)*(sj6)*(x753)))+(((IkReal(-1.00000000000000))*(r10)*(x752)*(x754)))+(((r11)*(sj6)*(x754)))+(((IkReal(-1.00000000000000))*(r00)*(x752)*(x753)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x751)))+(((cj6)*(r20)*(x751))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x755=((r12)*(sj1));
IkReal x756=((cj1)*(r02));
IkReal x757=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((cj2)*(r22)))+(((sj2)*(x756)))+(((sj2)*(x755))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x755)*(x757)))+(((IkReal(-1.00000000000000))*(x756)*(x757))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj2)*(r22)))+(((sj2)*(x756)))+(((sj2)*(x755)))))+IKsqr(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x755)*(x757)))+(((IkReal(-1.00000000000000))*(x756)*(x757)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((cj2)*(r22)))+(((sj2)*(x756)))+(((sj2)*(x755)))), ((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x755)*(x757)))+(((IkReal(-1.00000000000000))*(x756)*(x757)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x758=IKsin(j4);
IkReal x759=((cj2)*(sj6));
IkReal x760=((cj1)*(r00));
IkReal x761=((sj1)*(sj2));
IkReal x762=((IkReal(1.00000000000000))*(sj6));
IkReal x763=((IkReal(1.00000000000000))*(cj1));
IkReal x764=((cj6)*(r01));
IkReal x765=((cj2)*(sj1));
IkReal x766=((cj6)*(r11));
IkReal x767=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x768=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((((cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x758)))+(((r12)*(x761)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x765)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x763)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x767))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(sj2)*(x762)))+(((x759)*(x760)))+(((cj1)*(cj2)*(x764)))+(((x765)*(x766)))+(x758)+(((r10)*(sj1)*(x759)))+(((IkReal(-1.00000000000000))*(sj2)*(x768))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x761)*(x766)))+(((IkReal(-1.00000000000000))*(sj2)*(x760)*(x762)))+(((IkReal(-1.00000000000000))*(r20)*(x759)))+(((IkReal(-1.00000000000000))*(r10)*(x761)*(x762)))+(((IkReal(-1.00000000000000))*(cj2)*(x768)))+(((IkReal(-1.00000000000000))*(x767)))+(((IkReal(-1.00000000000000))*(sj2)*(x763)*(x764))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

} else
{
IkReal x769=((IkReal(1.00000000000000))*(sj6));
IkReal x770=((r02)*(sj1));
IkReal x771=((IkReal(1.00000000000000))*(cj6));
IkReal x772=((cj1)*(r11));
IkReal x773=((IkReal(0.400000000000000))*(sj1));
IkReal x774=((cj6)*(r01));
IkReal x775=((r00)*(sj6));
IkReal x776=((cj1)*(r12));
IkReal x777=((r01)*(sj6));
IkReal x778=((cj6)*(r00)*(sj1));
IkReal x779=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x780=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-0.400000000000000))*(x776)))+(npz)+(((IkReal(0.400000000000000))*(x770))));
evalcond[2]=((x776)+(((IkReal(-1.00000000000000))*(x770))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x771)*(x772)))+(((sj1)*(x774)))+(((sj1)*(x775)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x769))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x771)))+(((r10)*(x779)))+(((IkReal(0.400000000000000))*(cj6)*(x772)))+(((IkReal(-1.00000000000000))*(npx)*(x769)))+(((IkReal(-1.00000000000000))*(x773)*(x774)))+(((IkReal(-1.00000000000000))*(x773)*(x775))));
evalcond[5]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x771)))+(((sj1)*(x777)))+(((IkReal(-1.00000000000000))*(x769)*(x772)))+(x780));
evalcond[6]=((IkReal(-0.390000000000000))+(((cj6)*(npx)))+(((cj6)*(r00)*(x773)))+(((IkReal(-1.00000000000000))*(npy)*(x769)))+(((IkReal(0.400000000000000))*(sj6)*(x772)))+(((IkReal(-0.400000000000000))*(x780)))+(((IkReal(-1.00000000000000))*(x773)*(x777))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
IkReal x781=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(r21)*(x781)))+(((cj6)*(r20))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(r10)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x781)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x781)))+(((cj1)*(cj6)*(r00))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x782=IKatan2(((((IkReal(-1.00000000000000))*(r21)*(x781)))+(((cj6)*(r20)))), ((((cj6)*(r10)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x781)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x781)))+(((cj1)*(cj6)*(r00)))));
j2array[0]=((IkReal(-1.00000000000000))*(x782));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x782))));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[1];
IkReal x783=IKcos(j2);
IkReal x784=IKsin(j2);
IkReal x785=((IkReal(1.00000000000000))*(cj6));
IkReal x786=((cj1)*(x783));
IkReal x787=((sj1)*(x783));
evalcond[0]=((((IkReal(-1.00000000000000))*(r10)*(x785)*(x787)))+(((IkReal(-1.00000000000000))*(r00)*(x785)*(x786)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x784)))+(((r01)*(sj6)*(x786)))+(((cj6)*(r20)*(x784)))+(((r11)*(sj6)*(x787))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x788=((r12)*(sj1));
IkReal x789=((cj1)*(r02));
if( IKabs(((((sj2)*(x789)))+(((sj2)*(x788)))+(((cj2)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r22)*(sj2)))+(((cj2)*(x789)))+(((cj2)*(x788))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj2)*(x789)))+(((sj2)*(x788)))+(((cj2)*(r22)))))+IKsqr(((((IkReal(-1.00000000000000))*(r22)*(sj2)))+(((cj2)*(x789)))+(((cj2)*(x788)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((sj2)*(x789)))+(((sj2)*(x788)))+(((cj2)*(r22)))), ((((IkReal(-1.00000000000000))*(r22)*(sj2)))+(((cj2)*(x789)))+(((cj2)*(x788)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x790=IKcos(j4);
IkReal x791=((cj2)*(sj6));
IkReal x792=((cj1)*(r00));
IkReal x793=((sj1)*(sj2));
IkReal x794=((IkReal(1.00000000000000))*(sj6));
IkReal x795=((IkReal(1.00000000000000))*(cj1));
IkReal x796=((cj6)*(r01));
IkReal x797=((cj2)*(sj1));
IkReal x798=((cj6)*(r11));
IkReal x799=((IkReal(1.00000000000000))*(IKsin(j4)));
IkReal x800=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((((IkReal(-1.00000000000000))*(x799)))+(((cj2)*(r22)))+(((r12)*(x793)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x797)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x795)))+(((r22)*(sj2)))+(x790));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(sj2)*(x794)))+(((IkReal(-1.00000000000000))*(x799)))+(((r10)*(sj1)*(x791)))+(((IkReal(-1.00000000000000))*(sj2)*(x800)))+(((cj1)*(cj2)*(x796)))+(((x797)*(x798)))+(((x791)*(x792))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x793)*(x798)))+(((IkReal(-1.00000000000000))*(r10)*(x793)*(x794)))+(((IkReal(-1.00000000000000))*(r20)*(x791)))+(((IkReal(-1.00000000000000))*(cj2)*(x800)))+(((IkReal(-1.00000000000000))*(sj2)*(x792)*(x794)))+(((IkReal(-1.00000000000000))*(sj2)*(x795)*(x796)))+(((IkReal(-1.00000000000000))*(x790))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x801=((sj3)*(sj6));
IkReal x802=((IkReal(1.00000000000000))*(cj6)*(sj3));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(r21)*(x801)))+(((cj6)*(r20)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((r11)*(sj1)*(x801)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x802)))+(((cj1)*(r01)*(x801)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x802))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(r21)*(x801)))+(((cj6)*(r20)*(sj3)))))), ((gconst4)*(((((r11)*(sj1)*(x801)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x802)))+(((cj1)*(r01)*(x801)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x802)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x803=IKsin(j2);
IkReal x804=IKcos(j2);
IkReal x805=((cj6)*(r10));
IkReal x806=((IkReal(1.00000000000000))*(sj6));
IkReal x807=((cj1)*(r01));
IkReal x808=((cj1)*(r00));
IkReal x809=((sj1)*(x803));
IkReal x810=((cj6)*(x804));
IkReal x811=((sj6)*(x804));
IkReal x812=((cj6)*(x803));
evalcond[0]=((((r20)*(x810)))+(((IkReal(-1.00000000000000))*(x803)*(x806)*(x807)))+(((x808)*(x812)))+(((x805)*(x809)))+(((IkReal(-1.00000000000000))*(r11)*(x806)*(x809)))+(((IkReal(-1.00000000000000))*(r21)*(x804)*(x806))));
evalcond[1]=((sj3)+(((r20)*(x812)))+(((IkReal(-1.00000000000000))*(sj1)*(x804)*(x805)))+(((IkReal(-1.00000000000000))*(x808)*(x810)))+(((IkReal(-1.00000000000000))*(r21)*(x803)*(x806)))+(((x807)*(x811)))+(((r11)*(sj1)*(x811))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x813=((cj2)*(sj6));
IkReal x814=((cj1)*(r00));
IkReal x815=((IkReal(1.00000000000000))*(r21));
IkReal x816=((IkReal(1.00000000000000))*(sj6));
IkReal x817=((cj6)*(sj2));
IkReal x818=((r10)*(sj1));
IkReal x819=((IkReal(0.400000000000000))*(sj6));
IkReal x820=((cj1)*(r11));
IkReal x821=((cj6)*(r01));
IkReal x822=((IkReal(0.400000000000000))*(sj1));
IkReal x823=((IkReal(1.00000000000000))*(cj6));
IkReal x824=((cj1)*(cj2));
IkReal x825=((r11)*(sj1));
IkReal x826=((cj1)*(r01));
IkReal x827=((cj2)*(cj6));
IkReal x828=((r01)*(sj1));
IkReal x829=((cj6)*(r00)*(sj1));
IkReal x830=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((npz)+(((IkReal(-0.400000000000000))*(cj1)*(r12)))+(((r02)*(x822))));
evalcond[2]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(x824))));
evalcond[3]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x816)))+(((IkReal(-1.00000000000000))*(npy)*(x823)))+(((IkReal(-1.00000000000000))*(x821)*(x822)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x819)))+(((cj1)*(r10)*(x819)))+(((IkReal(0.400000000000000))*(cj6)*(x820))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x816)*(x820)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x823)))+(((sj6)*(x828)))+(x830));
evalcond[5]=((IkReal(-0.390000000000000))+(((IkReal(-0.400000000000000))*(x830)))+(((cj6)*(npx)))+(((cj6)*(r00)*(x822)))+(((IkReal(-1.00000000000000))*(npy)*(x816)))+(((IkReal(-1.00000000000000))*(x819)*(x828)))+(((x819)*(x820))));
evalcond[6]=((((x821)*(x824)))+(((x825)*(x827)))+(((x813)*(x818)))+(((x813)*(x814)))+(((IkReal(-1.00000000000000))*(x815)*(x817)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x816))));
evalcond[7]=((((r20)*(x827)))+(((x814)*(x817)))+(((x817)*(x818)))+(((IkReal(-1.00000000000000))*(x813)*(x815)))+(((IkReal(-1.00000000000000))*(sj2)*(x816)*(x825)))+(((IkReal(-1.00000000000000))*(sj2)*(x816)*(x826))));
evalcond[8]=((IkReal(1.00000000000000))+(((r20)*(x817)))+(((IkReal(-1.00000000000000))*(cj2)*(x814)*(x823)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x815)))+(((x813)*(x826)))+(((x813)*(x825)))+(((IkReal(-1.00000000000000))*(cj2)*(x818)*(x823))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))))+IKsqr(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))), ((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x831=IKsin(j4);
IkReal x832=((sj1)*(sj2));
IkReal x833=((IkReal(1.00000000000000))*(cj6));
IkReal x834=((IkReal(1.00000000000000))*(sj6));
IkReal x835=((cj1)*(sj2));
IkReal x836=((IkReal(1.00000000000000))*(IKcos(j4)));
evalcond[0]=((((r02)*(x835)))+(((cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x831)))+(((r12)*(x832))));
evalcond[1]=((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x836))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x834)))+(((cj6)*(r01)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x833)))+(x831)+(((r00)*(sj1)*(sj6))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x833)*(x835)))+(((IkReal(-1.00000000000000))*(r00)*(x834)*(x835)))+(((IkReal(-1.00000000000000))*(r11)*(x832)*(x833)))+(((IkReal(-1.00000000000000))*(x836)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x833)))+(((IkReal(-1.00000000000000))*(cj2)*(r20)*(x834)))+(((IkReal(-1.00000000000000))*(r10)*(x832)*(x834))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x837=((cj2)*(sj6));
IkReal x838=((cj1)*(r00));
IkReal x839=((IkReal(1.00000000000000))*(r21));
IkReal x840=((IkReal(1.00000000000000))*(sj6));
IkReal x841=((cj6)*(sj2));
IkReal x842=((r10)*(sj1));
IkReal x843=((IkReal(0.400000000000000))*(sj6));
IkReal x844=((cj1)*(r11));
IkReal x845=((cj6)*(r01));
IkReal x846=((IkReal(0.400000000000000))*(sj1));
IkReal x847=((IkReal(1.00000000000000))*(cj6));
IkReal x848=((cj1)*(cj2));
IkReal x849=((r11)*(sj1));
IkReal x850=((cj1)*(r01));
IkReal x851=((cj2)*(cj6));
IkReal x852=((r01)*(sj1));
IkReal x853=((cj6)*(r00)*(sj1));
IkReal x854=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(x846)))+(npz)+(((IkReal(-0.400000000000000))*(cj1)*(r12))));
evalcond[2]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(r02)*(x848)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(sj1))));
evalcond[3]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x847)))+(((IkReal(-1.00000000000000))*(npx)*(x840)))+(((IkReal(0.400000000000000))*(cj6)*(x844)))+(((IkReal(-1.00000000000000))*(x845)*(x846)))+(((cj1)*(r10)*(x843)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x843))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x840)*(x844)))+(x854)+(((sj6)*(x852)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x847))));
evalcond[5]=((IkReal(-0.390000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x840)))+(((cj6)*(npx)))+(((x843)*(x844)))+(((cj6)*(r00)*(x846)))+(((IkReal(-0.400000000000000))*(x854)))+(((IkReal(-1.00000000000000))*(x843)*(x852))));
evalcond[6]=((((x837)*(x842)))+(((x837)*(x838)))+(((x845)*(x848)))+(((IkReal(-1.00000000000000))*(x839)*(x841)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x840)))+(((x849)*(x851))));
evalcond[7]=((((x838)*(x841)))+(((IkReal(-1.00000000000000))*(x837)*(x839)))+(((IkReal(-1.00000000000000))*(sj2)*(x840)*(x850)))+(((IkReal(-1.00000000000000))*(sj2)*(x840)*(x849)))+(((r20)*(x851)))+(((x841)*(x842))));
evalcond[8]=((IkReal(-1.00000000000000))+(((r20)*(x841)))+(((IkReal(-1.00000000000000))*(cj2)*(x838)*(x847)))+(((x837)*(x849)))+(((IkReal(-1.00000000000000))*(cj2)*(x842)*(x847)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x839)))+(((x837)*(x850))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))))+IKsqr(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))), ((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x855=IKcos(j4);
IkReal x856=((sj1)*(sj2));
IkReal x857=((IkReal(1.00000000000000))*(cj6));
IkReal x858=((IkReal(1.00000000000000))*(sj6));
IkReal x859=((cj1)*(sj2));
IkReal x860=((IkReal(1.00000000000000))*(IKsin(j4)));
evalcond[0]=((((IkReal(-1.00000000000000))*(x860)))+(((r12)*(x856)))+(((cj2)*(r22)))+(((r02)*(x859))));
evalcond[1]=((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)))+(x855));
evalcond[2]=((((IkReal(-1.00000000000000))*(x860)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x857)))+(((cj6)*(r01)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x858)))+(((r00)*(sj1)*(sj6))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj2)*(r21)*(x857)))+(((IkReal(-1.00000000000000))*(r00)*(x858)*(x859)))+(((IkReal(-1.00000000000000))*(r01)*(x857)*(x859)))+(((IkReal(-1.00000000000000))*(x855)))+(((IkReal(-1.00000000000000))*(r10)*(x856)*(x858)))+(((IkReal(-1.00000000000000))*(cj2)*(r20)*(x858)))+(((IkReal(-1.00000000000000))*(r11)*(x856)*(x857))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x861=((IkReal(1.00000000000000))*(sj6));
IkReal x862=((r02)*(sj1));
IkReal x863=((cj1)*(cj6));
IkReal x864=((cj6)*(sj1));
IkReal x865=((IkReal(0.400000000000000))*(r01));
IkReal x866=((IkReal(1.00000000000000))*(cj2));
IkReal x867=((r11)*(sj1));
IkReal x868=((cj2)*(sj6));
IkReal x869=((cj1)*(r01));
IkReal x870=((cj1)*(r12));
IkReal x871=((cj6)*(r20));
IkReal x872=((sj1)*(sj6));
IkReal x873=((r00)*(x864));
IkReal x874=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x875=((r00)*(x872));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((npz)+(((IkReal(-0.400000000000000))*(x870)))+(((IkReal(0.400000000000000))*(x862))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x862)))+(x870));
evalcond[3]=((((r01)*(x864)))+(((IkReal(-1.00000000000000))*(r11)*(x863)))+(x875)+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x861))));
evalcond[4]=((IkReal(0.000500000000000000))+(((r10)*(x874)))+(((IkReal(0.400000000000000))*(r11)*(x863)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((IkReal(-1.00000000000000))*(x864)*(x865)))+(((IkReal(-0.400000000000000))*(x875)))+(((IkReal(-1.00000000000000))*(npx)*(x861))));
evalcond[5]=((IkReal(-1.00000000000000))+(((r01)*(x872)))+(((r10)*(x863)))+(((IkReal(-1.00000000000000))*(x873)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x861))));
evalcond[6]=((IkReal(-0.390000000000000))+(((cj6)*(npx)))+(((r11)*(x874)))+(((IkReal(-0.400000000000000))*(r10)*(x863)))+(((IkReal(0.400000000000000))*(x873)))+(((IkReal(-1.00000000000000))*(npy)*(x861)))+(((IkReal(-1.00000000000000))*(x865)*(x872))));
evalcond[7]=((((cj2)*(x871)))+(((r10)*(sj2)*(x864)))+(((IkReal(-1.00000000000000))*(sj2)*(x861)*(x867)))+(((IkReal(-1.00000000000000))*(sj2)*(x861)*(x869)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x861)))+(((r00)*(sj2)*(x863))));
evalcond[8]=((((sj2)*(x871)))+(((x868)*(x869)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x861)))+(((x867)*(x868)))+(((IkReal(-1.00000000000000))*(r00)*(x863)*(x866)))+(((IkReal(-1.00000000000000))*(r10)*(x864)*(x866))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x876=((r12)*(sj1));
IkReal x877=((cj1)*(r02));
IkReal x878=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((sj2)*(x877)))+(((sj2)*(x876)))+(((cj2)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x877)*(x878)))+(((IkReal(-1.00000000000000))*(x876)*(x878)))+(((r22)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj2)*(x877)))+(((sj2)*(x876)))+(((cj2)*(r22)))))+IKsqr(((((IkReal(-1.00000000000000))*(x877)*(x878)))+(((IkReal(-1.00000000000000))*(x876)*(x878)))+(((r22)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((sj2)*(x877)))+(((sj2)*(x876)))+(((cj2)*(r22)))), ((((IkReal(-1.00000000000000))*(x877)*(x878)))+(((IkReal(-1.00000000000000))*(x876)*(x878)))+(((r22)*(sj2)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x879=IKsin(j4);
IkReal x880=((cj2)*(sj6));
IkReal x881=((cj1)*(r00));
IkReal x882=((sj1)*(sj2));
IkReal x883=((IkReal(1.00000000000000))*(sj6));
IkReal x884=((IkReal(1.00000000000000))*(cj1));
IkReal x885=((cj6)*(r01));
IkReal x886=((cj2)*(sj1));
IkReal x887=((cj6)*(r11));
IkReal x888=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x889=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((((IkReal(-1.00000000000000))*(x879)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))+(((r12)*(x882))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x886)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x888)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x884))));
evalcond[2]=((((x886)*(x887)))+(((x880)*(x881)))+(((cj1)*(cj2)*(x885)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x883)))+(x879)+(((IkReal(-1.00000000000000))*(sj2)*(x889)))+(((r10)*(sj1)*(x880))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj2)*(x889)))+(((IkReal(-1.00000000000000))*(x882)*(x887)))+(((IkReal(-1.00000000000000))*(sj2)*(x884)*(x885)))+(((IkReal(-1.00000000000000))*(r20)*(x880)))+(((IkReal(-1.00000000000000))*(x888)))+(((IkReal(-1.00000000000000))*(r10)*(x882)*(x883)))+(((IkReal(-1.00000000000000))*(sj2)*(x881)*(x883))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x890=((IkReal(1.00000000000000))*(sj6));
IkReal x891=((r02)*(sj1));
IkReal x892=((cj1)*(cj6));
IkReal x893=((cj6)*(sj1));
IkReal x894=((IkReal(0.400000000000000))*(r01));
IkReal x895=((IkReal(1.00000000000000))*(cj2));
IkReal x896=((r11)*(sj1));
IkReal x897=((cj2)*(sj6));
IkReal x898=((cj1)*(r01));
IkReal x899=((cj1)*(r12));
IkReal x900=((cj6)*(r20));
IkReal x901=((sj1)*(sj6));
IkReal x902=((r00)*(x893));
IkReal x903=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x904=((r00)*(x901));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((npz)+(((IkReal(-0.400000000000000))*(x899)))+(((IkReal(0.400000000000000))*(x891))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x891)))+(x899));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x890)))+(((IkReal(-1.00000000000000))*(r11)*(x892)))+(((r01)*(x893)))+(x904));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x890)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((r10)*(x903)))+(((IkReal(0.400000000000000))*(r11)*(x892)))+(((IkReal(-1.00000000000000))*(x893)*(x894)))+(((IkReal(-0.400000000000000))*(x904))));
evalcond[5]=((IkReal(1.00000000000000))+(((r01)*(x901)))+(((r10)*(x892)))+(((IkReal(-1.00000000000000))*(x902)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x890))));
evalcond[6]=((IkReal(-0.390000000000000))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(x890)))+(((r11)*(x903)))+(((IkReal(-1.00000000000000))*(x894)*(x901)))+(((IkReal(0.400000000000000))*(x902)))+(((IkReal(-0.400000000000000))*(r10)*(x892))));
evalcond[7]=((((cj2)*(x900)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x890)))+(((r00)*(sj2)*(x892)))+(((IkReal(-1.00000000000000))*(sj2)*(x890)*(x896)))+(((IkReal(-1.00000000000000))*(sj2)*(x890)*(x898)))+(((r10)*(sj2)*(x893))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r00)*(x892)*(x895)))+(((sj2)*(x900)))+(((x896)*(x897)))+(((IkReal(-1.00000000000000))*(r10)*(x893)*(x895)))+(((x897)*(x898)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x890))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x905=((r12)*(sj1));
IkReal x906=((cj1)*(r02));
if( IKabs(((((sj2)*(x905)))+(((sj2)*(x906)))+(((cj2)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj2)*(x905)))+(((cj2)*(x906)))+(((IkReal(-1.00000000000000))*(r22)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj2)*(x905)))+(((sj2)*(x906)))+(((cj2)*(r22)))))+IKsqr(((((cj2)*(x905)))+(((cj2)*(x906)))+(((IkReal(-1.00000000000000))*(r22)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((sj2)*(x905)))+(((sj2)*(x906)))+(((cj2)*(r22)))), ((((cj2)*(x905)))+(((cj2)*(x906)))+(((IkReal(-1.00000000000000))*(r22)*(sj2)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x907=IKcos(j4);
IkReal x908=((cj2)*(sj6));
IkReal x909=((cj1)*(r00));
IkReal x910=((sj1)*(sj2));
IkReal x911=((IkReal(1.00000000000000))*(sj6));
IkReal x912=((IkReal(1.00000000000000))*(cj1));
IkReal x913=((cj6)*(r01));
IkReal x914=((cj2)*(sj1));
IkReal x915=((cj6)*(r11));
IkReal x916=((IkReal(1.00000000000000))*(IKsin(j4)));
IkReal x917=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((((r12)*(x910)))+(((IkReal(-1.00000000000000))*(x916)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj2)*(r02)*(x912)))+(((IkReal(-1.00000000000000))*(r12)*(x914)))+(((r22)*(sj2)))+(x907));
evalcond[2]=((((r10)*(sj1)*(x908)))+(((IkReal(-1.00000000000000))*(x916)))+(((x914)*(x915)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x911)))+(((IkReal(-1.00000000000000))*(sj2)*(x917)))+(((x908)*(x909)))+(((cj1)*(cj2)*(x913))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x908)))+(((IkReal(-1.00000000000000))*(sj2)*(x909)*(x911)))+(((IkReal(-1.00000000000000))*(x910)*(x915)))+(((IkReal(-1.00000000000000))*(sj2)*(x912)*(x913)))+(((IkReal(-1.00000000000000))*(x907)))+(((IkReal(-1.00000000000000))*(r10)*(x910)*(x911)))+(((IkReal(-1.00000000000000))*(cj2)*(x917))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x918=((r12)*(sj1));
IkReal x919=((cj1)*(r02));
IkReal x920=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((sj2)*(x918)))+(((sj2)*(x919)))+(((cj2)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x918)*(x920)))+(((IkReal(-1.00000000000000))*(x919)*(x920))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj2)*(x918)))+(((sj2)*(x919)))+(((cj2)*(r22)))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x918)*(x920)))+(((IkReal(-1.00000000000000))*(x919)*(x920)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((sj2)*(x918)))+(((sj2)*(x919)))+(((cj2)*(r22)))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x918)*(x920)))+(((IkReal(-1.00000000000000))*(x919)*(x920)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x921=IKcos(j4);
IkReal x922=IKsin(j4);
IkReal x923=((cj1)*(cj2));
IkReal x924=((r00)*(sj6));
IkReal x925=((IkReal(1.00000000000000))*(cj6));
IkReal x926=((IkReal(1.00000000000000))*(sj1));
IkReal x927=((cj1)*(sj2));
IkReal x928=((sj2)*(sj6));
IkReal x929=((IkReal(1.00000000000000))*(r20));
IkReal x930=((cj6)*(r01));
IkReal x931=((cj2)*(sj6));
IkReal x932=((r11)*(sj1));
IkReal x933=((IkReal(1.00000000000000))*(x921));
evalcond[0]=((((r12)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x922)))+(((cj2)*(r22)))+(((r02)*(x927))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj3)*(x933)))+(((IkReal(-1.00000000000000))*(r02)*(x926)))+(((cj1)*(r12))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj3)*(x933)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(x926)))+(((IkReal(-1.00000000000000))*(r02)*(x923))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x925)))+(((sj1)*(x930)))+(((sj1)*(x924)))+(((sj3)*(x922))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x928)*(x929)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x925)))+(((r10)*(sj1)*(x931)))+(((cj3)*(x922)))+(((x923)*(x924)))+(((x923)*(x930)))+(((cj2)*(cj6)*(x932))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj2)*(x925)*(x932)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x925)))+(((IkReal(-1.00000000000000))*(r01)*(x925)*(x927)))+(((IkReal(-1.00000000000000))*(x929)*(x931)))+(((IkReal(-1.00000000000000))*(r10)*(x926)*(x928)))+(((IkReal(-1.00000000000000))*(x924)*(x927)))+(((IkReal(-1.00000000000000))*(x933))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x934=IKcos(j4);
IkReal x935=IKsin(j4);
IkReal x936=((cj1)*(cj2));
IkReal x937=((r00)*(sj6));
IkReal x938=((IkReal(1.00000000000000))*(cj6));
IkReal x939=((IkReal(1.00000000000000))*(sj1));
IkReal x940=((cj1)*(sj2));
IkReal x941=((sj2)*(sj6));
IkReal x942=((IkReal(1.00000000000000))*(r20));
IkReal x943=((cj6)*(r01));
IkReal x944=((cj2)*(sj6));
IkReal x945=((r11)*(sj1));
IkReal x946=((IkReal(1.00000000000000))*(x934));
evalcond[0]=((((r02)*(x940)))+(((r12)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x935)))+(((cj2)*(r22))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(x939)))+(((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(sj3)*(x946))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj3)*(x946)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(x939)))+(((IkReal(-1.00000000000000))*(r02)*(x936))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(sj6)))+(((sj1)*(x943)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x938)))+(((sj1)*(x937)))+(((sj3)*(x935))));
evalcond[4]=((((x936)*(x937)))+(((r10)*(sj1)*(x944)))+(((x936)*(x943)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x938)))+(((IkReal(-1.00000000000000))*(x941)*(x942)))+(((cj3)*(x935)))+(((cj2)*(cj6)*(x945))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x946)))+(((IkReal(-1.00000000000000))*(x942)*(x944)))+(((IkReal(-1.00000000000000))*(sj2)*(x938)*(x945)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x938)))+(((IkReal(-1.00000000000000))*(r01)*(x938)*(x940)))+(((IkReal(-1.00000000000000))*(x937)*(x940)))+(((IkReal(-1.00000000000000))*(r10)*(x939)*(x941))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x947=((IkReal(1.00000000000000))*(sj1));
if( IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x947)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x947)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(r02)*(x947)))+(((cj1)*(r12))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst6)*(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x947)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x947)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))))), ((gconst6)*(((((IkReal(-1.00000000000000))*(r02)*(x947)))+(((cj1)*(r12)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x948=IKcos(j4);
IkReal x949=IKsin(j4);
IkReal x950=((cj1)*(cj2));
IkReal x951=((r00)*(sj6));
IkReal x952=((IkReal(1.00000000000000))*(cj6));
IkReal x953=((IkReal(1.00000000000000))*(sj1));
IkReal x954=((cj1)*(sj2));
IkReal x955=((sj2)*(sj6));
IkReal x956=((IkReal(1.00000000000000))*(r20));
IkReal x957=((cj6)*(r01));
IkReal x958=((cj2)*(sj6));
IkReal x959=((r11)*(sj1));
IkReal x960=((IkReal(1.00000000000000))*(x948));
evalcond[0]=((((IkReal(-1.00000000000000))*(x949)))+(((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((r02)*(x954))));
evalcond[1]=((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(sj3)*(x960)))+(((IkReal(-1.00000000000000))*(r02)*(x953))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj3)*(x960)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(x953)))+(((IkReal(-1.00000000000000))*(r02)*(x950))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x952)))+(((sj3)*(x949)))+(((sj1)*(x951)))+(((sj1)*(x957))));
evalcond[4]=((((cj2)*(cj6)*(x959)))+(((cj3)*(x949)))+(((r10)*(sj1)*(x958)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x952)))+(((IkReal(-1.00000000000000))*(x955)*(x956)))+(((x950)*(x951)))+(((x950)*(x957))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj2)*(x952)*(x959)))+(((IkReal(-1.00000000000000))*(x956)*(x958)))+(((IkReal(-1.00000000000000))*(x951)*(x954)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x952)))+(((IkReal(-1.00000000000000))*(r10)*(x953)*(x955)))+(((IkReal(-1.00000000000000))*(r01)*(x952)*(x954)))+(((IkReal(-1.00000000000000))*(x960))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x961=((IkReal(1.00000000000000))*(sj1));
if( IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x961)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x961))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(x961))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst5)*(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x961)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x961)))))), ((gconst5)*(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(x961)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x962=((IkReal(1.00000000000000))*(cj1));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj3)*(IKcos(j4))))+(((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1))));
evalcond[1]=((((cj6)*(r01)*(sj1)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x962)))+(((sj3)*(IKsin(j4))))+(((r00)*(sj1)*(sj6)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x962))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign((((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1))))));
dummyeval[0]=(((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
IkReal x963=((cj1)*(cj6));
IkReal x964=((IkReal(1.00000000000000))*(r22));
IkReal x965=((cj6)*(sj1));
IkReal x966=((r22)*(sj6));
IkReal x967=((IkReal(1.00000000000000))*(r21)*(sj6));
gconst8=IKsign(((((cj1)*(r01)*(x966)))+(((r02)*(r20)*(x963)))+(((IkReal(-1.00000000000000))*(r00)*(x963)*(x964)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x967)))+(((r11)*(sj1)*(x966)))+(((IkReal(-1.00000000000000))*(r10)*(x964)*(x965)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x967)))+(((r12)*(r20)*(x965)))));
IkReal x968=((cj1)*(cj6));
IkReal x969=((IkReal(1.00000000000000))*(r22));
IkReal x970=((cj6)*(sj1));
IkReal x971=((r22)*(sj6));
IkReal x972=((IkReal(1.00000000000000))*(r21)*(sj6));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(x968)*(x969)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x972)))+(((r02)*(r20)*(x968)))+(((r11)*(sj1)*(x971)))+(((r12)*(r20)*(x970)))+(((IkReal(-1.00000000000000))*(r10)*(x969)*(x970)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x972)))+(((cj1)*(r01)*(x971))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x973=((sj4)*(sj6));
IkReal x974=((IkReal(1.00000000000000))*(cj6)*(sj4));
if( IKabs(((gconst8)*(((((cj6)*(r20)*(sj4)))+(((IkReal(-1.00000000000000))*(r21)*(x973))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((r11)*(sj1)*(x973)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x974)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x974)))+(((cj1)*(r01)*(x973))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst8)*(((((cj6)*(r20)*(sj4)))+(((IkReal(-1.00000000000000))*(r21)*(x973)))))), ((gconst8)*(((((r11)*(sj1)*(x973)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x974)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x974)))+(((cj1)*(r01)*(x973)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x975=IKsin(j2);
IkReal x976=IKcos(j2);
IkReal x977=((r11)*(sj6));
IkReal x978=((IkReal(1.00000000000000))*(cj4));
IkReal x979=((cj6)*(r11));
IkReal x980=((cj6)*(r20));
IkReal x981=((IkReal(1.00000000000000))*(sj6));
IkReal x982=((cj1)*(r00));
IkReal x983=((cj1)*(r01));
IkReal x984=((IkReal(1.00000000000000))*(cj6));
IkReal x985=((cj1)*(r02));
IkReal x986=((sj1)*(x975));
IkReal x987=((sj1)*(x976));
IkReal x988=((r21)*(x976));
IkReal x989=((sj6)*(x976));
IkReal x990=((cj6)*(x976));
IkReal x991=((r21)*(x975));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj4)))+(((x975)*(x985)))+(((r22)*(x976)))+(((r12)*(x986))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x976)*(x985)))+(((r22)*(x975)))+(((IkReal(-1.00000000000000))*(cj3)*(x978)))+(((IkReal(-1.00000000000000))*(r12)*(x987))));
evalcond[2]=((((r10)*(sj6)*(x987)))+(((x983)*(x990)))+(((x979)*(x987)))+(((x982)*(x989)))+(((IkReal(-1.00000000000000))*(x984)*(x991)))+(((IkReal(-1.00000000000000))*(r20)*(x975)*(x981)))+(((cj3)*(sj4))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x977)*(x986)))+(((IkReal(-1.00000000000000))*(x975)*(x981)*(x983)))+(((x976)*(x980)))+(((cj6)*(x975)*(x982)))+(((cj6)*(r10)*(x986)))+(((IkReal(-1.00000000000000))*(x981)*(x988))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r10)*(x981)*(x986)))+(((IkReal(-1.00000000000000))*(x975)*(x981)*(x982)))+(((IkReal(-1.00000000000000))*(x979)*(x986)))+(((IkReal(-1.00000000000000))*(r20)*(x976)*(x981)))+(((IkReal(-1.00000000000000))*(x984)*(x988)))+(((IkReal(-1.00000000000000))*(x975)*(x983)*(x984)))+(((IkReal(-1.00000000000000))*(x978))));
evalcond[5]=((((x983)*(x989)))+(sj3)+(((x975)*(x980)))+(((x977)*(x987)))+(((IkReal(-1.00000000000000))*(x981)*(x991)))+(((IkReal(-1.00000000000000))*(r10)*(x984)*(x987)))+(((IkReal(-1.00000000000000))*(x976)*(x982)*(x984))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x992=((cj3)*(cj4));
IkReal x993=((r12)*(sj1));
IkReal x994=((cj1)*(r02));
if( IKabs(((gconst7)*(((((sj4)*(x994)))+(((sj4)*(x993)))+(((r22)*(x992))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(x992)*(x993)))+(((IkReal(-1.00000000000000))*(x992)*(x994)))+(((r22)*(sj4))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst7)*(((((sj4)*(x994)))+(((sj4)*(x993)))+(((r22)*(x992)))))), ((gconst7)*(((((IkReal(-1.00000000000000))*(x992)*(x993)))+(((IkReal(-1.00000000000000))*(x992)*(x994)))+(((r22)*(sj4)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x995=IKsin(j2);
IkReal x996=IKcos(j2);
IkReal x997=((r11)*(sj6));
IkReal x998=((IkReal(1.00000000000000))*(cj4));
IkReal x999=((cj6)*(r11));
IkReal x1000=((cj6)*(r20));
IkReal x1001=((IkReal(1.00000000000000))*(sj6));
IkReal x1002=((cj1)*(r00));
IkReal x1003=((cj1)*(r01));
IkReal x1004=((IkReal(1.00000000000000))*(cj6));
IkReal x1005=((cj1)*(r02));
IkReal x1006=((sj1)*(x995));
IkReal x1007=((sj1)*(x996));
IkReal x1008=((r21)*(x996));
IkReal x1009=((sj6)*(x996));
IkReal x1010=((cj6)*(x996));
IkReal x1011=((r21)*(x995));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj4)))+(((r22)*(x996)))+(((r12)*(x1006)))+(((x1005)*(x995))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1005)*(x996)))+(((IkReal(-1.00000000000000))*(cj3)*(x998)))+(((r22)*(x995)))+(((IkReal(-1.00000000000000))*(r12)*(x1007))));
evalcond[2]=((((x1003)*(x1010)))+(((r10)*(sj6)*(x1007)))+(((IkReal(-1.00000000000000))*(x1004)*(x1011)))+(((x1007)*(x999)))+(((IkReal(-1.00000000000000))*(r20)*(x1001)*(x995)))+(((x1002)*(x1009)))+(((cj3)*(sj4))));
evalcond[3]=((((x1000)*(x996)))+(((IkReal(-1.00000000000000))*(x1006)*(x997)))+(((cj6)*(r10)*(x1006)))+(((cj6)*(x1002)*(x995)))+(((IkReal(-1.00000000000000))*(x1001)*(x1008)))+(((IkReal(-1.00000000000000))*(x1001)*(x1003)*(x995))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r10)*(x1001)*(x1006)))+(((IkReal(-1.00000000000000))*(x1001)*(x1002)*(x995)))+(((IkReal(-1.00000000000000))*(x1003)*(x1004)*(x995)))+(((IkReal(-1.00000000000000))*(x1006)*(x999)))+(((IkReal(-1.00000000000000))*(x1004)*(x1008)))+(((IkReal(-1.00000000000000))*(x998)))+(((IkReal(-1.00000000000000))*(r20)*(x1001)*(x996))));
evalcond[5]=((((x1000)*(x995)))+(sj3)+(((IkReal(-1.00000000000000))*(r10)*(x1004)*(x1007)))+(((x1007)*(x997)))+(((IkReal(-1.00000000000000))*(x1002)*(x1004)*(x996)))+(((IkReal(-1.00000000000000))*(x1001)*(x1011)))+(((x1003)*(x1009))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x1012=((IkReal(0.400000000000000))*(cj6));
IkReal x1013=((r00)*(sj1));
IkReal x1014=((IkReal(1.00000000000000))*(cj6));
IkReal x1015=((cj1)*(r11));
IkReal x1016=((IkReal(0.400000000000000))*(sj1));
IkReal x1017=((cj1)*(r10));
IkReal x1018=((IkReal(1.00000000000000))*(sj6));
IkReal x1019=((IkReal(0.400000000000000))*(sj6));
IkReal x1020=((r01)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(x1016)))+(npz)+(((IkReal(-0.400000000000000))*(cj1)*(r12))));
evalcond[2]=((IkReal(0.000500000000000000))+(((x1017)*(x1019)))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x1012)))+(((x1012)*(x1015)))+(((IkReal(-1.00000000000000))*(npy)*(x1014)))+(((IkReal(-1.00000000000000))*(npx)*(x1018)))+(((IkReal(-1.00000000000000))*(x1013)*(x1019))));
evalcond[3]=((((sj1)*(x1020)))+(((cj6)*(x1017)))+(cj3)+(((IkReal(-1.00000000000000))*(x1015)*(x1018)))+(((IkReal(-1.00000000000000))*(x1013)*(x1014))));
evalcond[4]=((IkReal(0.390000000000000))+(((IkReal(-1.00000000000000))*(x1012)*(x1017)))+(((cj6)*(npx)))+(((x1012)*(x1013)))+(((IkReal(-1.00000000000000))*(npy)*(x1018)))+(((x1015)*(x1019)))+(((IkReal(-1.00000000000000))*(x1016)*(x1020))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
IkReal x1021=(sj6)*(sj6);
IkReal x1022=(cj6)*(cj6);
IkReal x1023=(sj1)*(sj1);
IkReal x1024=(cj1)*(cj1);
IkReal x1025=((IkReal(2.00000000000000))*(r11));
IkReal x1026=((IkReal(2.00000000000000))*(r00));
IkReal x1027=((cj1)*(sj1));
IkReal x1028=((cj6)*(sj6));
IkReal x1029=((r01)*(x1027));
IkReal x1030=((IkReal(2.00000000000000))*(r10)*(x1028));
gconst9=IKsign(((((IkReal(-1.00000000000000))*(r01)*(x1024)*(x1026)*(x1028)))+(((x1022)*(x1024)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r10)*(x1023)*(x1025)*(x1028)))+(((x1022)*((r20)*(r20))))+(((IkReal(-1.00000000000000))*(x1029)*(x1030)))+(((x1021)*(x1023)*((r11)*(r11))))+(((r10)*(x1022)*(x1026)*(x1027)))+(((x1022)*(x1023)*((r10)*(r10))))+(((x1021)*((r21)*(r21))))+(((x1021)*(x1025)*(x1029)))+(((IkReal(-1.00000000000000))*(r00)*(x1025)*(x1027)*(x1028)))+(((IkReal(-2.00000000000000))*(r20)*(r21)*(x1028)))+(((x1021)*(x1024)*((r01)*(r01))))));
IkReal x1031=(sj6)*(sj6);
IkReal x1032=(cj6)*(cj6);
IkReal x1033=(sj1)*(sj1);
IkReal x1034=(cj1)*(cj1);
IkReal x1035=((IkReal(2.00000000000000))*(r11));
IkReal x1036=((IkReal(2.00000000000000))*(r00));
IkReal x1037=((cj1)*(sj1));
IkReal x1038=((cj6)*(sj6));
IkReal x1039=((r01)*(x1037));
IkReal x1040=((IkReal(2.00000000000000))*(r10)*(x1038));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r10)*(x1033)*(x1035)*(x1038)))+(((IkReal(-1.00000000000000))*(r00)*(x1035)*(x1037)*(x1038)))+(((x1032)*(x1033)*((r10)*(r10))))+(((x1031)*(x1033)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1039)*(x1040)))+(((x1031)*((r21)*(r21))))+(((IkReal(-2.00000000000000))*(r20)*(r21)*(x1038)))+(((r10)*(x1032)*(x1036)*(x1037)))+(((IkReal(-1.00000000000000))*(r01)*(x1034)*(x1036)*(x1038)))+(((x1031)*(x1034)*((r01)*(r01))))+(((x1032)*((r20)*(r20))))+(((x1031)*(x1035)*(x1039)))+(((x1032)*(x1034)*((r00)*(r00)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1041=((IkReal(1.00000000000000))*(sj6));
IkReal x1042=((r02)*(sj1));
IkReal x1043=((IkReal(1.00000000000000))*(cj6));
IkReal x1044=((cj1)*(r11));
IkReal x1045=((IkReal(0.400000000000000))*(sj1));
IkReal x1046=((cj6)*(r01));
IkReal x1047=((r00)*(sj6));
IkReal x1048=((cj1)*(r12));
IkReal x1049=((r01)*(sj6));
IkReal x1050=((cj6)*(r00)*(sj1));
IkReal x1051=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x1052=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((npz)+(((IkReal(0.400000000000000))*(x1042)))+(((IkReal(-0.400000000000000))*(x1048))));
evalcond[2]=((x1048)+(((IkReal(-1.00000000000000))*(x1042))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1043)*(x1044)))+(((sj1)*(x1046)))+(((sj1)*(x1047)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x1041))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(x1045)*(x1047)))+(((IkReal(-1.00000000000000))*(x1045)*(x1046)))+(((IkReal(0.400000000000000))*(cj6)*(x1044)))+(((r10)*(x1051)))+(((IkReal(-1.00000000000000))*(npy)*(x1043)))+(((IkReal(-1.00000000000000))*(npx)*(x1041))));
evalcond[5]=((IkReal(1.00000000000000))+(x1052)+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x1043)))+(((IkReal(-1.00000000000000))*(x1041)*(x1044)))+(((sj1)*(x1049))));
evalcond[6]=((IkReal(0.390000000000000))+(((IkReal(0.400000000000000))*(sj6)*(x1044)))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x1045)*(x1049)))+(((cj6)*(r00)*(x1045)))+(((IkReal(-0.400000000000000))*(x1052)))+(((IkReal(-1.00000000000000))*(npy)*(x1041))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
IkReal x1053=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x1053))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(r10)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x1053)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x1053)))+(((cj1)*(cj6)*(r00))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1054=IKatan2(((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x1053)))), ((((cj6)*(r10)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x1053)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x1053)))+(((cj1)*(cj6)*(r00)))));
j2array[0]=((IkReal(-1.00000000000000))*(x1054));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x1054))));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[1];
IkReal x1055=IKcos(j2);
IkReal x1056=IKsin(j2);
IkReal x1057=((IkReal(1.00000000000000))*(cj6));
IkReal x1058=((cj1)*(x1055));
IkReal x1059=((sj1)*(x1055));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(sj6)*(x1056)))+(((r01)*(sj6)*(x1058)))+(((r11)*(sj6)*(x1059)))+(((IkReal(-1.00000000000000))*(r00)*(x1057)*(x1058)))+(((IkReal(-1.00000000000000))*(r10)*(x1057)*(x1059)))+(((cj6)*(r20)*(x1056))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1060=((r12)*(sj1));
IkReal x1061=((IkReal(1.00000000000000))*(sj2));
IkReal x1062=((cj1)*(r02));
if( IKabs(((((IkReal(-1.00000000000000))*(x1060)*(x1061)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x1061)*(x1062))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r22)*(x1061)))+(((cj2)*(x1060)))+(((cj2)*(x1062))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1060)*(x1061)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x1061)*(x1062)))))+IKsqr(((((IkReal(-1.00000000000000))*(r22)*(x1061)))+(((cj2)*(x1060)))+(((cj2)*(x1062)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1060)*(x1061)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x1061)*(x1062)))), ((((IkReal(-1.00000000000000))*(r22)*(x1061)))+(((cj2)*(x1060)))+(((cj2)*(x1062)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1063=IKsin(j4);
IkReal x1064=IKcos(j4);
IkReal x1065=((cj2)*(sj6));
IkReal x1066=((cj1)*(r00));
IkReal x1067=((sj1)*(sj2));
IkReal x1068=((IkReal(1.00000000000000))*(sj6));
IkReal x1069=((IkReal(1.00000000000000))*(cj1));
IkReal x1070=((cj6)*(r01));
IkReal x1071=((cj2)*(sj1));
IkReal x1072=((cj6)*(r11));
IkReal x1073=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((((r12)*(x1067)))+(x1063)+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((x1064)+(((IkReal(-1.00000000000000))*(r12)*(x1071)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x1069))));
evalcond[2]=((x1063)+(((x1071)*(x1072)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x1068)))+(((IkReal(-1.00000000000000))*(sj2)*(x1073)))+(((r10)*(sj1)*(x1065)))+(((cj1)*(cj2)*(x1070)))+(((x1065)*(x1066))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1067)*(x1072)))+(((IkReal(-1.00000000000000))*(sj2)*(x1066)*(x1068)))+(((IkReal(-1.00000000000000))*(r10)*(x1067)*(x1068)))+(((IkReal(-1.00000000000000))*(r20)*(x1065)))+(((IkReal(-1.00000000000000))*(x1064)))+(((IkReal(-1.00000000000000))*(sj2)*(x1069)*(x1070)))+(((IkReal(-1.00000000000000))*(cj2)*(x1073))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

} else
{
IkReal x1074=((IkReal(1.00000000000000))*(sj6));
IkReal x1075=((r02)*(sj1));
IkReal x1076=((IkReal(1.00000000000000))*(cj6));
IkReal x1077=((cj1)*(r11));
IkReal x1078=((IkReal(0.400000000000000))*(sj1));
IkReal x1079=((cj6)*(r01));
IkReal x1080=((r00)*(sj6));
IkReal x1081=((cj1)*(r12));
IkReal x1082=((r01)*(sj6));
IkReal x1083=((cj6)*(r00)*(sj1));
IkReal x1084=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x1085=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-0.400000000000000))*(x1081)))+(((IkReal(0.400000000000000))*(x1075)))+(npz));
evalcond[2]=((x1081)+(((IkReal(-1.00000000000000))*(x1075))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x1074)))+(((IkReal(-1.00000000000000))*(x1076)*(x1077)))+(((sj1)*(x1079)))+(((sj1)*(x1080))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x1074)))+(((IkReal(-1.00000000000000))*(npy)*(x1076)))+(((IkReal(-1.00000000000000))*(x1078)*(x1079)))+(((IkReal(0.400000000000000))*(cj6)*(x1077)))+(((IkReal(-1.00000000000000))*(x1078)*(x1080)))+(((r10)*(x1084))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1074)*(x1077)))+(x1085)+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x1076)))+(((sj1)*(x1082))));
evalcond[6]=((IkReal(0.390000000000000))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(x1074)))+(((IkReal(-0.400000000000000))*(x1085)))+(((IkReal(0.400000000000000))*(sj6)*(x1077)))+(((IkReal(-1.00000000000000))*(x1078)*(x1082)))+(((cj6)*(r00)*(x1078))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
IkReal x1086=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(r21)*(x1086)))+(((cj6)*(r20))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(r10)*(sj1)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x1086)))+(((cj1)*(cj6)*(r00)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x1086))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1087=IKatan2(((((IkReal(-1.00000000000000))*(r21)*(x1086)))+(((cj6)*(r20)))), ((((cj6)*(r10)*(sj1)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x1086)))+(((cj1)*(cj6)*(r00)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x1086)))));
j2array[0]=((IkReal(-1.00000000000000))*(x1087));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x1087))));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[1];
IkReal x1088=IKcos(j2);
IkReal x1089=IKsin(j2);
IkReal x1090=((IkReal(1.00000000000000))*(cj6));
IkReal x1091=((cj1)*(x1088));
IkReal x1092=((sj1)*(x1088));
evalcond[0]=((((r01)*(sj6)*(x1091)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x1089)))+(((r11)*(sj6)*(x1092)))+(((IkReal(-1.00000000000000))*(r00)*(x1090)*(x1091)))+(((cj6)*(r20)*(x1089)))+(((IkReal(-1.00000000000000))*(r10)*(x1090)*(x1092))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1093=((IkReal(1.00000000000000))*(sj2));
IkReal x1094=((r12)*(sj1));
IkReal x1095=((cj1)*(r02));
IkReal x1096=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IkReal(-1.00000000000000))*(x1093)*(x1094)))+(((IkReal(-1.00000000000000))*(x1093)*(x1095)))+(((IkReal(-1.00000000000000))*(r22)*(x1096))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x1095)*(x1096)))+(((IkReal(-1.00000000000000))*(x1094)*(x1096))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1093)*(x1094)))+(((IkReal(-1.00000000000000))*(x1093)*(x1095)))+(((IkReal(-1.00000000000000))*(r22)*(x1096)))))+IKsqr(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x1095)*(x1096)))+(((IkReal(-1.00000000000000))*(x1094)*(x1096)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1093)*(x1094)))+(((IkReal(-1.00000000000000))*(x1093)*(x1095)))+(((IkReal(-1.00000000000000))*(r22)*(x1096)))), ((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x1095)*(x1096)))+(((IkReal(-1.00000000000000))*(x1094)*(x1096)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1097=IKsin(j4);
IkReal x1098=((cj2)*(sj6));
IkReal x1099=((cj1)*(r00));
IkReal x1100=((sj1)*(sj2));
IkReal x1101=((IkReal(1.00000000000000))*(sj6));
IkReal x1102=((IkReal(1.00000000000000))*(cj1));
IkReal x1103=((cj6)*(r01));
IkReal x1104=((cj2)*(sj1));
IkReal x1105=((cj6)*(r11));
IkReal x1106=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x1107=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((x1097)+(((cj2)*(r22)))+(((r12)*(x1100)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x1102)))+(((IkReal(-1.00000000000000))*(r12)*(x1104)))+(((IkReal(-1.00000000000000))*(x1106))));
evalcond[2]=((((cj1)*(cj2)*(x1103)))+(((r10)*(sj1)*(x1098)))+(((IkReal(-1.00000000000000))*(x1097)))+(((x1104)*(x1105)))+(((IkReal(-1.00000000000000))*(sj2)*(x1107)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x1101)))+(((x1098)*(x1099))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(x1099)*(x1101)))+(((IkReal(-1.00000000000000))*(r20)*(x1098)))+(((IkReal(-1.00000000000000))*(sj2)*(x1102)*(x1103)))+(((IkReal(-1.00000000000000))*(r10)*(x1100)*(x1101)))+(((IkReal(-1.00000000000000))*(x1100)*(x1105)))+(((IkReal(-1.00000000000000))*(cj2)*(x1107)))+(((IkReal(-1.00000000000000))*(x1106))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1108=((sj3)*(sj6));
IkReal x1109=((IkReal(1.00000000000000))*(cj6)*(sj3));
if( IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(r21)*(x1108)))+(((cj6)*(r20)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((cj1)*(r01)*(x1108)))+(((r11)*(sj1)*(x1108)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x1109)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x1109))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst9)*(((((IkReal(-1.00000000000000))*(r21)*(x1108)))+(((cj6)*(r20)*(sj3)))))), ((gconst9)*(((((cj1)*(r01)*(x1108)))+(((r11)*(sj1)*(x1108)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x1109)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x1109)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x1110=IKsin(j2);
IkReal x1111=IKcos(j2);
IkReal x1112=((cj6)*(r10));
IkReal x1113=((IkReal(1.00000000000000))*(sj6));
IkReal x1114=((cj1)*(r01));
IkReal x1115=((cj1)*(r00));
IkReal x1116=((sj1)*(x1110));
IkReal x1117=((cj6)*(x1111));
IkReal x1118=((sj6)*(x1111));
IkReal x1119=((cj6)*(x1110));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x1113)*(x1116)))+(((r20)*(x1117)))+(((x1112)*(x1116)))+(((IkReal(-1.00000000000000))*(r21)*(x1111)*(x1113)))+(((IkReal(-1.00000000000000))*(x1110)*(x1113)*(x1114)))+(((x1115)*(x1119))));
evalcond[1]=((((x1114)*(x1118)))+(((IkReal(-1.00000000000000))*(sj3)))+(((r20)*(x1119)))+(((IkReal(-1.00000000000000))*(sj1)*(x1111)*(x1112)))+(((r11)*(sj1)*(x1118)))+(((IkReal(-1.00000000000000))*(x1115)*(x1117)))+(((IkReal(-1.00000000000000))*(r21)*(x1110)*(x1113))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst11;
gconst11=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x1120=((cj2)*(sj6));
IkReal x1121=((cj1)*(r00));
IkReal x1122=((IkReal(1.00000000000000))*(r21));
IkReal x1123=((IkReal(1.00000000000000))*(sj6));
IkReal x1124=((cj6)*(sj2));
IkReal x1125=((r10)*(sj1));
IkReal x1126=((IkReal(0.400000000000000))*(sj6));
IkReal x1127=((cj1)*(r11));
IkReal x1128=((cj6)*(r01));
IkReal x1129=((IkReal(0.400000000000000))*(sj1));
IkReal x1130=((IkReal(1.00000000000000))*(cj6));
IkReal x1131=((cj1)*(cj2));
IkReal x1132=((r11)*(sj1));
IkReal x1133=((cj1)*(r01));
IkReal x1134=((cj2)*(cj6));
IkReal x1135=((r01)*(sj1));
IkReal x1136=((cj6)*(r00)*(sj1));
IkReal x1137=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((npz)+(((IkReal(-0.400000000000000))*(cj1)*(r12)))+(((r02)*(x1129))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x1131)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(sj1))));
evalcond[3]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x1123)))+(((IkReal(-1.00000000000000))*(npy)*(x1130)))+(((IkReal(0.400000000000000))*(cj6)*(x1127)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x1126)))+(((IkReal(-1.00000000000000))*(x1128)*(x1129)))+(((cj1)*(r10)*(x1126))));
evalcond[4]=((x1137)+(((IkReal(-1.00000000000000))*(x1123)*(x1127)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x1130)))+(((sj6)*(x1135))));
evalcond[5]=((IkReal(0.390000000000000))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(x1123)))+(((IkReal(-1.00000000000000))*(x1126)*(x1135)))+(((IkReal(-0.400000000000000))*(x1137)))+(((x1126)*(x1127)))+(((cj6)*(r00)*(x1129))));
evalcond[6]=((((x1120)*(x1121)))+(((x1120)*(x1125)))+(((IkReal(-1.00000000000000))*(x1122)*(x1124)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x1123)))+(((x1128)*(x1131)))+(((x1132)*(x1134))));
evalcond[7]=((((x1121)*(x1124)))+(((x1124)*(x1125)))+(((IkReal(-1.00000000000000))*(x1120)*(x1122)))+(((IkReal(-1.00000000000000))*(sj2)*(x1123)*(x1132)))+(((IkReal(-1.00000000000000))*(sj2)*(x1123)*(x1133)))+(((r20)*(x1134))));
evalcond[8]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x1122)))+(((IkReal(-1.00000000000000))*(cj2)*(x1125)*(x1130)))+(((x1120)*(x1132)))+(((x1120)*(x1133)))+(((IkReal(-1.00000000000000))*(cj2)*(x1121)*(x1130)))+(((r20)*(x1124))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1138=((IkReal(1.00000000000000))*(sj2));
if( IKabs(((((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1138)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1138))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1138)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1138)))))+IKsqr(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1138)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1138)))), ((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1139=IKsin(j4);
IkReal x1140=IKcos(j4);
IkReal x1141=((sj1)*(sj2));
IkReal x1142=((IkReal(1.00000000000000))*(cj6));
IkReal x1143=((IkReal(1.00000000000000))*(sj6));
IkReal x1144=((cj1)*(sj2));
evalcond[0]=((x1139)+(((r02)*(x1144)))+(((cj2)*(r22)))+(((r12)*(x1141))));
evalcond[1]=((x1140)+(((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1))));
evalcond[2]=((x1139)+(((cj6)*(r01)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x1143)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x1142)))+(((r00)*(sj1)*(sj6))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(x1142)*(x1144)))+(((IkReal(-1.00000000000000))*(r11)*(x1141)*(x1142)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x1142)))+(((IkReal(-1.00000000000000))*(r00)*(x1143)*(x1144)))+(((IkReal(-1.00000000000000))*(x1140)))+(((IkReal(-1.00000000000000))*(cj2)*(r20)*(x1143)))+(((IkReal(-1.00000000000000))*(r10)*(x1141)*(x1143))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1145=((cj2)*(sj6));
IkReal x1146=((cj1)*(r00));
IkReal x1147=((IkReal(1.00000000000000))*(r21));
IkReal x1148=((IkReal(1.00000000000000))*(sj6));
IkReal x1149=((cj6)*(sj2));
IkReal x1150=((r10)*(sj1));
IkReal x1151=((IkReal(0.400000000000000))*(sj6));
IkReal x1152=((cj1)*(r11));
IkReal x1153=((cj6)*(r01));
IkReal x1154=((IkReal(0.400000000000000))*(sj1));
IkReal x1155=((IkReal(1.00000000000000))*(cj6));
IkReal x1156=((cj1)*(cj2));
IkReal x1157=((r11)*(sj1));
IkReal x1158=((cj1)*(r01));
IkReal x1159=((cj2)*(cj6));
IkReal x1160=((r01)*(sj1));
IkReal x1161=((cj6)*(r00)*(sj1));
IkReal x1162=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(x1154)))+(npz)+(((IkReal(-0.400000000000000))*(cj1)*(r12))));
evalcond[2]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(r02)*(x1156)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(sj1))));
evalcond[3]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x1151)))+(((cj1)*(r10)*(x1151)))+(((IkReal(-1.00000000000000))*(npx)*(x1148)))+(((IkReal(-1.00000000000000))*(npy)*(x1155)))+(((IkReal(0.400000000000000))*(cj6)*(x1152)))+(((IkReal(-1.00000000000000))*(x1153)*(x1154))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(sj1)*(x1155)))+(x1162)+(((sj6)*(x1160)))+(((IkReal(-1.00000000000000))*(x1148)*(x1152))));
evalcond[5]=((IkReal(0.390000000000000))+(((cj6)*(npx)))+(((IkReal(-0.400000000000000))*(x1162)))+(((IkReal(-1.00000000000000))*(npy)*(x1148)))+(((cj6)*(r00)*(x1154)))+(((IkReal(-1.00000000000000))*(x1151)*(x1160)))+(((x1151)*(x1152))));
evalcond[6]=((((x1145)*(x1146)))+(((x1153)*(x1156)))+(((IkReal(-1.00000000000000))*(x1147)*(x1149)))+(((x1145)*(x1150)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x1148)))+(((x1157)*(x1159))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1145)*(x1147)))+(((x1149)*(x1150)))+(((IkReal(-1.00000000000000))*(sj2)*(x1148)*(x1158)))+(((IkReal(-1.00000000000000))*(sj2)*(x1148)*(x1157)))+(((x1146)*(x1149)))+(((r20)*(x1159))));
evalcond[8]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x1147)))+(((IkReal(-1.00000000000000))*(cj2)*(x1150)*(x1155)))+(((IkReal(-1.00000000000000))*(cj2)*(x1146)*(x1155)))+(((r20)*(x1149)))+(((x1145)*(x1158)))+(((x1145)*(x1157))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1163=((IkReal(1.00000000000000))*(sj2));
if( IKabs(((((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1163)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1163))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1163)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1163)))))+IKsqr(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1163)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1163)))), ((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1164=IKsin(j4);
IkReal x1165=((sj1)*(sj2));
IkReal x1166=((IkReal(1.00000000000000))*(cj6));
IkReal x1167=((IkReal(1.00000000000000))*(sj6));
IkReal x1168=((cj1)*(sj2));
IkReal x1169=((IkReal(1.00000000000000))*(IKcos(j4)));
evalcond[0]=((x1164)+(((r02)*(x1168)))+(((r12)*(x1165)))+(((cj2)*(r22))));
evalcond[1]=((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1169))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(r11)*(x1166)))+(((cj6)*(r01)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x1167)))+(((IkReal(-1.00000000000000))*(x1164)))+(((r00)*(sj1)*(sj6))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x1167)*(x1168)))+(((IkReal(-1.00000000000000))*(cj2)*(r20)*(x1167)))+(((IkReal(-1.00000000000000))*(r10)*(x1165)*(x1167)))+(((IkReal(-1.00000000000000))*(r11)*(x1165)*(x1166)))+(((IkReal(-1.00000000000000))*(x1169)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x1166)))+(((IkReal(-1.00000000000000))*(r01)*(x1166)*(x1168))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1170=((IkReal(1.00000000000000))*(sj6));
IkReal x1171=((r02)*(sj1));
IkReal x1172=((cj1)*(cj6));
IkReal x1173=((cj6)*(sj1));
IkReal x1174=((IkReal(0.400000000000000))*(r01));
IkReal x1175=((IkReal(1.00000000000000))*(cj2));
IkReal x1176=((r11)*(sj1));
IkReal x1177=((cj2)*(sj6));
IkReal x1178=((cj1)*(r01));
IkReal x1179=((cj1)*(r12));
IkReal x1180=((cj6)*(r20));
IkReal x1181=((sj1)*(sj6));
IkReal x1182=((r00)*(x1173));
IkReal x1183=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x1184=((r00)*(x1181));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-0.400000000000000))*(x1179)))+(npz)+(((IkReal(0.400000000000000))*(x1171))));
evalcond[2]=((x1179)+(((IkReal(-1.00000000000000))*(x1171))));
evalcond[3]=((x1184)+(((r01)*(x1173)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x1170)))+(((IkReal(-1.00000000000000))*(r11)*(x1172))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(x1173)*(x1174)))+(((r10)*(x1183)))+(((IkReal(-0.400000000000000))*(x1184)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((IkReal(0.400000000000000))*(r11)*(x1172)))+(((IkReal(-1.00000000000000))*(npx)*(x1170))));
evalcond[5]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x1170)))+(((r01)*(x1181)))+(((r10)*(x1172)))+(((IkReal(-1.00000000000000))*(x1182))));
evalcond[6]=((IkReal(0.390000000000000))+(((cj6)*(npx)))+(((IkReal(0.400000000000000))*(x1182)))+(((r11)*(x1183)))+(((IkReal(-0.400000000000000))*(r10)*(x1172)))+(((IkReal(-1.00000000000000))*(npy)*(x1170)))+(((IkReal(-1.00000000000000))*(x1174)*(x1181))));
evalcond[7]=((((IkReal(-1.00000000000000))*(cj2)*(r21)*(x1170)))+(((r00)*(sj2)*(x1172)))+(((IkReal(-1.00000000000000))*(sj2)*(x1170)*(x1176)))+(((IkReal(-1.00000000000000))*(sj2)*(x1170)*(x1178)))+(((r10)*(sj2)*(x1173)))+(((cj2)*(x1180))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r00)*(x1172)*(x1175)))+(((IkReal(-1.00000000000000))*(r10)*(x1173)*(x1175)))+(((x1176)*(x1177)))+(((x1177)*(x1178)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x1170)))+(((sj2)*(x1180))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1185=((r12)*(sj1));
IkReal x1186=((IkReal(1.00000000000000))*(sj2));
IkReal x1187=((cj1)*(r02));
if( IKabs(((((IkReal(-1.00000000000000))*(x1186)*(x1187)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x1185)*(x1186))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r22)*(x1186)))+(((cj2)*(x1185)))+(((cj2)*(x1187))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1186)*(x1187)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x1185)*(x1186)))))+IKsqr(((((IkReal(-1.00000000000000))*(r22)*(x1186)))+(((cj2)*(x1185)))+(((cj2)*(x1187)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1186)*(x1187)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x1185)*(x1186)))), ((((IkReal(-1.00000000000000))*(r22)*(x1186)))+(((cj2)*(x1185)))+(((cj2)*(x1187)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1188=IKsin(j4);
IkReal x1189=IKcos(j4);
IkReal x1190=((cj2)*(sj6));
IkReal x1191=((cj1)*(r00));
IkReal x1192=((sj1)*(sj2));
IkReal x1193=((IkReal(1.00000000000000))*(sj6));
IkReal x1194=((IkReal(1.00000000000000))*(cj1));
IkReal x1195=((cj6)*(r01));
IkReal x1196=((cj2)*(sj1));
IkReal x1197=((cj6)*(r11));
IkReal x1198=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((x1188)+(((cj2)*(r22)))+(((r12)*(x1192)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x1196)))+(x1189)+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x1194))));
evalcond[2]=((((r10)*(sj1)*(x1190)))+(((IkReal(-1.00000000000000))*(sj2)*(x1198)))+(x1188)+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x1193)))+(((x1196)*(x1197)))+(((x1190)*(x1191)))+(((cj1)*(cj2)*(x1195))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x1192)*(x1193)))+(((IkReal(-1.00000000000000))*(x1192)*(x1197)))+(((IkReal(-1.00000000000000))*(r20)*(x1190)))+(((IkReal(-1.00000000000000))*(cj2)*(x1198)))+(((IkReal(-1.00000000000000))*(sj2)*(x1194)*(x1195)))+(((IkReal(-1.00000000000000))*(x1189)))+(((IkReal(-1.00000000000000))*(sj2)*(x1191)*(x1193))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1199=((IkReal(1.00000000000000))*(sj6));
IkReal x1200=((r02)*(sj1));
IkReal x1201=((cj1)*(cj6));
IkReal x1202=((cj6)*(sj1));
IkReal x1203=((IkReal(0.400000000000000))*(r01));
IkReal x1204=((IkReal(1.00000000000000))*(cj2));
IkReal x1205=((r11)*(sj1));
IkReal x1206=((cj2)*(sj6));
IkReal x1207=((cj1)*(r01));
IkReal x1208=((cj1)*(r12));
IkReal x1209=((cj6)*(r20));
IkReal x1210=((sj1)*(sj6));
IkReal x1211=((r00)*(x1202));
IkReal x1212=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x1213=((r00)*(x1210));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.400000000000000))*(x1200)))+(((IkReal(-0.400000000000000))*(x1208)))+(npz));
evalcond[2]=((x1208)+(((IkReal(-1.00000000000000))*(x1200))));
evalcond[3]=((x1213)+(((r01)*(x1202)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x1199)))+(((IkReal(-1.00000000000000))*(r11)*(x1201))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x1199)))+(((r10)*(x1212)))+(((IkReal(-0.400000000000000))*(x1213)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((IkReal(-1.00000000000000))*(x1202)*(x1203)))+(((IkReal(0.400000000000000))*(r11)*(x1201))));
evalcond[5]=((IkReal(-1.00000000000000))+(((r10)*(x1201)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x1199)))+(((r01)*(x1210)))+(((IkReal(-1.00000000000000))*(x1211))));
evalcond[6]=((IkReal(0.390000000000000))+(((cj6)*(npx)))+(((r11)*(x1212)))+(((IkReal(-1.00000000000000))*(npy)*(x1199)))+(((IkReal(-1.00000000000000))*(x1203)*(x1210)))+(((IkReal(-0.400000000000000))*(r10)*(x1201)))+(((IkReal(0.400000000000000))*(x1211))));
evalcond[7]=((((r10)*(sj2)*(x1202)))+(((r00)*(sj2)*(x1201)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x1199)))+(((cj2)*(x1209)))+(((IkReal(-1.00000000000000))*(sj2)*(x1199)*(x1207)))+(((IkReal(-1.00000000000000))*(sj2)*(x1199)*(x1205))));
evalcond[8]=((((sj2)*(x1209)))+(((x1205)*(x1206)))+(((IkReal(-1.00000000000000))*(r10)*(x1202)*(x1204)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x1199)))+(((x1206)*(x1207)))+(((IkReal(-1.00000000000000))*(r00)*(x1201)*(x1204))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1214=((IkReal(1.00000000000000))*(sj2));
IkReal x1215=((r12)*(sj1));
IkReal x1216=((cj1)*(r02));
IkReal x1217=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IkReal(-1.00000000000000))*(r22)*(x1217)))+(((IkReal(-1.00000000000000))*(x1214)*(x1216)))+(((IkReal(-1.00000000000000))*(x1214)*(x1215))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1215)*(x1217)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x1216)*(x1217))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r22)*(x1217)))+(((IkReal(-1.00000000000000))*(x1214)*(x1216)))+(((IkReal(-1.00000000000000))*(x1214)*(x1215)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1215)*(x1217)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x1216)*(x1217)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r22)*(x1217)))+(((IkReal(-1.00000000000000))*(x1214)*(x1216)))+(((IkReal(-1.00000000000000))*(x1214)*(x1215)))), ((((IkReal(-1.00000000000000))*(x1215)*(x1217)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x1216)*(x1217)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1218=IKsin(j4);
IkReal x1219=((cj2)*(sj6));
IkReal x1220=((cj1)*(r00));
IkReal x1221=((sj1)*(sj2));
IkReal x1222=((IkReal(1.00000000000000))*(sj6));
IkReal x1223=((IkReal(1.00000000000000))*(cj1));
IkReal x1224=((cj6)*(r01));
IkReal x1225=((cj2)*(sj1));
IkReal x1226=((cj6)*(r11));
IkReal x1227=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x1228=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((x1218)+(((cj2)*(r22)))+(((r12)*(x1221)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj2)*(r02)*(x1223)))+(((IkReal(-1.00000000000000))*(x1227)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(r12)*(x1225))));
evalcond[2]=((((x1219)*(x1220)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x1222)))+(((x1225)*(x1226)))+(((IkReal(-1.00000000000000))*(sj2)*(x1228)))+(((r10)*(sj1)*(x1219)))+(((cj1)*(cj2)*(x1224)))+(((IkReal(-1.00000000000000))*(x1218))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x1219)))+(((IkReal(-1.00000000000000))*(x1227)))+(((IkReal(-1.00000000000000))*(x1221)*(x1226)))+(((IkReal(-1.00000000000000))*(sj2)*(x1220)*(x1222)))+(((IkReal(-1.00000000000000))*(r10)*(x1221)*(x1222)))+(((IkReal(-1.00000000000000))*(sj2)*(x1223)*(x1224)))+(((IkReal(-1.00000000000000))*(cj2)*(x1228))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1229=((r12)*(sj1));
IkReal x1230=((IkReal(1.00000000000000))*(sj2));
IkReal x1231=((cj1)*(r02));
if( IKabs(((((IkReal(-1.00000000000000))*(x1230)*(x1231)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x1229)*(x1230))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj2)*(x1229)))+(((cj2)*(x1231)))+(((IkReal(-1.00000000000000))*(r22)*(x1230))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1230)*(x1231)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x1229)*(x1230)))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj2)*(x1229)))+(((cj2)*(x1231)))+(((IkReal(-1.00000000000000))*(r22)*(x1230)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1230)*(x1231)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x1229)*(x1230)))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj2)*(x1229)))+(((cj2)*(x1231)))+(((IkReal(-1.00000000000000))*(r22)*(x1230)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1232=IKcos(j4);
IkReal x1233=IKsin(j4);
IkReal x1234=((cj1)*(cj2));
IkReal x1235=((r00)*(sj6));
IkReal x1236=((IkReal(1.00000000000000))*(cj6));
IkReal x1237=((cj1)*(sj2));
IkReal x1238=((IkReal(1.00000000000000))*(sj1));
IkReal x1239=((sj2)*(sj6));
IkReal x1240=((IkReal(1.00000000000000))*(r20));
IkReal x1241=((cj6)*(r01));
IkReal x1242=((cj2)*(sj6));
IkReal x1243=((r11)*(sj1));
evalcond[0]=((x1233)+(((r12)*(sj1)*(sj2)))+(((r02)*(x1237)))+(((cj2)*(r22))));
evalcond[1]=((((sj3)*(x1232)))+(((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(x1238))));
evalcond[2]=((((cj3)*(x1232)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(r02)*(x1234)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(x1238))));
evalcond[3]=((((sj1)*(x1235)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(sj6)))+(((sj3)*(x1233)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x1236)))+(((sj1)*(x1241))));
evalcond[4]=((((cj3)*(x1233)))+(((IkReal(-1.00000000000000))*(x1239)*(x1240)))+(((x1234)*(x1235)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x1236)))+(((cj2)*(cj6)*(x1243)))+(((r10)*(sj1)*(x1242)))+(((x1234)*(x1241))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1232)))+(((IkReal(-1.00000000000000))*(r10)*(x1238)*(x1239)))+(((IkReal(-1.00000000000000))*(sj2)*(x1236)*(x1243)))+(((IkReal(-1.00000000000000))*(r01)*(x1236)*(x1237)))+(((IkReal(-1.00000000000000))*(x1240)*(x1242)))+(((IkReal(-1.00000000000000))*(x1235)*(x1237)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x1236))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1244=((IkReal(1.00000000000000))*(sj2));
if( IKabs(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1244)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1244))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1244)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1244)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1244)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1244)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1245=IKcos(j4);
IkReal x1246=IKsin(j4);
IkReal x1247=((cj1)*(cj2));
IkReal x1248=((r00)*(sj6));
IkReal x1249=((IkReal(1.00000000000000))*(cj6));
IkReal x1250=((cj1)*(sj2));
IkReal x1251=((IkReal(1.00000000000000))*(sj1));
IkReal x1252=((sj2)*(sj6));
IkReal x1253=((IkReal(1.00000000000000))*(r20));
IkReal x1254=((cj6)*(r01));
IkReal x1255=((cj2)*(sj6));
IkReal x1256=((r11)*(sj1));
evalcond[0]=((x1246)+(((r02)*(x1250)))+(((r12)*(sj1)*(sj2)))+(((cj2)*(r22))));
evalcond[1]=((((sj3)*(x1245)))+(((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(x1251))));
evalcond[2]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(x1251)))+(((IkReal(-1.00000000000000))*(r02)*(x1247)))+(((cj3)*(x1245))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(sj6)))+(((sj1)*(x1254)))+(((sj3)*(x1246)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x1249)))+(((sj1)*(x1248))));
evalcond[4]=((((x1247)*(x1254)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x1249)))+(((IkReal(-1.00000000000000))*(x1252)*(x1253)))+(((x1247)*(x1248)))+(((cj2)*(cj6)*(x1256)))+(((cj3)*(x1246)))+(((r10)*(sj1)*(x1255))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1253)*(x1255)))+(((IkReal(-1.00000000000000))*(r10)*(x1251)*(x1252)))+(((IkReal(-1.00000000000000))*(x1245)))+(((IkReal(-1.00000000000000))*(r01)*(x1249)*(x1250)))+(((IkReal(-1.00000000000000))*(x1248)*(x1250)))+(((IkReal(-1.00000000000000))*(sj2)*(x1249)*(x1256)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x1249))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1257=((IkReal(1.00000000000000))*(sj1));
if( IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1257)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1257))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst11)*(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1257)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1257)))))), ((gconst11)*(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1258=IKcos(j4);
IkReal x1259=IKsin(j4);
IkReal x1260=((cj1)*(cj2));
IkReal x1261=((r00)*(sj6));
IkReal x1262=((IkReal(1.00000000000000))*(cj6));
IkReal x1263=((cj1)*(sj2));
IkReal x1264=((IkReal(1.00000000000000))*(sj1));
IkReal x1265=((sj2)*(sj6));
IkReal x1266=((IkReal(1.00000000000000))*(r20));
IkReal x1267=((cj6)*(r01));
IkReal x1268=((cj2)*(sj6));
IkReal x1269=((r11)*(sj1));
evalcond[0]=((x1259)+(((r02)*(x1263)))+(((r12)*(sj1)*(sj2)))+(((cj2)*(r22))));
evalcond[1]=((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(x1264)))+(((sj3)*(x1258))));
evalcond[2]=((((r22)*(sj2)))+(((cj3)*(x1258)))+(((IkReal(-1.00000000000000))*(r02)*(x1260)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(x1264))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(sj6)))+(((sj1)*(x1267)))+(((sj1)*(x1261)))+(((sj3)*(x1259)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x1262))));
evalcond[4]=((((cj3)*(x1259)))+(((x1260)*(x1267)))+(((x1260)*(x1261)))+(((IkReal(-1.00000000000000))*(x1265)*(x1266)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x1262)))+(((cj2)*(cj6)*(x1269)))+(((r10)*(sj1)*(x1268))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1266)*(x1268)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x1262)))+(((IkReal(-1.00000000000000))*(r10)*(x1264)*(x1265)))+(((IkReal(-1.00000000000000))*(r01)*(x1262)*(x1263)))+(((IkReal(-1.00000000000000))*(x1258)))+(((IkReal(-1.00000000000000))*(sj2)*(x1262)*(x1269)))+(((IkReal(-1.00000000000000))*(x1261)*(x1263))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1270=((IkReal(1.00000000000000))*(sj1));
if( IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1270)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1270))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst10)*(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1270)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1270)))))), ((gconst10)*(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x1271=((IkReal(1.00000000000000))*(cj1));
evalcond[0]=((((sj3)*(IKcos(j4))))+(((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1))));
evalcond[1]=((((cj6)*(r01)*(sj1)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1271)))+(((sj3)*(IKsin(j4))))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x1271)))+(((r00)*(sj1)*(sj6))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign((((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1))))));
dummyeval[0]=(((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst13;
IkReal x1272=((cj1)*(cj6));
IkReal x1273=((IkReal(1.00000000000000))*(r20));
IkReal x1274=((r21)*(sj6));
IkReal x1275=((r12)*(sj1));
IkReal x1276=((IkReal(1.00000000000000))*(r22)*(sj6));
gconst13=IKsign(((((cj1)*(r02)*(x1274)))+(((r00)*(r22)*(x1272)))+(((x1274)*(x1275)))+(((IkReal(-1.00000000000000))*(cj6)*(x1273)*(x1275)))+(((IkReal(-1.00000000000000))*(r02)*(x1272)*(x1273)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x1276)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x1276)))+(((cj6)*(r10)*(r22)*(sj1)))));
IkReal x1277=((cj1)*(cj6));
IkReal x1278=((IkReal(1.00000000000000))*(r20));
IkReal x1279=((r21)*(sj6));
IkReal x1280=((r12)*(sj1));
IkReal x1281=((IkReal(1.00000000000000))*(r22)*(sj6));
dummyeval[0]=((((x1279)*(x1280)))+(((cj1)*(r02)*(x1279)))+(((r00)*(r22)*(x1277)))+(((IkReal(-1.00000000000000))*(r02)*(x1277)*(x1278)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x1281)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x1281)))+(((cj6)*(r10)*(r22)*(sj1)))+(((IkReal(-1.00000000000000))*(cj6)*(x1278)*(x1280))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1282=((sj4)*(sj6));
IkReal x1283=((IkReal(1.00000000000000))*(cj6)*(sj4));
if( IKabs(((gconst13)*(((((cj6)*(r20)*(sj4)))+(((IkReal(-1.00000000000000))*(r21)*(x1282))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*(((((r11)*(sj1)*(x1282)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x1283)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x1283)))+(((cj1)*(r01)*(x1282))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst13)*(((((cj6)*(r20)*(sj4)))+(((IkReal(-1.00000000000000))*(r21)*(x1282)))))), ((gconst13)*(((((r11)*(sj1)*(x1282)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x1283)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x1283)))+(((cj1)*(r01)*(x1282)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1284=IKsin(j2);
IkReal x1285=IKcos(j2);
IkReal x1286=((r11)*(sj6));
IkReal x1287=((cj6)*(r11));
IkReal x1288=((cj6)*(r20));
IkReal x1289=((IkReal(1.00000000000000))*(sj6));
IkReal x1290=((cj1)*(r00));
IkReal x1291=((cj1)*(r01));
IkReal x1292=((IkReal(1.00000000000000))*(cj6));
IkReal x1293=((cj1)*(r02));
IkReal x1294=((sj1)*(x1284));
IkReal x1295=((sj1)*(x1285));
IkReal x1296=((r21)*(x1285));
IkReal x1297=((sj6)*(x1285));
IkReal x1298=((cj6)*(x1285));
IkReal x1299=((r21)*(x1284));
evalcond[0]=((sj4)+(((r22)*(x1285)))+(((r12)*(x1294)))+(((x1284)*(x1293))));
evalcond[1]=((((r22)*(x1284)))+(((cj3)*(cj4)))+(((IkReal(-1.00000000000000))*(x1285)*(x1293)))+(((IkReal(-1.00000000000000))*(r12)*(x1295))));
evalcond[2]=((((x1287)*(x1295)))+(((x1290)*(x1297)))+(((x1291)*(x1298)))+(((IkReal(-1.00000000000000))*(x1292)*(x1299)))+(((r10)*(sj6)*(x1295)))+(((IkReal(-1.00000000000000))*(r20)*(x1284)*(x1289)))+(((cj3)*(sj4))));
evalcond[3]=((((x1285)*(x1288)))+(((IkReal(-1.00000000000000))*(x1284)*(x1289)*(x1291)))+(((IkReal(-1.00000000000000))*(x1289)*(x1296)))+(((cj6)*(x1284)*(x1290)))+(((cj6)*(r10)*(x1294)))+(((IkReal(-1.00000000000000))*(x1286)*(x1294))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1287)*(x1294)))+(((IkReal(-1.00000000000000))*(r10)*(x1289)*(x1294)))+(((IkReal(-1.00000000000000))*(x1284)*(x1289)*(x1290)))+(((IkReal(-1.00000000000000))*(x1284)*(x1291)*(x1292)))+(((IkReal(-1.00000000000000))*(x1292)*(x1296)))+(((IkReal(-1.00000000000000))*(r20)*(x1285)*(x1289)))+(((IkReal(-1.00000000000000))*(cj4))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj3)))+(((x1286)*(x1295)))+(((x1284)*(x1288)))+(((IkReal(-1.00000000000000))*(x1289)*(x1299)))+(((x1291)*(x1297)))+(((IkReal(-1.00000000000000))*(r10)*(x1292)*(x1295)))+(((IkReal(-1.00000000000000))*(x1285)*(x1290)*(x1292))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1300=((cj1)*(r02));
IkReal x1301=((cj3)*(cj4));
IkReal x1302=((IkReal(1.00000000000000))*(sj4));
IkReal x1303=((r12)*(sj1));
if( IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(x1300)*(x1302)))+(((IkReal(-1.00000000000000))*(r22)*(x1301)))+(((IkReal(-1.00000000000000))*(x1302)*(x1303))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(r22)*(x1302)))+(((x1300)*(x1301)))+(((x1301)*(x1303))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst12)*(((((IkReal(-1.00000000000000))*(x1300)*(x1302)))+(((IkReal(-1.00000000000000))*(r22)*(x1301)))+(((IkReal(-1.00000000000000))*(x1302)*(x1303)))))), ((gconst12)*(((((IkReal(-1.00000000000000))*(r22)*(x1302)))+(((x1300)*(x1301)))+(((x1301)*(x1303)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1304=IKsin(j2);
IkReal x1305=IKcos(j2);
IkReal x1306=((r11)*(sj6));
IkReal x1307=((cj6)*(r11));
IkReal x1308=((cj6)*(r20));
IkReal x1309=((IkReal(1.00000000000000))*(sj6));
IkReal x1310=((cj1)*(r00));
IkReal x1311=((cj1)*(r01));
IkReal x1312=((IkReal(1.00000000000000))*(cj6));
IkReal x1313=((cj1)*(r02));
IkReal x1314=((sj1)*(x1304));
IkReal x1315=((sj1)*(x1305));
IkReal x1316=((r21)*(x1305));
IkReal x1317=((sj6)*(x1305));
IkReal x1318=((cj6)*(x1305));
IkReal x1319=((r21)*(x1304));
evalcond[0]=((sj4)+(((r12)*(x1314)))+(((r22)*(x1305)))+(((x1304)*(x1313))));
evalcond[1]=((((cj3)*(cj4)))+(((IkReal(-1.00000000000000))*(x1305)*(x1313)))+(((IkReal(-1.00000000000000))*(r12)*(x1315)))+(((r22)*(x1304))));
evalcond[2]=((((x1310)*(x1317)))+(((x1311)*(x1318)))+(((x1307)*(x1315)))+(((r10)*(sj6)*(x1315)))+(((IkReal(-1.00000000000000))*(r20)*(x1304)*(x1309)))+(((IkReal(-1.00000000000000))*(x1312)*(x1319)))+(((cj3)*(sj4))));
evalcond[3]=((((cj6)*(r10)*(x1314)))+(((x1305)*(x1308)))+(((IkReal(-1.00000000000000))*(x1306)*(x1314)))+(((cj6)*(x1304)*(x1310)))+(((IkReal(-1.00000000000000))*(x1304)*(x1309)*(x1311)))+(((IkReal(-1.00000000000000))*(x1309)*(x1316))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(x1305)*(x1309)))+(((IkReal(-1.00000000000000))*(r10)*(x1309)*(x1314)))+(((IkReal(-1.00000000000000))*(x1304)*(x1311)*(x1312)))+(((IkReal(-1.00000000000000))*(x1307)*(x1314)))+(((IkReal(-1.00000000000000))*(x1304)*(x1309)*(x1310)))+(((IkReal(-1.00000000000000))*(cj4)))+(((IkReal(-1.00000000000000))*(x1312)*(x1316))));
evalcond[5]=((((x1311)*(x1317)))+(((IkReal(-1.00000000000000))*(sj3)))+(((IkReal(-1.00000000000000))*(r10)*(x1312)*(x1315)))+(((IkReal(-1.00000000000000))*(x1305)*(x1310)*(x1312)))+(((x1306)*(x1315)))+(((x1304)*(x1308)))+(((IkReal(-1.00000000000000))*(x1309)*(x1319))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x1320=((IkReal(1.00000000000000))*(sj6));
IkReal x1321=((IkReal(0.400000000000000))*(cj6));
IkReal x1322=((r00)*(sj1));
IkReal x1323=((cj1)*(r11));
IkReal x1324=((r02)*(sj1));
IkReal x1325=((cj1)*(r10));
IkReal x1326=((IkReal(0.400000000000000))*(sj6));
IkReal x1327=((cj1)*(r12));
IkReal x1328=((r01)*(sj1));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(((IkReal(0.400000000000000))*(x1324)))+(((IkReal(-0.400000000000000))*(x1327)))+(npz));
evalcond[2]=((x1327)+(((IkReal(-1.00000000000000))*(x1324)))+(((IkReal(-1.00000000000000))*(cj3))));
evalcond[3]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(x1322)*(x1326)))+(((IkReal(-1.00000000000000))*(npx)*(x1320)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((IkReal(-1.00000000000000))*(x1321)*(x1328)))+(((x1325)*(x1326)))+(((x1321)*(x1323))));
evalcond[4]=((((cj6)*(npx)))+(((x1323)*(x1326)))+(((IkReal(-1.00000000000000))*(npy)*(x1320)))+(((IkReal(-1.00000000000000))*(x1326)*(x1328)))+(((IkReal(-1.00000000000000))*(x1321)*(x1325)))+(((x1321)*(x1322))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign(((((IkReal(-1.00000000000000))*((cj1)*(cj1))*((r02)*(r02))))+(((IkReal(-1.00000000000000))*((r12)*(r12))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj1)*(cj1))*((r02)*(r02))))+(((IkReal(-1.00000000000000))*((r12)*(r12))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-2.00000000000000))*(cj1)*(r02)*(r12)*(sj1))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1329=((IkReal(1.00000000000000))*(sj6));
IkReal x1330=((r02)*(sj1));
IkReal x1331=((IkReal(1.00000000000000))*(cj6));
IkReal x1332=((cj1)*(r11));
IkReal x1333=((IkReal(0.400000000000000))*(sj1));
IkReal x1334=((cj6)*(r01));
IkReal x1335=((r00)*(sj6));
IkReal x1336=((cj1)*(r12));
IkReal x1337=((r01)*(sj6));
IkReal x1338=((cj6)*(r00)*(sj1));
IkReal x1339=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x1340=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(npz)+(((IkReal(-0.400000000000000))*(x1336)))+(((IkReal(0.400000000000000))*(x1330))));
evalcond[2]=((IkReal(-1.00000000000000))+(x1336)+(((IkReal(-1.00000000000000))*(x1330))));
evalcond[3]=((((sj1)*(x1334)))+(((sj1)*(x1335)))+(((IkReal(-1.00000000000000))*(x1331)*(x1332)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x1329))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x1329)))+(((IkReal(-1.00000000000000))*(x1333)*(x1334)))+(((IkReal(-1.00000000000000))*(x1333)*(x1335)))+(((r10)*(x1339)))+(((IkReal(-1.00000000000000))*(npy)*(x1331)))+(((IkReal(0.400000000000000))*(cj6)*(x1332))));
evalcond[5]=((x1340)+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x1331)))+(((IkReal(-1.00000000000000))*(x1329)*(x1332)))+(((sj1)*(x1337))));
evalcond[6]=((((IkReal(0.400000000000000))*(sj6)*(x1332)))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(x1329)))+(((IkReal(-1.00000000000000))*(x1333)*(x1337)))+(((IkReal(-0.400000000000000))*(x1340)))+(((cj6)*(r00)*(x1333))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
if( IKabs(r22) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(r02)))+(((r12)*(sj1))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1341=IKatan2(r22, ((((cj1)*(r02)))+(((r12)*(sj1)))));
j2array[0]=((IkReal(-1.00000000000000))*(x1341));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x1341))));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[1];
IkReal x1342=IKcos(j2);
IkReal x1343=((IkReal(1.00000000000000))*(x1342));
evalcond[0]=((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1343)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1343)))+(((r22)*(IKsin(j2)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1344=((sj2)*(sj6));
IkReal x1345=((r11)*(sj1));
IkReal x1346=((cj2)*(sj6));
IkReal x1347=((cj2)*(cj6));
IkReal x1348=((r10)*(sj1));
IkReal x1349=((IkReal(1.00000000000000))*(r20));
IkReal x1350=((cj6)*(sj2));
IkReal x1351=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((IkReal(-1.00000000000000))*(x1347)*(x1349)))+(((x1344)*(x1345)))+(((IkReal(-1.00000000000000))*(r00)*(x1350)*(x1351)))+(((IkReal(-1.00000000000000))*(x1348)*(x1350)))+(((cj1)*(r01)*(x1344)))+(((r21)*(x1346))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1347)*(x1348)))+(((IkReal(-1.00000000000000))*(r01)*(x1346)*(x1351)))+(((IkReal(-1.00000000000000))*(x1345)*(x1346)))+(((cj1)*(r00)*(x1347)))+(((IkReal(-1.00000000000000))*(x1349)*(x1350)))+(((r21)*(x1344))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1347)*(x1349)))+(((x1344)*(x1345)))+(((IkReal(-1.00000000000000))*(r00)*(x1350)*(x1351)))+(((IkReal(-1.00000000000000))*(x1348)*(x1350)))+(((cj1)*(r01)*(x1344)))+(((r21)*(x1346)))))+IKsqr(((((x1347)*(x1348)))+(((IkReal(-1.00000000000000))*(r01)*(x1346)*(x1351)))+(((IkReal(-1.00000000000000))*(x1345)*(x1346)))+(((cj1)*(r00)*(x1347)))+(((IkReal(-1.00000000000000))*(x1349)*(x1350)))+(((r21)*(x1344)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1347)*(x1349)))+(((x1344)*(x1345)))+(((IkReal(-1.00000000000000))*(r00)*(x1350)*(x1351)))+(((IkReal(-1.00000000000000))*(x1348)*(x1350)))+(((cj1)*(r01)*(x1344)))+(((r21)*(x1346)))), ((((x1347)*(x1348)))+(((IkReal(-1.00000000000000))*(r01)*(x1346)*(x1351)))+(((IkReal(-1.00000000000000))*(x1345)*(x1346)))+(((cj1)*(r00)*(x1347)))+(((IkReal(-1.00000000000000))*(x1349)*(x1350)))+(((r21)*(x1344)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1352=IKsin(j4);
IkReal x1353=IKcos(j4);
IkReal x1354=((cj2)*(sj6));
IkReal x1355=((cj1)*(r00));
IkReal x1356=((IkReal(1.00000000000000))*(r21));
IkReal x1357=((cj6)*(sj2));
IkReal x1358=((r10)*(sj1));
IkReal x1359=((cj2)*(cj6));
IkReal x1360=((cj1)*(r01));
IkReal x1361=((r11)*(sj1));
IkReal x1362=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((x1352)+(((IkReal(-1.00000000000000))*(r20)*(x1362)))+(((x1359)*(x1360)))+(((x1359)*(x1361)))+(((x1354)*(x1358)))+(((x1354)*(x1355)))+(((IkReal(-1.00000000000000))*(x1356)*(x1357))));
evalcond[1]=((x1352)+(((x1357)*(x1358)))+(((x1355)*(x1357)))+(((IkReal(-1.00000000000000))*(x1354)*(x1356)))+(((r20)*(x1359)))+(((IkReal(-1.00000000000000))*(x1361)*(x1362)))+(((IkReal(-1.00000000000000))*(x1360)*(x1362))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1353)))+(((IkReal(-1.00000000000000))*(r20)*(x1354)))+(((IkReal(-1.00000000000000))*(x1357)*(x1361)))+(((IkReal(-1.00000000000000))*(x1357)*(x1360)))+(((IkReal(-1.00000000000000))*(x1355)*(x1362)))+(((IkReal(-1.00000000000000))*(x1356)*(x1359)))+(((IkReal(-1.00000000000000))*(x1358)*(x1362))));
evalcond[3]=((x1353)+(((x1354)*(x1360)))+(((x1354)*(x1361)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x1356)))+(((r20)*(x1357)))+(((IkReal(-1.00000000000000))*(x1358)*(x1359)))+(((IkReal(-1.00000000000000))*(x1355)*(x1359))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

} else
{
IkReal x1363=((IkReal(1.00000000000000))*(sj6));
IkReal x1364=((r02)*(sj1));
IkReal x1365=((IkReal(1.00000000000000))*(cj6));
IkReal x1366=((cj1)*(r11));
IkReal x1367=((IkReal(0.400000000000000))*(sj1));
IkReal x1368=((cj6)*(r01));
IkReal x1369=((r00)*(sj6));
IkReal x1370=((cj1)*(r12));
IkReal x1371=((r01)*(sj6));
IkReal x1372=((cj6)*(r00)*(sj1));
IkReal x1373=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x1374=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(((IkReal(0.400000000000000))*(x1364)))+(npz)+(((IkReal(-0.400000000000000))*(x1370))));
evalcond[2]=((IkReal(1.00000000000000))+(x1370)+(((IkReal(-1.00000000000000))*(x1364))));
evalcond[3]=((((sj1)*(x1369)))+(((sj1)*(x1368)))+(((IkReal(-1.00000000000000))*(x1365)*(x1366)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x1363))));
evalcond[4]=((IkReal(0.000500000000000000))+(((r10)*(x1373)))+(((IkReal(0.400000000000000))*(cj6)*(x1366)))+(((IkReal(-1.00000000000000))*(npy)*(x1365)))+(((IkReal(-1.00000000000000))*(npx)*(x1363)))+(((IkReal(-1.00000000000000))*(x1367)*(x1368)))+(((IkReal(-1.00000000000000))*(x1367)*(x1369))));
evalcond[5]=((x1374)+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x1365)))+(((sj1)*(x1371)))+(((IkReal(-1.00000000000000))*(x1363)*(x1366))));
evalcond[6]=((((cj6)*(r00)*(x1367)))+(((cj6)*(npx)))+(((IkReal(-0.400000000000000))*(x1374)))+(((IkReal(-1.00000000000000))*(npy)*(x1363)))+(((IkReal(-1.00000000000000))*(x1367)*(x1371)))+(((IkReal(0.400000000000000))*(sj6)*(x1366))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
if( IKabs(r22) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(r02)))+(((r12)*(sj1))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1375=IKatan2(r22, ((((cj1)*(r02)))+(((r12)*(sj1)))));
j2array[0]=((IkReal(-1.00000000000000))*(x1375));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x1375))));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[1];
IkReal x1376=IKcos(j2);
IkReal x1377=((IkReal(1.00000000000000))*(x1376));
evalcond[0]=((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1377)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1377)))+(((r22)*(IKsin(j2)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1378=((cj1)*(cj2));
IkReal x1379=((IkReal(1.00000000000000))*(cj6));
IkReal x1380=((r21)*(sj2));
IkReal x1381=((IkReal(1.00000000000000))*(sj6));
IkReal x1382=((r20)*(sj2));
IkReal x1383=((cj2)*(sj1));
IkReal x1384=((sj6)*(x1383));
if( IKabs(((((r10)*(x1384)))+(((r00)*(sj6)*(x1378)))+(((cj6)*(r11)*(x1383)))+(((cj6)*(r01)*(x1378)))+(((IkReal(-1.00000000000000))*(x1381)*(x1382)))+(((IkReal(-1.00000000000000))*(x1379)*(x1380))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r01)*(sj6)*(x1378)))+(((cj6)*(x1382)))+(((IkReal(-1.00000000000000))*(r00)*(x1378)*(x1379)))+(((IkReal(-1.00000000000000))*(x1380)*(x1381)))+(((IkReal(-1.00000000000000))*(r10)*(x1379)*(x1383)))+(((r11)*(x1384))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r10)*(x1384)))+(((r00)*(sj6)*(x1378)))+(((cj6)*(r11)*(x1383)))+(((cj6)*(r01)*(x1378)))+(((IkReal(-1.00000000000000))*(x1381)*(x1382)))+(((IkReal(-1.00000000000000))*(x1379)*(x1380)))))+IKsqr(((((r01)*(sj6)*(x1378)))+(((cj6)*(x1382)))+(((IkReal(-1.00000000000000))*(r00)*(x1378)*(x1379)))+(((IkReal(-1.00000000000000))*(x1380)*(x1381)))+(((IkReal(-1.00000000000000))*(r10)*(x1379)*(x1383)))+(((r11)*(x1384)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((r10)*(x1384)))+(((r00)*(sj6)*(x1378)))+(((cj6)*(r11)*(x1383)))+(((cj6)*(r01)*(x1378)))+(((IkReal(-1.00000000000000))*(x1381)*(x1382)))+(((IkReal(-1.00000000000000))*(x1379)*(x1380)))), ((((r01)*(sj6)*(x1378)))+(((cj6)*(x1382)))+(((IkReal(-1.00000000000000))*(r00)*(x1378)*(x1379)))+(((IkReal(-1.00000000000000))*(x1380)*(x1381)))+(((IkReal(-1.00000000000000))*(r10)*(x1379)*(x1383)))+(((r11)*(x1384)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1385=IKsin(j4);
IkReal x1386=((cj2)*(sj6));
IkReal x1387=((cj1)*(r00));
IkReal x1388=((IkReal(1.00000000000000))*(r21));
IkReal x1389=((cj6)*(sj2));
IkReal x1390=((r10)*(sj1));
IkReal x1391=((cj2)*(cj6));
IkReal x1392=((cj1)*(r01));
IkReal x1393=((r11)*(sj1));
IkReal x1394=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x1395=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x1395)))+(((x1386)*(x1390)))+(((IkReal(-1.00000000000000))*(x1385)))+(((x1386)*(x1387)))+(((x1391)*(x1393)))+(((x1391)*(x1392)))+(((IkReal(-1.00000000000000))*(x1388)*(x1389))));
evalcond[1]=((x1385)+(((IkReal(-1.00000000000000))*(x1392)*(x1395)))+(((IkReal(-1.00000000000000))*(x1393)*(x1395)))+(((r20)*(x1391)))+(((x1387)*(x1389)))+(((x1389)*(x1390)))+(((IkReal(-1.00000000000000))*(x1386)*(x1388))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x1386)))+(((IkReal(-1.00000000000000))*(x1389)*(x1393)))+(((IkReal(-1.00000000000000))*(x1389)*(x1392)))+(((IkReal(-1.00000000000000))*(x1390)*(x1395)))+(((IkReal(-1.00000000000000))*(x1388)*(x1391)))+(((IkReal(-1.00000000000000))*(x1387)*(x1395)))+(((IkReal(-1.00000000000000))*(x1394))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1390)*(x1391)))+(((IkReal(-1.00000000000000))*(x1387)*(x1391)))+(((r20)*(x1389)))+(((x1386)*(x1392)))+(((x1386)*(x1393)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x1388)))+(((IkReal(-1.00000000000000))*(x1394))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1396=((IkReal(1.00000000000000))*(sj3));
if( IKabs(((gconst14)*(r22)*(sj3))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1396)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1396))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst14)*(r22)*(sj3)), ((gconst14)*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1396)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1396)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x1397=IKsin(j2);
IkReal x1398=IKcos(j2);
IkReal x1399=((r12)*(sj1));
IkReal x1400=((cj1)*(r02));
IkReal x1401=((IkReal(1.00000000000000))*(x1398));
evalcond[0]=((((x1397)*(x1400)))+(((x1397)*(x1399)))+(((r22)*(x1398))));
evalcond[1]=((sj3)+(((IkReal(-1.00000000000000))*(x1399)*(x1401)))+(((IkReal(-1.00000000000000))*(x1400)*(x1401)))+(((r22)*(x1397))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst16;
gconst16=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj3;
dummyeval[1]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x1402=((IkReal(1.00000000000000))*(sj6));
IkReal x1403=((IkReal(1.00000000000000))*(r02));
IkReal x1404=((cj1)*(r11));
IkReal x1405=((IkReal(1.00000000000000))*(cj6));
IkReal x1406=((IkReal(0.400000000000000))*(sj6));
IkReal x1407=((r00)*(sj1));
IkReal x1408=((cj1)*(r12));
IkReal x1409=((r12)*(sj1));
IkReal x1410=((r01)*(sj1));
IkReal x1411=((cj1)*(r10));
IkReal x1412=((cj6)*(x1407));
IkReal x1413=((cj6)*(x1410));
IkReal x1414=((cj6)*(x1411));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1)))+(((IkReal(-0.400000000000000))*(x1408))));
evalcond[2]=((((sj2)*(x1409)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(sj1)*(x1403)))+(x1408));
evalcond[4]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x1409)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(x1403))));
evalcond[5]=((((sj6)*(x1407)))+(((IkReal(-1.00000000000000))*(x1404)*(x1405)))+(x1413)+(((IkReal(-1.00000000000000))*(x1402)*(x1411))));
evalcond[6]=((IkReal(0.000500000000000000))+(((IkReal(-0.400000000000000))*(x1413)))+(((IkReal(0.400000000000000))*(cj6)*(x1404)))+(((IkReal(-1.00000000000000))*(npx)*(x1402)))+(((IkReal(-1.00000000000000))*(x1406)*(x1407)))+(((IkReal(-1.00000000000000))*(npy)*(x1405)))+(((x1406)*(x1411))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1405)*(x1407)))+(((sj6)*(x1410)))+(((IkReal(-1.00000000000000))*(x1402)*(x1404)))+(x1414));
evalcond[8]=((((IkReal(-0.400000000000000))*(x1414)))+(((cj6)*(npx)))+(((IkReal(0.400000000000000))*(x1412)))+(((IkReal(-1.00000000000000))*(npy)*(x1402)))+(((x1404)*(x1406)))+(((IkReal(-1.00000000000000))*(x1406)*(x1410))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1415=((sj2)*(sj6));
IkReal x1416=((r11)*(sj1));
IkReal x1417=((cj2)*(sj6));
IkReal x1418=((cj2)*(cj6));
IkReal x1419=((r10)*(sj1));
IkReal x1420=((IkReal(1.00000000000000))*(r20));
IkReal x1421=((cj6)*(sj2));
IkReal x1422=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((r21)*(x1417)))+(((x1415)*(x1416)))+(((IkReal(-1.00000000000000))*(x1419)*(x1421)))+(((IkReal(-1.00000000000000))*(x1418)*(x1420)))+(((IkReal(-1.00000000000000))*(r00)*(x1421)*(x1422)))+(((cj1)*(r01)*(x1415))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1418)*(x1419)))+(((r21)*(x1415)))+(((IkReal(-1.00000000000000))*(x1416)*(x1417)))+(((IkReal(-1.00000000000000))*(r01)*(x1417)*(x1422)))+(((IkReal(-1.00000000000000))*(x1420)*(x1421)))+(((cj1)*(r00)*(x1418))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r21)*(x1417)))+(((x1415)*(x1416)))+(((IkReal(-1.00000000000000))*(x1419)*(x1421)))+(((IkReal(-1.00000000000000))*(x1418)*(x1420)))+(((IkReal(-1.00000000000000))*(r00)*(x1421)*(x1422)))+(((cj1)*(r01)*(x1415)))))+IKsqr(((((x1418)*(x1419)))+(((r21)*(x1415)))+(((IkReal(-1.00000000000000))*(x1416)*(x1417)))+(((IkReal(-1.00000000000000))*(r01)*(x1417)*(x1422)))+(((IkReal(-1.00000000000000))*(x1420)*(x1421)))+(((cj1)*(r00)*(x1418)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((r21)*(x1417)))+(((x1415)*(x1416)))+(((IkReal(-1.00000000000000))*(x1419)*(x1421)))+(((IkReal(-1.00000000000000))*(x1418)*(x1420)))+(((IkReal(-1.00000000000000))*(r00)*(x1421)*(x1422)))+(((cj1)*(r01)*(x1415)))), ((((x1418)*(x1419)))+(((r21)*(x1415)))+(((IkReal(-1.00000000000000))*(x1416)*(x1417)))+(((IkReal(-1.00000000000000))*(r01)*(x1417)*(x1422)))+(((IkReal(-1.00000000000000))*(x1420)*(x1421)))+(((cj1)*(r00)*(x1418)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1423=IKsin(j4);
IkReal x1424=IKcos(j4);
IkReal x1425=((cj2)*(sj6));
IkReal x1426=((cj1)*(r00));
IkReal x1427=((IkReal(1.00000000000000))*(r21));
IkReal x1428=((cj6)*(sj2));
IkReal x1429=((r10)*(sj1));
IkReal x1430=((cj2)*(cj6));
IkReal x1431=((cj1)*(r01));
IkReal x1432=((r11)*(sj1));
IkReal x1433=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((x1425)*(x1429)))+(((x1425)*(x1426)))+(((IkReal(-1.00000000000000))*(x1427)*(x1428)))+(((x1430)*(x1432)))+(((x1430)*(x1431)))+(x1423)+(((IkReal(-1.00000000000000))*(r20)*(x1433))));
evalcond[1]=((((x1426)*(x1428)))+(((IkReal(-1.00000000000000))*(x1425)*(x1427)))+(((r20)*(x1430)))+(((IkReal(-1.00000000000000))*(x1431)*(x1433)))+(((x1428)*(x1429)))+(x1423)+(((IkReal(-1.00000000000000))*(x1432)*(x1433))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1429)*(x1433)))+(((IkReal(-1.00000000000000))*(x1428)*(x1431)))+(((IkReal(-1.00000000000000))*(x1428)*(x1432)))+(((IkReal(-1.00000000000000))*(x1424)))+(((IkReal(-1.00000000000000))*(x1426)*(x1433)))+(((IkReal(-1.00000000000000))*(x1427)*(x1430)))+(((IkReal(-1.00000000000000))*(r20)*(x1425))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1429)*(x1430)))+(((x1425)*(x1431)))+(((x1425)*(x1432)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x1427)))+(x1424)+(((IkReal(-1.00000000000000))*(x1426)*(x1430)))+(((r20)*(x1428))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1434=((IkReal(1.00000000000000))*(sj6));
IkReal x1435=((IkReal(1.00000000000000))*(r02));
IkReal x1436=((cj1)*(r11));
IkReal x1437=((IkReal(1.00000000000000))*(cj6));
IkReal x1438=((IkReal(0.400000000000000))*(sj6));
IkReal x1439=((r00)*(sj1));
IkReal x1440=((cj1)*(r12));
IkReal x1441=((r12)*(sj1));
IkReal x1442=((r01)*(sj1));
IkReal x1443=((cj1)*(r10));
IkReal x1444=((cj6)*(x1439));
IkReal x1445=((cj6)*(x1442));
IkReal x1446=((cj6)*(x1443));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1)))+(((IkReal(-0.400000000000000))*(x1440))));
evalcond[2]=((((cj2)*(r22)))+(((sj2)*(x1441)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((IkReal(1.00000000000000))+(x1440)+(((IkReal(-1.00000000000000))*(sj1)*(x1435))));
evalcond[4]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(x1435)))+(((IkReal(-1.00000000000000))*(cj2)*(x1441))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1436)*(x1437)))+(((sj6)*(x1439)))+(((IkReal(-1.00000000000000))*(x1434)*(x1443)))+(x1445));
evalcond[6]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(x1438)*(x1439)))+(((x1438)*(x1443)))+(((IkReal(0.400000000000000))*(cj6)*(x1436)))+(((IkReal(-1.00000000000000))*(npy)*(x1437)))+(((IkReal(-1.00000000000000))*(npx)*(x1434)))+(((IkReal(-0.400000000000000))*(x1445))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1437)*(x1439)))+(((sj6)*(x1442)))+(((IkReal(-1.00000000000000))*(x1434)*(x1436)))+(x1446));
evalcond[8]=((((cj6)*(npx)))+(((x1436)*(x1438)))+(((IkReal(-1.00000000000000))*(x1438)*(x1442)))+(((IkReal(-1.00000000000000))*(npy)*(x1434)))+(((IkReal(-0.400000000000000))*(x1446)))+(((IkReal(0.400000000000000))*(x1444))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1447=((cj1)*(cj2));
IkReal x1448=((IkReal(1.00000000000000))*(cj6));
IkReal x1449=((r21)*(sj2));
IkReal x1450=((IkReal(1.00000000000000))*(sj6));
IkReal x1451=((r20)*(sj2));
IkReal x1452=((cj2)*(sj1));
IkReal x1453=((sj6)*(x1452));
if( IKabs(((((cj6)*(r01)*(x1447)))+(((r10)*(x1453)))+(((cj6)*(r11)*(x1452)))+(((IkReal(-1.00000000000000))*(x1448)*(x1449)))+(((r00)*(sj6)*(x1447)))+(((IkReal(-1.00000000000000))*(x1450)*(x1451))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r11)*(x1453)))+(((IkReal(-1.00000000000000))*(r00)*(x1447)*(x1448)))+(((IkReal(-1.00000000000000))*(r10)*(x1448)*(x1452)))+(((r01)*(sj6)*(x1447)))+(((IkReal(-1.00000000000000))*(x1449)*(x1450)))+(((cj6)*(x1451))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj6)*(r01)*(x1447)))+(((r10)*(x1453)))+(((cj6)*(r11)*(x1452)))+(((IkReal(-1.00000000000000))*(x1448)*(x1449)))+(((r00)*(sj6)*(x1447)))+(((IkReal(-1.00000000000000))*(x1450)*(x1451)))))+IKsqr(((((r11)*(x1453)))+(((IkReal(-1.00000000000000))*(r00)*(x1447)*(x1448)))+(((IkReal(-1.00000000000000))*(r10)*(x1448)*(x1452)))+(((r01)*(sj6)*(x1447)))+(((IkReal(-1.00000000000000))*(x1449)*(x1450)))+(((cj6)*(x1451)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((cj6)*(r01)*(x1447)))+(((r10)*(x1453)))+(((cj6)*(r11)*(x1452)))+(((IkReal(-1.00000000000000))*(x1448)*(x1449)))+(((r00)*(sj6)*(x1447)))+(((IkReal(-1.00000000000000))*(x1450)*(x1451)))), ((((r11)*(x1453)))+(((IkReal(-1.00000000000000))*(r00)*(x1447)*(x1448)))+(((IkReal(-1.00000000000000))*(r10)*(x1448)*(x1452)))+(((r01)*(sj6)*(x1447)))+(((IkReal(-1.00000000000000))*(x1449)*(x1450)))+(((cj6)*(x1451)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1454=IKsin(j4);
IkReal x1455=((cj2)*(sj6));
IkReal x1456=((cj1)*(r00));
IkReal x1457=((IkReal(1.00000000000000))*(r21));
IkReal x1458=((cj6)*(sj2));
IkReal x1459=((r10)*(sj1));
IkReal x1460=((cj2)*(cj6));
IkReal x1461=((cj1)*(r01));
IkReal x1462=((r11)*(sj1));
IkReal x1463=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x1464=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1457)*(x1458)))+(((x1455)*(x1456)))+(((x1455)*(x1459)))+(((IkReal(-1.00000000000000))*(x1454)))+(((x1460)*(x1461)))+(((x1460)*(x1462)))+(((IkReal(-1.00000000000000))*(r20)*(x1464))));
evalcond[1]=((((x1456)*(x1458)))+(((r20)*(x1460)))+(((IkReal(-1.00000000000000))*(x1455)*(x1457)))+(((x1458)*(x1459)))+(((IkReal(-1.00000000000000))*(x1462)*(x1464)))+(x1454)+(((IkReal(-1.00000000000000))*(x1461)*(x1464))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1463)))+(((IkReal(-1.00000000000000))*(x1459)*(x1464)))+(((IkReal(-1.00000000000000))*(x1456)*(x1464)))+(((IkReal(-1.00000000000000))*(r20)*(x1455)))+(((IkReal(-1.00000000000000))*(x1457)*(x1460)))+(((IkReal(-1.00000000000000))*(x1458)*(x1462)))+(((IkReal(-1.00000000000000))*(x1458)*(x1461))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1463)))+(((r20)*(x1458)))+(((x1455)*(x1462)))+(((x1455)*(x1461)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x1457)))+(((IkReal(-1.00000000000000))*(x1456)*(x1460)))+(((IkReal(-1.00000000000000))*(x1459)*(x1460))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1465=((cj1)*(sj6));
IkReal x1466=((cj2)*(r00));
IkReal x1467=((IkReal(1.00000000000000))*(sj6));
IkReal x1468=((IkReal(0.400000000000000))*(r10));
IkReal x1469=((IkReal(1.00000000000000))*(r02));
IkReal x1470=((IkReal(0.400000000000000))*(r11));
IkReal x1471=((r20)*(sj2));
IkReal x1472=((IkReal(1.00000000000000))*(cj6));
IkReal x1473=((sj1)*(sj6));
IkReal x1474=((cj1)*(cj2));
IkReal x1475=((r21)*(sj2));
IkReal x1476=((cj1)*(r12));
IkReal x1477=((cj2)*(r11));
IkReal x1478=((r12)*(sj1));
IkReal x1479=((cj1)*(cj6));
IkReal x1480=((cj2)*(r10));
IkReal x1481=((IkReal(0.400000000000000))*(cj6)*(sj1));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1)))+(((IkReal(-0.400000000000000))*(x1476))));
evalcond[2]=((((cj2)*(r22)))+(((sj2)*(x1478)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((x1476)+(((IkReal(-1.00000000000000))*(sj1)*(x1469))));
evalcond[4]=((IkReal(1.00000000000000))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x1469)*(x1474)))+(((IkReal(-1.00000000000000))*(cj2)*(x1478))));
evalcond[5]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x1472)))+(((IkReal(-1.00000000000000))*(r01)*(x1481)))+(((x1465)*(x1468)))+(((x1470)*(x1479)))+(((IkReal(-0.400000000000000))*(r00)*(x1473)))+(((IkReal(-1.00000000000000))*(npx)*(x1467))));
evalcond[6]=((((cj6)*(npx)))+(((r00)*(x1481)))+(((IkReal(-1.00000000000000))*(x1468)*(x1479)))+(((IkReal(-1.00000000000000))*(npy)*(x1467)))+(((IkReal(-0.400000000000000))*(r01)*(x1473)))+(((x1465)*(x1470))));
evalcond[7]=((((cj6)*(r01)*(x1474)))+(((x1473)*(x1480)))+(((x1465)*(x1466)))+(((cj6)*(sj1)*(x1477)))+(((IkReal(-1.00000000000000))*(x1467)*(x1471)))+(((IkReal(-1.00000000000000))*(x1472)*(x1475))));
evalcond[8]=((((IkReal(-1.00000000000000))*(sj1)*(x1472)*(x1480)))+(((x1473)*(x1477)))+(((cj6)*(x1471)))+(((IkReal(-1.00000000000000))*(cj1)*(x1466)*(x1472)))+(((IkReal(-1.00000000000000))*(x1467)*(x1475)))+(((cj2)*(r01)*(x1465))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1482=((IkReal(1.00000000000000))*(cj6));
IkReal x1483=((cj1)*(r10));
IkReal x1484=((r01)*(sj1));
IkReal x1485=((r00)*(sj1));
IkReal x1486=((cj1)*(r11));
IkReal x1487=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(x1482)*(x1484)))+(((IkReal(-1.00000000000000))*(x1485)*(x1487)))+(((sj6)*(x1483)))+(((cj6)*(x1486))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1482)*(x1483)))+(((IkReal(-1.00000000000000))*(x1484)*(x1487)))+(((sj6)*(x1486)))+(((cj6)*(x1485))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1482)*(x1484)))+(((IkReal(-1.00000000000000))*(x1485)*(x1487)))+(((sj6)*(x1483)))+(((cj6)*(x1486)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1482)*(x1483)))+(((IkReal(-1.00000000000000))*(x1484)*(x1487)))+(((sj6)*(x1486)))+(((cj6)*(x1485)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1482)*(x1484)))+(((IkReal(-1.00000000000000))*(x1485)*(x1487)))+(((sj6)*(x1483)))+(((cj6)*(x1486)))), ((((IkReal(-1.00000000000000))*(x1482)*(x1483)))+(((IkReal(-1.00000000000000))*(x1484)*(x1487)))+(((sj6)*(x1486)))+(((cj6)*(x1485)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1488=IKsin(j4);
IkReal x1489=IKcos(j4);
IkReal x1490=((IkReal(1.00000000000000))*(sj2));
IkReal x1491=((cj6)*(sj1));
IkReal x1492=((cj1)*(sj6));
IkReal x1493=((IkReal(1.00000000000000))*(r11));
IkReal x1494=((cj1)*(cj6));
IkReal x1495=((sj1)*(sj6));
IkReal x1496=((cj2)*(cj6));
IkReal x1497=((IkReal(1.00000000000000))*(cj2)*(sj6));
evalcond[0]=((((r00)*(x1495)))+(((r01)*(x1491)))+(((IkReal(-1.00000000000000))*(x1493)*(x1494)))+(((IkReal(-1.00000000000000))*(r10)*(x1492)))+(x1488));
evalcond[1]=((((r10)*(x1494)))+(((r01)*(x1495)))+(((IkReal(-1.00000000000000))*(r00)*(x1491)))+(((IkReal(-1.00000000000000))*(x1492)*(x1493)))+(x1489));
evalcond[2]=((((r00)*(sj2)*(x1494)))+(((IkReal(-1.00000000000000))*(r21)*(x1497)))+(((r20)*(x1496)))+(((IkReal(-1.00000000000000))*(r01)*(x1490)*(x1492)))+(x1488)+(((IkReal(-1.00000000000000))*(r11)*(x1490)*(x1495)))+(((r10)*(sj2)*(x1491))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x1497)))+(((IkReal(-1.00000000000000))*(r10)*(x1490)*(x1495)))+(((IkReal(-1.00000000000000))*(r21)*(x1496)))+(((IkReal(-1.00000000000000))*(x1489)))+(((IkReal(-1.00000000000000))*(r01)*(x1490)*(x1494)))+(((IkReal(-1.00000000000000))*(r11)*(x1490)*(x1491)))+(((IkReal(-1.00000000000000))*(r00)*(x1490)*(x1492))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1498=((cj1)*(sj6));
IkReal x1499=((cj2)*(r00));
IkReal x1500=((IkReal(1.00000000000000))*(sj6));
IkReal x1501=((IkReal(0.400000000000000))*(r10));
IkReal x1502=((IkReal(1.00000000000000))*(r02));
IkReal x1503=((IkReal(0.400000000000000))*(r11));
IkReal x1504=((r20)*(sj2));
IkReal x1505=((IkReal(1.00000000000000))*(cj6));
IkReal x1506=((sj1)*(sj6));
IkReal x1507=((cj1)*(cj2));
IkReal x1508=((r21)*(sj2));
IkReal x1509=((cj1)*(r12));
IkReal x1510=((cj2)*(r11));
IkReal x1511=((r12)*(sj1));
IkReal x1512=((cj1)*(cj6));
IkReal x1513=((cj2)*(r10));
IkReal x1514=((IkReal(0.400000000000000))*(cj6)*(sj1));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1)))+(((IkReal(-0.400000000000000))*(x1509))));
evalcond[2]=((((sj2)*(x1511)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((x1509)+(((IkReal(-1.00000000000000))*(sj1)*(x1502))));
evalcond[4]=((IkReal(-1.00000000000000))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x1502)*(x1507)))+(((IkReal(-1.00000000000000))*(cj2)*(x1511))));
evalcond[5]=((IkReal(0.000500000000000000))+(((x1498)*(x1501)))+(((IkReal(-1.00000000000000))*(r01)*(x1514)))+(((IkReal(-1.00000000000000))*(npy)*(x1505)))+(((IkReal(-0.400000000000000))*(r00)*(x1506)))+(((IkReal(-1.00000000000000))*(npx)*(x1500)))+(((x1503)*(x1512))));
evalcond[6]=((((cj6)*(npx)))+(((x1498)*(x1503)))+(((IkReal(-1.00000000000000))*(x1501)*(x1512)))+(((IkReal(-1.00000000000000))*(npy)*(x1500)))+(((r00)*(x1514)))+(((IkReal(-0.400000000000000))*(r01)*(x1506))));
evalcond[7]=((((x1498)*(x1499)))+(((cj6)*(r01)*(x1507)))+(((cj6)*(sj1)*(x1510)))+(((x1506)*(x1513)))+(((IkReal(-1.00000000000000))*(x1500)*(x1504)))+(((IkReal(-1.00000000000000))*(x1505)*(x1508))));
evalcond[8]=((((IkReal(-1.00000000000000))*(cj1)*(x1499)*(x1505)))+(((x1506)*(x1510)))+(((cj6)*(x1504)))+(((cj2)*(r01)*(x1498)))+(((IkReal(-1.00000000000000))*(sj1)*(x1505)*(x1513)))+(((IkReal(-1.00000000000000))*(x1500)*(x1508))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1515=((cj1)*(r10));
IkReal x1516=((r00)*(sj1));
IkReal x1517=((r01)*(sj1));
IkReal x1518=((IkReal(1.00000000000000))*(cj1)*(r11));
if( IKabs(((((cj6)*(x1517)))+(((sj6)*(x1516)))+(((IkReal(-1.00000000000000))*(sj6)*(x1515)))+(((IkReal(-1.00000000000000))*(cj6)*(x1518))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(x1515)))+(((sj6)*(x1517)))+(((IkReal(-1.00000000000000))*(cj6)*(x1516)))+(((IkReal(-1.00000000000000))*(sj6)*(x1518))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj6)*(x1517)))+(((sj6)*(x1516)))+(((IkReal(-1.00000000000000))*(sj6)*(x1515)))+(((IkReal(-1.00000000000000))*(cj6)*(x1518)))))+IKsqr(((((cj6)*(x1515)))+(((sj6)*(x1517)))+(((IkReal(-1.00000000000000))*(cj6)*(x1516)))+(((IkReal(-1.00000000000000))*(sj6)*(x1518)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((cj6)*(x1517)))+(((sj6)*(x1516)))+(((IkReal(-1.00000000000000))*(sj6)*(x1515)))+(((IkReal(-1.00000000000000))*(cj6)*(x1518)))), ((((cj6)*(x1515)))+(((sj6)*(x1517)))+(((IkReal(-1.00000000000000))*(cj6)*(x1516)))+(((IkReal(-1.00000000000000))*(sj6)*(x1518)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1519=IKsin(j4);
IkReal x1520=((IkReal(1.00000000000000))*(sj6));
IkReal x1521=((cj2)*(r21));
IkReal x1522=((IkReal(1.00000000000000))*(cj6));
IkReal x1523=((cj1)*(r11));
IkReal x1524=((r00)*(sj1));
IkReal x1525=((cj6)*(sj2));
IkReal x1526=((r10)*(sj1));
IkReal x1527=((cj1)*(r00));
IkReal x1528=((cj1)*(r10));
IkReal x1529=((cj2)*(r20));
IkReal x1530=((r01)*(sj1));
IkReal x1531=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x1532=((cj1)*(r01)*(sj2));
IkReal x1533=((r11)*(sj1)*(sj2));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1519)))+(((cj6)*(x1530)))+(((IkReal(-1.00000000000000))*(x1522)*(x1523)))+(((sj6)*(x1524)))+(((IkReal(-1.00000000000000))*(x1520)*(x1528))));
evalcond[1]=((((cj6)*(x1528)))+(((IkReal(-1.00000000000000))*(x1531)))+(((IkReal(-1.00000000000000))*(x1522)*(x1524)))+(((sj6)*(x1530)))+(((IkReal(-1.00000000000000))*(x1520)*(x1523))));
evalcond[2]=((((x1525)*(x1527)))+(((x1525)*(x1526)))+(((cj6)*(x1529)))+(x1519)+(((IkReal(-1.00000000000000))*(x1520)*(x1521)))+(((IkReal(-1.00000000000000))*(x1520)*(x1533)))+(((IkReal(-1.00000000000000))*(x1520)*(x1532))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(x1520)*(x1527)))+(((IkReal(-1.00000000000000))*(sj2)*(x1520)*(x1526)))+(((IkReal(-1.00000000000000))*(x1531)))+(((IkReal(-1.00000000000000))*(x1522)*(x1533)))+(((IkReal(-1.00000000000000))*(x1522)*(x1532)))+(((IkReal(-1.00000000000000))*(x1520)*(x1529)))+(((IkReal(-1.00000000000000))*(x1521)*(x1522))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1534=((IkReal(1.00000000000000))*(cj6));
IkReal x1535=((cj2)*(cj6));
IkReal x1536=((cj1)*(sj6));
IkReal x1537=((IkReal(1.00000000000000))*(cj2));
IkReal x1538=((sj1)*(sj6));
if( IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r10)*(x1536)))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x1534)))+(((IkReal(-1.00000000000000))*(r00)*(x1538)))+(((cj1)*(cj6)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((r10)*(sj1)*(x1535)))+(((cj1)*(r00)*(x1535)))+(((IkReal(-1.00000000000000))*(r01)*(x1536)*(x1537)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x1534)))+(((IkReal(-1.00000000000000))*(r11)*(x1537)*(x1538)))+(((r21)*(sj2)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r10)*(x1536)))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x1534)))+(((IkReal(-1.00000000000000))*(r00)*(x1538)))+(((cj1)*(cj6)*(r11)))))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((r10)*(sj1)*(x1535)))+(((cj1)*(r00)*(x1535)))+(((IkReal(-1.00000000000000))*(r01)*(x1536)*(x1537)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x1534)))+(((IkReal(-1.00000000000000))*(r11)*(x1537)*(x1538)))+(((r21)*(sj2)*(sj6)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r10)*(x1536)))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x1534)))+(((IkReal(-1.00000000000000))*(r00)*(x1538)))+(((cj1)*(cj6)*(r11)))))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((r10)*(sj1)*(x1535)))+(((cj1)*(r00)*(x1535)))+(((IkReal(-1.00000000000000))*(r01)*(x1536)*(x1537)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x1534)))+(((IkReal(-1.00000000000000))*(r11)*(x1537)*(x1538)))+(((r21)*(sj2)*(sj6)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1539=IKsin(j4);
IkReal x1540=IKcos(j4);
IkReal x1541=((cj2)*(sj6));
IkReal x1542=((cj1)*(r00));
IkReal x1543=((IkReal(1.00000000000000))*(r21));
IkReal x1544=((cj6)*(sj2));
IkReal x1545=((IkReal(1.00000000000000))*(cj6));
IkReal x1546=((cj1)*(r11));
IkReal x1547=((r00)*(sj1));
IkReal x1548=((r10)*(sj1));
IkReal x1549=((sj2)*(sj6));
IkReal x1550=((IkReal(1.00000000000000))*(r20));
IkReal x1551=((cj2)*(cj6));
IkReal x1552=((cj1)*(r01));
IkReal x1553=((cj1)*(r10));
IkReal x1554=((r11)*(sj1));
IkReal x1555=((IkReal(1.00000000000000))*(sj6));
IkReal x1556=((r01)*(sj1));
evalcond[0]=((((sj3)*(x1539)))+(((cj6)*(x1556)))+(((IkReal(-1.00000000000000))*(x1553)*(x1555)))+(((IkReal(-1.00000000000000))*(x1545)*(x1546)))+(((sj6)*(x1547))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1546)*(x1555)))+(((cj6)*(x1553)))+(((IkReal(-1.00000000000000))*(x1545)*(x1547)))+(((sj6)*(x1556)))+(((sj3)*(x1540))));
evalcond[2]=((((x1551)*(x1552)))+(((x1551)*(x1554)))+(((IkReal(-1.00000000000000))*(x1543)*(x1544)))+(((IkReal(-1.00000000000000))*(x1549)*(x1550)))+(((x1541)*(x1548)))+(((x1541)*(x1542)))+(((cj3)*(x1539))));
evalcond[3]=((((x1544)*(x1548)))+(((IkReal(-1.00000000000000))*(x1549)*(x1554)))+(((IkReal(-1.00000000000000))*(x1549)*(x1552)))+(x1539)+(((x1542)*(x1544)))+(((IkReal(-1.00000000000000))*(x1541)*(x1543)))+(((r20)*(x1551))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1540)))+(((IkReal(-1.00000000000000))*(x1542)*(x1549)))+(((IkReal(-1.00000000000000))*(x1544)*(x1552)))+(((IkReal(-1.00000000000000))*(x1544)*(x1554)))+(((IkReal(-1.00000000000000))*(x1543)*(x1551)))+(((IkReal(-1.00000000000000))*(x1548)*(x1549)))+(((IkReal(-1.00000000000000))*(x1541)*(x1550))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1543)*(x1549)))+(((x1541)*(x1554)))+(((x1541)*(x1552)))+(((cj3)*(x1540)))+(((IkReal(-1.00000000000000))*(cj2)*(x1545)*(x1548)))+(((IkReal(-1.00000000000000))*(cj2)*(x1542)*(x1545)))+(((r20)*(x1544))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1557=((sj1)*(sj6));
IkReal x1558=((cj6)*(r00));
IkReal x1559=((cj1)*(sj6));
IkReal x1560=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((((IkReal(-1.00000000000000))*(cj2)*(r20)*(x1560)))+(((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x1558)))+(((r11)*(sj2)*(x1557)))+(((cj2)*(r21)*(sj6)))+(((r01)*(sj2)*(x1559)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(sj2)*(x1560))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r11)*(x1559)))+(((sj1)*(x1558)))+(((IkReal(-1.00000000000000))*(r01)*(x1557)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x1560))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj2)*(r20)*(x1560)))+(((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x1558)))+(((r11)*(sj2)*(x1557)))+(((cj2)*(r21)*(sj6)))+(((r01)*(sj2)*(x1559)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(sj2)*(x1560)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r11)*(x1559)))+(((sj1)*(x1558)))+(((IkReal(-1.00000000000000))*(r01)*(x1557)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x1560)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj2)*(r20)*(x1560)))+(((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x1558)))+(((r11)*(sj2)*(x1557)))+(((cj2)*(r21)*(sj6)))+(((r01)*(sj2)*(x1559)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(sj2)*(x1560)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r11)*(x1559)))+(((sj1)*(x1558)))+(((IkReal(-1.00000000000000))*(r01)*(x1557)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x1560)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1561=IKsin(j4);
IkReal x1562=IKcos(j4);
IkReal x1563=((cj2)*(sj6));
IkReal x1564=((cj1)*(r00));
IkReal x1565=((IkReal(1.00000000000000))*(r21));
IkReal x1566=((cj6)*(sj2));
IkReal x1567=((IkReal(1.00000000000000))*(cj6));
IkReal x1568=((cj1)*(r11));
IkReal x1569=((r00)*(sj1));
IkReal x1570=((r10)*(sj1));
IkReal x1571=((sj2)*(sj6));
IkReal x1572=((IkReal(1.00000000000000))*(r20));
IkReal x1573=((cj2)*(cj6));
IkReal x1574=((cj1)*(r01));
IkReal x1575=((cj1)*(r10));
IkReal x1576=((r11)*(sj1));
IkReal x1577=((IkReal(1.00000000000000))*(sj6));
IkReal x1578=((r01)*(sj1));
evalcond[0]=((((sj6)*(x1569)))+(((IkReal(-1.00000000000000))*(x1575)*(x1577)))+(((cj6)*(x1578)))+(((IkReal(-1.00000000000000))*(x1567)*(x1568)))+(((sj3)*(x1561))));
evalcond[1]=((((cj6)*(x1575)))+(((IkReal(-1.00000000000000))*(x1567)*(x1569)))+(((IkReal(-1.00000000000000))*(x1568)*(x1577)))+(((sj6)*(x1578)))+(((sj3)*(x1562))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1571)*(x1572)))+(((IkReal(-1.00000000000000))*(x1565)*(x1566)))+(((x1573)*(x1576)))+(((x1573)*(x1574)))+(((cj3)*(x1561)))+(((x1563)*(x1570)))+(((x1563)*(x1564))));
evalcond[3]=((((r20)*(x1573)))+(((x1566)*(x1570)))+(((IkReal(-1.00000000000000))*(x1571)*(x1574)))+(((IkReal(-1.00000000000000))*(x1571)*(x1576)))+(((IkReal(-1.00000000000000))*(x1563)*(x1565)))+(x1561)+(((x1564)*(x1566))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1565)*(x1573)))+(((IkReal(-1.00000000000000))*(x1570)*(x1571)))+(((IkReal(-1.00000000000000))*(x1563)*(x1572)))+(((IkReal(-1.00000000000000))*(x1566)*(x1574)))+(((IkReal(-1.00000000000000))*(x1566)*(x1576)))+(((IkReal(-1.00000000000000))*(x1564)*(x1571)))+(((IkReal(-1.00000000000000))*(x1562))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1565)*(x1571)))+(((r20)*(x1566)))+(((IkReal(-1.00000000000000))*(cj2)*(x1567)*(x1570)))+(((IkReal(-1.00000000000000))*(cj2)*(x1564)*(x1567)))+(((cj3)*(x1562)))+(((x1563)*(x1576)))+(((x1563)*(x1574))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1579=((IkReal(1.00000000000000))*(cj6));
IkReal x1580=((cj1)*(r10));
IkReal x1581=((r01)*(sj1));
IkReal x1582=((r00)*(sj1));
IkReal x1583=((cj1)*(r11));
IkReal x1584=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((gconst16)*(((((cj6)*(x1583)))+(((IkReal(-1.00000000000000))*(x1579)*(x1581)))+(((sj6)*(x1580)))+(((IkReal(-1.00000000000000))*(x1582)*(x1584))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((cj6)*(x1582)))+(((IkReal(-1.00000000000000))*(x1579)*(x1580)))+(((IkReal(-1.00000000000000))*(x1581)*(x1584)))+(((sj6)*(x1583))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst16)*(((((cj6)*(x1583)))+(((IkReal(-1.00000000000000))*(x1579)*(x1581)))+(((sj6)*(x1580)))+(((IkReal(-1.00000000000000))*(x1582)*(x1584)))))), ((gconst16)*(((((cj6)*(x1582)))+(((IkReal(-1.00000000000000))*(x1579)*(x1580)))+(((IkReal(-1.00000000000000))*(x1581)*(x1584)))+(((sj6)*(x1583)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1585=IKsin(j4);
IkReal x1586=IKcos(j4);
IkReal x1587=((cj2)*(sj6));
IkReal x1588=((cj1)*(r00));
IkReal x1589=((IkReal(1.00000000000000))*(r21));
IkReal x1590=((cj6)*(sj2));
IkReal x1591=((IkReal(1.00000000000000))*(cj6));
IkReal x1592=((cj1)*(r11));
IkReal x1593=((r00)*(sj1));
IkReal x1594=((r10)*(sj1));
IkReal x1595=((sj2)*(sj6));
IkReal x1596=((IkReal(1.00000000000000))*(r20));
IkReal x1597=((cj2)*(cj6));
IkReal x1598=((cj1)*(r01));
IkReal x1599=((cj1)*(r10));
IkReal x1600=((r11)*(sj1));
IkReal x1601=((IkReal(1.00000000000000))*(sj6));
IkReal x1602=((r01)*(sj1));
evalcond[0]=((((sj3)*(x1585)))+(((IkReal(-1.00000000000000))*(x1599)*(x1601)))+(((IkReal(-1.00000000000000))*(x1591)*(x1592)))+(((cj6)*(x1602)))+(((sj6)*(x1593))));
evalcond[1]=((((sj3)*(x1586)))+(((sj6)*(x1602)))+(((IkReal(-1.00000000000000))*(x1592)*(x1601)))+(((cj6)*(x1599)))+(((IkReal(-1.00000000000000))*(x1591)*(x1593))));
evalcond[2]=((((x1587)*(x1588)))+(((x1587)*(x1594)))+(((IkReal(-1.00000000000000))*(x1595)*(x1596)))+(((cj3)*(x1585)))+(((IkReal(-1.00000000000000))*(x1589)*(x1590)))+(((x1597)*(x1598)))+(((x1597)*(x1600))));
evalcond[3]=((((x1590)*(x1594)))+(((r20)*(x1597)))+(((x1588)*(x1590)))+(((IkReal(-1.00000000000000))*(x1595)*(x1600)))+(x1585)+(((IkReal(-1.00000000000000))*(x1595)*(x1598)))+(((IkReal(-1.00000000000000))*(x1587)*(x1589))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1590)*(x1600)))+(((IkReal(-1.00000000000000))*(x1589)*(x1597)))+(((IkReal(-1.00000000000000))*(x1586)))+(((IkReal(-1.00000000000000))*(x1590)*(x1598)))+(((IkReal(-1.00000000000000))*(x1594)*(x1595)))+(((IkReal(-1.00000000000000))*(x1587)*(x1596)))+(((IkReal(-1.00000000000000))*(x1588)*(x1595))));
evalcond[5]=((((x1587)*(x1598)))+(((r20)*(x1590)))+(((x1587)*(x1600)))+(((IkReal(-1.00000000000000))*(cj2)*(x1591)*(x1594)))+(((cj3)*(x1586)))+(((IkReal(-1.00000000000000))*(x1589)*(x1595)))+(((IkReal(-1.00000000000000))*(cj2)*(x1588)*(x1591))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1603=((IkReal(1.00000000000000))*(cj6));
IkReal x1604=((cj1)*(r10));
IkReal x1605=((r01)*(sj1));
IkReal x1606=((cj1)*(r11));
IkReal x1607=((IkReal(1.00000000000000))*(sj6));
IkReal x1608=((r00)*(sj1));
if( IKabs(((gconst15)*(((((IkReal(-1.00000000000000))*(x1607)*(x1608)))+(((sj6)*(x1604)))+(((cj6)*(x1606)))+(((IkReal(-1.00000000000000))*(x1603)*(x1605))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((sj6)*(x1606)))+(((IkReal(-1.00000000000000))*(x1605)*(x1607)))+(((cj6)*(x1608)))+(((IkReal(-1.00000000000000))*(x1603)*(x1604))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst15)*(((((IkReal(-1.00000000000000))*(x1607)*(x1608)))+(((sj6)*(x1604)))+(((cj6)*(x1606)))+(((IkReal(-1.00000000000000))*(x1603)*(x1605)))))), ((gconst15)*(((((sj6)*(x1606)))+(((IkReal(-1.00000000000000))*(x1605)*(x1607)))+(((cj6)*(x1608)))+(((IkReal(-1.00000000000000))*(x1603)*(x1604)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x1609=((cj1)*(r10));
IkReal x1610=((r00)*(sj1));
IkReal x1611=((r01)*(sj1));
IkReal x1612=((IkReal(1.00000000000000))*(cj1)*(r11));
evalcond[0]=((((sj6)*(x1610)))+(((cj6)*(x1611)))+(((IkReal(-1.00000000000000))*(sj6)*(x1609)))+(((sj3)*(IKsin(j4))))+(((IkReal(-1.00000000000000))*(cj6)*(x1612))));
evalcond[1]=((((sj6)*(x1611)))+(((sj3)*(IKcos(j4))))+(((cj6)*(x1609)))+(((IkReal(-1.00000000000000))*(cj6)*(x1610)))+(((IkReal(-1.00000000000000))*(sj6)*(x1612))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst17;
gconst17=IKsign(((((IkReal(-1.00000000000000))*((cj1)*(cj1))*((r02)*(r02))))+(((IkReal(-1.00000000000000))*((r12)*(r12))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj1)*(cj1))*((r02)*(r02))))+(((IkReal(-1.00000000000000))*((r12)*(r12))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-2.00000000000000))*(cj1)*(r02)*(r12)*(sj1))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst18;
IkReal x1613=((cj1)*(cj6));
IkReal x1614=((IkReal(1.00000000000000))*(r22));
IkReal x1615=((cj6)*(sj1));
IkReal x1616=((r22)*(sj6));
IkReal x1617=((IkReal(1.00000000000000))*(r21)*(sj6));
gconst18=IKsign(((((r12)*(r20)*(x1615)))+(((r11)*(sj1)*(x1616)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1617)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1617)))+(((IkReal(-1.00000000000000))*(r10)*(x1614)*(x1615)))+(((cj1)*(r01)*(x1616)))+(((IkReal(-1.00000000000000))*(r00)*(x1613)*(x1614)))+(((r02)*(r20)*(x1613)))));
IkReal x1618=((cj1)*(cj6));
IkReal x1619=((IkReal(1.00000000000000))*(r22));
IkReal x1620=((cj6)*(sj1));
IkReal x1621=((r22)*(sj6));
IkReal x1622=((IkReal(1.00000000000000))*(r21)*(sj6));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1622)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1622)))+(((r12)*(r20)*(x1620)))+(((r11)*(sj1)*(x1621)))+(((cj1)*(r01)*(x1621)))+(((IkReal(-1.00000000000000))*(r00)*(x1618)*(x1619)))+(((r02)*(r20)*(x1618)))+(((IkReal(-1.00000000000000))*(r10)*(x1619)*(x1620))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1623=((IkReal(1.00000000000000))*(sj4));
if( IKabs(((gconst18)*(r22)*(sj4))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst18)*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1623)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1623))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst18)*(r22)*(sj4)), ((gconst18)*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1623)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1623)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1624=IKsin(j2);
IkReal x1625=IKcos(j2);
IkReal x1626=((r11)*(sj6));
IkReal x1627=((cj6)*(r11));
IkReal x1628=((cj6)*(r20));
IkReal x1629=((IkReal(1.00000000000000))*(sj6));
IkReal x1630=((cj1)*(r00));
IkReal x1631=((cj1)*(r01));
IkReal x1632=((IkReal(1.00000000000000))*(cj6));
IkReal x1633=((cj1)*(r02));
IkReal x1634=((sj1)*(x1624));
IkReal x1635=((sj1)*(x1625));
IkReal x1636=((r21)*(x1625));
IkReal x1637=((sj6)*(x1625));
IkReal x1638=((cj6)*(x1625));
IkReal x1639=((r21)*(x1624));
evalcond[0]=((((r12)*(x1634)))+(((x1624)*(x1633)))+(((r22)*(x1625))));
evalcond[1]=((sj3)+(((r22)*(x1624)))+(((IkReal(-1.00000000000000))*(x1625)*(x1633)))+(((IkReal(-1.00000000000000))*(r12)*(x1635))));
evalcond[2]=((((x1627)*(x1635)))+(((IkReal(-1.00000000000000))*(x1632)*(x1639)))+(((r10)*(sj6)*(x1635)))+(((IkReal(-1.00000000000000))*(r20)*(x1624)*(x1629)))+(((x1631)*(x1638)))+(((x1630)*(x1637)))+(((cj3)*(sj4))));
evalcond[3]=((sj4)+(((IkReal(-1.00000000000000))*(x1626)*(x1634)))+(((IkReal(-1.00000000000000))*(x1624)*(x1629)*(x1631)))+(((cj6)*(x1624)*(x1630)))+(((IkReal(-1.00000000000000))*(x1629)*(x1636)))+(((x1625)*(x1628)))+(((cj6)*(r10)*(x1634))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r10)*(x1629)*(x1634)))+(((IkReal(-1.00000000000000))*(x1627)*(x1634)))+(((IkReal(-1.00000000000000))*(x1624)*(x1629)*(x1630)))+(((IkReal(-1.00000000000000))*(x1624)*(x1631)*(x1632)))+(((IkReal(-1.00000000000000))*(x1632)*(x1636)))+(((IkReal(-1.00000000000000))*(r20)*(x1625)*(x1629)))+(((IkReal(-1.00000000000000))*(cj4))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1625)*(x1630)*(x1632)))+(((cj3)*(cj4)))+(((IkReal(-1.00000000000000))*(r10)*(x1632)*(x1635)))+(((IkReal(-1.00000000000000))*(x1629)*(x1639)))+(((x1631)*(x1637)))+(((x1624)*(x1628)))+(((x1626)*(x1635))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1640=((IkReal(1.00000000000000))*(sj3));
if( IKabs(((gconst17)*(r22)*(sj3))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1640)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1640))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst17)*(r22)*(sj3)), ((gconst17)*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1640)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1640)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1641=IKsin(j2);
IkReal x1642=IKcos(j2);
IkReal x1643=((r11)*(sj6));
IkReal x1644=((cj6)*(r11));
IkReal x1645=((cj6)*(r20));
IkReal x1646=((IkReal(1.00000000000000))*(sj6));
IkReal x1647=((cj1)*(r00));
IkReal x1648=((cj1)*(r01));
IkReal x1649=((IkReal(1.00000000000000))*(cj6));
IkReal x1650=((cj1)*(r02));
IkReal x1651=((sj1)*(x1641));
IkReal x1652=((sj1)*(x1642));
IkReal x1653=((r21)*(x1642));
IkReal x1654=((sj6)*(x1642));
IkReal x1655=((cj6)*(x1642));
IkReal x1656=((r21)*(x1641));
evalcond[0]=((((r12)*(x1651)))+(((x1641)*(x1650)))+(((r22)*(x1642))));
evalcond[1]=((sj3)+(((IkReal(-1.00000000000000))*(r12)*(x1652)))+(((r22)*(x1641)))+(((IkReal(-1.00000000000000))*(x1642)*(x1650))));
evalcond[2]=((((x1648)*(x1655)))+(((x1647)*(x1654)))+(((x1644)*(x1652)))+(((IkReal(-1.00000000000000))*(x1649)*(x1656)))+(((IkReal(-1.00000000000000))*(r20)*(x1641)*(x1646)))+(((r10)*(sj6)*(x1652)))+(((cj3)*(sj4))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1643)*(x1651)))+(((cj6)*(r10)*(x1651)))+(sj4)+(((cj6)*(x1641)*(x1647)))+(((IkReal(-1.00000000000000))*(x1646)*(x1653)))+(((IkReal(-1.00000000000000))*(x1641)*(x1646)*(x1648)))+(((x1642)*(x1645))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1641)*(x1648)*(x1649)))+(((IkReal(-1.00000000000000))*(x1644)*(x1651)))+(((IkReal(-1.00000000000000))*(r20)*(x1642)*(x1646)))+(((IkReal(-1.00000000000000))*(x1641)*(x1646)*(x1647)))+(((IkReal(-1.00000000000000))*(x1649)*(x1653)))+(((IkReal(-1.00000000000000))*(r10)*(x1646)*(x1651)))+(((IkReal(-1.00000000000000))*(cj4))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1642)*(x1647)*(x1649)))+(((x1648)*(x1654)))+(((cj3)*(cj4)))+(((IkReal(-1.00000000000000))*(x1646)*(x1656)))+(((IkReal(-1.00000000000000))*(r10)*(x1649)*(x1652)))+(((x1641)*(x1645)))+(((x1643)*(x1652))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x1657=((IkReal(1.00000000000000))*(sj6));
IkReal x1658=((IkReal(0.400000000000000))*(cj6));
IkReal x1659=((r00)*(sj1));
IkReal x1660=((cj1)*(r11));
IkReal x1661=((r02)*(sj1));
IkReal x1662=((cj1)*(r10));
IkReal x1663=((IkReal(0.400000000000000))*(sj6));
IkReal x1664=((cj1)*(r12));
IkReal x1665=((r01)*(sj1));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(((IkReal(-0.400000000000000))*(x1664)))+(npz)+(((IkReal(0.400000000000000))*(x1661))));
evalcond[2]=((cj3)+(x1664)+(((IkReal(-1.00000000000000))*(x1661))));
evalcond[3]=((IkReal(0.000500000000000000))+(((x1662)*(x1663)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((IkReal(-1.00000000000000))*(npx)*(x1657)))+(((x1658)*(x1660)))+(((IkReal(-1.00000000000000))*(x1658)*(x1665)))+(((IkReal(-1.00000000000000))*(x1659)*(x1663))));
evalcond[4]=((((x1660)*(x1663)))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x1663)*(x1665)))+(((IkReal(-1.00000000000000))*(npy)*(x1657)))+(((x1658)*(x1659)))+(((IkReal(-1.00000000000000))*(x1658)*(x1662))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst19;
gconst19=IKsign((((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1))))));
dummyeval[0]=(((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst20;
gconst20=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1666=((IkReal(1.00000000000000))*(sj6));
IkReal x1667=((r02)*(sj1));
IkReal x1668=((IkReal(1.00000000000000))*(cj6));
IkReal x1669=((cj1)*(r11));
IkReal x1670=((IkReal(0.400000000000000))*(sj1));
IkReal x1671=((cj6)*(r01));
IkReal x1672=((r00)*(sj6));
IkReal x1673=((cj1)*(r12));
IkReal x1674=((r01)*(sj6));
IkReal x1675=((cj6)*(r00)*(sj1));
IkReal x1676=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x1677=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(((IkReal(-0.400000000000000))*(x1673)))+(npz)+(((IkReal(0.400000000000000))*(x1667))));
evalcond[2]=((IkReal(1.00000000000000))+(x1673)+(((IkReal(-1.00000000000000))*(x1667))));
evalcond[3]=((((sj1)*(x1672)))+(((sj1)*(x1671)))+(((IkReal(-1.00000000000000))*(x1668)*(x1669)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x1666))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(0.400000000000000))*(cj6)*(x1669)))+(((IkReal(-1.00000000000000))*(npx)*(x1666)))+(((IkReal(-1.00000000000000))*(npy)*(x1668)))+(((IkReal(-1.00000000000000))*(x1670)*(x1672)))+(((IkReal(-1.00000000000000))*(x1670)*(x1671)))+(((r10)*(x1676))));
evalcond[5]=((((sj1)*(x1674)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x1668)))+(x1677)+(((IkReal(-1.00000000000000))*(x1666)*(x1669))));
evalcond[6]=((((cj6)*(npx)))+(((cj6)*(r00)*(x1670)))+(((IkReal(-0.400000000000000))*(x1677)))+(((IkReal(-1.00000000000000))*(npy)*(x1666)))+(((IkReal(-1.00000000000000))*(x1670)*(x1674)))+(((IkReal(0.400000000000000))*(sj6)*(x1669))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
if( IKabs(r22) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(r02)))+(((r12)*(sj1))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1678=IKatan2(r22, ((((cj1)*(r02)))+(((r12)*(sj1)))));
j2array[0]=((IkReal(-1.00000000000000))*(x1678));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x1678))));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[1];
IkReal x1679=IKcos(j2);
IkReal x1680=((IkReal(1.00000000000000))*(x1679));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1680)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1680)))+(((r22)*(IKsin(j2)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1681=((cj2)*(sj6));
IkReal x1682=((IkReal(1.00000000000000))*(sj1));
IkReal x1683=((r20)*(sj2));
IkReal x1684=((cj1)*(r01));
IkReal x1685=((cj2)*(cj6));
IkReal x1686=((r21)*(sj2));
IkReal x1687=((IkReal(1.00000000000000))*(cj1)*(r00));
if( IKabs(((((cj6)*(x1686)))+(((IkReal(-1.00000000000000))*(x1681)*(x1687)))+(((IkReal(-1.00000000000000))*(r10)*(x1681)*(x1682)))+(((sj6)*(x1683)))+(((IkReal(-1.00000000000000))*(x1684)*(x1685)))+(((IkReal(-1.00000000000000))*(r11)*(x1682)*(x1685))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(x1683)))+(((x1681)*(x1684)))+(((r11)*(sj1)*(x1681)))+(((IkReal(-1.00000000000000))*(x1685)*(x1687)))+(((IkReal(-1.00000000000000))*(r10)*(x1682)*(x1685)))+(((IkReal(-1.00000000000000))*(sj6)*(x1686))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj6)*(x1686)))+(((IkReal(-1.00000000000000))*(x1681)*(x1687)))+(((IkReal(-1.00000000000000))*(r10)*(x1681)*(x1682)))+(((sj6)*(x1683)))+(((IkReal(-1.00000000000000))*(x1684)*(x1685)))+(((IkReal(-1.00000000000000))*(r11)*(x1682)*(x1685)))))+IKsqr(((((cj6)*(x1683)))+(((x1681)*(x1684)))+(((r11)*(sj1)*(x1681)))+(((IkReal(-1.00000000000000))*(x1685)*(x1687)))+(((IkReal(-1.00000000000000))*(r10)*(x1682)*(x1685)))+(((IkReal(-1.00000000000000))*(sj6)*(x1686)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((cj6)*(x1686)))+(((IkReal(-1.00000000000000))*(x1681)*(x1687)))+(((IkReal(-1.00000000000000))*(r10)*(x1681)*(x1682)))+(((sj6)*(x1683)))+(((IkReal(-1.00000000000000))*(x1684)*(x1685)))+(((IkReal(-1.00000000000000))*(r11)*(x1682)*(x1685)))), ((((cj6)*(x1683)))+(((x1681)*(x1684)))+(((r11)*(sj1)*(x1681)))+(((IkReal(-1.00000000000000))*(x1685)*(x1687)))+(((IkReal(-1.00000000000000))*(r10)*(x1682)*(x1685)))+(((IkReal(-1.00000000000000))*(sj6)*(x1686)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1688=IKsin(j4);
IkReal x1689=((cj2)*(sj6));
IkReal x1690=((cj1)*(r00));
IkReal x1691=((IkReal(1.00000000000000))*(r21));
IkReal x1692=((cj6)*(sj2));
IkReal x1693=((r10)*(sj1));
IkReal x1694=((cj2)*(cj6));
IkReal x1695=((cj1)*(r01));
IkReal x1696=((r11)*(sj1));
IkReal x1697=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x1698=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x1698)))+(x1688)+(((IkReal(-1.00000000000000))*(x1691)*(x1692)))+(((x1689)*(x1690)))+(((x1689)*(x1693)))+(((x1694)*(x1696)))+(((x1694)*(x1695))));
evalcond[1]=((((r20)*(x1694)))+(((IkReal(-1.00000000000000))*(x1696)*(x1698)))+(((x1690)*(x1692)))+(((IkReal(-1.00000000000000))*(x1688)))+(((x1692)*(x1693)))+(((IkReal(-1.00000000000000))*(x1695)*(x1698)))+(((IkReal(-1.00000000000000))*(x1689)*(x1691))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1692)*(x1695)))+(((IkReal(-1.00000000000000))*(x1692)*(x1696)))+(((IkReal(-1.00000000000000))*(x1697)))+(((IkReal(-1.00000000000000))*(r20)*(x1689)))+(((IkReal(-1.00000000000000))*(x1690)*(x1698)))+(((IkReal(-1.00000000000000))*(x1691)*(x1694)))+(((IkReal(-1.00000000000000))*(x1693)*(x1698))));
evalcond[3]=((((r20)*(x1692)))+(((IkReal(-1.00000000000000))*(x1697)))+(((IkReal(-1.00000000000000))*(x1693)*(x1694)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x1691)))+(((x1689)*(x1696)))+(((x1689)*(x1695)))+(((IkReal(-1.00000000000000))*(x1690)*(x1694))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

} else
{
IkReal x1699=((IkReal(1.00000000000000))*(sj6));
IkReal x1700=((r02)*(sj1));
IkReal x1701=((IkReal(1.00000000000000))*(cj6));
IkReal x1702=((cj1)*(r11));
IkReal x1703=((IkReal(0.400000000000000))*(sj1));
IkReal x1704=((cj6)*(r01));
IkReal x1705=((r00)*(sj6));
IkReal x1706=((cj1)*(r12));
IkReal x1707=((r01)*(sj6));
IkReal x1708=((cj6)*(r00)*(sj1));
IkReal x1709=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x1710=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(((IkReal(0.400000000000000))*(x1700)))+(npz)+(((IkReal(-0.400000000000000))*(x1706))));
evalcond[2]=((IkReal(-1.00000000000000))+(x1706)+(((IkReal(-1.00000000000000))*(x1700))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x1699)))+(((IkReal(-1.00000000000000))*(x1701)*(x1702)))+(((sj1)*(x1705)))+(((sj1)*(x1704))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x1699)))+(((IkReal(-1.00000000000000))*(npy)*(x1701)))+(((IkReal(0.400000000000000))*(cj6)*(x1702)))+(((r10)*(x1709)))+(((IkReal(-1.00000000000000))*(x1703)*(x1704)))+(((IkReal(-1.00000000000000))*(x1703)*(x1705))));
evalcond[5]=((x1710)+(((IkReal(-1.00000000000000))*(x1699)*(x1702)))+(((sj1)*(x1707)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x1701))));
evalcond[6]=((((cj6)*(npx)))+(((cj6)*(r00)*(x1703)))+(((IkReal(-1.00000000000000))*(npy)*(x1699)))+(((IkReal(-0.400000000000000))*(x1710)))+(((IkReal(0.400000000000000))*(sj6)*(x1702)))+(((IkReal(-1.00000000000000))*(x1703)*(x1707))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
if( IKabs(r22) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(r02)))+(((r12)*(sj1))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1711=IKatan2(r22, ((((cj1)*(r02)))+(((r12)*(sj1)))));
j2array[0]=((IkReal(-1.00000000000000))*(x1711));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x1711))));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[1];
IkReal x1712=IKcos(j2);
IkReal x1713=((IkReal(1.00000000000000))*(x1712));
evalcond[0]=((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1713)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1713)))+(((r22)*(IKsin(j2)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1714=((cj1)*(cj2));
IkReal x1715=((sj2)*(sj6));
IkReal x1716=((IkReal(1.00000000000000))*(sj6));
IkReal x1717=((IkReal(1.00000000000000))*(cj6)*(sj2));
IkReal x1718=((cj2)*(r10)*(sj1));
IkReal x1719=((cj2)*(r11)*(sj1));
if( IKabs(((((cj6)*(r01)*(x1714)))+(((IkReal(-1.00000000000000))*(r21)*(x1717)))+(((sj6)*(x1718)))+(((IkReal(-1.00000000000000))*(r20)*(x1715)))+(((cj6)*(x1719)))+(((r00)*(sj6)*(x1714))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1716)*(x1719)))+(((IkReal(-1.00000000000000))*(r01)*(x1714)*(x1716)))+(((IkReal(-1.00000000000000))*(r20)*(x1717)))+(((r21)*(x1715)))+(((cj6)*(x1718)))+(((cj6)*(r00)*(x1714))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj6)*(r01)*(x1714)))+(((IkReal(-1.00000000000000))*(r21)*(x1717)))+(((sj6)*(x1718)))+(((IkReal(-1.00000000000000))*(r20)*(x1715)))+(((cj6)*(x1719)))+(((r00)*(sj6)*(x1714)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1716)*(x1719)))+(((IkReal(-1.00000000000000))*(r01)*(x1714)*(x1716)))+(((IkReal(-1.00000000000000))*(r20)*(x1717)))+(((r21)*(x1715)))+(((cj6)*(x1718)))+(((cj6)*(r00)*(x1714)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((cj6)*(r01)*(x1714)))+(((IkReal(-1.00000000000000))*(r21)*(x1717)))+(((sj6)*(x1718)))+(((IkReal(-1.00000000000000))*(r20)*(x1715)))+(((cj6)*(x1719)))+(((r00)*(sj6)*(x1714)))), ((((IkReal(-1.00000000000000))*(x1716)*(x1719)))+(((IkReal(-1.00000000000000))*(r01)*(x1714)*(x1716)))+(((IkReal(-1.00000000000000))*(r20)*(x1717)))+(((r21)*(x1715)))+(((cj6)*(x1718)))+(((cj6)*(r00)*(x1714)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1720=IKcos(j4);
IkReal x1721=((cj2)*(sj6));
IkReal x1722=((cj1)*(r00));
IkReal x1723=((IkReal(1.00000000000000))*(r21));
IkReal x1724=((cj6)*(sj2));
IkReal x1725=((r10)*(sj1));
IkReal x1726=((cj2)*(cj6));
IkReal x1727=((cj1)*(r01));
IkReal x1728=((r11)*(sj1));
IkReal x1729=((IkReal(1.00000000000000))*(IKsin(j4)));
IkReal x1730=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((x1726)*(x1728)))+(((x1726)*(x1727)))+(((x1721)*(x1725)))+(((x1721)*(x1722)))+(((IkReal(-1.00000000000000))*(x1723)*(x1724)))+(((IkReal(-1.00000000000000))*(x1729)))+(((IkReal(-1.00000000000000))*(r20)*(x1730))));
evalcond[1]=((((x1722)*(x1724)))+(((x1724)*(x1725)))+(((IkReal(-1.00000000000000))*(x1728)*(x1730)))+(((IkReal(-1.00000000000000))*(x1729)))+(((r20)*(x1726)))+(((IkReal(-1.00000000000000))*(x1727)*(x1730)))+(((IkReal(-1.00000000000000))*(x1721)*(x1723))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x1721)))+(((IkReal(-1.00000000000000))*(x1722)*(x1730)))+(((IkReal(-1.00000000000000))*(x1723)*(x1726)))+(((IkReal(-1.00000000000000))*(x1725)*(x1730)))+(((IkReal(-1.00000000000000))*(x1720)))+(((IkReal(-1.00000000000000))*(x1724)*(x1727)))+(((IkReal(-1.00000000000000))*(x1724)*(x1728))));
evalcond[3]=((x1720)+(((x1721)*(x1727)))+(((x1721)*(x1728)))+(((IkReal(-1.00000000000000))*(x1722)*(x1726)))+(((IkReal(-1.00000000000000))*(x1725)*(x1726)))+(((r20)*(x1724)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x1723))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1731=((cj1)*(sj6));
IkReal x1732=((cj1)*(cj6));
IkReal x1733=((sj1)*(sj6));
IkReal x1734=((IkReal(1.00000000000000))*(cj6)*(sj1));
if( IKabs(((gconst20)*(((((r10)*(x1731)))+(((IkReal(-1.00000000000000))*(r01)*(x1734)))+(((r11)*(x1732)))+(((IkReal(-1.00000000000000))*(r00)*(x1733))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst20)*(((((r01)*(x1733)))+(((IkReal(-1.00000000000000))*(r11)*(x1731)))+(((r10)*(x1732)))+(((IkReal(-1.00000000000000))*(r00)*(x1734))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst20)*(((((r10)*(x1731)))+(((IkReal(-1.00000000000000))*(r01)*(x1734)))+(((r11)*(x1732)))+(((IkReal(-1.00000000000000))*(r00)*(x1733)))))), ((gconst20)*(((((r01)*(x1733)))+(((IkReal(-1.00000000000000))*(r11)*(x1731)))+(((r10)*(x1732)))+(((IkReal(-1.00000000000000))*(r00)*(x1734)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x1735=((cj1)*(r10));
IkReal x1736=((r00)*(sj1));
IkReal x1737=((r01)*(sj1));
IkReal x1738=((IkReal(1.00000000000000))*(cj1)*(r11));
evalcond[0]=((((sj6)*(x1736)))+(((IkReal(-1.00000000000000))*(sj6)*(x1735)))+(((cj6)*(x1737)))+(((IkReal(-1.00000000000000))*(cj6)*(x1738)))+(((sj3)*(IKsin(j4)))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj6)*(x1736)))+(((IkReal(-1.00000000000000))*(sj3)*(IKcos(j4))))+(((sj6)*(x1737)))+(((cj6)*(x1735)))+(((IkReal(-1.00000000000000))*(sj6)*(x1738))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst21;
gconst21=IKsign((((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1))))));
dummyeval[0]=(((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst22;
IkReal x1739=(sj1)*(sj1);
IkReal x1740=(cj1)*(cj1);
IkReal x1741=((r10)*(sj6));
IkReal x1742=((cj1)*(sj1));
IkReal x1743=((r00)*(sj6));
IkReal x1744=((r12)*(x1739));
IkReal x1745=((cj6)*(x1742));
IkReal x1746=((r02)*(x1740));
gconst22=IKsign(((((cj6)*(r11)*(x1744)))+(((r02)*(x1741)*(x1742)))+(((cj6)*(r21)*(r22)))+(((cj6)*(r01)*(x1746)))+(((r20)*(r22)*(sj6)))+(((r02)*(r11)*(x1745)))+(((r12)*(x1742)*(x1743)))+(((x1743)*(x1746)))+(((x1741)*(x1744)))+(((r01)*(r12)*(x1745)))));
IkReal x1747=(sj1)*(sj1);
IkReal x1748=(cj1)*(cj1);
IkReal x1749=((r10)*(sj6));
IkReal x1750=((cj1)*(sj1));
IkReal x1751=((r00)*(sj6));
IkReal x1752=((r12)*(x1747));
IkReal x1753=((cj6)*(x1750));
IkReal x1754=((r02)*(x1748));
dummyeval[0]=((((r01)*(r12)*(x1753)))+(((x1749)*(x1752)))+(((cj6)*(r11)*(x1752)))+(((cj6)*(r21)*(r22)))+(((r20)*(r22)*(sj6)))+(((r02)*(r11)*(x1753)))+(((cj6)*(r01)*(x1754)))+(((r02)*(x1749)*(x1750)))+(((r12)*(x1750)*(x1751)))+(((x1751)*(x1754))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1755=((IkReal(1.00000000000000))*(cj3)*(sj4));
if( IKabs(((cj3)*(gconst22)*(r22)*(sj4))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst22)*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1755)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1755))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((cj3)*(gconst22)*(r22)*(sj4)), ((gconst22)*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1755)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1755)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1756=IKsin(j2);
IkReal x1757=IKcos(j2);
IkReal x1758=((r11)*(sj6));
IkReal x1759=((cj6)*(r11));
IkReal x1760=((IkReal(1.00000000000000))*(cj4));
IkReal x1761=((cj6)*(r20));
IkReal x1762=((IkReal(1.00000000000000))*(sj6));
IkReal x1763=((cj1)*(r00));
IkReal x1764=((cj1)*(r01));
IkReal x1765=((IkReal(1.00000000000000))*(cj6));
IkReal x1766=((cj1)*(r02));
IkReal x1767=((sj1)*(x1756));
IkReal x1768=((sj1)*(x1757));
IkReal x1769=((r21)*(x1757));
IkReal x1770=((sj6)*(x1757));
IkReal x1771=((cj6)*(x1757));
IkReal x1772=((r21)*(x1756));
evalcond[0]=((((r22)*(x1757)))+(((x1756)*(x1766)))+(((r12)*(x1767))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj3)))+(((r22)*(x1756)))+(((IkReal(-1.00000000000000))*(x1757)*(x1766)))+(((IkReal(-1.00000000000000))*(r12)*(x1768))));
evalcond[2]=((((x1763)*(x1770)))+(((x1764)*(x1771)))+(((x1759)*(x1768)))+(((r10)*(sj6)*(x1768)))+(((IkReal(-1.00000000000000))*(x1765)*(x1772)))+(((IkReal(-1.00000000000000))*(r20)*(x1756)*(x1762)))+(((cj3)*(sj4))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1762)*(x1769)))+(((IkReal(-1.00000000000000))*(sj4)))+(((cj6)*(x1756)*(x1763)))+(((cj6)*(r10)*(x1767)))+(((x1757)*(x1761)))+(((IkReal(-1.00000000000000))*(x1758)*(x1767)))+(((IkReal(-1.00000000000000))*(x1756)*(x1762)*(x1764))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1759)*(x1767)))+(((IkReal(-1.00000000000000))*(x1760)))+(((IkReal(-1.00000000000000))*(x1756)*(x1764)*(x1765)))+(((IkReal(-1.00000000000000))*(x1765)*(x1769)))+(((IkReal(-1.00000000000000))*(r10)*(x1762)*(x1767)))+(((IkReal(-1.00000000000000))*(r20)*(x1757)*(x1762)))+(((IkReal(-1.00000000000000))*(x1756)*(x1762)*(x1763))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x1765)*(x1768)))+(((IkReal(-1.00000000000000))*(x1762)*(x1772)))+(((IkReal(-1.00000000000000))*(cj3)*(x1760)))+(((x1764)*(x1770)))+(((IkReal(-1.00000000000000))*(x1757)*(x1763)*(x1765)))+(((x1756)*(x1761)))+(((x1758)*(x1768))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1773=((IkReal(1.00000000000000))*(sj3));
if( IKabs(((gconst21)*(r22)*(sj3))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1773)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1773))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst21)*(r22)*(sj3)), ((gconst21)*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1773)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1773)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1774=IKsin(j2);
IkReal x1775=IKcos(j2);
IkReal x1776=((r11)*(sj6));
IkReal x1777=((cj6)*(r11));
IkReal x1778=((IkReal(1.00000000000000))*(cj4));
IkReal x1779=((cj6)*(r20));
IkReal x1780=((IkReal(1.00000000000000))*(sj6));
IkReal x1781=((cj1)*(r00));
IkReal x1782=((cj1)*(r01));
IkReal x1783=((IkReal(1.00000000000000))*(cj6));
IkReal x1784=((cj1)*(r02));
IkReal x1785=((sj1)*(x1774));
IkReal x1786=((sj1)*(x1775));
IkReal x1787=((r21)*(x1775));
IkReal x1788=((sj6)*(x1775));
IkReal x1789=((cj6)*(x1775));
IkReal x1790=((r21)*(x1774));
evalcond[0]=((((r22)*(x1775)))+(((x1774)*(x1784)))+(((r12)*(x1785))));
evalcond[1]=((((r22)*(x1774)))+(((IkReal(-1.00000000000000))*(sj3)))+(((IkReal(-1.00000000000000))*(r12)*(x1786)))+(((IkReal(-1.00000000000000))*(x1775)*(x1784))));
evalcond[2]=((((x1782)*(x1789)))+(((r10)*(sj6)*(x1786)))+(((x1777)*(x1786)))+(((IkReal(-1.00000000000000))*(r20)*(x1774)*(x1780)))+(((x1781)*(x1788)))+(((cj3)*(sj4)))+(((IkReal(-1.00000000000000))*(x1783)*(x1790))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj4)))+(((IkReal(-1.00000000000000))*(x1774)*(x1780)*(x1782)))+(((cj6)*(r10)*(x1785)))+(((IkReal(-1.00000000000000))*(x1776)*(x1785)))+(((x1775)*(x1779)))+(((IkReal(-1.00000000000000))*(x1780)*(x1787)))+(((cj6)*(x1774)*(x1781))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1783)*(x1787)))+(((IkReal(-1.00000000000000))*(x1774)*(x1780)*(x1781)))+(((IkReal(-1.00000000000000))*(r20)*(x1775)*(x1780)))+(((IkReal(-1.00000000000000))*(x1777)*(x1785)))+(((IkReal(-1.00000000000000))*(x1774)*(x1782)*(x1783)))+(((IkReal(-1.00000000000000))*(r10)*(x1780)*(x1785)))+(((IkReal(-1.00000000000000))*(x1778))));
evalcond[5]=((((x1782)*(x1788)))+(((IkReal(-1.00000000000000))*(cj3)*(x1778)))+(((IkReal(-1.00000000000000))*(x1775)*(x1781)*(x1783)))+(((IkReal(-1.00000000000000))*(r10)*(x1783)*(x1786)))+(((x1776)*(x1786)))+(((x1774)*(x1779)))+(((IkReal(-1.00000000000000))*(x1780)*(x1790))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1791=((IkReal(1.00000000000000))*(sj3));
if( IKabs(((gconst19)*(r22)*(sj3))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst19)*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1791)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1791))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst19)*(r22)*(sj3)), ((gconst19)*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1791)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x1791)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x1792=IKsin(j2);
IkReal x1793=IKcos(j2);
IkReal x1794=((r12)*(sj1));
IkReal x1795=((cj1)*(r02));
IkReal x1796=((IkReal(1.00000000000000))*(x1793));
evalcond[0]=((((r22)*(x1793)))+(((x1792)*(x1795)))+(((x1792)*(x1794))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1795)*(x1796)))+(((IkReal(-1.00000000000000))*(sj3)))+(((r22)*(x1792)))+(((IkReal(-1.00000000000000))*(x1794)*(x1796))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst23;
gconst23=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj3;
dummyeval[1]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x1797=((IkReal(1.00000000000000))*(sj6));
IkReal x1798=((IkReal(1.00000000000000))*(r02));
IkReal x1799=((cj1)*(r11));
IkReal x1800=((IkReal(1.00000000000000))*(cj6));
IkReal x1801=((IkReal(0.400000000000000))*(sj6));
IkReal x1802=((r00)*(sj1));
IkReal x1803=((cj1)*(r12));
IkReal x1804=((r12)*(sj1));
IkReal x1805=((r01)*(sj1));
IkReal x1806=((cj1)*(r10));
IkReal x1807=((cj6)*(x1802));
IkReal x1808=((cj6)*(x1805));
IkReal x1809=((cj6)*(x1806));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(((IkReal(-0.400000000000000))*(x1803)))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1))));
evalcond[2]=((((cj2)*(r22)))+(((sj2)*(x1804)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((IkReal(1.00000000000000))+(x1803)+(((IkReal(-1.00000000000000))*(sj1)*(x1798))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj2)*(x1804)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(x1798))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1797)*(x1806)))+(((IkReal(-1.00000000000000))*(x1799)*(x1800)))+(x1808)+(((sj6)*(x1802))));
evalcond[6]=((IkReal(0.000500000000000000))+(((x1801)*(x1806)))+(((IkReal(0.400000000000000))*(cj6)*(x1799)))+(((IkReal(-0.400000000000000))*(x1808)))+(((IkReal(-1.00000000000000))*(x1801)*(x1802)))+(((IkReal(-1.00000000000000))*(npx)*(x1797)))+(((IkReal(-1.00000000000000))*(npy)*(x1800))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1800)*(x1802)))+(x1809)+(((sj6)*(x1805)))+(((IkReal(-1.00000000000000))*(x1797)*(x1799))));
evalcond[8]=((((cj6)*(npx)))+(((x1799)*(x1801)))+(((IkReal(-0.400000000000000))*(x1809)))+(((IkReal(-1.00000000000000))*(x1801)*(x1805)))+(((IkReal(0.400000000000000))*(x1807)))+(((IkReal(-1.00000000000000))*(npy)*(x1797))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1810=((cj2)*(sj6));
IkReal x1811=((IkReal(1.00000000000000))*(sj1));
IkReal x1812=((r20)*(sj2));
IkReal x1813=((cj1)*(r01));
IkReal x1814=((cj2)*(cj6));
IkReal x1815=((r21)*(sj2));
IkReal x1816=((IkReal(1.00000000000000))*(cj1)*(r00));
if( IKabs(((((IkReal(-1.00000000000000))*(r11)*(x1811)*(x1814)))+(((IkReal(-1.00000000000000))*(x1813)*(x1814)))+(((IkReal(-1.00000000000000))*(r10)*(x1810)*(x1811)))+(((IkReal(-1.00000000000000))*(x1810)*(x1816)))+(((cj6)*(x1815)))+(((sj6)*(x1812))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(sj6)*(x1815)))+(((cj6)*(x1812)))+(((r11)*(sj1)*(x1810)))+(((IkReal(-1.00000000000000))*(x1814)*(x1816)))+(((IkReal(-1.00000000000000))*(r10)*(x1811)*(x1814)))+(((x1810)*(x1813))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r11)*(x1811)*(x1814)))+(((IkReal(-1.00000000000000))*(x1813)*(x1814)))+(((IkReal(-1.00000000000000))*(r10)*(x1810)*(x1811)))+(((IkReal(-1.00000000000000))*(x1810)*(x1816)))+(((cj6)*(x1815)))+(((sj6)*(x1812)))))+IKsqr(((((IkReal(-1.00000000000000))*(sj6)*(x1815)))+(((cj6)*(x1812)))+(((r11)*(sj1)*(x1810)))+(((IkReal(-1.00000000000000))*(x1814)*(x1816)))+(((IkReal(-1.00000000000000))*(r10)*(x1811)*(x1814)))+(((x1810)*(x1813)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r11)*(x1811)*(x1814)))+(((IkReal(-1.00000000000000))*(x1813)*(x1814)))+(((IkReal(-1.00000000000000))*(r10)*(x1810)*(x1811)))+(((IkReal(-1.00000000000000))*(x1810)*(x1816)))+(((cj6)*(x1815)))+(((sj6)*(x1812)))), ((((IkReal(-1.00000000000000))*(sj6)*(x1815)))+(((cj6)*(x1812)))+(((r11)*(sj1)*(x1810)))+(((IkReal(-1.00000000000000))*(x1814)*(x1816)))+(((IkReal(-1.00000000000000))*(r10)*(x1811)*(x1814)))+(((x1810)*(x1813)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1817=IKsin(j4);
IkReal x1818=((cj2)*(sj6));
IkReal x1819=((cj1)*(r00));
IkReal x1820=((IkReal(1.00000000000000))*(r21));
IkReal x1821=((cj6)*(sj2));
IkReal x1822=((r10)*(sj1));
IkReal x1823=((cj2)*(cj6));
IkReal x1824=((cj1)*(r01));
IkReal x1825=((r11)*(sj1));
IkReal x1826=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x1827=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((x1818)*(x1819)))+(((x1818)*(x1822)))+(((x1823)*(x1824)))+(((x1823)*(x1825)))+(x1817)+(((IkReal(-1.00000000000000))*(x1820)*(x1821)))+(((IkReal(-1.00000000000000))*(r20)*(x1827))));
evalcond[1]=((((x1819)*(x1821)))+(((IkReal(-1.00000000000000))*(x1818)*(x1820)))+(((IkReal(-1.00000000000000))*(x1825)*(x1827)))+(((x1821)*(x1822)))+(((IkReal(-1.00000000000000))*(x1824)*(x1827)))+(((IkReal(-1.00000000000000))*(x1817)))+(((r20)*(x1823))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1826)))+(((IkReal(-1.00000000000000))*(x1819)*(x1827)))+(((IkReal(-1.00000000000000))*(x1821)*(x1825)))+(((IkReal(-1.00000000000000))*(x1821)*(x1824)))+(((IkReal(-1.00000000000000))*(x1822)*(x1827)))+(((IkReal(-1.00000000000000))*(x1820)*(x1823)))+(((IkReal(-1.00000000000000))*(r20)*(x1818))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1826)))+(((IkReal(-1.00000000000000))*(x1819)*(x1823)))+(((x1818)*(x1824)))+(((x1818)*(x1825)))+(((IkReal(-1.00000000000000))*(x1822)*(x1823)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x1820)))+(((r20)*(x1821))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1828=((IkReal(1.00000000000000))*(sj6));
IkReal x1829=((IkReal(1.00000000000000))*(r02));
IkReal x1830=((cj1)*(r11));
IkReal x1831=((IkReal(1.00000000000000))*(cj6));
IkReal x1832=((IkReal(0.400000000000000))*(sj6));
IkReal x1833=((r00)*(sj1));
IkReal x1834=((cj1)*(r12));
IkReal x1835=((r12)*(sj1));
IkReal x1836=((r01)*(sj1));
IkReal x1837=((cj1)*(r10));
IkReal x1838=((cj6)*(x1833));
IkReal x1839=((cj6)*(x1836));
IkReal x1840=((cj6)*(x1837));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(((IkReal(-0.400000000000000))*(x1834)))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1))));
evalcond[2]=((((sj2)*(x1835)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((IkReal(-1.00000000000000))+(x1834)+(((IkReal(-1.00000000000000))*(sj1)*(x1829))));
evalcond[4]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(x1829)))+(((IkReal(-1.00000000000000))*(cj2)*(x1835))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1828)*(x1837)))+(((sj6)*(x1833)))+(x1839)+(((IkReal(-1.00000000000000))*(x1830)*(x1831))));
evalcond[6]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x1831)))+(((IkReal(-1.00000000000000))*(x1832)*(x1833)))+(((IkReal(-0.400000000000000))*(x1839)))+(((IkReal(-1.00000000000000))*(npx)*(x1828)))+(((x1832)*(x1837)))+(((IkReal(0.400000000000000))*(cj6)*(x1830))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1828)*(x1830)))+(((sj6)*(x1836)))+(x1840)+(((IkReal(-1.00000000000000))*(x1831)*(x1833))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x1832)*(x1836)))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(x1828)))+(((IkReal(0.400000000000000))*(x1838)))+(((x1830)*(x1832)))+(((IkReal(-0.400000000000000))*(x1840))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1841=((cj1)*(cj2));
IkReal x1842=((sj2)*(sj6));
IkReal x1843=((IkReal(1.00000000000000))*(sj6));
IkReal x1844=((IkReal(1.00000000000000))*(cj6)*(sj2));
IkReal x1845=((cj2)*(r10)*(sj1));
IkReal x1846=((cj2)*(r11)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r20)*(x1842)))+(((sj6)*(x1845)))+(((cj6)*(x1846)))+(((r00)*(sj6)*(x1841)))+(((cj6)*(r01)*(x1841)))+(((IkReal(-1.00000000000000))*(r21)*(x1844))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r01)*(x1841)*(x1843)))+(((IkReal(-1.00000000000000))*(x1843)*(x1846)))+(((cj6)*(x1845)))+(((cj6)*(r00)*(x1841)))+(((IkReal(-1.00000000000000))*(r20)*(x1844)))+(((r21)*(x1842))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r20)*(x1842)))+(((sj6)*(x1845)))+(((cj6)*(x1846)))+(((r00)*(sj6)*(x1841)))+(((cj6)*(r01)*(x1841)))+(((IkReal(-1.00000000000000))*(r21)*(x1844)))))+IKsqr(((((IkReal(-1.00000000000000))*(r01)*(x1841)*(x1843)))+(((IkReal(-1.00000000000000))*(x1843)*(x1846)))+(((cj6)*(x1845)))+(((cj6)*(r00)*(x1841)))+(((IkReal(-1.00000000000000))*(r20)*(x1844)))+(((r21)*(x1842)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r20)*(x1842)))+(((sj6)*(x1845)))+(((cj6)*(x1846)))+(((r00)*(sj6)*(x1841)))+(((cj6)*(r01)*(x1841)))+(((IkReal(-1.00000000000000))*(r21)*(x1844)))), ((((IkReal(-1.00000000000000))*(r01)*(x1841)*(x1843)))+(((IkReal(-1.00000000000000))*(x1843)*(x1846)))+(((cj6)*(x1845)))+(((cj6)*(r00)*(x1841)))+(((IkReal(-1.00000000000000))*(r20)*(x1844)))+(((r21)*(x1842)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1847=IKcos(j4);
IkReal x1848=((cj2)*(sj6));
IkReal x1849=((cj1)*(r00));
IkReal x1850=((IkReal(1.00000000000000))*(r21));
IkReal x1851=((cj6)*(sj2));
IkReal x1852=((r10)*(sj1));
IkReal x1853=((cj2)*(cj6));
IkReal x1854=((cj1)*(r01));
IkReal x1855=((r11)*(sj1));
IkReal x1856=((IkReal(1.00000000000000))*(IKsin(j4)));
IkReal x1857=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((x1848)*(x1852)))+(((IkReal(-1.00000000000000))*(x1850)*(x1851)))+(((x1853)*(x1854)))+(((x1853)*(x1855)))+(((x1848)*(x1849)))+(((IkReal(-1.00000000000000))*(x1856)))+(((IkReal(-1.00000000000000))*(r20)*(x1857))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1848)*(x1850)))+(((x1851)*(x1852)))+(((x1849)*(x1851)))+(((IkReal(-1.00000000000000))*(x1855)*(x1857)))+(((IkReal(-1.00000000000000))*(x1854)*(x1857)))+(((r20)*(x1853)))+(((IkReal(-1.00000000000000))*(x1856))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x1848)))+(((IkReal(-1.00000000000000))*(x1849)*(x1857)))+(((IkReal(-1.00000000000000))*(x1852)*(x1857)))+(((IkReal(-1.00000000000000))*(x1850)*(x1853)))+(((IkReal(-1.00000000000000))*(x1851)*(x1855)))+(((IkReal(-1.00000000000000))*(x1851)*(x1854)))+(((IkReal(-1.00000000000000))*(x1847))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1849)*(x1853)))+(((x1848)*(x1855)))+(((x1848)*(x1854)))+(((IkReal(-1.00000000000000))*(x1852)*(x1853)))+(x1847)+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x1850)))+(((r20)*(x1851))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1858=((cj1)*(sj6));
IkReal x1859=((cj2)*(r00));
IkReal x1860=((IkReal(1.00000000000000))*(sj6));
IkReal x1861=((IkReal(0.400000000000000))*(r10));
IkReal x1862=((IkReal(1.00000000000000))*(r02));
IkReal x1863=((IkReal(0.400000000000000))*(r11));
IkReal x1864=((r20)*(sj2));
IkReal x1865=((IkReal(1.00000000000000))*(cj6));
IkReal x1866=((sj1)*(sj6));
IkReal x1867=((cj1)*(cj2));
IkReal x1868=((r21)*(sj2));
IkReal x1869=((cj1)*(r12));
IkReal x1870=((cj2)*(r11));
IkReal x1871=((r12)*(sj1));
IkReal x1872=((cj1)*(cj6));
IkReal x1873=((cj2)*(r10));
IkReal x1874=((IkReal(0.400000000000000))*(cj6)*(sj1));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1)))+(((IkReal(-0.400000000000000))*(x1869))));
evalcond[2]=((((sj2)*(x1871)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((x1869)+(((IkReal(-1.00000000000000))*(sj1)*(x1862))));
evalcond[4]=((IkReal(-1.00000000000000))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x1862)*(x1867)))+(((IkReal(-1.00000000000000))*(cj2)*(x1871))));
evalcond[5]=((IkReal(0.000500000000000000))+(((x1863)*(x1872)))+(((IkReal(-1.00000000000000))*(r01)*(x1874)))+(((IkReal(-1.00000000000000))*(npy)*(x1865)))+(((IkReal(-1.00000000000000))*(npx)*(x1860)))+(((x1858)*(x1861)))+(((IkReal(-0.400000000000000))*(r00)*(x1866))));
evalcond[6]=((((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(x1860)))+(((x1858)*(x1863)))+(((r00)*(x1874)))+(((IkReal(-1.00000000000000))*(x1861)*(x1872)))+(((IkReal(-0.400000000000000))*(r01)*(x1866))));
evalcond[7]=((((x1866)*(x1873)))+(((IkReal(-1.00000000000000))*(x1860)*(x1864)))+(((IkReal(-1.00000000000000))*(x1865)*(x1868)))+(((cj6)*(sj1)*(x1870)))+(((cj6)*(r01)*(x1867)))+(((x1858)*(x1859))));
evalcond[8]=((((x1866)*(x1870)))+(((IkReal(-1.00000000000000))*(sj1)*(x1865)*(x1873)))+(((cj2)*(r01)*(x1858)))+(((IkReal(-1.00000000000000))*(x1860)*(x1868)))+(((IkReal(-1.00000000000000))*(cj1)*(x1859)*(x1865)))+(((cj6)*(x1864))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1875=((cj1)*(sj6));
IkReal x1876=((cj1)*(cj6));
IkReal x1877=((sj1)*(sj6));
IkReal x1878=((IkReal(1.00000000000000))*(cj6)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(x1878)))+(((r10)*(x1875)))+(((IkReal(-1.00000000000000))*(r00)*(x1877)))+(((r11)*(x1876))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r00)*(x1878)))+(((r01)*(x1877)))+(((IkReal(-1.00000000000000))*(r11)*(x1875)))+(((r10)*(x1876))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(x1878)))+(((r10)*(x1875)))+(((IkReal(-1.00000000000000))*(r00)*(x1877)))+(((r11)*(x1876)))))+IKsqr(((((IkReal(-1.00000000000000))*(r00)*(x1878)))+(((r01)*(x1877)))+(((IkReal(-1.00000000000000))*(r11)*(x1875)))+(((r10)*(x1876)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(x1878)))+(((r10)*(x1875)))+(((IkReal(-1.00000000000000))*(r00)*(x1877)))+(((r11)*(x1876)))), ((((IkReal(-1.00000000000000))*(r00)*(x1878)))+(((r01)*(x1877)))+(((IkReal(-1.00000000000000))*(r11)*(x1875)))+(((r10)*(x1876)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1879=IKsin(j4);
IkReal x1880=((IkReal(1.00000000000000))*(sj6));
IkReal x1881=((cj2)*(r21));
IkReal x1882=((IkReal(1.00000000000000))*(cj6));
IkReal x1883=((cj1)*(r11));
IkReal x1884=((r00)*(sj1));
IkReal x1885=((cj6)*(sj2));
IkReal x1886=((r10)*(sj1));
IkReal x1887=((cj1)*(r00));
IkReal x1888=((cj1)*(r10));
IkReal x1889=((cj2)*(r20));
IkReal x1890=((r01)*(sj1));
IkReal x1891=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x1892=((cj1)*(r01)*(sj2));
IkReal x1893=((r11)*(sj1)*(sj2));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1882)*(x1883)))+(((sj6)*(x1884)))+(((IkReal(-1.00000000000000))*(x1880)*(x1888)))+(((cj6)*(x1890)))+(x1879));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1882)*(x1884)))+(((sj6)*(x1890)))+(((IkReal(-1.00000000000000))*(x1880)*(x1883)))+(((cj6)*(x1888)))+(((IkReal(-1.00000000000000))*(x1891))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1880)*(x1893)))+(((IkReal(-1.00000000000000))*(x1880)*(x1892)))+(((IkReal(-1.00000000000000))*(x1880)*(x1881)))+(((cj6)*(x1889)))+(((IkReal(-1.00000000000000))*(x1879)))+(((x1885)*(x1887)))+(((x1885)*(x1886))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1880)*(x1889)))+(((IkReal(-1.00000000000000))*(x1882)*(x1893)))+(((IkReal(-1.00000000000000))*(x1882)*(x1892)))+(((IkReal(-1.00000000000000))*(sj2)*(x1880)*(x1887)))+(((IkReal(-1.00000000000000))*(sj2)*(x1880)*(x1886)))+(((IkReal(-1.00000000000000))*(x1891)))+(((IkReal(-1.00000000000000))*(x1881)*(x1882))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1894=((cj1)*(sj6));
IkReal x1895=((cj2)*(r00));
IkReal x1896=((IkReal(1.00000000000000))*(sj6));
IkReal x1897=((IkReal(0.400000000000000))*(r10));
IkReal x1898=((IkReal(1.00000000000000))*(r02));
IkReal x1899=((IkReal(0.400000000000000))*(r11));
IkReal x1900=((r20)*(sj2));
IkReal x1901=((IkReal(1.00000000000000))*(cj6));
IkReal x1902=((sj1)*(sj6));
IkReal x1903=((cj1)*(cj2));
IkReal x1904=((r21)*(sj2));
IkReal x1905=((cj1)*(r12));
IkReal x1906=((cj2)*(r11));
IkReal x1907=((r12)*(sj1));
IkReal x1908=((cj1)*(cj6));
IkReal x1909=((cj2)*(r10));
IkReal x1910=((IkReal(0.400000000000000))*(cj6)*(sj1));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1)))+(((IkReal(-0.400000000000000))*(x1905))));
evalcond[2]=((((cj2)*(r22)))+(((sj2)*(x1907)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj1)*(x1898)))+(x1905));
evalcond[4]=((IkReal(1.00000000000000))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x1907)))+(((IkReal(-1.00000000000000))*(x1898)*(x1903))));
evalcond[5]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(r01)*(x1910)))+(((IkReal(-1.00000000000000))*(npx)*(x1896)))+(((x1899)*(x1908)))+(((IkReal(-1.00000000000000))*(npy)*(x1901)))+(((IkReal(-0.400000000000000))*(r00)*(x1902)))+(((x1894)*(x1897))));
evalcond[6]=((((cj6)*(npx)))+(((r00)*(x1910)))+(((IkReal(-1.00000000000000))*(npy)*(x1896)))+(((IkReal(-0.400000000000000))*(r01)*(x1902)))+(((x1894)*(x1899)))+(((IkReal(-1.00000000000000))*(x1897)*(x1908))));
evalcond[7]=((((cj6)*(sj1)*(x1906)))+(((IkReal(-1.00000000000000))*(x1901)*(x1904)))+(((IkReal(-1.00000000000000))*(x1896)*(x1900)))+(((cj6)*(r01)*(x1903)))+(((x1902)*(x1909)))+(((x1894)*(x1895))));
evalcond[8]=((((IkReal(-1.00000000000000))*(cj1)*(x1895)*(x1901)))+(((cj6)*(x1900)))+(((IkReal(-1.00000000000000))*(sj1)*(x1901)*(x1909)))+(((cj2)*(r01)*(x1894)))+(((IkReal(-1.00000000000000))*(x1896)*(x1904)))+(((x1902)*(x1906))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1911=((r00)*(sj1));
IkReal x1912=((cj1)*(r11));
IkReal x1913=((r01)*(sj1));
IkReal x1914=((IkReal(1.00000000000000))*(sj6));
IkReal x1915=((IkReal(1.00000000000000))*(cj6));
IkReal x1916=((cj1)*(r10));
if( IKabs(((((IkReal(-1.00000000000000))*(x1914)*(x1916)))+(((cj6)*(x1913)))+(((IkReal(-1.00000000000000))*(x1912)*(x1915)))+(((sj6)*(x1911))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(x1911)))+(((IkReal(-1.00000000000000))*(x1915)*(x1916)))+(((IkReal(-1.00000000000000))*(x1913)*(x1914)))+(((sj6)*(x1912))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1914)*(x1916)))+(((cj6)*(x1913)))+(((IkReal(-1.00000000000000))*(x1912)*(x1915)))+(((sj6)*(x1911)))))+IKsqr(((((cj6)*(x1911)))+(((IkReal(-1.00000000000000))*(x1915)*(x1916)))+(((IkReal(-1.00000000000000))*(x1913)*(x1914)))+(((sj6)*(x1912)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1914)*(x1916)))+(((cj6)*(x1913)))+(((IkReal(-1.00000000000000))*(x1912)*(x1915)))+(((sj6)*(x1911)))), ((((cj6)*(x1911)))+(((IkReal(-1.00000000000000))*(x1915)*(x1916)))+(((IkReal(-1.00000000000000))*(x1913)*(x1914)))+(((sj6)*(x1912)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x1917=IKcos(j4);
IkReal x1918=((IkReal(1.00000000000000))*(sj6));
IkReal x1919=((cj2)*(r21));
IkReal x1920=((IkReal(1.00000000000000))*(cj6));
IkReal x1921=((cj1)*(r11));
IkReal x1922=((r00)*(sj1));
IkReal x1923=((cj6)*(sj2));
IkReal x1924=((r10)*(sj1));
IkReal x1925=((cj1)*(r00));
IkReal x1926=((cj1)*(r10));
IkReal x1927=((cj2)*(r20));
IkReal x1928=((r01)*(sj1));
IkReal x1929=((IkReal(1.00000000000000))*(IKsin(j4)));
IkReal x1930=((cj1)*(r01)*(sj2));
IkReal x1931=((r11)*(sj1)*(sj2));
evalcond[0]=((((sj6)*(x1922)))+(((IkReal(-1.00000000000000))*(x1918)*(x1926)))+(((IkReal(-1.00000000000000))*(x1929)))+(((cj6)*(x1928)))+(((IkReal(-1.00000000000000))*(x1920)*(x1921))));
evalcond[1]=((((sj6)*(x1928)))+(((IkReal(-1.00000000000000))*(x1918)*(x1921)))+(x1917)+(((cj6)*(x1926)))+(((IkReal(-1.00000000000000))*(x1920)*(x1922))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1929)))+(((x1923)*(x1924)))+(((x1923)*(x1925)))+(((IkReal(-1.00000000000000))*(x1918)*(x1931)))+(((IkReal(-1.00000000000000))*(x1918)*(x1930)))+(((cj6)*(x1927)))+(((IkReal(-1.00000000000000))*(x1918)*(x1919))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1920)*(x1931)))+(((IkReal(-1.00000000000000))*(x1920)*(x1930)))+(((IkReal(-1.00000000000000))*(x1918)*(x1927)))+(((IkReal(-1.00000000000000))*(x1917)))+(((IkReal(-1.00000000000000))*(x1919)*(x1920)))+(((IkReal(-1.00000000000000))*(sj2)*(x1918)*(x1925)))+(((IkReal(-1.00000000000000))*(sj2)*(x1918)*(x1924))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1932=((cj2)*(sj6));
IkReal x1933=((IkReal(1.00000000000000))*(cj6));
IkReal x1934=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r00)*(sj1)*(x1934)))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x1933)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((r11)*(sj1)*(x1932)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r00)*(x1933)))+(((cj1)*(r01)*(x1932)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x1934)))+(((IkReal(-1.00000000000000))*(cj2)*(r10)*(sj1)*(x1933)))+(((cj6)*(r20)*(sj2))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r00)*(sj1)*(x1934)))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x1933)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((r11)*(sj1)*(x1932)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r00)*(x1933)))+(((cj1)*(r01)*(x1932)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x1934)))+(((IkReal(-1.00000000000000))*(cj2)*(r10)*(sj1)*(x1933)))+(((cj6)*(r20)*(sj2)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r00)*(sj1)*(x1934)))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x1933)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((r11)*(sj1)*(x1932)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r00)*(x1933)))+(((cj1)*(r01)*(x1932)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x1934)))+(((IkReal(-1.00000000000000))*(cj2)*(r10)*(sj1)*(x1933)))+(((cj6)*(r20)*(sj2)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1935=IKsin(j4);
IkReal x1936=IKcos(j4);
IkReal x1937=((cj2)*(sj6));
IkReal x1938=((cj1)*(r00));
IkReal x1939=((IkReal(1.00000000000000))*(r21));
IkReal x1940=((cj6)*(sj2));
IkReal x1941=((IkReal(1.00000000000000))*(cj6));
IkReal x1942=((cj1)*(r11));
IkReal x1943=((r00)*(sj1));
IkReal x1944=((r10)*(sj1));
IkReal x1945=((sj2)*(sj6));
IkReal x1946=((IkReal(1.00000000000000))*(r20));
IkReal x1947=((cj2)*(cj6));
IkReal x1948=((cj1)*(r01));
IkReal x1949=((cj1)*(r10));
IkReal x1950=((r11)*(sj1));
IkReal x1951=((IkReal(1.00000000000000))*(sj6));
IkReal x1952=((r01)*(sj1));
IkReal x1953=((IkReal(1.00000000000000))*(x1936));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1949)*(x1951)))+(((cj6)*(x1952)))+(((sj6)*(x1943)))+(((IkReal(-1.00000000000000))*(x1941)*(x1942)))+(((sj3)*(x1935))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1942)*(x1951)))+(((IkReal(-1.00000000000000))*(sj3)*(x1953)))+(((cj6)*(x1949)))+(((sj6)*(x1952)))+(((IkReal(-1.00000000000000))*(x1941)*(x1943))));
evalcond[2]=((((x1937)*(x1944)))+(((IkReal(-1.00000000000000))*(x1945)*(x1946)))+(((cj3)*(x1935)))+(((x1947)*(x1950)))+(((IkReal(-1.00000000000000))*(x1939)*(x1940)))+(((x1947)*(x1948)))+(((x1937)*(x1938))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1937)*(x1939)))+(((x1938)*(x1940)))+(((r20)*(x1947)))+(((IkReal(-1.00000000000000))*(x1935)))+(((IkReal(-1.00000000000000))*(x1945)*(x1948)))+(((IkReal(-1.00000000000000))*(x1945)*(x1950)))+(((x1940)*(x1944))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1953)))+(((IkReal(-1.00000000000000))*(x1937)*(x1946)))+(((IkReal(-1.00000000000000))*(x1944)*(x1945)))+(((IkReal(-1.00000000000000))*(x1940)*(x1950)))+(((IkReal(-1.00000000000000))*(x1940)*(x1948)))+(((IkReal(-1.00000000000000))*(x1939)*(x1947)))+(((IkReal(-1.00000000000000))*(x1938)*(x1945))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj2)*(x1938)*(x1941)))+(((IkReal(-1.00000000000000))*(cj2)*(x1941)*(x1944)))+(((x1937)*(x1950)))+(((r20)*(x1940)))+(((x1937)*(x1948)))+(((IkReal(-1.00000000000000))*(cj3)*(x1953)))+(((IkReal(-1.00000000000000))*(x1939)*(x1945))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1954=((IkReal(1.00000000000000))*(sj6));
IkReal x1955=((cj6)*(r10));
IkReal x1956=((cj6)*(r00));
IkReal x1957=((sj1)*(sj2));
IkReal x1958=((cj1)*(x1954));
if( IKabs(((((cj1)*(sj2)*(x1956)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x1954)))+(((IkReal(-1.00000000000000))*(r01)*(sj2)*(x1958)))+(((cj2)*(cj6)*(r20)))+(((x1955)*(x1957)))+(((IkReal(-1.00000000000000))*(r11)*(x1954)*(x1957))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj1)*(x1955)))+(((IkReal(-1.00000000000000))*(sj1)*(x1956)))+(((IkReal(-1.00000000000000))*(r11)*(x1958)))+(((r01)*(sj1)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj1)*(sj2)*(x1956)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x1954)))+(((IkReal(-1.00000000000000))*(r01)*(sj2)*(x1958)))+(((cj2)*(cj6)*(r20)))+(((x1955)*(x1957)))+(((IkReal(-1.00000000000000))*(r11)*(x1954)*(x1957)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj1)*(x1955)))+(((IkReal(-1.00000000000000))*(sj1)*(x1956)))+(((IkReal(-1.00000000000000))*(r11)*(x1958)))+(((r01)*(sj1)*(sj6)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((cj1)*(sj2)*(x1956)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x1954)))+(((IkReal(-1.00000000000000))*(r01)*(sj2)*(x1958)))+(((cj2)*(cj6)*(r20)))+(((x1955)*(x1957)))+(((IkReal(-1.00000000000000))*(r11)*(x1954)*(x1957)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj1)*(x1955)))+(((IkReal(-1.00000000000000))*(sj1)*(x1956)))+(((IkReal(-1.00000000000000))*(r11)*(x1958)))+(((r01)*(sj1)*(sj6)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1959=IKsin(j4);
IkReal x1960=IKcos(j4);
IkReal x1961=((cj2)*(sj6));
IkReal x1962=((cj1)*(r00));
IkReal x1963=((IkReal(1.00000000000000))*(r21));
IkReal x1964=((cj6)*(sj2));
IkReal x1965=((IkReal(1.00000000000000))*(cj6));
IkReal x1966=((cj1)*(r11));
IkReal x1967=((r00)*(sj1));
IkReal x1968=((r10)*(sj1));
IkReal x1969=((sj2)*(sj6));
IkReal x1970=((IkReal(1.00000000000000))*(r20));
IkReal x1971=((cj2)*(cj6));
IkReal x1972=((cj1)*(r01));
IkReal x1973=((cj1)*(r10));
IkReal x1974=((r11)*(sj1));
IkReal x1975=((IkReal(1.00000000000000))*(sj6));
IkReal x1976=((r01)*(sj1));
IkReal x1977=((IkReal(1.00000000000000))*(x1960));
evalcond[0]=((((cj6)*(x1976)))+(((sj3)*(x1959)))+(((IkReal(-1.00000000000000))*(x1965)*(x1966)))+(((IkReal(-1.00000000000000))*(x1973)*(x1975)))+(((sj6)*(x1967))));
evalcond[1]=((((cj6)*(x1973)))+(((IkReal(-1.00000000000000))*(sj3)*(x1977)))+(((IkReal(-1.00000000000000))*(x1965)*(x1967)))+(((IkReal(-1.00000000000000))*(x1966)*(x1975)))+(((sj6)*(x1976))));
evalcond[2]=((((cj3)*(x1959)))+(((x1971)*(x1972)))+(((x1971)*(x1974)))+(((x1961)*(x1968)))+(((x1961)*(x1962)))+(((IkReal(-1.00000000000000))*(x1963)*(x1964)))+(((IkReal(-1.00000000000000))*(x1969)*(x1970))));
evalcond[3]=((((x1964)*(x1968)))+(((r20)*(x1971)))+(((IkReal(-1.00000000000000))*(x1969)*(x1974)))+(((IkReal(-1.00000000000000))*(x1969)*(x1972)))+(((IkReal(-1.00000000000000))*(x1961)*(x1963)))+(((IkReal(-1.00000000000000))*(x1959)))+(((x1962)*(x1964))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1977)))+(((IkReal(-1.00000000000000))*(x1964)*(x1972)))+(((IkReal(-1.00000000000000))*(x1964)*(x1974)))+(((IkReal(-1.00000000000000))*(x1961)*(x1970)))+(((IkReal(-1.00000000000000))*(x1968)*(x1969)))+(((IkReal(-1.00000000000000))*(x1963)*(x1971)))+(((IkReal(-1.00000000000000))*(x1962)*(x1969))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj2)*(x1965)*(x1968)))+(((r20)*(x1964)))+(((x1961)*(x1974)))+(((x1961)*(x1972)))+(((IkReal(-1.00000000000000))*(cj3)*(x1977)))+(((IkReal(-1.00000000000000))*(cj2)*(x1962)*(x1965)))+(((IkReal(-1.00000000000000))*(x1963)*(x1969))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1978=((cj1)*(sj6));
IkReal x1979=((cj1)*(cj6));
IkReal x1980=((sj1)*(sj6));
IkReal x1981=((IkReal(1.00000000000000))*(cj6)*(sj1));
if( IKabs(((gconst23)*(((((r10)*(x1978)))+(((r11)*(x1979)))+(((IkReal(-1.00000000000000))*(r00)*(x1980)))+(((IkReal(-1.00000000000000))*(r01)*(x1981))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst23)*(((((r10)*(x1979)))+(((r01)*(x1980)))+(((IkReal(-1.00000000000000))*(r11)*(x1978)))+(((IkReal(-1.00000000000000))*(r00)*(x1981))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst23)*(((((r10)*(x1978)))+(((r11)*(x1979)))+(((IkReal(-1.00000000000000))*(r00)*(x1980)))+(((IkReal(-1.00000000000000))*(r01)*(x1981)))))), ((gconst23)*(((((r10)*(x1979)))+(((r01)*(x1980)))+(((IkReal(-1.00000000000000))*(r11)*(x1978)))+(((IkReal(-1.00000000000000))*(r00)*(x1981)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1982=IKsin(j4);
IkReal x1983=IKcos(j4);
IkReal x1984=((cj2)*(sj6));
IkReal x1985=((cj1)*(r00));
IkReal x1986=((IkReal(1.00000000000000))*(r21));
IkReal x1987=((cj6)*(sj2));
IkReal x1988=((IkReal(1.00000000000000))*(cj6));
IkReal x1989=((cj1)*(r11));
IkReal x1990=((r00)*(sj1));
IkReal x1991=((r10)*(sj1));
IkReal x1992=((sj2)*(sj6));
IkReal x1993=((IkReal(1.00000000000000))*(r20));
IkReal x1994=((cj2)*(cj6));
IkReal x1995=((cj1)*(r01));
IkReal x1996=((cj1)*(r10));
IkReal x1997=((r11)*(sj1));
IkReal x1998=((IkReal(1.00000000000000))*(sj6));
IkReal x1999=((r01)*(sj1));
IkReal x2000=((IkReal(1.00000000000000))*(x1983));
evalcond[0]=((((sj3)*(x1982)))+(((IkReal(-1.00000000000000))*(x1996)*(x1998)))+(((sj6)*(x1990)))+(((IkReal(-1.00000000000000))*(x1988)*(x1989)))+(((cj6)*(x1999))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj3)*(x2000)))+(((IkReal(-1.00000000000000))*(x1989)*(x1998)))+(((sj6)*(x1999)))+(((cj6)*(x1996)))+(((IkReal(-1.00000000000000))*(x1988)*(x1990))));
evalcond[2]=((((x1984)*(x1985)))+(((IkReal(-1.00000000000000))*(x1986)*(x1987)))+(((cj3)*(x1982)))+(((x1994)*(x1997)))+(((x1994)*(x1995)))+(((IkReal(-1.00000000000000))*(x1992)*(x1993)))+(((x1984)*(x1991))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1984)*(x1986)))+(((r20)*(x1994)))+(((IkReal(-1.00000000000000))*(x1992)*(x1997)))+(((IkReal(-1.00000000000000))*(x1992)*(x1995)))+(((IkReal(-1.00000000000000))*(x1982)))+(((x1987)*(x1991)))+(((x1985)*(x1987))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1987)*(x1997)))+(((IkReal(-1.00000000000000))*(x1987)*(x1995)))+(((IkReal(-1.00000000000000))*(x1986)*(x1994)))+(((IkReal(-1.00000000000000))*(x1985)*(x1992)))+(((IkReal(-1.00000000000000))*(x2000)))+(((IkReal(-1.00000000000000))*(x1991)*(x1992)))+(((IkReal(-1.00000000000000))*(x1984)*(x1993))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj2)*(x1985)*(x1988)))+(((IkReal(-1.00000000000000))*(x1986)*(x1992)))+(((IkReal(-1.00000000000000))*(cj2)*(x1988)*(x1991)))+(((x1984)*(x1995)))+(((x1984)*(x1997)))+(((r20)*(x1987)))+(((IkReal(-1.00000000000000))*(cj3)*(x2000))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2001=((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30);
IkReal x2002=((IkReal(1.00000000000000))*(cj6));
IkReal x2003=((cj1)*(r10));
IkReal x2004=((r01)*(sj1));
IkReal x2005=((r00)*(sj1));
IkReal x2006=((cj1)*(r11));
IkReal x2007=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((x2001)*(((((IkReal(-1.00000000000000))*(x2005)*(x2007)))+(((IkReal(-1.00000000000000))*(x2002)*(x2004)))+(((sj6)*(x2003)))+(((cj6)*(x2006))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x2001)*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2004)*(x2007)))+(((IkReal(-1.00000000000000))*(x2002)*(x2003)))+(((sj6)*(x2006)))+(((cj6)*(x2005)))+(((cj3)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x2001)*(((((IkReal(-1.00000000000000))*(x2005)*(x2007)))+(((IkReal(-1.00000000000000))*(x2002)*(x2004)))+(((sj6)*(x2003)))+(((cj6)*(x2006)))))))+IKsqr(((x2001)*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2004)*(x2007)))+(((IkReal(-1.00000000000000))*(x2002)*(x2003)))+(((sj6)*(x2006)))+(((cj6)*(x2005)))+(((cj3)*(sj5)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x2001)*(((((IkReal(-1.00000000000000))*(x2005)*(x2007)))+(((IkReal(-1.00000000000000))*(x2002)*(x2004)))+(((sj6)*(x2003)))+(((cj6)*(x2006)))))), ((x2001)*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2004)*(x2007)))+(((IkReal(-1.00000000000000))*(x2002)*(x2003)))+(((sj6)*(x2006)))+(((cj6)*(x2005)))+(((cj3)*(sj5)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x2008=IKcos(j4);
IkReal x2009=((cj1)*(cj6));
IkReal x2010=((IkReal(1.00000000000000))*(cj3));
IkReal x2011=((IkReal(1.00000000000000))*(r11));
IkReal x2012=((cj1)*(sj6));
IkReal x2013=((IkReal(1.00000000000000))*(sj1));
IkReal x2014=((r01)*(sj1));
IkReal x2015=((sj3)*(x2008));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj5)*(x2015)))+(((IkReal(-1.00000000000000))*(cj5)*(x2010)))+(((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(x2013))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2009)*(x2011)))+(((cj6)*(x2014)))+(((IkReal(-1.00000000000000))*(r10)*(x2012)))+(((sj3)*(IKsin(j4))))+(((r00)*(sj1)*(sj6))));
evalcond[2]=((((r10)*(x2009)))+(((sj6)*(x2014)))+(((IkReal(-1.00000000000000))*(x2011)*(x2012)))+(((IkReal(-1.00000000000000))*(sj5)*(x2010)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x2013)))+(((cj5)*(x2015))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign((((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1))))));
dummyeval[0]=(((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x2016=(sj1)*(sj1);
IkReal x2017=(cj1)*(cj1);
IkReal x2018=((r10)*(sj6));
IkReal x2019=((cj1)*(sj1));
IkReal x2020=((r00)*(sj6));
IkReal x2021=((r12)*(x2016));
IkReal x2022=((cj6)*(x2019));
IkReal x2023=((r02)*(x2017));
gconst1=IKsign(((((x2020)*(x2023)))+(((cj6)*(r21)*(r22)))+(((x2018)*(x2021)))+(((cj6)*(r11)*(x2021)))+(((r20)*(r22)*(sj6)))+(((r01)*(r12)*(x2022)))+(((r02)*(r11)*(x2022)))+(((cj6)*(r01)*(x2023)))+(((r12)*(x2019)*(x2020)))+(((r02)*(x2018)*(x2019)))));
IkReal x2024=(sj1)*(sj1);
IkReal x2025=(cj1)*(cj1);
IkReal x2026=((r10)*(sj6));
IkReal x2027=((cj1)*(sj1));
IkReal x2028=((r00)*(sj6));
IkReal x2029=((r12)*(x2024));
IkReal x2030=((cj6)*(x2027));
IkReal x2031=((r02)*(x2025));
dummyeval[0]=((((r01)*(r12)*(x2030)))+(((cj6)*(r21)*(r22)))+(((x2026)*(x2029)))+(((cj6)*(r11)*(x2029)))+(((r20)*(r22)*(sj6)))+(((r02)*(r11)*(x2030)))+(((x2028)*(x2031)))+(((cj6)*(r01)*(x2031)))+(((r12)*(x2027)*(x2028)))+(((r02)*(x2026)*(x2027))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2032=((IkReal(1.00000000000000))*(cj3)*(sj4));
IkReal x2033=((sj4)*(sj5)*(sj6));
IkReal x2034=((cj6)*(sj4)*(sj5));
if( IKabs(((gconst1)*(((((cj3)*(r22)*(sj4)))+(((cj1)*(r00)*(x2033)))+(((r10)*(sj1)*(x2033)))+(((cj1)*(r01)*(x2034)))+(((r11)*(sj1)*(x2034))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((r21)*(x2034)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2032)))+(((r20)*(x2033)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x2032))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst1)*(((((cj3)*(r22)*(sj4)))+(((cj1)*(r00)*(x2033)))+(((r10)*(sj1)*(x2033)))+(((cj1)*(r01)*(x2034)))+(((r11)*(sj1)*(x2034)))))), ((gconst1)*(((((r21)*(x2034)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2032)))+(((r20)*(x2033)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x2032)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2035=IKsin(j2);
IkReal x2036=IKcos(j2);
IkReal x2037=((r11)*(sj6));
IkReal x2038=((cj6)*(r11));
IkReal x2039=((cj6)*(r20));
IkReal x2040=((cj3)*(cj4));
IkReal x2041=((IkReal(1.00000000000000))*(sj5));
IkReal x2042=((IkReal(1.00000000000000))*(sj6));
IkReal x2043=((cj1)*(r00));
IkReal x2044=((cj1)*(r01));
IkReal x2045=((IkReal(1.00000000000000))*(cj6));
IkReal x2046=((cj1)*(r02));
IkReal x2047=((sj1)*(x2035));
IkReal x2048=((sj1)*(x2036));
IkReal x2049=((r21)*(x2036));
IkReal x2050=((sj6)*(x2036));
IkReal x2051=((cj6)*(x2036));
IkReal x2052=((r21)*(x2035));
evalcond[0]=((((r22)*(x2036)))+(((IkReal(-1.00000000000000))*(sj4)*(x2041)))+(((r12)*(x2047)))+(((x2035)*(x2046))));
evalcond[1]=((((r22)*(x2035)))+(((IkReal(-1.00000000000000))*(x2036)*(x2046)))+(((cj5)*(sj3)))+(((IkReal(-1.00000000000000))*(x2040)*(x2041)))+(((IkReal(-1.00000000000000))*(r12)*(x2048))));
evalcond[2]=((((x2043)*(x2050)))+(((IkReal(-1.00000000000000))*(x2045)*(x2052)))+(((IkReal(-1.00000000000000))*(r20)*(x2035)*(x2042)))+(((r10)*(sj6)*(x2048)))+(((x2044)*(x2051)))+(((cj3)*(sj4)))+(((x2038)*(x2048))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2035)*(x2042)*(x2044)))+(((IkReal(-1.00000000000000))*(x2037)*(x2047)))+(((cj6)*(r10)*(x2047)))+(((cj6)*(x2035)*(x2043)))+(((cj5)*(sj4)))+(((x2036)*(x2039)))+(((IkReal(-1.00000000000000))*(x2042)*(x2049))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2035)*(x2042)*(x2043)))+(((IkReal(-1.00000000000000))*(r20)*(x2036)*(x2042)))+(((IkReal(-1.00000000000000))*(x2045)*(x2049)))+(((IkReal(-1.00000000000000))*(x2038)*(x2047)))+(((IkReal(-1.00000000000000))*(x2035)*(x2044)*(x2045)))+(((IkReal(-1.00000000000000))*(cj4)))+(((IkReal(-1.00000000000000))*(r10)*(x2042)*(x2047))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2036)*(x2043)*(x2045)))+(((x2037)*(x2048)))+(((sj3)*(sj5)))+(((cj5)*(x2040)))+(((IkReal(-1.00000000000000))*(r10)*(x2045)*(x2048)))+(((x2044)*(x2050)))+(((IkReal(-1.00000000000000))*(x2042)*(x2052)))+(((x2035)*(x2039))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2053=((cj1)*(r02));
IkReal x2054=((r22)*(sj5));
IkReal x2055=((cj5)*(sj3));
IkReal x2056=((r12)*(sj1));
IkReal x2057=((sj4)*(sj5));
IkReal x2058=((IkReal(1.00000000000000))*(cj3)*(cj4)*(sj5));
if( IKabs(((gconst0)*(((((cj3)*(cj4)*(x2054)))+(((x2053)*(x2057)))+(((IkReal(-1.00000000000000))*(r22)*(x2055)))+(((x2056)*(x2057))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((x2053)*(x2055)))+(((x2055)*(x2056)))+(((IkReal(-1.00000000000000))*(x2056)*(x2058)))+(((IkReal(-1.00000000000000))*(x2053)*(x2058)))+(((sj4)*(x2054))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst0)*(((((cj3)*(cj4)*(x2054)))+(((x2053)*(x2057)))+(((IkReal(-1.00000000000000))*(r22)*(x2055)))+(((x2056)*(x2057)))))), ((gconst0)*(((((x2053)*(x2055)))+(((x2055)*(x2056)))+(((IkReal(-1.00000000000000))*(x2056)*(x2058)))+(((IkReal(-1.00000000000000))*(x2053)*(x2058)))+(((sj4)*(x2054)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2059=IKsin(j2);
IkReal x2060=IKcos(j2);
IkReal x2061=((r11)*(sj6));
IkReal x2062=((cj6)*(r11));
IkReal x2063=((cj6)*(r20));
IkReal x2064=((cj3)*(cj4));
IkReal x2065=((IkReal(1.00000000000000))*(sj5));
IkReal x2066=((IkReal(1.00000000000000))*(sj6));
IkReal x2067=((cj1)*(r00));
IkReal x2068=((cj1)*(r01));
IkReal x2069=((IkReal(1.00000000000000))*(cj6));
IkReal x2070=((cj1)*(r02));
IkReal x2071=((sj1)*(x2059));
IkReal x2072=((sj1)*(x2060));
IkReal x2073=((r21)*(x2060));
IkReal x2074=((sj6)*(x2060));
IkReal x2075=((cj6)*(x2060));
IkReal x2076=((r21)*(x2059));
evalcond[0]=((((r22)*(x2060)))+(((r12)*(x2071)))+(((IkReal(-1.00000000000000))*(sj4)*(x2065)))+(((x2059)*(x2070))));
evalcond[1]=((((r22)*(x2059)))+(((IkReal(-1.00000000000000))*(x2064)*(x2065)))+(((IkReal(-1.00000000000000))*(x2060)*(x2070)))+(((cj5)*(sj3)))+(((IkReal(-1.00000000000000))*(r12)*(x2072))));
evalcond[2]=((((x2068)*(x2075)))+(((IkReal(-1.00000000000000))*(x2069)*(x2076)))+(((r10)*(sj6)*(x2072)))+(((IkReal(-1.00000000000000))*(r20)*(x2059)*(x2066)))+(((x2062)*(x2072)))+(((cj3)*(sj4)))+(((x2067)*(x2074))));
evalcond[3]=((((cj5)*(sj4)))+(((cj6)*(r10)*(x2071)))+(((IkReal(-1.00000000000000))*(x2061)*(x2071)))+(((x2060)*(x2063)))+(((cj6)*(x2059)*(x2067)))+(((IkReal(-1.00000000000000))*(x2059)*(x2066)*(x2068)))+(((IkReal(-1.00000000000000))*(x2066)*(x2073))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2069)*(x2073)))+(((IkReal(-1.00000000000000))*(x2062)*(x2071)))+(((IkReal(-1.00000000000000))*(r20)*(x2060)*(x2066)))+(((IkReal(-1.00000000000000))*(x2059)*(x2068)*(x2069)))+(((IkReal(-1.00000000000000))*(x2059)*(x2066)*(x2067)))+(((IkReal(-1.00000000000000))*(r10)*(x2066)*(x2071)))+(((IkReal(-1.00000000000000))*(cj4))));
evalcond[5]=((((sj3)*(sj5)))+(((x2059)*(x2063)))+(((x2068)*(x2074)))+(((cj5)*(x2064)))+(((IkReal(-1.00000000000000))*(x2060)*(x2067)*(x2069)))+(((IkReal(-1.00000000000000))*(r10)*(x2069)*(x2072)))+(((IkReal(-1.00000000000000))*(x2066)*(x2076)))+(((x2061)*(x2072))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2077=((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30);
IkReal x2078=((IkReal(1.00000000000000))*(sj1));
if( IKabs(((x2077)*(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x2078)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x2078)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x2077)*(((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(x2078)))+(((IkReal(-1.00000000000000))*(cj3)*(cj5)))+(((cj1)*(r12))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x2077)*(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x2078)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x2078)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))))))+IKsqr(((x2077)*(((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(x2078)))+(((IkReal(-1.00000000000000))*(cj3)*(cj5)))+(((cj1)*(r12)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x2077)*(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x2078)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x2078)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))))), ((x2077)*(((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(x2078)))+(((IkReal(-1.00000000000000))*(cj3)*(cj5)))+(((cj1)*(r12)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x2079=IKcos(j4);
IkReal x2080=((cj1)*(cj6));
IkReal x2081=((IkReal(1.00000000000000))*(cj3));
IkReal x2082=((IkReal(1.00000000000000))*(r11));
IkReal x2083=((cj1)*(sj6));
IkReal x2084=((IkReal(1.00000000000000))*(sj1));
IkReal x2085=((r01)*(sj1));
IkReal x2086=((sj3)*(x2079));
evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x2084)))+(((IkReal(-1.00000000000000))*(cj5)*(x2081)))+(((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(sj5)*(x2086))));
evalcond[1]=((((cj6)*(x2085)))+(((IkReal(-1.00000000000000))*(x2080)*(x2082)))+(((sj3)*(IKsin(j4))))+(((r00)*(sj1)*(sj6)))+(((IkReal(-1.00000000000000))*(r10)*(x2083))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj5)*(x2081)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x2084)))+(((r10)*(x2080)))+(((cj5)*(x2086)))+(((IkReal(-1.00000000000000))*(x2082)*(x2083)))+(((sj6)*(x2085))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign((((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1))))));
dummyeval[0]=(((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x2087=(sj1)*(sj1);
IkReal x2088=(cj1)*(cj1);
IkReal x2089=((r10)*(sj6));
IkReal x2090=((cj1)*(sj1));
IkReal x2091=((r00)*(sj6));
IkReal x2092=((r12)*(x2087));
IkReal x2093=((cj6)*(x2090));
IkReal x2094=((r02)*(x2088));
gconst1=IKsign(((((r02)*(x2089)*(x2090)))+(((cj6)*(r11)*(x2092)))+(((cj6)*(r01)*(x2094)))+(((r01)*(r12)*(x2093)))+(((cj6)*(r21)*(r22)))+(((x2091)*(x2094)))+(((r12)*(x2090)*(x2091)))+(((r02)*(r11)*(x2093)))+(((r20)*(r22)*(sj6)))+(((x2089)*(x2092)))));
IkReal x2095=(sj1)*(sj1);
IkReal x2096=(cj1)*(cj1);
IkReal x2097=((r10)*(sj6));
IkReal x2098=((cj1)*(sj1));
IkReal x2099=((r00)*(sj6));
IkReal x2100=((r12)*(x2095));
IkReal x2101=((cj6)*(x2098));
IkReal x2102=((r02)*(x2096));
dummyeval[0]=((((cj6)*(r11)*(x2100)))+(((x2099)*(x2102)))+(((cj6)*(r01)*(x2102)))+(((cj6)*(r21)*(r22)))+(((r20)*(r22)*(sj6)))+(((r01)*(r12)*(x2101)))+(((x2097)*(x2100)))+(((r02)*(x2097)*(x2098)))+(((r12)*(x2098)*(x2099)))+(((r02)*(r11)*(x2101))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2103=((IkReal(1.00000000000000))*(cj3)*(sj4));
IkReal x2104=((sj4)*(sj5)*(sj6));
IkReal x2105=((cj6)*(sj4)*(sj5));
if( IKabs(((gconst1)*(((((r11)*(sj1)*(x2105)))+(((cj3)*(r22)*(sj4)))+(((cj1)*(r01)*(x2105)))+(((cj1)*(r00)*(x2104)))+(((r10)*(sj1)*(x2104))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((r20)*(x2104)))+(((r21)*(x2105)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x2103)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2103))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst1)*(((((r11)*(sj1)*(x2105)))+(((cj3)*(r22)*(sj4)))+(((cj1)*(r01)*(x2105)))+(((cj1)*(r00)*(x2104)))+(((r10)*(sj1)*(x2104)))))), ((gconst1)*(((((r20)*(x2104)))+(((r21)*(x2105)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x2103)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2103)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2106=IKsin(j2);
IkReal x2107=IKcos(j2);
IkReal x2108=((r11)*(sj6));
IkReal x2109=((cj6)*(r11));
IkReal x2110=((cj6)*(r20));
IkReal x2111=((cj3)*(cj4));
IkReal x2112=((IkReal(1.00000000000000))*(sj5));
IkReal x2113=((IkReal(1.00000000000000))*(sj6));
IkReal x2114=((cj1)*(r00));
IkReal x2115=((cj1)*(r01));
IkReal x2116=((IkReal(1.00000000000000))*(cj6));
IkReal x2117=((cj1)*(r02));
IkReal x2118=((sj1)*(x2106));
IkReal x2119=((sj1)*(x2107));
IkReal x2120=((r21)*(x2107));
IkReal x2121=((sj6)*(x2107));
IkReal x2122=((cj6)*(x2107));
IkReal x2123=((r21)*(x2106));
evalcond[0]=((((r12)*(x2118)))+(((IkReal(-1.00000000000000))*(sj4)*(x2112)))+(((x2106)*(x2117)))+(((r22)*(x2107))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x2119)))+(((cj5)*(sj3)))+(((r22)*(x2106)))+(((IkReal(-1.00000000000000))*(x2111)*(x2112)))+(((IkReal(-1.00000000000000))*(x2107)*(x2117))));
evalcond[2]=((((x2109)*(x2119)))+(((IkReal(-1.00000000000000))*(x2116)*(x2123)))+(((r10)*(sj6)*(x2119)))+(((x2114)*(x2121)))+(((x2115)*(x2122)))+(((IkReal(-1.00000000000000))*(r20)*(x2106)*(x2113)))+(((cj3)*(sj4))));
evalcond[3]=((((cj6)*(r10)*(x2118)))+(((IkReal(-1.00000000000000))*(x2108)*(x2118)))+(((cj5)*(sj4)))+(((IkReal(-1.00000000000000))*(x2113)*(x2120)))+(((x2107)*(x2110)))+(((IkReal(-1.00000000000000))*(x2106)*(x2113)*(x2115)))+(((cj6)*(x2106)*(x2114))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2116)*(x2120)))+(((IkReal(-1.00000000000000))*(x2109)*(x2118)))+(((IkReal(-1.00000000000000))*(r10)*(x2113)*(x2118)))+(((IkReal(-1.00000000000000))*(x2106)*(x2115)*(x2116)))+(((IkReal(-1.00000000000000))*(x2106)*(x2113)*(x2114)))+(((IkReal(-1.00000000000000))*(r20)*(x2107)*(x2113)))+(((IkReal(-1.00000000000000))*(cj4))));
evalcond[5]=((((sj3)*(sj5)))+(((x2115)*(x2121)))+(((cj5)*(x2111)))+(((x2106)*(x2110)))+(((IkReal(-1.00000000000000))*(x2113)*(x2123)))+(((IkReal(-1.00000000000000))*(r10)*(x2116)*(x2119)))+(((IkReal(-1.00000000000000))*(x2107)*(x2114)*(x2116)))+(((x2108)*(x2119))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2124=((cj1)*(r02));
IkReal x2125=((r22)*(sj5));
IkReal x2126=((cj5)*(sj3));
IkReal x2127=((r12)*(sj1));
IkReal x2128=((sj4)*(sj5));
IkReal x2129=((IkReal(1.00000000000000))*(cj3)*(cj4)*(sj5));
if( IKabs(((gconst0)*(((((cj3)*(cj4)*(x2125)))+(((x2124)*(x2128)))+(((x2127)*(x2128)))+(((IkReal(-1.00000000000000))*(r22)*(x2126))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((sj4)*(x2125)))+(((x2124)*(x2126)))+(((IkReal(-1.00000000000000))*(x2127)*(x2129)))+(((IkReal(-1.00000000000000))*(x2124)*(x2129)))+(((x2126)*(x2127))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst0)*(((((cj3)*(cj4)*(x2125)))+(((x2124)*(x2128)))+(((x2127)*(x2128)))+(((IkReal(-1.00000000000000))*(r22)*(x2126)))))), ((gconst0)*(((((sj4)*(x2125)))+(((x2124)*(x2126)))+(((IkReal(-1.00000000000000))*(x2127)*(x2129)))+(((IkReal(-1.00000000000000))*(x2124)*(x2129)))+(((x2126)*(x2127)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2130=IKsin(j2);
IkReal x2131=IKcos(j2);
IkReal x2132=((r11)*(sj6));
IkReal x2133=((cj6)*(r11));
IkReal x2134=((cj6)*(r20));
IkReal x2135=((cj3)*(cj4));
IkReal x2136=((IkReal(1.00000000000000))*(sj5));
IkReal x2137=((IkReal(1.00000000000000))*(sj6));
IkReal x2138=((cj1)*(r00));
IkReal x2139=((cj1)*(r01));
IkReal x2140=((IkReal(1.00000000000000))*(cj6));
IkReal x2141=((cj1)*(r02));
IkReal x2142=((sj1)*(x2130));
IkReal x2143=((sj1)*(x2131));
IkReal x2144=((r21)*(x2131));
IkReal x2145=((sj6)*(x2131));
IkReal x2146=((cj6)*(x2131));
IkReal x2147=((r21)*(x2130));
evalcond[0]=((((x2130)*(x2141)))+(((r22)*(x2131)))+(((r12)*(x2142)))+(((IkReal(-1.00000000000000))*(sj4)*(x2136))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2131)*(x2141)))+(((cj5)*(sj3)))+(((IkReal(-1.00000000000000))*(x2135)*(x2136)))+(((r22)*(x2130)))+(((IkReal(-1.00000000000000))*(r12)*(x2143))));
evalcond[2]=((((x2138)*(x2145)))+(((x2133)*(x2143)))+(((r10)*(sj6)*(x2143)))+(((IkReal(-1.00000000000000))*(x2140)*(x2147)))+(((IkReal(-1.00000000000000))*(r20)*(x2130)*(x2137)))+(((cj3)*(sj4)))+(((x2139)*(x2146))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2132)*(x2142)))+(((x2131)*(x2134)))+(((IkReal(-1.00000000000000))*(x2130)*(x2137)*(x2139)))+(((cj5)*(sj4)))+(((cj6)*(x2130)*(x2138)))+(((cj6)*(r10)*(x2142)))+(((IkReal(-1.00000000000000))*(x2137)*(x2144))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2130)*(x2139)*(x2140)))+(((IkReal(-1.00000000000000))*(x2130)*(x2137)*(x2138)))+(((IkReal(-1.00000000000000))*(x2140)*(x2144)))+(((IkReal(-1.00000000000000))*(r10)*(x2137)*(x2142)))+(((IkReal(-1.00000000000000))*(r20)*(x2131)*(x2137)))+(((IkReal(-1.00000000000000))*(x2133)*(x2142)))+(((IkReal(-1.00000000000000))*(cj4))));
evalcond[5]=((((sj3)*(sj5)))+(((x2132)*(x2143)))+(((cj5)*(x2135)))+(((IkReal(-1.00000000000000))*(r10)*(x2140)*(x2143)))+(((IkReal(-1.00000000000000))*(x2131)*(x2138)*(x2140)))+(((IkReal(-1.00000000000000))*(x2137)*(x2147)))+(((x2130)*(x2134)))+(((x2139)*(x2145))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j6array[2], cj6array[2], sj6array[2];
bool j6valid[2]={false};
_nj6 = 2;
IkReal x2148=((IkReal(0.0364000000000000))*(sj1));
IkReal x2149=((IkReal(0.0364000000000000))*(cj1));
IkReal x2150=((((IkReal(0.0910000000000000))*(npy)))+(((IkReal(-1.00000000000000))*(r11)*(x2149)))+(((r01)*(x2148))));
IkReal x2151=((((IkReal(0.0910000000000000))*(npx)))+(((IkReal(-1.00000000000000))*(r10)*(x2149)))+(((r00)*(x2148))));
if( IKabs(x2150) < IKFAST_ATAN2_MAGTHRESH && IKabs(x2151) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x2152=((IkReal(1.00000000000000))*(IKatan2(x2150, x2151)));
if( ((((x2151)*(x2151))+((x2150)*(x2150)))) < (IkReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt((((x2151)*(x2151))+((x2150)*(x2150)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x2151)*(x2151))+((x2150)*(x2150))))))):(IkReal)1.0e30))*(((IkReal(0.00785425000000000))+(((IkReal(0.800000000000000))*(px)*(sj1)))+(pp)+(((IkReal(-0.800000000000000))*(cj1)*(py))))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt((((x2151)*(x2151))+((x2150)*(x2150)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x2151)*(x2151))+((x2150)*(x2150))))))):(IkReal)1.0e30))*(((IkReal(0.00785425000000000))+(((IkReal(0.800000000000000))*(px)*(sj1)))+(pp)+(((IkReal(-0.800000000000000))*(cj1)*(py))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x2153=IKasin(((((IKabs(IKabs(IKsqrt((((x2151)*(x2151))+((x2150)*(x2150)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x2151)*(x2151))+((x2150)*(x2150))))))):(IkReal)1.0e30))*(((IkReal(0.00785425000000000))+(((IkReal(0.800000000000000))*(px)*(sj1)))+(pp)+(((IkReal(-0.800000000000000))*(cj1)*(py)))))));
j6array[0]=((((IkReal(-1.00000000000000))*(x2152)))+(((IkReal(-1.00000000000000))*(x2153))));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
j6array[1]=((IkReal(3.14159265358979))+(x2153)+(((IkReal(-1.00000000000000))*(x2152))));
sj6array[1]=IKsin(j6array[1]);
cj6array[1]=IKcos(j6array[1]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
if( j6array[1] > IKPI )
{
    j6array[1]-=IK2PI;
}
else if( j6array[1] < -IKPI )
{    j6array[1]+=IK2PI;
}
j6valid[1] = true;
for(int ij6 = 0; ij6 < 2; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
for(int iij6 = ij6+1; iij6 < 2; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[2];
IkReal x2154=IKsin(j6);
IkReal x2155=IKcos(j6);
IkReal x2156=((IkReal(10.8695652173913))*(pp));
IkReal x2157=((px)*(sj1));
IkReal x2158=((cj1)*(py));
IkReal x2159=((npx)*(x2154));
IkReal x2160=((npy)*(x2155));
IkReal x2161=((r01)*(sj1)*(x2155));
IkReal x2162=((cj1)*(r10)*(x2154));
IkReal x2163=((cj1)*(r11)*(x2155));
IkReal x2164=((IkReal(21.7391304347826))*(x2160));
IkReal x2165=((r00)*(sj1)*(x2154));
evalcond[0]=((IkReal(-0.000500000000000000))+(x2160)+(x2159)+(((IkReal(-0.400000000000000))*(x2163)))+(((IkReal(-0.400000000000000))*(x2162)))+(((IkReal(0.400000000000000))*(x2161)))+(((IkReal(0.400000000000000))*(x2165))));
evalcond[1]=((IkReal(0.00434782608695652))+(((IkReal(-0.0108695652173913))*(x2158)))+(((IkReal(-1.00000000000000))*(x2157)*(x2164)))+(((x2156)*(x2161)))+(((x2156)*(x2165)))+(((IkReal(21.7391304347826))*(x2158)*(x2159)))+(((IkReal(-1.00000000000000))*(x2156)*(x2162)))+(((IkReal(-1.00000000000000))*(x2156)*(x2163)))+(((IkReal(3.39239402173913))*(x2162)))+(((IkReal(3.39239402173913))*(x2163)))+(((IkReal(0.0108695652173913))*(x2157)))+(((IkReal(-8.69565217391304))*(x2159)))+(((x2158)*(x2164)))+(((IkReal(-21.7391304347826))*(x2157)*(x2159)))+(((IkReal(-8.69565217391304))*(x2160)))+(((IkReal(-3.39239402173913))*(x2165)))+(((IkReal(-3.39239402173913))*(x2161))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=((((IkReal(-2.50000000000000))*(cj6)*(npx)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(sj6)))+(((cj1)*(cj6)*(r10)))+(((r01)*(sj1)*(sj6)))+(((IkReal(2.50000000000000))*(npy)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj1))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2166=((IkReal(0.400000000000000))*(sj1));
IkReal x2167=((IkReal(0.400000000000000))*(cj1));
IkReal x2168=((IKabs(((((IkReal(-1.00000000000000))*(r11)*(sj6)*(x2167)))+(((cj6)*(r10)*(x2167)))+(((IkReal(-1.00000000000000))*(cj6)*(npx)))+(((npy)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x2166)))+(((r01)*(sj6)*(x2166))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(r11)*(sj6)*(x2167)))+(((cj6)*(r10)*(x2167)))+(((IkReal(-1.00000000000000))*(cj6)*(npx)))+(((npy)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x2166)))+(((r01)*(sj6)*(x2166)))))):(IkReal)1.0e30);
j5array[0]=((IkReal(2.00000000000000))*(atan(((((r02)*(x2166)*(((IKabs(((((IkReal(-1.00000000000000))*(r11)*(sj6)*(x2167)))+(((IkReal(0.400000000000000))*(r01)*(sj1)*(sj6)))+(((cj6)*(r10)*(x2167)))+(((IkReal(-1.00000000000000))*(cj6)*(npx)))+(((npy)*(sj6)))+(((IkReal(-0.400000000000000))*(cj6)*(r00)*(sj1))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(r11)*(sj6)*(x2167)))+(((IkReal(0.400000000000000))*(r01)*(sj1)*(sj6)))+(((cj6)*(r10)*(x2167)))+(((IkReal(-1.00000000000000))*(cj6)*(npx)))+(((npy)*(sj6)))+(((IkReal(-0.400000000000000))*(cj6)*(r00)*(sj1)))))):(IkReal)1.0e30))))+(((IkReal(-0.390000000000000))*(x2168)))+(((npz)*(x2168)))+(((IkReal(-1.00000000000000))*(r12)*(x2167)*(((IKabs(((((IkReal(-1.00000000000000))*(cj6)*(npx)))+(((npy)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x2166)))+(((IkReal(-0.400000000000000))*(cj1)*(r11)*(sj6)))+(((IkReal(0.400000000000000))*(cj1)*(cj6)*(r10)))+(((r01)*(sj6)*(x2166))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(cj6)*(npx)))+(((npy)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x2166)))+(((IkReal(-0.400000000000000))*(cj1)*(r11)*(sj6)))+(((IkReal(0.400000000000000))*(cj1)*(cj6)*(r10)))+(((r01)*(sj6)*(x2166)))))):(IkReal)1.0e30))))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];

{
IkReal dummyeval[1];
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[2], cj3array[2], sj3array[2];
bool j3valid[2]={false};
_nj3 = 2;
IkReal x2169=((sj1)*(sj5));
IkReal x2170=((cj1)*(sj5));
cj3array[0]=((((IKabs(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))))):(IkReal)1.0e30))*(((((IkReal(1.00000000000000))*(r11)*(sj6)*(x2170)))+(((IkReal(1.00000000000000))*(cj5)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(cj5)*(r12)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x2169)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x2170)))+(((IkReal(1.00000000000000))*(cj6)*(r00)*(x2169))))));
if( cj3array[0] >= -1-IKFAST_SINCOS_THRESH && cj3array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j3valid[0] = j3valid[1] = true;
    j3array[0] = IKacos(cj3array[0]);
    sj3array[0] = IKsin(j3array[0]);
    cj3array[1] = cj3array[0];
    j3array[1] = -j3array[0];
    sj3array[1] = -sj3array[0];
}
else if( isnan(cj3array[0]) )
{
    // probably any value will work
    j3valid[0] = true;
    cj3array[0] = 1; sj3array[0] = 0; j3array[0] = 0;
}
for(int ij3 = 0; ij3 < 2; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 2; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];

{
IkReal dummyeval[2];
dummyeval[0]=sj3;
dummyeval[1]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj3;
dummyeval[1]=cj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x2171=((IkReal(1.00000000000000))*(sj6));
IkReal x2172=((r02)*(sj1));
IkReal x2173=((IkReal(1.00000000000000))*(cj6));
IkReal x2174=((cj1)*(r11));
IkReal x2175=((IkReal(0.400000000000000))*(sj1));
IkReal x2176=((cj6)*(r01));
IkReal x2177=((r00)*(sj6));
IkReal x2178=((cj1)*(r12));
IkReal x2179=((r01)*(sj6));
IkReal x2180=((cj6)*(r00)*(sj1));
IkReal x2181=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x2182=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-0.390000000000000))*(cj5)))+(npz)+(((IkReal(0.400000000000000))*(x2172)))+(((IkReal(-0.400000000000000))*(x2178))));
evalcond[2]=((x2178)+(((IkReal(-1.00000000000000))*(x2172)))+(((IkReal(-1.00000000000000))*(cj5))));
evalcond[3]=((((sj1)*(x2177)))+(((sj1)*(x2176)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x2171)))+(((IkReal(-1.00000000000000))*(x2173)*(x2174))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(0.400000000000000))*(cj6)*(x2174)))+(((IkReal(-1.00000000000000))*(x2175)*(x2177)))+(((IkReal(-1.00000000000000))*(x2175)*(x2176)))+(((IkReal(-1.00000000000000))*(npy)*(x2173)))+(((r10)*(x2181)))+(((IkReal(-1.00000000000000))*(npx)*(x2171))));
evalcond[5]=((((sj1)*(x2179)))+(((IkReal(-1.00000000000000))*(x2171)*(x2174)))+(((IkReal(-1.00000000000000))*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x2173)))+(x2182));
evalcond[6]=((((IkReal(-0.390000000000000))*(sj5)))+(((cj6)*(npx)))+(((cj6)*(r00)*(x2175)))+(((IkReal(-1.00000000000000))*(x2175)*(x2179)))+(((IkReal(0.400000000000000))*(sj6)*(x2174)))+(((IkReal(-0.400000000000000))*(x2182)))+(((IkReal(-1.00000000000000))*(npy)*(x2171))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(sj6)))+(((cj6)*(r20)*(sj5))));
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
IkReal op[6+1], zeror[6];
int numroots;
IkReal j2evalpoly[4];
IkReal x2183=((IkReal(8.00000000000000))*(cj5));
IkReal x2184=((cj1)*(r02));
IkReal x2185=((r12)*(sj1));
IkReal x2186=((IkReal(16.0000000000000))*(sj5));
IkReal x2187=((IkReal(4.00000000000000))*(sj5));
IkReal x2188=((IkReal(16.0000000000000))*(cj5));
IkReal x2189=((IkReal(8.00000000000000))*(sj5));
IkReal x2190=((r11)*(sj1)*(sj6));
IkReal x2191=((cj1)*(cj6)*(r00));
IkReal x2192=((cj6)*(r10)*(sj1));
IkReal x2193=((r21)*(sj6)*(x2187));
IkReal x2194=((cj1)*(r01)*(sj5)*(sj6));
IkReal x2195=((((IkReal(4.00000000000000))*(cj5)*(r22)))+(((cj6)*(r20)*(x2187))));
IkReal x2196=((x2195)+(((IkReal(-1.00000000000000))*(x2193))));
IkReal x2197=((x2193)+(((IkReal(-1.00000000000000))*(x2195))));
IkReal x2198=((((IkReal(-1.00000000000000))*(x2189)*(x2191)))+(((IkReal(-1.00000000000000))*(x2189)*(x2192)))+(((cj1)*(r01)*(sj6)*(x2189)))+(((x2189)*(x2190)))+(((IkReal(-1.00000000000000))*(x2183)*(x2184)))+(((IkReal(-1.00000000000000))*(x2183)*(x2185))));
op[0]=x2196;
op[1]=x2198;
op[2]=x2196;
op[3]=((((x2186)*(x2190)))+(((IkReal(-1.00000000000000))*(x2186)*(x2191)))+(((IkReal(-1.00000000000000))*(x2186)*(x2192)))+(((cj1)*(r01)*(sj6)*(x2186)))+(((IkReal(-1.00000000000000))*(x2185)*(x2188)))+(((IkReal(-1.00000000000000))*(x2184)*(x2188))));
op[4]=x2197;
op[5]=x2198;
op[6]=x2197;
polyroots6(op,zeror,numroots);
IkReal j2array[6], cj2array[6], sj2array[6], tempj2array[1];
int numsolutions = 0;
for(int ij2 = 0; ij2 < numroots; ++ij2)
{
IkReal htj2 = zeror[ij2];
tempj2array[0]=((IkReal(2.00000000000000))*(atan(htj2)));
for(int kj2 = 0; kj2 < 1; ++kj2)
{
j2array[numsolutions] = tempj2array[kj2];
if( j2array[numsolutions] > IKPI )
{
    j2array[numsolutions]-=IK2PI;
}
else if( j2array[numsolutions] < -IKPI )
{
    j2array[numsolutions]+=IK2PI;
}
sj2array[numsolutions] = IKsin(j2array[numsolutions]);
cj2array[numsolutions] = IKcos(j2array[numsolutions]);
numsolutions++;
}
}
bool j2valid[6]={true,true,true,true,true,true};
_nj2 = 6;
for(int ij2 = 0; ij2 < numsolutions; ++ij2)
    {
if( !j2valid[ij2] )
{
    continue;
}
    j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
htj2 = IKtan(j2/2);

IkReal x2199=(htj2)*(htj2)*(htj2)*(htj2)*(htj2);
IkReal x2200=(cj5)*(cj5);
IkReal x2201=(htj2)*(htj2);
IkReal x2202=(htj2)*(htj2)*(htj2);
IkReal x2203=(htj2)*(htj2)*(htj2)*(htj2);
IkReal x2204=(htj2)*(htj2)*(htj2)*(htj2)*(htj2)*(htj2);
IkReal x2205=(sj5)*(sj5);
IkReal x2206=((cj1)*(r02));
IkReal x2207=((r11)*(sj1));
IkReal x2208=((IkReal(4.00000000000000))*(sj5));
IkReal x2209=((cj1)*(r01));
IkReal x2210=((IkReal(16.0000000000000))*(r20));
IkReal x2211=((IkReal(16.0000000000000))*(sj5));
IkReal x2212=((cj6)*(r21));
IkReal x2213=((cj5)*(cj6));
IkReal x2214=((r12)*(sj1));
IkReal x2215=((cj5)*(sj5));
IkReal x2216=((IkReal(4.00000000000000))*(r22));
IkReal x2217=((IkReal(8.00000000000000))*(r20));
IkReal x2218=((r10)*(sj1));
IkReal x2219=((IkReal(8.00000000000000))*(sj6));
IkReal x2220=((IkReal(8.00000000000000))*(sj5));
IkReal x2221=((cj5)*(sj6));
IkReal x2222=((cj1)*(r00));
IkReal x2223=((sj5)*(sj6));
IkReal x2224=((IkReal(16.0000000000000))*(x2200));
IkReal x2225=((IkReal(16.0000000000000))*(x2214));
IkReal x2226=((cj6)*(x2205));
IkReal x2227=((IkReal(8.00000000000000))*(x2222));
IkReal x2228=((sj6)*(x2205));
IkReal x2229=((IkReal(8.00000000000000))*(x2200));
IkReal x2230=((r21)*(x2208)*(x2221));
IkReal x2231=((IkReal(4.00000000000000))*(r21)*(x2228));
IkReal x2232=((((x2200)*(x2216)))+(((r20)*(x2208)*(x2213))));
IkReal x2233=((((IkReal(4.00000000000000))*(r20)*(x2226)))+(((cj5)*(r22)*(x2208))));
IkReal x2234=((((IkReal(-8.00000000000000))*(x2214)))+(((IkReal(-8.00000000000000))*(x2206)))+(((x2217)*(x2223)))+(((x2212)*(x2220))));
IkReal x2235=((x2232)+(((IkReal(-1.00000000000000))*(x2230))));
IkReal x2236=((x2233)+(((IkReal(-1.00000000000000))*(x2231))));
IkReal x2237=((((IkReal(-1.00000000000000))*(x2206)*(x2220)))+(((x2217)*(x2228)))+(((IkReal(-1.00000000000000))*(x2214)*(x2220)))+(((IkReal(8.00000000000000))*(x2205)*(x2212))));
IkReal x2238=((((sj6)*(x2208)*(x2218)))+(x2216)+(((cj6)*(x2208)*(x2209)))+(((cj6)*(x2207)*(x2208)))+(((sj6)*(x2208)*(x2222))));
IkReal x2239=((((IkReal(4.00000000000000))*(x2218)*(x2228)))+(((IkReal(4.00000000000000))*(x2207)*(x2226)))+(((r22)*(x2208)))+(((IkReal(4.00000000000000))*(x2209)*(x2226)))+(((IkReal(4.00000000000000))*(x2222)*(x2228))));
IkReal x2240=((((IkReal(-1.00000000000000))*(x2213)*(x2218)*(x2220)))+(((IkReal(-1.00000000000000))*(x2213)*(x2220)*(x2222)))+(((IkReal(-1.00000000000000))*(x2206)*(x2229)))+(((x2207)*(x2215)*(x2219)))+(((IkReal(-1.00000000000000))*(x2214)*(x2229)))+(((x2209)*(x2215)*(x2219))));
IkReal x2241=((((IkReal(-1.00000000000000))*(x2226)*(x2227)))+(((x2205)*(x2209)*(x2219)))+(((IkReal(-8.00000000000000))*(x2214)*(x2215)))+(((IkReal(-8.00000000000000))*(x2206)*(x2215)))+(((x2205)*(x2207)*(x2219)))+(((IkReal(-8.00000000000000))*(x2218)*(x2226))));
j2evalpoly[0]=((((x2202)*(((((IkReal(-16.0000000000000))*(x2206)))+(((x2211)*(x2212)))+(((IkReal(-1.00000000000000))*(x2225)))+(((x2210)*(x2223)))))))+(((IkReal(-1.00000000000000))*(x2201)*(x2238)))+(((x2199)*(x2234)))+(((IkReal(-1.00000000000000))*(x2238)))+(((htj2)*(x2234)))+(((x2204)*(x2238)))+(((x2203)*(x2238))));
j2evalpoly[1]=((x2230)+(((htj2)*(x2240)))+(((x2199)*(x2240)))+(((IkReal(-1.00000000000000))*(x2232)))+(((x2202)*(((((x2209)*(x2211)*(x2221)))+(((IkReal(-1.00000000000000))*(x2211)*(x2213)*(x2218)))+(((IkReal(-1.00000000000000))*(x2211)*(x2213)*(x2222)))+(((IkReal(-1.00000000000000))*(x2206)*(x2224)))+(((x2207)*(x2211)*(x2221)))+(((IkReal(-1.00000000000000))*(x2214)*(x2224)))))))+(((x2204)*(x2235)))+(((x2201)*(((x2230)+(((IkReal(-1.00000000000000))*(x2232)))))))+(((x2203)*(x2235))));
j2evalpoly[2]=((x2231)+(((x2201)*(((x2231)+(((IkReal(-1.00000000000000))*(x2233)))))))+(((htj2)*(x2241)))+(((x2202)*(((((IkReal(-16.0000000000000))*(x2222)*(x2226)))+(((IkReal(-1.00000000000000))*(cj5)*(x2206)*(x2211)))+(((IkReal(-1.00000000000000))*(cj5)*(x2211)*(x2214)))+(((IkReal(16.0000000000000))*(x2209)*(x2228)))+(((IkReal(-16.0000000000000))*(x2218)*(x2226)))+(((IkReal(16.0000000000000))*(x2207)*(x2228)))))))+(((x2199)*(x2241)))+(((IkReal(-1.00000000000000))*(x2233)))+(((x2204)*(x2236)))+(((x2203)*(x2236))));
j2evalpoly[3]=((((IkReal(-1.00000000000000))*(x2201)*(x2239)))+(((x2199)*(x2237)))+(((x2202)*(((((IkReal(16.0000000000000))*(x2205)*(x2212)))+(((IkReal(-1.00000000000000))*(x2206)*(x2211)))+(((IkReal(-1.00000000000000))*(x2211)*(x2214)))+(((x2210)*(x2228)))))))+(((IkReal(-1.00000000000000))*(x2239)))+(((htj2)*(x2237)))+(((x2204)*(x2239)))+(((x2203)*(x2239))));
if( IKabs(j2evalpoly[0]) > 0.0000001000000000  || IKabs(j2evalpoly[1]) > 0.0000001000000000  || IKabs(j2evalpoly[2]) > 0.0000001000000000  || IKabs(j2evalpoly[3]) > 0.0000001000000000  )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < numsolutions; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(sj5);
dummyeval[0]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj5;
dummyeval[1]=cj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x2242=((IkReal(1.00000000000000))*(sj6));
IkReal x2243=((IkReal(1.00000000000000))*(r02));
IkReal x2244=((cj1)*(r11));
IkReal x2245=((IkReal(1.00000000000000))*(cj6));
IkReal x2246=((IkReal(0.400000000000000))*(sj6));
IkReal x2247=((r00)*(sj1));
IkReal x2248=((cj1)*(r12));
IkReal x2249=((r12)*(sj1));
IkReal x2250=((r01)*(sj1));
IkReal x2251=((cj1)*(r10));
IkReal x2252=((cj6)*(x2247));
IkReal x2253=((cj6)*(x2250));
IkReal x2254=((cj6)*(x2251));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(((IkReal(-0.400000000000000))*(x2248)))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1))));
evalcond[2]=((((sj2)*(x2249)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((IkReal(-1.00000000000000))+(x2248)+(((IkReal(-1.00000000000000))*(sj1)*(x2243))));
evalcond[4]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(x2243)))+(((IkReal(-1.00000000000000))*(cj2)*(x2249))));
evalcond[5]=((x2253)+(((IkReal(-1.00000000000000))*(x2244)*(x2245)))+(((IkReal(-1.00000000000000))*(x2242)*(x2251)))+(((sj6)*(x2247))));
evalcond[6]=((IkReal(0.000500000000000000))+(((x2246)*(x2251)))+(((IkReal(-1.00000000000000))*(npy)*(x2245)))+(((IkReal(0.400000000000000))*(cj6)*(x2244)))+(((IkReal(-1.00000000000000))*(npx)*(x2242)))+(((IkReal(-1.00000000000000))*(x2246)*(x2247)))+(((IkReal(-0.400000000000000))*(x2253))));
evalcond[7]=((x2254)+(((sj6)*(x2250)))+(((IkReal(-1.00000000000000))*(x2242)*(x2244)))+(((IkReal(-1.00000000000000))*(x2245)*(x2247))));
evalcond[8]=((((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(x2242)))+(((IkReal(0.400000000000000))*(x2252)))+(((x2244)*(x2246)))+(((IkReal(-1.00000000000000))*(x2246)*(x2250)))+(((IkReal(-0.400000000000000))*(x2254))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2255=((sj2)*(sj6));
IkReal x2256=((r11)*(sj1));
IkReal x2257=((cj2)*(sj6));
IkReal x2258=((cj2)*(cj6));
IkReal x2259=((r10)*(sj1));
IkReal x2260=((IkReal(1.00000000000000))*(r20));
IkReal x2261=((cj6)*(sj2));
IkReal x2262=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((x2255)*(x2256)))+(((IkReal(-1.00000000000000))*(x2259)*(x2261)))+(((IkReal(-1.00000000000000))*(x2258)*(x2260)))+(((cj1)*(r01)*(x2255)))+(((IkReal(-1.00000000000000))*(r00)*(x2261)*(x2262)))+(((r21)*(x2257))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x2256)*(x2257)))+(((cj1)*(r00)*(x2258)))+(((IkReal(-1.00000000000000))*(x2260)*(x2261)))+(((x2258)*(x2259)))+(((r21)*(x2255)))+(((IkReal(-1.00000000000000))*(r01)*(x2257)*(x2262))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((x2255)*(x2256)))+(((IkReal(-1.00000000000000))*(x2259)*(x2261)))+(((IkReal(-1.00000000000000))*(x2258)*(x2260)))+(((cj1)*(r01)*(x2255)))+(((IkReal(-1.00000000000000))*(r00)*(x2261)*(x2262)))+(((r21)*(x2257)))))+IKsqr(((((IkReal(-1.00000000000000))*(x2256)*(x2257)))+(((cj1)*(r00)*(x2258)))+(((IkReal(-1.00000000000000))*(x2260)*(x2261)))+(((x2258)*(x2259)))+(((r21)*(x2255)))+(((IkReal(-1.00000000000000))*(r01)*(x2257)*(x2262)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((x2255)*(x2256)))+(((IkReal(-1.00000000000000))*(x2259)*(x2261)))+(((IkReal(-1.00000000000000))*(x2258)*(x2260)))+(((cj1)*(r01)*(x2255)))+(((IkReal(-1.00000000000000))*(r00)*(x2261)*(x2262)))+(((r21)*(x2257)))), ((((IkReal(-1.00000000000000))*(x2256)*(x2257)))+(((cj1)*(r00)*(x2258)))+(((IkReal(-1.00000000000000))*(x2260)*(x2261)))+(((x2258)*(x2259)))+(((r21)*(x2255)))+(((IkReal(-1.00000000000000))*(r01)*(x2257)*(x2262)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2263=IKsin(j4);
IkReal x2264=IKcos(j4);
IkReal x2265=((cj2)*(sj6));
IkReal x2266=((cj1)*(r00));
IkReal x2267=((IkReal(1.00000000000000))*(r21));
IkReal x2268=((cj6)*(sj2));
IkReal x2269=((r10)*(sj1));
IkReal x2270=((cj2)*(cj6));
IkReal x2271=((cj1)*(r01));
IkReal x2272=((r11)*(sj1));
IkReal x2273=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((x2263)+(((x2270)*(x2271)))+(((x2270)*(x2272)))+(((IkReal(-1.00000000000000))*(r20)*(x2273)))+(((x2265)*(x2266)))+(((x2265)*(x2269)))+(((IkReal(-1.00000000000000))*(x2267)*(x2268))));
evalcond[1]=((x2263)+(((x2268)*(x2269)))+(((r20)*(x2270)))+(((x2266)*(x2268)))+(((IkReal(-1.00000000000000))*(x2272)*(x2273)))+(((IkReal(-1.00000000000000))*(x2265)*(x2267)))+(((IkReal(-1.00000000000000))*(x2271)*(x2273))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x2265)))+(((IkReal(-1.00000000000000))*(x2266)*(x2273)))+(((IkReal(-1.00000000000000))*(x2268)*(x2271)))+(((IkReal(-1.00000000000000))*(x2268)*(x2272)))+(((IkReal(-1.00000000000000))*(x2269)*(x2273)))+(((IkReal(-1.00000000000000))*(x2264)))+(((IkReal(-1.00000000000000))*(x2267)*(x2270))));
evalcond[3]=((x2264)+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x2267)))+(((IkReal(-1.00000000000000))*(x2269)*(x2270)))+(((IkReal(-1.00000000000000))*(x2266)*(x2270)))+(((x2265)*(x2272)))+(((x2265)*(x2271)))+(((r20)*(x2268))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2274=((IkReal(1.00000000000000))*(sj6));
IkReal x2275=((IkReal(1.00000000000000))*(r02));
IkReal x2276=((cj1)*(r11));
IkReal x2277=((IkReal(1.00000000000000))*(cj6));
IkReal x2278=((IkReal(0.400000000000000))*(sj6));
IkReal x2279=((r00)*(sj1));
IkReal x2280=((cj1)*(r12));
IkReal x2281=((r12)*(sj1));
IkReal x2282=((r01)*(sj1));
IkReal x2283=((cj1)*(r10));
IkReal x2284=((cj6)*(x2279));
IkReal x2285=((cj6)*(x2282));
IkReal x2286=((cj6)*(x2283));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1)))+(((IkReal(-0.400000000000000))*(x2280))));
evalcond[2]=((((sj2)*(x2281)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((IkReal(1.00000000000000))+(x2280)+(((IkReal(-1.00000000000000))*(sj1)*(x2275))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj1)*(cj2)*(x2275)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x2281))));
evalcond[5]=((x2285)+(((sj6)*(x2279)))+(((IkReal(-1.00000000000000))*(x2276)*(x2277)))+(((IkReal(-1.00000000000000))*(x2274)*(x2283))));
evalcond[6]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(x2278)*(x2279)))+(((IkReal(-1.00000000000000))*(npy)*(x2277)))+(((IkReal(-1.00000000000000))*(npx)*(x2274)))+(((x2278)*(x2283)))+(((IkReal(0.400000000000000))*(cj6)*(x2276)))+(((IkReal(-0.400000000000000))*(x2285))));
evalcond[7]=((x2286)+(((IkReal(-1.00000000000000))*(x2274)*(x2276)))+(((sj6)*(x2282)))+(((IkReal(-1.00000000000000))*(x2277)*(x2279))));
evalcond[8]=((((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(x2274)))+(((x2276)*(x2278)))+(((IkReal(0.400000000000000))*(x2284)))+(((IkReal(-1.00000000000000))*(x2278)*(x2282)))+(((IkReal(-0.400000000000000))*(x2286))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2287=((cj2)*(sj6));
IkReal x2288=((IkReal(1.00000000000000))*(sj1));
IkReal x2289=((r20)*(sj2));
IkReal x2290=((cj1)*(r01));
IkReal x2291=((cj2)*(cj6));
IkReal x2292=((r21)*(sj2));
IkReal x2293=((IkReal(1.00000000000000))*(cj1)*(r00));
if( IKabs(((((IkReal(-1.00000000000000))*(x2287)*(x2293)))+(((IkReal(-1.00000000000000))*(r10)*(x2287)*(x2288)))+(((IkReal(-1.00000000000000))*(r11)*(x2288)*(x2291)))+(((sj6)*(x2289)))+(((IkReal(-1.00000000000000))*(x2290)*(x2291)))+(((cj6)*(x2292))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r10)*(x2288)*(x2291)))+(((cj6)*(x2289)))+(((x2287)*(x2290)))+(((IkReal(-1.00000000000000))*(sj6)*(x2292)))+(((IkReal(-1.00000000000000))*(x2291)*(x2293)))+(((r11)*(sj1)*(x2287))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x2287)*(x2293)))+(((IkReal(-1.00000000000000))*(r10)*(x2287)*(x2288)))+(((IkReal(-1.00000000000000))*(r11)*(x2288)*(x2291)))+(((sj6)*(x2289)))+(((IkReal(-1.00000000000000))*(x2290)*(x2291)))+(((cj6)*(x2292)))))+IKsqr(((((IkReal(-1.00000000000000))*(r10)*(x2288)*(x2291)))+(((cj6)*(x2289)))+(((x2287)*(x2290)))+(((IkReal(-1.00000000000000))*(sj6)*(x2292)))+(((IkReal(-1.00000000000000))*(x2291)*(x2293)))+(((r11)*(sj1)*(x2287)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x2287)*(x2293)))+(((IkReal(-1.00000000000000))*(r10)*(x2287)*(x2288)))+(((IkReal(-1.00000000000000))*(r11)*(x2288)*(x2291)))+(((sj6)*(x2289)))+(((IkReal(-1.00000000000000))*(x2290)*(x2291)))+(((cj6)*(x2292)))), ((((IkReal(-1.00000000000000))*(r10)*(x2288)*(x2291)))+(((cj6)*(x2289)))+(((x2287)*(x2290)))+(((IkReal(-1.00000000000000))*(sj6)*(x2292)))+(((IkReal(-1.00000000000000))*(x2291)*(x2293)))+(((r11)*(sj1)*(x2287)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2294=IKsin(j4);
IkReal x2295=((cj2)*(sj6));
IkReal x2296=((cj1)*(r00));
IkReal x2297=((IkReal(1.00000000000000))*(r21));
IkReal x2298=((cj6)*(sj2));
IkReal x2299=((r10)*(sj1));
IkReal x2300=((cj2)*(cj6));
IkReal x2301=((cj1)*(r01));
IkReal x2302=((r11)*(sj1));
IkReal x2303=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x2304=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x2304)))+(x2294)+(((x2300)*(x2302)))+(((x2300)*(x2301)))+(((x2295)*(x2299)))+(((x2295)*(x2296)))+(((IkReal(-1.00000000000000))*(x2297)*(x2298))));
evalcond[1]=((((x2296)*(x2298)))+(((IkReal(-1.00000000000000))*(x2301)*(x2304)))+(((r20)*(x2300)))+(((IkReal(-1.00000000000000))*(x2294)))+(((x2298)*(x2299)))+(((IkReal(-1.00000000000000))*(x2295)*(x2297)))+(((IkReal(-1.00000000000000))*(x2302)*(x2304))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x2295)))+(((IkReal(-1.00000000000000))*(x2297)*(x2300)))+(((IkReal(-1.00000000000000))*(x2296)*(x2304)))+(((IkReal(-1.00000000000000))*(x2303)))+(((IkReal(-1.00000000000000))*(x2299)*(x2304)))+(((IkReal(-1.00000000000000))*(x2298)*(x2302)))+(((IkReal(-1.00000000000000))*(x2298)*(x2301))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2296)*(x2300)))+(((x2295)*(x2302)))+(((x2295)*(x2301)))+(((IkReal(-1.00000000000000))*(x2303)))+(((IkReal(-1.00000000000000))*(x2299)*(x2300)))+(((r20)*(x2298)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x2297))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2305=((IkReal(1.00000000000000))*(sj6));
IkReal x2306=((r02)*(sj1));
IkReal x2307=((cj1)*(cj6));
IkReal x2308=((cj6)*(sj1));
IkReal x2309=((IkReal(0.400000000000000))*(r01));
IkReal x2310=((IkReal(1.00000000000000))*(cj2));
IkReal x2311=((r11)*(sj1));
IkReal x2312=((cj2)*(sj6));
IkReal x2313=((cj1)*(r01));
IkReal x2314=((cj1)*(r12));
IkReal x2315=((cj6)*(r20));
IkReal x2316=((sj1)*(sj6));
IkReal x2317=((r00)*(x2308));
IkReal x2318=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x2319=((r00)*(x2316));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((npz)+(((IkReal(0.400000000000000))*(x2306)))+(((IkReal(-0.400000000000000))*(x2314))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2306)))+(x2314));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x2307)))+(x2319)+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x2305)))+(((r01)*(x2308))));
evalcond[4]=((IkReal(0.000500000000000000))+(((r10)*(x2318)))+(((IkReal(-1.00000000000000))*(npx)*(x2305)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((IkReal(-1.00000000000000))*(x2308)*(x2309)))+(((IkReal(0.400000000000000))*(r11)*(x2307)))+(((IkReal(-0.400000000000000))*(x2319))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x2317)))+(((r10)*(x2307)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x2305)))+(((r01)*(x2316))));
evalcond[6]=((IkReal(-0.390000000000000))+(((IkReal(-0.400000000000000))*(r10)*(x2307)))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x2309)*(x2316)))+(((IkReal(-1.00000000000000))*(npy)*(x2305)))+(((r11)*(x2318)))+(((IkReal(0.400000000000000))*(x2317))));
evalcond[7]=((((cj2)*(x2315)))+(((r10)*(sj2)*(x2308)))+(((IkReal(-1.00000000000000))*(sj2)*(x2305)*(x2313)))+(((IkReal(-1.00000000000000))*(sj2)*(x2305)*(x2311)))+(((r00)*(sj2)*(x2307)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x2305))));
evalcond[8]=((((x2312)*(x2313)))+(((sj2)*(x2315)))+(((x2311)*(x2312)))+(((IkReal(-1.00000000000000))*(r00)*(x2307)*(x2310)))+(((IkReal(-1.00000000000000))*(r10)*(x2308)*(x2310)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x2305))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2320=((r12)*(sj1));
IkReal x2321=((cj1)*(r02));
IkReal x2322=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((sj2)*(x2320)))+(((sj2)*(x2321)))+(((cj2)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x2321)*(x2322)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x2320)*(x2322))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj2)*(x2320)))+(((sj2)*(x2321)))+(((cj2)*(r22)))))+IKsqr(((((IkReal(-1.00000000000000))*(x2321)*(x2322)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x2320)*(x2322)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((sj2)*(x2320)))+(((sj2)*(x2321)))+(((cj2)*(r22)))), ((((IkReal(-1.00000000000000))*(x2321)*(x2322)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x2320)*(x2322)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2323=IKsin(j4);
IkReal x2324=((cj2)*(sj6));
IkReal x2325=((cj1)*(r00));
IkReal x2326=((sj1)*(sj2));
IkReal x2327=((IkReal(1.00000000000000))*(sj6));
IkReal x2328=((IkReal(1.00000000000000))*(cj1));
IkReal x2329=((cj6)*(r01));
IkReal x2330=((cj2)*(sj1));
IkReal x2331=((cj6)*(r11));
IkReal x2332=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x2333=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((((r12)*(x2326)))+(((cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x2323)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2332)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(r12)*(x2330)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x2328))));
evalcond[2]=((x2323)+(((r10)*(sj1)*(x2324)))+(((x2324)*(x2325)))+(((IkReal(-1.00000000000000))*(sj2)*(x2333)))+(((x2330)*(x2331)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x2327)))+(((cj1)*(cj2)*(x2329))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2332)))+(((IkReal(-1.00000000000000))*(r20)*(x2324)))+(((IkReal(-1.00000000000000))*(sj2)*(x2325)*(x2327)))+(((IkReal(-1.00000000000000))*(cj2)*(x2333)))+(((IkReal(-1.00000000000000))*(sj2)*(x2328)*(x2329)))+(((IkReal(-1.00000000000000))*(x2326)*(x2331)))+(((IkReal(-1.00000000000000))*(r10)*(x2326)*(x2327))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2334=((IkReal(1.00000000000000))*(sj6));
IkReal x2335=((r02)*(sj1));
IkReal x2336=((cj1)*(cj6));
IkReal x2337=((cj6)*(sj1));
IkReal x2338=((IkReal(0.400000000000000))*(r01));
IkReal x2339=((IkReal(1.00000000000000))*(cj2));
IkReal x2340=((r11)*(sj1));
IkReal x2341=((cj2)*(sj6));
IkReal x2342=((cj1)*(r01));
IkReal x2343=((cj1)*(r12));
IkReal x2344=((cj6)*(r20));
IkReal x2345=((sj1)*(sj6));
IkReal x2346=((r00)*(x2337));
IkReal x2347=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x2348=((r00)*(x2345));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.400000000000000))*(x2335)))+(((IkReal(-0.400000000000000))*(x2343)))+(npz));
evalcond[2]=((x2343)+(((IkReal(-1.00000000000000))*(x2335))));
evalcond[3]=((x2348)+(((r01)*(x2337)))+(((IkReal(-1.00000000000000))*(r11)*(x2336)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x2334))));
evalcond[4]=((IkReal(0.000500000000000000))+(((r10)*(x2347)))+(((IkReal(-0.400000000000000))*(x2348)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((IkReal(-1.00000000000000))*(x2337)*(x2338)))+(((IkReal(0.400000000000000))*(r11)*(x2336)))+(((IkReal(-1.00000000000000))*(npx)*(x2334))));
evalcond[5]=((IkReal(1.00000000000000))+(((r01)*(x2345)))+(((IkReal(-1.00000000000000))*(x2346)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x2334)))+(((r10)*(x2336))));
evalcond[6]=((IkReal(0.390000000000000))+(((IkReal(0.400000000000000))*(x2346)))+(((cj6)*(npx)))+(((r11)*(x2347)))+(((IkReal(-1.00000000000000))*(npy)*(x2334)))+(((IkReal(-0.400000000000000))*(r10)*(x2336)))+(((IkReal(-1.00000000000000))*(x2338)*(x2345))));
evalcond[7]=((((r00)*(sj2)*(x2336)))+(((cj2)*(x2344)))+(((r10)*(sj2)*(x2337)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x2334)))+(((IkReal(-1.00000000000000))*(sj2)*(x2334)*(x2340)))+(((IkReal(-1.00000000000000))*(sj2)*(x2334)*(x2342))));
evalcond[8]=((((x2340)*(x2341)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x2334)))+(((x2341)*(x2342)))+(((IkReal(-1.00000000000000))*(r10)*(x2337)*(x2339)))+(((IkReal(-1.00000000000000))*(r00)*(x2336)*(x2339)))+(((sj2)*(x2344))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2349=((r12)*(sj1));
IkReal x2350=((IkReal(1.00000000000000))*(sj2));
IkReal x2351=((cj1)*(r02));
if( IKabs(((((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x2350)*(x2351)))+(((IkReal(-1.00000000000000))*(x2349)*(x2350))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj2)*(x2349)))+(((cj2)*(x2351)))+(((IkReal(-1.00000000000000))*(r22)*(x2350))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x2350)*(x2351)))+(((IkReal(-1.00000000000000))*(x2349)*(x2350)))))+IKsqr(((((cj2)*(x2349)))+(((cj2)*(x2351)))+(((IkReal(-1.00000000000000))*(r22)*(x2350)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x2350)*(x2351)))+(((IkReal(-1.00000000000000))*(x2349)*(x2350)))), ((((cj2)*(x2349)))+(((cj2)*(x2351)))+(((IkReal(-1.00000000000000))*(r22)*(x2350)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2352=IKsin(j4);
IkReal x2353=IKcos(j4);
IkReal x2354=((cj2)*(sj6));
IkReal x2355=((cj1)*(r00));
IkReal x2356=((sj1)*(sj2));
IkReal x2357=((IkReal(1.00000000000000))*(sj6));
IkReal x2358=((IkReal(1.00000000000000))*(cj1));
IkReal x2359=((cj6)*(r01));
IkReal x2360=((cj2)*(sj1));
IkReal x2361=((cj6)*(r11));
IkReal x2362=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((x2352)+(((r12)*(x2356)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x2360)))+(x2353)+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x2358))));
evalcond[2]=((((r10)*(sj1)*(x2354)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x2357)))+(x2352)+(((x2354)*(x2355)))+(((x2360)*(x2361)))+(((cj1)*(cj2)*(x2359)))+(((IkReal(-1.00000000000000))*(sj2)*(x2362))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj2)*(x2362)))+(((IkReal(-1.00000000000000))*(x2353)))+(((IkReal(-1.00000000000000))*(r10)*(x2356)*(x2357)))+(((IkReal(-1.00000000000000))*(r20)*(x2354)))+(((IkReal(-1.00000000000000))*(x2356)*(x2361)))+(((IkReal(-1.00000000000000))*(sj2)*(x2355)*(x2357)))+(((IkReal(-1.00000000000000))*(sj2)*(x2358)*(x2359))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2363=((cj2)*(cj6));
IkReal x2364=((IkReal(1.00000000000000))*(cj2)*(sj6));
if( IKabs(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((cj1)*(r00)*(x2363)))+(((r10)*(sj1)*(x2363)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x2364)))+(((r21)*(sj2)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(sj2)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x2364))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))))))+IKsqr(((((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((cj1)*(r00)*(x2363)))+(((r10)*(sj1)*(x2363)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x2364)))+(((r21)*(sj2)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(sj2)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x2364)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))))), ((((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((cj1)*(r00)*(x2363)))+(((r10)*(sj1)*(x2363)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x2364)))+(((r21)*(sj2)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(sj2)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x2364)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2365=IKsin(j4);
IkReal x2366=IKcos(j4);
IkReal x2367=((cj2)*(sj6));
IkReal x2368=((cj1)*(r00));
IkReal x2369=((IkReal(1.00000000000000))*(r21));
IkReal x2370=((cj6)*(sj2));
IkReal x2371=((cj1)*(r02));
IkReal x2372=((r10)*(sj1));
IkReal x2373=((cj2)*(cj6));
IkReal x2374=((cj1)*(r01));
IkReal x2375=((IkReal(1.00000000000000))*(cj2));
IkReal x2376=((r11)*(sj1));
IkReal x2377=((r12)*(sj1));
IkReal x2378=((IkReal(1.00000000000000))*(sj2)*(sj6));
IkReal x2379=((IkReal(1.00000000000000))*(x2366));
evalcond[0]=((((sj2)*(x2371)))+(((sj2)*(x2377)))+(((IkReal(-1.00000000000000))*(sj5)*(x2365)))+(((cj2)*(r22))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj5)*(x2379)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x2375)*(x2377)))+(((IkReal(-1.00000000000000))*(x2371)*(x2375))));
evalcond[2]=((((x2373)*(x2376)))+(((x2373)*(x2374)))+(x2365)+(((IkReal(-1.00000000000000))*(r20)*(x2378)))+(((x2367)*(x2368)))+(((x2367)*(x2372)))+(((IkReal(-1.00000000000000))*(x2369)*(x2370))));
evalcond[3]=((((x2368)*(x2370)))+(((r20)*(x2373)))+(((x2370)*(x2372)))+(((cj5)*(x2365)))+(((IkReal(-1.00000000000000))*(x2376)*(x2378)))+(((IkReal(-1.00000000000000))*(x2374)*(x2378)))+(((IkReal(-1.00000000000000))*(x2367)*(x2369))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2370)*(x2374)))+(((IkReal(-1.00000000000000))*(x2370)*(x2376)))+(((IkReal(-1.00000000000000))*(x2379)))+(((IkReal(-1.00000000000000))*(x2368)*(x2378)))+(((IkReal(-1.00000000000000))*(x2369)*(x2373)))+(((IkReal(-1.00000000000000))*(x2372)*(x2378)))+(((IkReal(-1.00000000000000))*(r20)*(x2367))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2372)*(x2373)))+(((r20)*(x2370)))+(((IkReal(-1.00000000000000))*(x2368)*(x2373)))+(((cj5)*(x2366)))+(((x2367)*(x2376)))+(((x2367)*(x2374)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x2369))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2380=((IkReal(1.00000000000000))*(cj2)*(sj1));
IkReal x2381=((IkReal(1.00000000000000))*(cj1)*(cj2));
if( IKabs(((((r20)*(sj2)*(sj6)))+(((cj6)*(r21)*(sj2)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x2380)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x2380)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x2381)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x2381))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r12)*(x2380)))+(((IkReal(-1.00000000000000))*(r02)*(x2381)))+(((r22)*(sj2))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r20)*(sj2)*(sj6)))+(((cj6)*(r21)*(sj2)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x2380)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x2380)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x2381)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x2381)))))+IKsqr(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r12)*(x2380)))+(((IkReal(-1.00000000000000))*(r02)*(x2381)))+(((r22)*(sj2)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((r20)*(sj2)*(sj6)))+(((cj6)*(r21)*(sj2)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x2380)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x2380)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x2381)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x2381)))), ((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r12)*(x2380)))+(((IkReal(-1.00000000000000))*(r02)*(x2381)))+(((r22)*(sj2)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2382=IKsin(j4);
IkReal x2383=IKcos(j4);
IkReal x2384=((cj2)*(sj6));
IkReal x2385=((cj1)*(r00));
IkReal x2386=((IkReal(1.00000000000000))*(r21));
IkReal x2387=((cj6)*(sj2));
IkReal x2388=((cj1)*(r02));
IkReal x2389=((r10)*(sj1));
IkReal x2390=((cj2)*(cj6));
IkReal x2391=((cj1)*(r01));
IkReal x2392=((IkReal(1.00000000000000))*(cj2));
IkReal x2393=((r11)*(sj1));
IkReal x2394=((r12)*(sj1));
IkReal x2395=((IkReal(1.00000000000000))*(sj2)*(sj6));
IkReal x2396=((IkReal(1.00000000000000))*(x2383));
evalcond[0]=((((sj2)*(x2388)))+(((sj2)*(x2394)))+(((cj2)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x2382))));
evalcond[1]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(sj5)*(x2396)))+(((IkReal(-1.00000000000000))*(x2388)*(x2392)))+(((IkReal(-1.00000000000000))*(x2392)*(x2394))));
evalcond[2]=((((x2384)*(x2385)))+(((x2384)*(x2389)))+(x2382)+(((IkReal(-1.00000000000000))*(x2386)*(x2387)))+(((IkReal(-1.00000000000000))*(r20)*(x2395)))+(((x2390)*(x2393)))+(((x2390)*(x2391))));
evalcond[3]=((((x2387)*(x2389)))+(((x2385)*(x2387)))+(((r20)*(x2390)))+(((IkReal(-1.00000000000000))*(x2391)*(x2395)))+(((IkReal(-1.00000000000000))*(x2393)*(x2395)))+(((IkReal(-1.00000000000000))*(x2384)*(x2386)))+(((cj5)*(x2382))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2385)*(x2395)))+(((IkReal(-1.00000000000000))*(x2389)*(x2395)))+(((IkReal(-1.00000000000000))*(x2386)*(x2390)))+(((IkReal(-1.00000000000000))*(x2396)))+(((IkReal(-1.00000000000000))*(x2387)*(x2391)))+(((IkReal(-1.00000000000000))*(x2387)*(x2393)))+(((IkReal(-1.00000000000000))*(r20)*(x2384))));
evalcond[5]=((((x2384)*(x2393)))+(((x2384)*(x2391)))+(((r20)*(x2387)))+(((IkReal(-1.00000000000000))*(x2389)*(x2390)))+(((IkReal(-1.00000000000000))*(x2385)*(x2390)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x2386)))+(((cj5)*(x2383))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2397=((r12)*(sj1));
IkReal x2398=((cj1)*(r02));
IkReal x2399=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((gconst2)*(((((sj2)*(x2397)))+(((sj2)*(x2398)))+(((cj2)*(r22))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x2398)*(x2399)))+(((IkReal(-1.00000000000000))*(x2397)*(x2399))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst2)*(((((sj2)*(x2397)))+(((sj2)*(x2398)))+(((cj2)*(r22)))))), ((gconst2)*(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x2398)*(x2399)))+(((IkReal(-1.00000000000000))*(x2397)*(x2399)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2400=IKsin(j4);
IkReal x2401=IKcos(j4);
IkReal x2402=((cj2)*(sj6));
IkReal x2403=((cj1)*(r00));
IkReal x2404=((IkReal(1.00000000000000))*(r21));
IkReal x2405=((cj6)*(sj2));
IkReal x2406=((cj1)*(r02));
IkReal x2407=((r10)*(sj1));
IkReal x2408=((cj2)*(cj6));
IkReal x2409=((cj1)*(r01));
IkReal x2410=((IkReal(1.00000000000000))*(cj2));
IkReal x2411=((r11)*(sj1));
IkReal x2412=((r12)*(sj1));
IkReal x2413=((IkReal(1.00000000000000))*(sj2)*(sj6));
IkReal x2414=((IkReal(1.00000000000000))*(x2401));
evalcond[0]=((((sj2)*(x2406)))+(((IkReal(-1.00000000000000))*(sj5)*(x2400)))+(((cj2)*(r22)))+(((sj2)*(x2412))));
evalcond[1]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x2406)*(x2410)))+(((IkReal(-1.00000000000000))*(sj5)*(x2414)))+(((IkReal(-1.00000000000000))*(x2410)*(x2412))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x2413)))+(((IkReal(-1.00000000000000))*(x2404)*(x2405)))+(((x2408)*(x2409)))+(x2400)+(((x2408)*(x2411)))+(((x2402)*(x2407)))+(((x2402)*(x2403))));
evalcond[3]=((((x2403)*(x2405)))+(((r20)*(x2408)))+(((IkReal(-1.00000000000000))*(x2402)*(x2404)))+(((IkReal(-1.00000000000000))*(x2411)*(x2413)))+(((x2405)*(x2407)))+(((cj5)*(x2400)))+(((IkReal(-1.00000000000000))*(x2409)*(x2413))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2404)*(x2408)))+(((IkReal(-1.00000000000000))*(x2405)*(x2411)))+(((IkReal(-1.00000000000000))*(x2407)*(x2413)))+(((IkReal(-1.00000000000000))*(x2405)*(x2409)))+(((IkReal(-1.00000000000000))*(x2414)))+(((IkReal(-1.00000000000000))*(x2403)*(x2413)))+(((IkReal(-1.00000000000000))*(r20)*(x2402))));
evalcond[5]=((((r20)*(x2405)))+(((IkReal(-1.00000000000000))*(x2407)*(x2408)))+(((x2402)*(x2411)))+(((IkReal(-1.00000000000000))*(x2403)*(x2408)))+(((x2402)*(x2409)))+(((cj5)*(x2401)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x2404))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
    }

}

}

} else
{
IkReal x2415=((IkReal(1.00000000000000))*(sj6));
IkReal x2416=((r02)*(sj1));
IkReal x2417=((IkReal(1.00000000000000))*(cj6));
IkReal x2418=((cj1)*(r11));
IkReal x2419=((IkReal(0.400000000000000))*(sj1));
IkReal x2420=((cj6)*(r01));
IkReal x2421=((r00)*(sj6));
IkReal x2422=((cj1)*(r12));
IkReal x2423=((r01)*(sj6));
IkReal x2424=((cj6)*(r00)*(sj1));
IkReal x2425=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x2426=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.400000000000000))*(x2416)))+(((IkReal(-0.390000000000000))*(cj5)))+(npz)+(((IkReal(-0.400000000000000))*(x2422))));
evalcond[2]=((x2422)+(cj5)+(((IkReal(-1.00000000000000))*(x2416))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x2415)))+(((IkReal(-1.00000000000000))*(x2417)*(x2418)))+(((sj1)*(x2421)))+(((sj1)*(x2420))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(0.400000000000000))*(cj6)*(x2418)))+(((r10)*(x2425)))+(((IkReal(-1.00000000000000))*(x2419)*(x2420)))+(((IkReal(-1.00000000000000))*(x2419)*(x2421)))+(((IkReal(-1.00000000000000))*(npy)*(x2417)))+(((IkReal(-1.00000000000000))*(npx)*(x2415))));
evalcond[5]=((x2426)+(sj5)+(((sj1)*(x2423)))+(((IkReal(-1.00000000000000))*(x2415)*(x2418)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x2417))));
evalcond[6]=((((IkReal(-0.390000000000000))*(sj5)))+(((cj6)*(npx)))+(((IkReal(0.400000000000000))*(sj6)*(x2418)))+(((cj6)*(r00)*(x2419)))+(((IkReal(-1.00000000000000))*(x2419)*(x2423)))+(((IkReal(-1.00000000000000))*(npy)*(x2415)))+(((IkReal(-0.400000000000000))*(x2426))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(sj6)))+(((cj6)*(r20)*(sj5))));
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
IkReal op[6+1], zeror[6];
int numroots;
IkReal j2evalpoly[4];
IkReal x2427=((IkReal(8.00000000000000))*(cj5));
IkReal x2428=((cj1)*(r02));
IkReal x2429=((r12)*(sj1));
IkReal x2430=((IkReal(16.0000000000000))*(sj5));
IkReal x2431=((IkReal(4.00000000000000))*(sj5));
IkReal x2432=((IkReal(16.0000000000000))*(cj5));
IkReal x2433=((IkReal(8.00000000000000))*(sj5));
IkReal x2434=((r11)*(sj1)*(sj6));
IkReal x2435=((cj1)*(cj6)*(r00));
IkReal x2436=((cj6)*(r10)*(sj1));
IkReal x2437=((r21)*(sj6)*(x2431));
IkReal x2438=((cj1)*(r01)*(sj5)*(sj6));
IkReal x2439=((((cj6)*(r20)*(x2431)))+(((IkReal(4.00000000000000))*(cj5)*(r22))));
IkReal x2440=((x2439)+(((IkReal(-1.00000000000000))*(x2437))));
IkReal x2441=((x2437)+(((IkReal(-1.00000000000000))*(x2439))));
IkReal x2442=((((IkReal(-1.00000000000000))*(x2433)*(x2435)))+(((IkReal(-1.00000000000000))*(x2433)*(x2436)))+(((cj1)*(r01)*(sj6)*(x2433)))+(((x2433)*(x2434)))+(((IkReal(-1.00000000000000))*(x2427)*(x2428)))+(((IkReal(-1.00000000000000))*(x2427)*(x2429))));
op[0]=x2440;
op[1]=x2442;
op[2]=x2440;
op[3]=((((cj1)*(r01)*(sj6)*(x2430)))+(((IkReal(-1.00000000000000))*(x2430)*(x2435)))+(((IkReal(-1.00000000000000))*(x2430)*(x2436)))+(((IkReal(-1.00000000000000))*(x2428)*(x2432)))+(((IkReal(-1.00000000000000))*(x2429)*(x2432)))+(((x2430)*(x2434))));
op[4]=x2441;
op[5]=x2442;
op[6]=x2441;
polyroots6(op,zeror,numroots);
IkReal j2array[6], cj2array[6], sj2array[6], tempj2array[1];
int numsolutions = 0;
for(int ij2 = 0; ij2 < numroots; ++ij2)
{
IkReal htj2 = zeror[ij2];
tempj2array[0]=((IkReal(2.00000000000000))*(atan(htj2)));
for(int kj2 = 0; kj2 < 1; ++kj2)
{
j2array[numsolutions] = tempj2array[kj2];
if( j2array[numsolutions] > IKPI )
{
    j2array[numsolutions]-=IK2PI;
}
else if( j2array[numsolutions] < -IKPI )
{
    j2array[numsolutions]+=IK2PI;
}
sj2array[numsolutions] = IKsin(j2array[numsolutions]);
cj2array[numsolutions] = IKcos(j2array[numsolutions]);
numsolutions++;
}
}
bool j2valid[6]={true,true,true,true,true,true};
_nj2 = 6;
for(int ij2 = 0; ij2 < numsolutions; ++ij2)
    {
if( !j2valid[ij2] )
{
    continue;
}
    j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
htj2 = IKtan(j2/2);

IkReal x2443=((IkReal(4.00000000000000))*(r22));
IkReal x2444=(cj5)*(cj5);
IkReal x2445=(htj2)*(htj2)*(htj2);
IkReal x2446=(htj2)*(htj2)*(htj2)*(htj2)*(htj2);
IkReal x2447=(htj2)*(htj2)*(htj2)*(htj2);
IkReal x2448=(htj2)*(htj2)*(htj2)*(htj2)*(htj2)*(htj2);
IkReal x2449=(htj2)*(htj2);
IkReal x2450=(sj5)*(sj5);
IkReal x2451=((cj1)*(r02));
IkReal x2452=((IkReal(4.00000000000000))*(cj6));
IkReal x2453=((cj1)*(r01));
IkReal x2454=((IkReal(8.00000000000000))*(sj6));
IkReal x2455=((r12)*(sj1));
IkReal x2456=((IkReal(16.0000000000000))*(sj6));
IkReal x2457=((IkReal(16.0000000000000))*(sj5));
IkReal x2458=((cj6)*(r21));
IkReal x2459=((r10)*(sj1));
IkReal x2460=((cj5)*(sj5));
IkReal x2461=((r11)*(sj1));
IkReal x2462=((IkReal(8.00000000000000))*(cj6));
IkReal x2463=((cj1)*(r00));
IkReal x2464=((IkReal(4.00000000000000))*(sj6));
IkReal x2465=((r20)*(sj5));
IkReal x2466=((IkReal(8.00000000000000))*(sj5));
IkReal x2467=((cj5)*(cj6));
IkReal x2468=((sj5)*(x2443));
IkReal x2469=((IkReal(16.0000000000000))*(x2444));
IkReal x2470=((IkReal(16.0000000000000))*(x2450));
IkReal x2471=((IkReal(8.00000000000000))*(x2444));
IkReal x2472=((r20)*(x2450));
IkReal x2473=((x2443)*(x2444));
IkReal x2474=((x2443)*(x2460));
IkReal x2475=((x2450)*(x2461));
IkReal x2476=((x2450)*(x2464));
IkReal x2477=((r20)*(x2452)*(x2460));
IkReal x2478=((r21)*(x2460)*(x2464));
IkReal x2479=((x2452)*(x2472));
IkReal x2480=((r21)*(x2476));
IkReal x2481=((x2463)*(x2476));
IkReal x2482=((x2450)*(x2452)*(x2453));
IkReal x2483=((x2452)*(x2475));
IkReal x2484=((x2459)*(x2476));
IkReal x2485=((x2477)+(x2473));
IkReal x2486=((x2474)+(x2479));
IkReal x2487=((x2478)+(((IkReal(-1.00000000000000))*(x2485))));
IkReal x2488=((x2480)+(((IkReal(-1.00000000000000))*(x2486))));
IkReal x2489=((((x2458)*(x2466)))+(((IkReal(8.00000000000000))*(x2455)))+(((IkReal(8.00000000000000))*(x2451)))+(((x2454)*(x2465))));
IkReal x2490=((((IkReal(-1.00000000000000))*(x2451)*(x2466)))+(((IkReal(-1.00000000000000))*(x2455)*(x2466)))+(((IkReal(-8.00000000000000))*(x2450)*(x2458)))+(((IkReal(-1.00000000000000))*(x2454)*(x2472))));
IkReal x2491=((((sj5)*(x2452)*(x2453)))+(((sj5)*(x2463)*(x2464)))+(((sj5)*(x2452)*(x2461)))+(((sj5)*(x2459)*(x2464))));
IkReal x2492=((x2491)+(((IkReal(-1.00000000000000))*(x2443))));
IkReal x2493=((x2484)+(x2482)+(x2483)+(x2481));
IkReal x2494=((x2468)+(((IkReal(-1.00000000000000))*(x2493))));
IkReal x2495=((((x2451)*(x2471)))+(((IkReal(-1.00000000000000))*(x2453)*(x2454)*(x2460)))+(((x2460)*(x2462)*(x2463)))+(((x2459)*(x2460)*(x2462)))+(((x2455)*(x2471)))+(((IkReal(-1.00000000000000))*(x2454)*(x2460)*(x2461))));
IkReal x2496=((((IkReal(8.00000000000000))*(x2455)*(x2460)))+(((IkReal(-1.00000000000000))*(x2450)*(x2453)*(x2454)))+(((IkReal(-1.00000000000000))*(x2454)*(x2475)))+(((x2450)*(x2459)*(x2462)))+(((IkReal(8.00000000000000))*(x2451)*(x2460)))+(((x2450)*(x2462)*(x2463))));
j2evalpoly[0]=((x2443)+(((x2449)*(((x2443)+(((IkReal(-1.00000000000000))*(x2491)))))))+(((htj2)*(x2489)))+(((IkReal(-1.00000000000000))*(x2491)))+(((x2445)*(((((IkReal(16.0000000000000))*(x2455)))+(((IkReal(16.0000000000000))*(x2451)))+(((x2457)*(x2458)))+(((x2456)*(x2465)))))))+(((x2448)*(x2492)))+(((x2447)*(x2492)))+(((x2446)*(x2489))));
j2evalpoly[1]=((x2485)+(((x2445)*(((((IkReal(-1.00000000000000))*(x2456)*(x2460)*(x2461)))+(((IkReal(-1.00000000000000))*(x2453)*(x2456)*(x2460)))+(((x2457)*(x2459)*(x2467)))+(((x2457)*(x2463)*(x2467)))+(((x2451)*(x2469)))+(((x2455)*(x2469)))))))+(((x2449)*(((x2485)+(((IkReal(-1.00000000000000))*(x2478)))))))+(((htj2)*(x2495)))+(((IkReal(-1.00000000000000))*(x2478)))+(((x2448)*(x2487)))+(((x2447)*(x2487)))+(((x2446)*(x2495))));
j2evalpoly[2]=((x2486)+(((htj2)*(x2496)))+(((IkReal(-1.00000000000000))*(x2480)))+(((x2449)*(((x2486)+(((IkReal(-1.00000000000000))*(x2480)))))))+(((x2448)*(x2488)))+(((x2447)*(x2488)))+(((x2446)*(x2496)))+(((x2445)*(((((cj5)*(x2455)*(x2457)))+(((IkReal(-1.00000000000000))*(x2450)*(x2453)*(x2456)))+(((IkReal(-1.00000000000000))*(x2456)*(x2475)))+(((cj5)*(x2451)*(x2457)))+(((cj6)*(x2463)*(x2470)))+(((cj6)*(x2459)*(x2470))))))));
j2evalpoly[3]=((x2493)+(((x2449)*(((x2493)+(((IkReal(-1.00000000000000))*(x2468)))))))+(((x2445)*(((((IkReal(-1.00000000000000))*(x2451)*(x2457)))+(((IkReal(-1.00000000000000))*(x2456)*(x2472)))+(((IkReal(-1.00000000000000))*(x2458)*(x2470)))+(((IkReal(-1.00000000000000))*(x2455)*(x2457)))))))+(((htj2)*(x2490)))+(((IkReal(-1.00000000000000))*(x2468)))+(((x2446)*(x2490)))+(((x2448)*(x2494)))+(((x2447)*(x2494))));
if( IKabs(j2evalpoly[0]) > 0.0000001000000000  || IKabs(j2evalpoly[1]) > 0.0000001000000000  || IKabs(j2evalpoly[2]) > 0.0000001000000000  || IKabs(j2evalpoly[3]) > 0.0000001000000000  )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < numsolutions; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(sj5);
dummyeval[0]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj5;
dummyeval[1]=cj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x2497=((IkReal(1.00000000000000))*(sj6));
IkReal x2498=((IkReal(1.00000000000000))*(r02));
IkReal x2499=((cj1)*(r11));
IkReal x2500=((IkReal(1.00000000000000))*(cj6));
IkReal x2501=((IkReal(0.400000000000000))*(sj6));
IkReal x2502=((r00)*(sj1));
IkReal x2503=((cj1)*(r12));
IkReal x2504=((r12)*(sj1));
IkReal x2505=((r01)*(sj1));
IkReal x2506=((cj1)*(r10));
IkReal x2507=((cj6)*(x2502));
IkReal x2508=((cj6)*(x2505));
IkReal x2509=((cj6)*(x2506));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(((IkReal(-0.400000000000000))*(x2503)))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1))));
evalcond[2]=((((cj2)*(r22)))+(((sj2)*(x2504)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((IkReal(1.00000000000000))+(x2503)+(((IkReal(-1.00000000000000))*(sj1)*(x2498))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj2)*(x2504)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(x2498))));
evalcond[5]=((x2508)+(((sj6)*(x2502)))+(((IkReal(-1.00000000000000))*(x2497)*(x2506)))+(((IkReal(-1.00000000000000))*(x2499)*(x2500))));
evalcond[6]=((IkReal(0.000500000000000000))+(((IkReal(-0.400000000000000))*(x2508)))+(((x2501)*(x2506)))+(((IkReal(-1.00000000000000))*(npx)*(x2497)))+(((IkReal(0.400000000000000))*(cj6)*(x2499)))+(((IkReal(-1.00000000000000))*(x2501)*(x2502)))+(((IkReal(-1.00000000000000))*(npy)*(x2500))));
evalcond[7]=((x2509)+(((IkReal(-1.00000000000000))*(x2497)*(x2499)))+(((sj6)*(x2505)))+(((IkReal(-1.00000000000000))*(x2500)*(x2502))));
evalcond[8]=((((cj6)*(npx)))+(((IkReal(-0.400000000000000))*(x2509)))+(((IkReal(-1.00000000000000))*(npy)*(x2497)))+(((x2499)*(x2501)))+(((IkReal(0.400000000000000))*(x2507)))+(((IkReal(-1.00000000000000))*(x2501)*(x2505))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2510=((cj1)*(cj2));
IkReal x2511=((IkReal(1.00000000000000))*(cj6));
IkReal x2512=((r21)*(sj2));
IkReal x2513=((IkReal(1.00000000000000))*(sj6));
IkReal x2514=((r20)*(sj2));
IkReal x2515=((cj2)*(sj1));
IkReal x2516=((sj6)*(x2515));
if( IKabs(((((r00)*(sj6)*(x2510)))+(((r10)*(x2516)))+(((cj6)*(r11)*(x2515)))+(((cj6)*(r01)*(x2510)))+(((IkReal(-1.00000000000000))*(x2513)*(x2514)))+(((IkReal(-1.00000000000000))*(x2511)*(x2512))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r01)*(sj6)*(x2510)))+(((r11)*(x2516)))+(((IkReal(-1.00000000000000))*(r10)*(x2511)*(x2515)))+(((IkReal(-1.00000000000000))*(x2512)*(x2513)))+(((cj6)*(x2514)))+(((IkReal(-1.00000000000000))*(r00)*(x2510)*(x2511))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r00)*(sj6)*(x2510)))+(((r10)*(x2516)))+(((cj6)*(r11)*(x2515)))+(((cj6)*(r01)*(x2510)))+(((IkReal(-1.00000000000000))*(x2513)*(x2514)))+(((IkReal(-1.00000000000000))*(x2511)*(x2512)))))+IKsqr(((((r01)*(sj6)*(x2510)))+(((r11)*(x2516)))+(((IkReal(-1.00000000000000))*(r10)*(x2511)*(x2515)))+(((IkReal(-1.00000000000000))*(x2512)*(x2513)))+(((cj6)*(x2514)))+(((IkReal(-1.00000000000000))*(r00)*(x2510)*(x2511)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((r00)*(sj6)*(x2510)))+(((r10)*(x2516)))+(((cj6)*(r11)*(x2515)))+(((cj6)*(r01)*(x2510)))+(((IkReal(-1.00000000000000))*(x2513)*(x2514)))+(((IkReal(-1.00000000000000))*(x2511)*(x2512)))), ((((r01)*(sj6)*(x2510)))+(((r11)*(x2516)))+(((IkReal(-1.00000000000000))*(r10)*(x2511)*(x2515)))+(((IkReal(-1.00000000000000))*(x2512)*(x2513)))+(((cj6)*(x2514)))+(((IkReal(-1.00000000000000))*(r00)*(x2510)*(x2511)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2517=IKsin(j4);
IkReal x2518=((cj2)*(sj6));
IkReal x2519=((cj1)*(r00));
IkReal x2520=((IkReal(1.00000000000000))*(r21));
IkReal x2521=((cj6)*(sj2));
IkReal x2522=((r10)*(sj1));
IkReal x2523=((cj2)*(cj6));
IkReal x2524=((cj1)*(r01));
IkReal x2525=((r11)*(sj1));
IkReal x2526=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x2527=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2520)*(x2521)))+(((x2518)*(x2519)))+(((IkReal(-1.00000000000000))*(r20)*(x2527)))+(((IkReal(-1.00000000000000))*(x2517)))+(((x2518)*(x2522)))+(((x2523)*(x2524)))+(((x2523)*(x2525))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2524)*(x2527)))+(x2517)+(((x2519)*(x2521)))+(((IkReal(-1.00000000000000))*(x2525)*(x2527)))+(((r20)*(x2523)))+(((x2521)*(x2522)))+(((IkReal(-1.00000000000000))*(x2518)*(x2520))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2520)*(x2523)))+(((IkReal(-1.00000000000000))*(r20)*(x2518)))+(((IkReal(-1.00000000000000))*(x2522)*(x2527)))+(((IkReal(-1.00000000000000))*(x2521)*(x2525)))+(((IkReal(-1.00000000000000))*(x2521)*(x2524)))+(((IkReal(-1.00000000000000))*(x2519)*(x2527)))+(((IkReal(-1.00000000000000))*(x2526))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x2520)))+(((x2518)*(x2524)))+(((x2518)*(x2525)))+(((r20)*(x2521)))+(((IkReal(-1.00000000000000))*(x2519)*(x2523)))+(((IkReal(-1.00000000000000))*(x2526)))+(((IkReal(-1.00000000000000))*(x2522)*(x2523))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2528=((IkReal(1.00000000000000))*(sj6));
IkReal x2529=((IkReal(1.00000000000000))*(r02));
IkReal x2530=((cj1)*(r11));
IkReal x2531=((IkReal(1.00000000000000))*(cj6));
IkReal x2532=((IkReal(0.400000000000000))*(sj6));
IkReal x2533=((r00)*(sj1));
IkReal x2534=((cj1)*(r12));
IkReal x2535=((r12)*(sj1));
IkReal x2536=((r01)*(sj1));
IkReal x2537=((cj1)*(r10));
IkReal x2538=((cj6)*(x2533));
IkReal x2539=((cj6)*(x2536));
IkReal x2540=((cj6)*(x2537));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(((IkReal(-0.400000000000000))*(x2534)))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1))));
evalcond[2]=((((sj2)*(x2535)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((IkReal(-1.00000000000000))+(x2534)+(((IkReal(-1.00000000000000))*(sj1)*(x2529))));
evalcond[4]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x2535)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(x2529))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2528)*(x2537)))+(((sj6)*(x2533)))+(x2539)+(((IkReal(-1.00000000000000))*(x2530)*(x2531))));
evalcond[6]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x2528)))+(((IkReal(-0.400000000000000))*(x2539)))+(((IkReal(0.400000000000000))*(cj6)*(x2530)))+(((IkReal(-1.00000000000000))*(npy)*(x2531)))+(((x2532)*(x2537)))+(((IkReal(-1.00000000000000))*(x2532)*(x2533))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x2528)*(x2530)))+(((sj6)*(x2536)))+(x2540)+(((IkReal(-1.00000000000000))*(x2531)*(x2533))));
evalcond[8]=((((x2530)*(x2532)))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(x2528)))+(((IkReal(-0.400000000000000))*(x2540)))+(((IkReal(0.400000000000000))*(x2538)))+(((IkReal(-1.00000000000000))*(x2532)*(x2536))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2541=((cj1)*(cj2));
IkReal x2542=((sj2)*(sj6));
IkReal x2543=((IkReal(1.00000000000000))*(sj6));
IkReal x2544=((IkReal(1.00000000000000))*(cj6)*(sj2));
IkReal x2545=((cj2)*(r10)*(sj1));
IkReal x2546=((cj2)*(r11)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r20)*(x2542)))+(((cj6)*(x2546)))+(((sj6)*(x2545)))+(((r00)*(sj6)*(x2541)))+(((IkReal(-1.00000000000000))*(r21)*(x2544)))+(((cj6)*(r01)*(x2541))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(r00)*(x2541)))+(((r21)*(x2542)))+(((IkReal(-1.00000000000000))*(x2543)*(x2546)))+(((cj6)*(x2545)))+(((IkReal(-1.00000000000000))*(r20)*(x2544)))+(((IkReal(-1.00000000000000))*(r01)*(x2541)*(x2543))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r20)*(x2542)))+(((cj6)*(x2546)))+(((sj6)*(x2545)))+(((r00)*(sj6)*(x2541)))+(((IkReal(-1.00000000000000))*(r21)*(x2544)))+(((cj6)*(r01)*(x2541)))))+IKsqr(((((cj6)*(r00)*(x2541)))+(((r21)*(x2542)))+(((IkReal(-1.00000000000000))*(x2543)*(x2546)))+(((cj6)*(x2545)))+(((IkReal(-1.00000000000000))*(r20)*(x2544)))+(((IkReal(-1.00000000000000))*(r01)*(x2541)*(x2543)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r20)*(x2542)))+(((cj6)*(x2546)))+(((sj6)*(x2545)))+(((r00)*(sj6)*(x2541)))+(((IkReal(-1.00000000000000))*(r21)*(x2544)))+(((cj6)*(r01)*(x2541)))), ((((cj6)*(r00)*(x2541)))+(((r21)*(x2542)))+(((IkReal(-1.00000000000000))*(x2543)*(x2546)))+(((cj6)*(x2545)))+(((IkReal(-1.00000000000000))*(r20)*(x2544)))+(((IkReal(-1.00000000000000))*(r01)*(x2541)*(x2543)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2547=IKcos(j4);
IkReal x2548=((cj2)*(sj6));
IkReal x2549=((cj1)*(r00));
IkReal x2550=((IkReal(1.00000000000000))*(r21));
IkReal x2551=((cj6)*(sj2));
IkReal x2552=((r10)*(sj1));
IkReal x2553=((cj2)*(cj6));
IkReal x2554=((cj1)*(r01));
IkReal x2555=((r11)*(sj1));
IkReal x2556=((IkReal(1.00000000000000))*(IKsin(j4)));
IkReal x2557=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2550)*(x2551)))+(((IkReal(-1.00000000000000))*(r20)*(x2557)))+(((x2548)*(x2552)))+(((x2553)*(x2554)))+(((x2553)*(x2555)))+(((x2548)*(x2549)))+(((IkReal(-1.00000000000000))*(x2556))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2554)*(x2557)))+(((IkReal(-1.00000000000000))*(x2548)*(x2550)))+(((x2551)*(x2552)))+(((IkReal(-1.00000000000000))*(x2555)*(x2557)))+(((x2549)*(x2551)))+(((r20)*(x2553)))+(((IkReal(-1.00000000000000))*(x2556))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2549)*(x2557)))+(((IkReal(-1.00000000000000))*(x2551)*(x2554)))+(((IkReal(-1.00000000000000))*(x2551)*(x2555)))+(((IkReal(-1.00000000000000))*(r20)*(x2548)))+(((IkReal(-1.00000000000000))*(x2547)))+(((IkReal(-1.00000000000000))*(x2550)*(x2553)))+(((IkReal(-1.00000000000000))*(x2552)*(x2557))));
evalcond[3]=((x2547)+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x2550)))+(((x2548)*(x2554)))+(((x2548)*(x2555)))+(((r20)*(x2551)))+(((IkReal(-1.00000000000000))*(x2549)*(x2553)))+(((IkReal(-1.00000000000000))*(x2552)*(x2553))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2558=((IkReal(1.00000000000000))*(sj6));
IkReal x2559=((r02)*(sj1));
IkReal x2560=((cj1)*(cj6));
IkReal x2561=((cj6)*(sj1));
IkReal x2562=((IkReal(0.400000000000000))*(r01));
IkReal x2563=((IkReal(1.00000000000000))*(cj2));
IkReal x2564=((r11)*(sj1));
IkReal x2565=((cj2)*(sj6));
IkReal x2566=((cj1)*(r01));
IkReal x2567=((cj1)*(r12));
IkReal x2568=((cj6)*(r20));
IkReal x2569=((sj1)*(sj6));
IkReal x2570=((r00)*(x2561));
IkReal x2571=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x2572=((r00)*(x2569));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((npz)+(((IkReal(-0.400000000000000))*(x2567)))+(((IkReal(0.400000000000000))*(x2559))));
evalcond[2]=((x2567)+(((IkReal(-1.00000000000000))*(x2559))));
evalcond[3]=((x2572)+(((r01)*(x2561)))+(((IkReal(-1.00000000000000))*(r11)*(x2560)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x2558))));
evalcond[4]=((IkReal(0.000500000000000000))+(((r10)*(x2571)))+(((IkReal(-1.00000000000000))*(npx)*(x2558)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((IkReal(-1.00000000000000))*(x2561)*(x2562)))+(((IkReal(-0.400000000000000))*(x2572)))+(((IkReal(0.400000000000000))*(r11)*(x2560))));
evalcond[5]=((IkReal(1.00000000000000))+(((r01)*(x2569)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x2558)))+(((r10)*(x2560)))+(((IkReal(-1.00000000000000))*(x2570))));
evalcond[6]=((IkReal(-0.390000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x2558)))+(((IkReal(-1.00000000000000))*(x2562)*(x2569)))+(((cj6)*(npx)))+(((r11)*(x2571)))+(((IkReal(0.400000000000000))*(x2570)))+(((IkReal(-0.400000000000000))*(r10)*(x2560))));
evalcond[7]=((((r00)*(sj2)*(x2560)))+(((cj2)*(x2568)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x2558)))+(((r10)*(sj2)*(x2561)))+(((IkReal(-1.00000000000000))*(sj2)*(x2558)*(x2566)))+(((IkReal(-1.00000000000000))*(sj2)*(x2558)*(x2564))));
evalcond[8]=((((sj2)*(x2568)))+(((IkReal(-1.00000000000000))*(r00)*(x2560)*(x2563)))+(((IkReal(-1.00000000000000))*(r10)*(x2561)*(x2563)))+(((x2565)*(x2566)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x2558)))+(((x2564)*(x2565))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2573=((r12)*(sj1));
IkReal x2574=((cj1)*(r02));
if( IKabs(((((sj2)*(x2573)))+(((sj2)*(x2574)))+(((cj2)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj2)*(x2573)))+(((cj2)*(x2574)))+(((IkReal(-1.00000000000000))*(r22)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj2)*(x2573)))+(((sj2)*(x2574)))+(((cj2)*(r22)))))+IKsqr(((((cj2)*(x2573)))+(((cj2)*(x2574)))+(((IkReal(-1.00000000000000))*(r22)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((sj2)*(x2573)))+(((sj2)*(x2574)))+(((cj2)*(r22)))), ((((cj2)*(x2573)))+(((cj2)*(x2574)))+(((IkReal(-1.00000000000000))*(r22)*(sj2)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2575=IKcos(j4);
IkReal x2576=((cj2)*(sj6));
IkReal x2577=((cj1)*(r00));
IkReal x2578=((sj1)*(sj2));
IkReal x2579=((IkReal(1.00000000000000))*(sj6));
IkReal x2580=((IkReal(1.00000000000000))*(cj1));
IkReal x2581=((cj6)*(r01));
IkReal x2582=((cj2)*(sj1));
IkReal x2583=((cj6)*(r11));
IkReal x2584=((IkReal(1.00000000000000))*(IKsin(j4)));
IkReal x2585=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((((r12)*(x2578)))+(((IkReal(-1.00000000000000))*(x2584)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((x2575)+(((IkReal(-1.00000000000000))*(r12)*(x2582)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x2580))));
evalcond[2]=((((r10)*(sj1)*(x2576)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x2579)))+(((IkReal(-1.00000000000000))*(x2584)))+(((cj1)*(cj2)*(x2581)))+(((IkReal(-1.00000000000000))*(sj2)*(x2585)))+(((x2576)*(x2577)))+(((x2582)*(x2583))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x2576)))+(((IkReal(-1.00000000000000))*(x2578)*(x2583)))+(((IkReal(-1.00000000000000))*(sj2)*(x2577)*(x2579)))+(((IkReal(-1.00000000000000))*(x2575)))+(((IkReal(-1.00000000000000))*(sj2)*(x2580)*(x2581)))+(((IkReal(-1.00000000000000))*(cj2)*(x2585)))+(((IkReal(-1.00000000000000))*(r10)*(x2578)*(x2579))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2586=((IkReal(1.00000000000000))*(sj6));
IkReal x2587=((r02)*(sj1));
IkReal x2588=((cj1)*(cj6));
IkReal x2589=((cj6)*(sj1));
IkReal x2590=((IkReal(0.400000000000000))*(r01));
IkReal x2591=((IkReal(1.00000000000000))*(cj2));
IkReal x2592=((r11)*(sj1));
IkReal x2593=((cj2)*(sj6));
IkReal x2594=((cj1)*(r01));
IkReal x2595=((cj1)*(r12));
IkReal x2596=((cj6)*(r20));
IkReal x2597=((sj1)*(sj6));
IkReal x2598=((r00)*(x2589));
IkReal x2599=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x2600=((r00)*(x2597));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.400000000000000))*(x2587)))+(npz)+(((IkReal(-0.400000000000000))*(x2595))));
evalcond[2]=((x2595)+(((IkReal(-1.00000000000000))*(x2587))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x2586)))+(((r01)*(x2589)))+(((IkReal(-1.00000000000000))*(r11)*(x2588)))+(x2600));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-0.400000000000000))*(x2600)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((r10)*(x2599)))+(((IkReal(-1.00000000000000))*(x2589)*(x2590)))+(((IkReal(-1.00000000000000))*(npx)*(x2586)))+(((IkReal(0.400000000000000))*(r11)*(x2588))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x2598)))+(((r01)*(x2597)))+(((r10)*(x2588)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x2586))));
evalcond[6]=((IkReal(0.390000000000000))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x2590)*(x2597)))+(((IkReal(0.400000000000000))*(x2598)))+(((IkReal(-1.00000000000000))*(npy)*(x2586)))+(((r11)*(x2599)))+(((IkReal(-0.400000000000000))*(r10)*(x2588))));
evalcond[7]=((((r00)*(sj2)*(x2588)))+(((cj2)*(x2596)))+(((r10)*(sj2)*(x2589)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x2586)))+(((IkReal(-1.00000000000000))*(sj2)*(x2586)*(x2594)))+(((IkReal(-1.00000000000000))*(sj2)*(x2586)*(x2592))));
evalcond[8]=((((sj2)*(x2596)))+(((x2592)*(x2593)))+(((x2593)*(x2594)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x2586)))+(((IkReal(-1.00000000000000))*(r10)*(x2589)*(x2591)))+(((IkReal(-1.00000000000000))*(r00)*(x2588)*(x2591))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2601=((IkReal(1.00000000000000))*(sj2));
IkReal x2602=((r12)*(sj1));
IkReal x2603=((cj1)*(r02));
IkReal x2604=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IkReal(-1.00000000000000))*(x2601)*(x2602)))+(((IkReal(-1.00000000000000))*(x2601)*(x2603)))+(((IkReal(-1.00000000000000))*(r22)*(x2604))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x2603)*(x2604)))+(((IkReal(-1.00000000000000))*(x2602)*(x2604))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x2601)*(x2602)))+(((IkReal(-1.00000000000000))*(x2601)*(x2603)))+(((IkReal(-1.00000000000000))*(r22)*(x2604)))))+IKsqr(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x2603)*(x2604)))+(((IkReal(-1.00000000000000))*(x2602)*(x2604)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x2601)*(x2602)))+(((IkReal(-1.00000000000000))*(x2601)*(x2603)))+(((IkReal(-1.00000000000000))*(r22)*(x2604)))), ((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x2603)*(x2604)))+(((IkReal(-1.00000000000000))*(x2602)*(x2604)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2605=IKsin(j4);
IkReal x2606=((cj2)*(sj6));
IkReal x2607=((cj1)*(r00));
IkReal x2608=((sj1)*(sj2));
IkReal x2609=((IkReal(1.00000000000000))*(sj6));
IkReal x2610=((IkReal(1.00000000000000))*(cj1));
IkReal x2611=((cj6)*(r01));
IkReal x2612=((cj2)*(sj1));
IkReal x2613=((cj6)*(r11));
IkReal x2614=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x2615=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((((cj2)*(r22)))+(((r12)*(x2608)))+(x2605)+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj2)*(r02)*(x2610)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(r12)*(x2612)))+(((IkReal(-1.00000000000000))*(x2614))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2605)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x2609)))+(((cj1)*(cj2)*(x2611)))+(((x2606)*(x2607)))+(((r10)*(sj1)*(x2606)))+(((x2612)*(x2613)))+(((IkReal(-1.00000000000000))*(sj2)*(x2615))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2608)*(x2613)))+(((IkReal(-1.00000000000000))*(r20)*(x2606)))+(((IkReal(-1.00000000000000))*(sj2)*(x2610)*(x2611)))+(((IkReal(-1.00000000000000))*(x2614)))+(((IkReal(-1.00000000000000))*(cj2)*(x2615)))+(((IkReal(-1.00000000000000))*(r10)*(x2608)*(x2609)))+(((IkReal(-1.00000000000000))*(sj2)*(x2607)*(x2609))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2616=((cj2)*(sj6));
IkReal x2617=((IkReal(1.00000000000000))*(cj2)*(cj6));
if( IKabs(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((cj1)*(r01)*(x2616)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x2617)))+(((r11)*(sj1)*(x2616)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x2617)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(sj6)))+(((cj6)*(r20)*(sj2))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))))))+IKsqr(((((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((cj1)*(r01)*(x2616)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x2617)))+(((r11)*(sj1)*(x2616)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x2617)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(sj6)))+(((cj6)*(r20)*(sj2)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))))), ((((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((cj1)*(r01)*(x2616)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x2617)))+(((r11)*(sj1)*(x2616)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x2617)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(sj6)))+(((cj6)*(r20)*(sj2)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2618=IKsin(j4);
IkReal x2619=IKcos(j4);
IkReal x2620=((cj2)*(sj6));
IkReal x2621=((cj1)*(r00));
IkReal x2622=((IkReal(1.00000000000000))*(r21));
IkReal x2623=((cj6)*(sj2));
IkReal x2624=((cj1)*(r02));
IkReal x2625=((r10)*(sj1));
IkReal x2626=((cj2)*(cj6));
IkReal x2627=((cj1)*(r01));
IkReal x2628=((IkReal(1.00000000000000))*(cj2));
IkReal x2629=((r11)*(sj1));
IkReal x2630=((r12)*(sj1));
IkReal x2631=((IkReal(1.00000000000000))*(sj2)*(sj6));
IkReal x2632=((IkReal(1.00000000000000))*(x2619));
IkReal x2633=((IkReal(1.00000000000000))*(x2618));
evalcond[0]=((((sj2)*(x2630)))+(((cj2)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x2633)))+(((sj2)*(x2624))));
evalcond[1]=((((sj5)*(x2619)))+(((IkReal(-1.00000000000000))*(x2628)*(x2630)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x2624)*(x2628))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2622)*(x2623)))+(((x2626)*(x2629)))+(((x2626)*(x2627)))+(((IkReal(-1.00000000000000))*(x2633)))+(((IkReal(-1.00000000000000))*(r20)*(x2631)))+(((x2620)*(x2625)))+(((x2620)*(x2621))));
evalcond[3]=((((r20)*(x2626)))+(((cj5)*(x2618)))+(((IkReal(-1.00000000000000))*(x2629)*(x2631)))+(((x2621)*(x2623)))+(((x2623)*(x2625)))+(((IkReal(-1.00000000000000))*(x2620)*(x2622)))+(((IkReal(-1.00000000000000))*(x2627)*(x2631))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2622)*(x2626)))+(((IkReal(-1.00000000000000))*(x2632)))+(((IkReal(-1.00000000000000))*(r20)*(x2620)))+(((IkReal(-1.00000000000000))*(x2623)*(x2629)))+(((IkReal(-1.00000000000000))*(x2623)*(x2627)))+(((IkReal(-1.00000000000000))*(x2621)*(x2631)))+(((IkReal(-1.00000000000000))*(x2625)*(x2631))));
evalcond[5]=((((r20)*(x2623)))+(((IkReal(-1.00000000000000))*(x2621)*(x2626)))+(((IkReal(-1.00000000000000))*(x2625)*(x2626)))+(((x2620)*(x2627)))+(((x2620)*(x2629)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x2622)))+(((IkReal(-1.00000000000000))*(cj5)*(x2632))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2634=((cj1)*(cj2));
IkReal x2635=((cj2)*(sj1));
IkReal x2636=((IkReal(1.00000000000000))*(sj2));
if( IKabs(((((cj6)*(r01)*(x2634)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x2636)))+(((cj6)*(r11)*(x2635)))+(((r00)*(sj6)*(x2634)))+(((r10)*(sj6)*(x2635)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x2636))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r12)*(x2635)))+(((IkReal(-1.00000000000000))*(r22)*(x2636)))+(((r02)*(x2634))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj6)*(r01)*(x2634)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x2636)))+(((cj6)*(r11)*(x2635)))+(((r00)*(sj6)*(x2634)))+(((r10)*(sj6)*(x2635)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x2636)))))+IKsqr(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r12)*(x2635)))+(((IkReal(-1.00000000000000))*(r22)*(x2636)))+(((r02)*(x2634)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((cj6)*(r01)*(x2634)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x2636)))+(((cj6)*(r11)*(x2635)))+(((r00)*(sj6)*(x2634)))+(((r10)*(sj6)*(x2635)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x2636)))), ((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r12)*(x2635)))+(((IkReal(-1.00000000000000))*(r22)*(x2636)))+(((r02)*(x2634)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2637=IKsin(j4);
IkReal x2638=IKcos(j4);
IkReal x2639=((cj2)*(sj6));
IkReal x2640=((cj1)*(r00));
IkReal x2641=((IkReal(1.00000000000000))*(r21));
IkReal x2642=((cj6)*(sj2));
IkReal x2643=((cj1)*(r02));
IkReal x2644=((r10)*(sj1));
IkReal x2645=((cj2)*(cj6));
IkReal x2646=((cj1)*(r01));
IkReal x2647=((IkReal(1.00000000000000))*(cj2));
IkReal x2648=((r11)*(sj1));
IkReal x2649=((r12)*(sj1));
IkReal x2650=((IkReal(1.00000000000000))*(sj2)*(sj6));
IkReal x2651=((IkReal(1.00000000000000))*(x2638));
IkReal x2652=((IkReal(1.00000000000000))*(x2637));
evalcond[0]=((((cj2)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x2652)))+(((sj2)*(x2643)))+(((sj2)*(x2649))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2647)*(x2649)))+(((r22)*(sj2)))+(((sj5)*(x2638)))+(((IkReal(-1.00000000000000))*(x2643)*(x2647))));
evalcond[2]=((((x2639)*(x2644)))+(((x2639)*(x2640)))+(((IkReal(-1.00000000000000))*(x2641)*(x2642)))+(((IkReal(-1.00000000000000))*(r20)*(x2650)))+(((x2645)*(x2646)))+(((x2645)*(x2648)))+(((IkReal(-1.00000000000000))*(x2652))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2646)*(x2650)))+(((cj5)*(x2637)))+(((IkReal(-1.00000000000000))*(x2648)*(x2650)))+(((x2640)*(x2642)))+(((x2642)*(x2644)))+(((IkReal(-1.00000000000000))*(x2639)*(x2641)))+(((r20)*(x2645))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2644)*(x2650)))+(((IkReal(-1.00000000000000))*(x2640)*(x2650)))+(((IkReal(-1.00000000000000))*(x2641)*(x2645)))+(((IkReal(-1.00000000000000))*(x2651)))+(((IkReal(-1.00000000000000))*(x2642)*(x2648)))+(((IkReal(-1.00000000000000))*(x2642)*(x2646)))+(((IkReal(-1.00000000000000))*(r20)*(x2639))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2640)*(x2645)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x2641)))+(((x2639)*(x2648)))+(((x2639)*(x2646)))+(((IkReal(-1.00000000000000))*(x2644)*(x2645)))+(((IkReal(-1.00000000000000))*(cj5)*(x2651)))+(((r20)*(x2642))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2653=((r12)*(sj1));
IkReal x2654=((cj1)*(r02));
if( IKabs(((gconst3)*(((((cj2)*(r22)))+(((sj2)*(x2654)))+(((sj2)*(x2653))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(r22)*(sj2)))+(((cj2)*(x2654)))+(((cj2)*(x2653))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(((((cj2)*(r22)))+(((sj2)*(x2654)))+(((sj2)*(x2653)))))), ((gconst3)*(((((IkReal(-1.00000000000000))*(r22)*(sj2)))+(((cj2)*(x2654)))+(((cj2)*(x2653)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2655=IKsin(j4);
IkReal x2656=IKcos(j4);
IkReal x2657=((cj2)*(sj6));
IkReal x2658=((cj1)*(r00));
IkReal x2659=((IkReal(1.00000000000000))*(r21));
IkReal x2660=((cj6)*(sj2));
IkReal x2661=((cj1)*(r02));
IkReal x2662=((r10)*(sj1));
IkReal x2663=((cj2)*(cj6));
IkReal x2664=((cj1)*(r01));
IkReal x2665=((IkReal(1.00000000000000))*(cj2));
IkReal x2666=((r11)*(sj1));
IkReal x2667=((r12)*(sj1));
IkReal x2668=((IkReal(1.00000000000000))*(sj2)*(sj6));
IkReal x2669=((IkReal(1.00000000000000))*(x2656));
IkReal x2670=((IkReal(1.00000000000000))*(x2655));
evalcond[0]=((((cj2)*(r22)))+(((sj2)*(x2667)))+(((sj2)*(x2661)))+(((IkReal(-1.00000000000000))*(sj5)*(x2670))));
evalcond[1]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x2665)*(x2667)))+(((sj5)*(x2656)))+(((IkReal(-1.00000000000000))*(x2661)*(x2665))));
evalcond[2]=((((x2657)*(x2662)))+(((x2657)*(x2658)))+(((x2663)*(x2664)))+(((x2663)*(x2666)))+(((IkReal(-1.00000000000000))*(r20)*(x2668)))+(((IkReal(-1.00000000000000))*(x2670)))+(((IkReal(-1.00000000000000))*(x2659)*(x2660))));
evalcond[3]=((((x2658)*(x2660)))+(((cj5)*(x2655)))+(((IkReal(-1.00000000000000))*(x2664)*(x2668)))+(((x2660)*(x2662)))+(((IkReal(-1.00000000000000))*(x2657)*(x2659)))+(((IkReal(-1.00000000000000))*(x2666)*(x2668)))+(((r20)*(x2663))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2662)*(x2668)))+(((IkReal(-1.00000000000000))*(x2669)))+(((IkReal(-1.00000000000000))*(x2659)*(x2663)))+(((IkReal(-1.00000000000000))*(x2658)*(x2668)))+(((IkReal(-1.00000000000000))*(x2660)*(x2666)))+(((IkReal(-1.00000000000000))*(x2660)*(x2664)))+(((IkReal(-1.00000000000000))*(r20)*(x2657))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2658)*(x2663)))+(((x2657)*(x2664)))+(((x2657)*(x2666)))+(((IkReal(-1.00000000000000))*(x2662)*(x2663)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x2659)))+(((IkReal(-1.00000000000000))*(cj5)*(x2669)))+(((r20)*(x2660))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
    }

}

}

} else
{
IkReal x2671=((IkReal(0.400000000000000))*(cj6));
IkReal x2672=((r00)*(sj1));
IkReal x2673=((IkReal(1.00000000000000))*(cj6));
IkReal x2674=((cj1)*(r11));
IkReal x2675=((IkReal(0.400000000000000))*(sj1));
IkReal x2676=((cj1)*(r10));
IkReal x2677=((IkReal(1.00000000000000))*(sj6));
IkReal x2678=((IkReal(0.400000000000000))*(sj6));
IkReal x2679=((r01)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(x2675)))+(npz)+(((IkReal(-0.400000000000000))*(cj1)*(r12))));
evalcond[2]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x2671)))+(((IkReal(-1.00000000000000))*(x2672)*(x2678)))+(((x2671)*(x2674)))+(((IkReal(-1.00000000000000))*(npx)*(x2677)))+(((IkReal(-1.00000000000000))*(npy)*(x2673)))+(((x2676)*(x2678))));
evalcond[3]=((((sj1)*(x2679)))+(((IkReal(-1.00000000000000))*(x2674)*(x2677)))+(((IkReal(-1.00000000000000))*(x2672)*(x2673)))+(((cj6)*(x2676)))+(((IkReal(-1.00000000000000))*(cj3))));
evalcond[4]=((IkReal(-0.390000000000000))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x2675)*(x2679)))+(((IkReal(-1.00000000000000))*(x2671)*(x2676)))+(((x2671)*(x2672)))+(((IkReal(-1.00000000000000))*(npy)*(x2677)))+(((x2674)*(x2678))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
IkReal x2680=(sj1)*(sj1);
IkReal x2681=(sj6)*(sj6);
IkReal x2682=(cj1)*(cj1);
IkReal x2683=(cj6)*(cj6);
IkReal x2684=((IkReal(2.00000000000000))*(r11));
IkReal x2685=((cj1)*(sj1));
IkReal x2686=((IkReal(2.00000000000000))*(r00));
IkReal x2687=((cj6)*(sj6));
IkReal x2688=((r10)*(x2687));
IkReal x2689=((IkReal(1.00000000000000))*(x2681));
IkReal x2690=((IkReal(1.00000000000000))*(x2683));
gconst4=IKsign(((((IkReal(-1.00000000000000))*(x2682)*(x2690)*((r00)*(r00))))+(((r01)*(x2682)*(x2686)*(x2687)))+(((IkReal(2.00000000000000))*(r20)*(r21)*(x2687)))+(((IkReal(-1.00000000000000))*(r01)*(x2681)*(x2684)*(x2685)))+(((IkReal(2.00000000000000))*(r01)*(x2685)*(x2688)))+(((IkReal(-1.00000000000000))*(x2689)*((r21)*(r21))))+(((x2680)*(x2684)*(x2688)))+(((IkReal(-1.00000000000000))*(x2682)*(x2689)*((r01)*(r01))))+(((r00)*(x2684)*(x2685)*(x2687)))+(((IkReal(-1.00000000000000))*(r10)*(x2683)*(x2685)*(x2686)))+(((IkReal(-1.00000000000000))*(x2680)*(x2690)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x2680)*(x2689)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x2690)*((r20)*(r20))))));
IkReal x2691=(sj1)*(sj1);
IkReal x2692=(sj6)*(sj6);
IkReal x2693=(cj1)*(cj1);
IkReal x2694=(cj6)*(cj6);
IkReal x2695=((IkReal(2.00000000000000))*(r11));
IkReal x2696=((cj1)*(sj1));
IkReal x2697=((IkReal(2.00000000000000))*(r00));
IkReal x2698=((cj6)*(sj6));
IkReal x2699=((r10)*(x2698));
IkReal x2700=((IkReal(1.00000000000000))*(x2692));
IkReal x2701=((IkReal(1.00000000000000))*(x2694));
dummyeval[0]=((((IkReal(2.00000000000000))*(r20)*(r21)*(x2698)))+(((IkReal(-1.00000000000000))*(x2693)*(x2700)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x2691)*(x2701)*((r10)*(r10))))+(((x2691)*(x2695)*(x2699)))+(((r00)*(x2695)*(x2696)*(x2698)))+(((r01)*(x2693)*(x2697)*(x2698)))+(((IkReal(-1.00000000000000))*(x2693)*(x2701)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x2691)*(x2700)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(x2694)*(x2696)*(x2697)))+(((IkReal(-1.00000000000000))*(x2701)*((r20)*(r20))))+(((IkReal(-1.00000000000000))*(x2700)*((r21)*(r21))))+(((IkReal(-1.00000000000000))*(r01)*(x2692)*(x2695)*(x2696)))+(((IkReal(2.00000000000000))*(r01)*(x2696)*(x2699))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x2702=((IkReal(1.00000000000000))*(sj6));
IkReal x2703=((r02)*(sj1));
IkReal x2704=((IkReal(1.00000000000000))*(cj6));
IkReal x2705=((cj1)*(r11));
IkReal x2706=((IkReal(0.400000000000000))*(sj1));
IkReal x2707=((cj6)*(r01));
IkReal x2708=((r00)*(sj6));
IkReal x2709=((cj1)*(r12));
IkReal x2710=((r01)*(sj6));
IkReal x2711=((cj6)*(r00)*(sj1));
IkReal x2712=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x2713=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-0.400000000000000))*(x2709)))+(((IkReal(0.400000000000000))*(x2703)))+(npz));
evalcond[2]=((x2709)+(((IkReal(-1.00000000000000))*(x2703))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x2702)))+(((IkReal(-1.00000000000000))*(x2704)*(x2705)))+(((sj1)*(x2708)))+(((sj1)*(x2707))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x2702)))+(((IkReal(-1.00000000000000))*(npy)*(x2704)))+(((IkReal(0.400000000000000))*(cj6)*(x2705)))+(((r10)*(x2712)))+(((IkReal(-1.00000000000000))*(x2706)*(x2708)))+(((IkReal(-1.00000000000000))*(x2706)*(x2707))));
evalcond[5]=((IkReal(-1.00000000000000))+(x2713)+(((IkReal(-1.00000000000000))*(x2702)*(x2705)))+(((sj1)*(x2710)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x2704))));
evalcond[6]=((IkReal(-0.390000000000000))+(((cj6)*(npx)))+(((cj6)*(r00)*(x2706)))+(((IkReal(-1.00000000000000))*(npy)*(x2702)))+(((IkReal(-0.400000000000000))*(x2713)))+(((IkReal(-1.00000000000000))*(x2706)*(x2710)))+(((IkReal(0.400000000000000))*(sj6)*(x2705))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
IkReal x2714=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(r21)*(x2714)))+(((cj6)*(r20))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(r10)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x2714)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x2714)))+(((cj1)*(cj6)*(r00))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x2715=IKatan2(((((IkReal(-1.00000000000000))*(r21)*(x2714)))+(((cj6)*(r20)))), ((((cj6)*(r10)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x2714)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x2714)))+(((cj1)*(cj6)*(r00)))));
j2array[0]=((IkReal(-1.00000000000000))*(x2715));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x2715))));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[1];
IkReal x2716=IKcos(j2);
IkReal x2717=IKsin(j2);
IkReal x2718=((IkReal(1.00000000000000))*(cj6));
IkReal x2719=((cj1)*(x2716));
IkReal x2720=((sj1)*(x2716));
evalcond[0]=((((IkReal(-1.00000000000000))*(r10)*(x2718)*(x2720)))+(((r11)*(sj6)*(x2720)))+(((cj6)*(r20)*(x2717)))+(((IkReal(-1.00000000000000))*(r00)*(x2718)*(x2719)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x2717)))+(((r01)*(sj6)*(x2719))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2721=((r12)*(sj1));
IkReal x2722=((cj1)*(r02));
IkReal x2723=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((sj2)*(x2722)))+(((sj2)*(x2721)))+(((cj2)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x2722)*(x2723)))+(((IkReal(-1.00000000000000))*(x2721)*(x2723))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj2)*(x2722)))+(((sj2)*(x2721)))+(((cj2)*(r22)))))+IKsqr(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x2722)*(x2723)))+(((IkReal(-1.00000000000000))*(x2721)*(x2723)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((sj2)*(x2722)))+(((sj2)*(x2721)))+(((cj2)*(r22)))), ((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x2722)*(x2723)))+(((IkReal(-1.00000000000000))*(x2721)*(x2723)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2724=IKsin(j4);
IkReal x2725=((cj2)*(sj6));
IkReal x2726=((cj1)*(r00));
IkReal x2727=((sj1)*(sj2));
IkReal x2728=((IkReal(1.00000000000000))*(sj6));
IkReal x2729=((IkReal(1.00000000000000))*(cj1));
IkReal x2730=((cj6)*(r01));
IkReal x2731=((cj2)*(sj1));
IkReal x2732=((cj6)*(r11));
IkReal x2733=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x2734=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2724)))+(((cj2)*(r22)))+(((r12)*(x2727)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x2729)))+(((IkReal(-1.00000000000000))*(x2733)))+(((IkReal(-1.00000000000000))*(r12)*(x2731))));
evalcond[2]=((x2724)+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x2728)))+(((IkReal(-1.00000000000000))*(sj2)*(x2734)))+(((cj1)*(cj2)*(x2730)))+(((x2731)*(x2732)))+(((x2725)*(x2726)))+(((r10)*(sj1)*(x2725))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(x2726)*(x2728)))+(((IkReal(-1.00000000000000))*(cj2)*(x2734)))+(((IkReal(-1.00000000000000))*(sj2)*(x2729)*(x2730)))+(((IkReal(-1.00000000000000))*(r20)*(x2725)))+(((IkReal(-1.00000000000000))*(x2733)))+(((IkReal(-1.00000000000000))*(r10)*(x2727)*(x2728)))+(((IkReal(-1.00000000000000))*(x2727)*(x2732))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

} else
{
IkReal x2735=((IkReal(1.00000000000000))*(sj6));
IkReal x2736=((r02)*(sj1));
IkReal x2737=((IkReal(1.00000000000000))*(cj6));
IkReal x2738=((cj1)*(r11));
IkReal x2739=((IkReal(0.400000000000000))*(sj1));
IkReal x2740=((cj6)*(r01));
IkReal x2741=((r00)*(sj6));
IkReal x2742=((cj1)*(r12));
IkReal x2743=((r01)*(sj6));
IkReal x2744=((cj6)*(r00)*(sj1));
IkReal x2745=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x2746=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((npz)+(((IkReal(-0.400000000000000))*(x2742)))+(((IkReal(0.400000000000000))*(x2736))));
evalcond[2]=((x2742)+(((IkReal(-1.00000000000000))*(x2736))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2737)*(x2738)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x2735)))+(((sj1)*(x2740)))+(((sj1)*(x2741))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x2737)))+(((IkReal(0.400000000000000))*(cj6)*(x2738)))+(((IkReal(-1.00000000000000))*(npx)*(x2735)))+(((IkReal(-1.00000000000000))*(x2739)*(x2741)))+(((IkReal(-1.00000000000000))*(x2739)*(x2740)))+(((r10)*(x2745))));
evalcond[5]=((IkReal(1.00000000000000))+(x2746)+(((IkReal(-1.00000000000000))*(x2735)*(x2738)))+(((sj1)*(x2743)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x2737))));
evalcond[6]=((IkReal(-0.390000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x2735)))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x2739)*(x2743)))+(((cj6)*(r00)*(x2739)))+(((IkReal(0.400000000000000))*(sj6)*(x2738)))+(((IkReal(-0.400000000000000))*(x2746))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
IkReal x2747=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x2747))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(r10)*(sj1)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x2747)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x2747)))+(((cj1)*(cj6)*(r00))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x2748=IKatan2(((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x2747)))), ((((cj6)*(r10)*(sj1)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x2747)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x2747)))+(((cj1)*(cj6)*(r00)))));
j2array[0]=((IkReal(-1.00000000000000))*(x2748));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x2748))));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[1];
IkReal x2749=IKcos(j2);
IkReal x2750=IKsin(j2);
IkReal x2751=((IkReal(1.00000000000000))*(cj6));
IkReal x2752=((cj1)*(x2749));
IkReal x2753=((sj1)*(x2749));
evalcond[0]=((((r11)*(sj6)*(x2753)))+(((cj6)*(r20)*(x2750)))+(((r01)*(sj6)*(x2752)))+(((IkReal(-1.00000000000000))*(r00)*(x2751)*(x2752)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x2750)))+(((IkReal(-1.00000000000000))*(r10)*(x2751)*(x2753))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2754=((r12)*(sj1));
IkReal x2755=((cj1)*(r02));
if( IKabs(((((sj2)*(x2755)))+(((sj2)*(x2754)))+(((cj2)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj2)*(x2754)))+(((cj2)*(x2755)))+(((IkReal(-1.00000000000000))*(r22)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj2)*(x2755)))+(((sj2)*(x2754)))+(((cj2)*(r22)))))+IKsqr(((((cj2)*(x2754)))+(((cj2)*(x2755)))+(((IkReal(-1.00000000000000))*(r22)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((sj2)*(x2755)))+(((sj2)*(x2754)))+(((cj2)*(r22)))), ((((cj2)*(x2754)))+(((cj2)*(x2755)))+(((IkReal(-1.00000000000000))*(r22)*(sj2)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2756=IKcos(j4);
IkReal x2757=((cj2)*(sj6));
IkReal x2758=((cj1)*(r00));
IkReal x2759=((sj1)*(sj2));
IkReal x2760=((IkReal(1.00000000000000))*(sj6));
IkReal x2761=((IkReal(1.00000000000000))*(cj1));
IkReal x2762=((cj6)*(r01));
IkReal x2763=((cj2)*(sj1));
IkReal x2764=((cj6)*(r11));
IkReal x2765=((IkReal(1.00000000000000))*(IKsin(j4)));
IkReal x2766=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((((r12)*(x2759)))+(((IkReal(-1.00000000000000))*(x2765)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((x2756)+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(r12)*(x2763)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x2761))));
evalcond[2]=((((r10)*(sj1)*(x2757)))+(((x2757)*(x2758)))+(((IkReal(-1.00000000000000))*(x2765)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x2760)))+(((cj1)*(cj2)*(x2762)))+(((IkReal(-1.00000000000000))*(sj2)*(x2766)))+(((x2763)*(x2764))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2759)*(x2764)))+(((IkReal(-1.00000000000000))*(cj2)*(x2766)))+(((IkReal(-1.00000000000000))*(r20)*(x2757)))+(((IkReal(-1.00000000000000))*(sj2)*(x2758)*(x2760)))+(((IkReal(-1.00000000000000))*(r10)*(x2759)*(x2760)))+(((IkReal(-1.00000000000000))*(x2756)))+(((IkReal(-1.00000000000000))*(sj2)*(x2761)*(x2762))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2767=((sj3)*(sj6));
IkReal x2768=((IkReal(1.00000000000000))*(cj6)*(sj3));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(r21)*(x2767)))+(((cj6)*(r20)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((cj1)*(r01)*(x2767)))+(((r11)*(sj1)*(x2767)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x2768)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x2768))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(r21)*(x2767)))+(((cj6)*(r20)*(sj3)))))), ((gconst4)*(((((cj1)*(r01)*(x2767)))+(((r11)*(sj1)*(x2767)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x2768)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x2768)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x2769=IKsin(j2);
IkReal x2770=IKcos(j2);
IkReal x2771=((cj6)*(r10));
IkReal x2772=((IkReal(1.00000000000000))*(sj6));
IkReal x2773=((cj1)*(r01));
IkReal x2774=((cj1)*(r00));
IkReal x2775=((sj1)*(x2769));
IkReal x2776=((cj6)*(x2770));
IkReal x2777=((sj6)*(x2770));
IkReal x2778=((cj6)*(x2769));
evalcond[0]=((((x2774)*(x2778)))+(((IkReal(-1.00000000000000))*(r21)*(x2770)*(x2772)))+(((x2771)*(x2775)))+(((IkReal(-1.00000000000000))*(x2769)*(x2772)*(x2773)))+(((r20)*(x2776)))+(((IkReal(-1.00000000000000))*(r11)*(x2772)*(x2775))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x2770)*(x2771)))+(sj3)+(((IkReal(-1.00000000000000))*(x2774)*(x2776)))+(((IkReal(-1.00000000000000))*(r21)*(x2769)*(x2772)))+(((r20)*(x2778)))+(((r11)*(sj1)*(x2777)))+(((x2773)*(x2777))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x2779=((cj2)*(sj6));
IkReal x2780=((cj1)*(r00));
IkReal x2781=((IkReal(1.00000000000000))*(r21));
IkReal x2782=((IkReal(1.00000000000000))*(sj6));
IkReal x2783=((cj6)*(sj2));
IkReal x2784=((r10)*(sj1));
IkReal x2785=((IkReal(0.400000000000000))*(sj6));
IkReal x2786=((cj1)*(r11));
IkReal x2787=((cj6)*(r01));
IkReal x2788=((IkReal(0.400000000000000))*(sj1));
IkReal x2789=((IkReal(1.00000000000000))*(cj6));
IkReal x2790=((cj1)*(cj2));
IkReal x2791=((r11)*(sj1));
IkReal x2792=((cj1)*(r01));
IkReal x2793=((cj2)*(cj6));
IkReal x2794=((r01)*(sj1));
IkReal x2795=((cj6)*(r00)*(sj1));
IkReal x2796=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(x2788)))+(npz)+(((IkReal(-0.400000000000000))*(cj1)*(r12))));
evalcond[2]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(r02)*(x2790)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(sj1))));
evalcond[3]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x2782)))+(((IkReal(-1.00000000000000))*(x2787)*(x2788)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x2785)))+(((cj1)*(r10)*(x2785)))+(((IkReal(0.400000000000000))*(cj6)*(x2786)))+(((IkReal(-1.00000000000000))*(npy)*(x2789))));
evalcond[4]=((x2796)+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x2789)))+(((IkReal(-1.00000000000000))*(x2782)*(x2786)))+(((sj6)*(x2794))));
evalcond[5]=((IkReal(-0.390000000000000))+(((cj6)*(npx)))+(((x2785)*(x2786)))+(((IkReal(-1.00000000000000))*(x2785)*(x2794)))+(((IkReal(-0.400000000000000))*(x2796)))+(((cj6)*(r00)*(x2788)))+(((IkReal(-1.00000000000000))*(npy)*(x2782))));
evalcond[6]=((((x2779)*(x2784)))+(((x2779)*(x2780)))+(((IkReal(-1.00000000000000))*(x2781)*(x2783)))+(((x2787)*(x2790)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x2782)))+(((x2791)*(x2793))));
evalcond[7]=((((x2780)*(x2783)))+(((IkReal(-1.00000000000000))*(sj2)*(x2782)*(x2791)))+(((IkReal(-1.00000000000000))*(sj2)*(x2782)*(x2792)))+(((x2783)*(x2784)))+(((IkReal(-1.00000000000000))*(x2779)*(x2781)))+(((r20)*(x2793))));
evalcond[8]=((IkReal(1.00000000000000))+(((x2779)*(x2791)))+(((x2779)*(x2792)))+(((IkReal(-1.00000000000000))*(cj2)*(x2784)*(x2789)))+(((IkReal(-1.00000000000000))*(cj2)*(x2780)*(x2789)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x2781)))+(((r20)*(x2783))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))))+IKsqr(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))), ((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2797=IKsin(j4);
IkReal x2798=((sj1)*(sj2));
IkReal x2799=((IkReal(1.00000000000000))*(cj6));
IkReal x2800=((IkReal(1.00000000000000))*(sj6));
IkReal x2801=((cj1)*(sj2));
IkReal x2802=((IkReal(1.00000000000000))*(IKcos(j4)));
evalcond[0]=((((r02)*(x2801)))+(((r12)*(x2798)))+(((IkReal(-1.00000000000000))*(x2797)))+(((cj2)*(r22))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2802)))+(((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1))));
evalcond[2]=((x2797)+(((cj6)*(r01)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x2800)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x2799)))+(((r00)*(sj1)*(sj6))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2802)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x2799)))+(((IkReal(-1.00000000000000))*(cj2)*(r20)*(x2800)))+(((IkReal(-1.00000000000000))*(r10)*(x2798)*(x2800)))+(((IkReal(-1.00000000000000))*(r01)*(x2799)*(x2801)))+(((IkReal(-1.00000000000000))*(r11)*(x2798)*(x2799)))+(((IkReal(-1.00000000000000))*(r00)*(x2800)*(x2801))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2803=((cj2)*(sj6));
IkReal x2804=((cj1)*(r00));
IkReal x2805=((IkReal(1.00000000000000))*(r21));
IkReal x2806=((IkReal(1.00000000000000))*(sj6));
IkReal x2807=((cj6)*(sj2));
IkReal x2808=((r10)*(sj1));
IkReal x2809=((IkReal(0.400000000000000))*(sj6));
IkReal x2810=((cj1)*(r11));
IkReal x2811=((cj6)*(r01));
IkReal x2812=((IkReal(0.400000000000000))*(sj1));
IkReal x2813=((IkReal(1.00000000000000))*(cj6));
IkReal x2814=((cj1)*(cj2));
IkReal x2815=((r11)*(sj1));
IkReal x2816=((cj1)*(r01));
IkReal x2817=((cj2)*(cj6));
IkReal x2818=((r01)*(sj1));
IkReal x2819=((cj6)*(r00)*(sj1));
IkReal x2820=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((npz)+(((IkReal(-0.400000000000000))*(cj1)*(r12)))+(((r02)*(x2812))));
evalcond[2]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(x2814))));
evalcond[3]=((IkReal(0.000500000000000000))+(((IkReal(0.400000000000000))*(cj6)*(x2810)))+(((cj1)*(r10)*(x2809)))+(((IkReal(-1.00000000000000))*(npy)*(x2813)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x2809)))+(((IkReal(-1.00000000000000))*(npx)*(x2806)))+(((IkReal(-1.00000000000000))*(x2811)*(x2812))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2806)*(x2810)))+(((sj6)*(x2818)))+(x2820)+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x2813))));
evalcond[5]=((IkReal(-0.390000000000000))+(((x2809)*(x2810)))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x2809)*(x2818)))+(((cj6)*(r00)*(x2812)))+(((IkReal(-1.00000000000000))*(npy)*(x2806)))+(((IkReal(-0.400000000000000))*(x2820))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x2805)*(x2807)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x2806)))+(((x2803)*(x2808)))+(((x2803)*(x2804)))+(((x2815)*(x2817)))+(((x2811)*(x2814))));
evalcond[7]=((((x2804)*(x2807)))+(((IkReal(-1.00000000000000))*(x2803)*(x2805)))+(((IkReal(-1.00000000000000))*(sj2)*(x2806)*(x2815)))+(((IkReal(-1.00000000000000))*(sj2)*(x2806)*(x2816)))+(((x2807)*(x2808)))+(((r20)*(x2817))));
evalcond[8]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj2)*(x2808)*(x2813)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x2805)))+(((x2803)*(x2816)))+(((x2803)*(x2815)))+(((r20)*(x2807)))+(((IkReal(-1.00000000000000))*(cj2)*(x2804)*(x2813))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))))+IKsqr(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))), ((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2821=IKcos(j4);
IkReal x2822=((sj1)*(sj2));
IkReal x2823=((IkReal(1.00000000000000))*(cj6));
IkReal x2824=((IkReal(1.00000000000000))*(sj6));
IkReal x2825=((cj1)*(sj2));
IkReal x2826=((IkReal(1.00000000000000))*(IKsin(j4)));
evalcond[0]=((((r02)*(x2825)))+(((cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x2826)))+(((r12)*(x2822))));
evalcond[1]=((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)))+(x2821));
evalcond[2]=((((cj6)*(r01)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x2823)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x2824)))+(((IkReal(-1.00000000000000))*(x2826)))+(((r00)*(sj1)*(sj6))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj2)*(r21)*(x2823)))+(((IkReal(-1.00000000000000))*(x2821)))+(((IkReal(-1.00000000000000))*(r01)*(x2823)*(x2825)))+(((IkReal(-1.00000000000000))*(r11)*(x2822)*(x2823)))+(((IkReal(-1.00000000000000))*(cj2)*(r20)*(x2824)))+(((IkReal(-1.00000000000000))*(r10)*(x2822)*(x2824)))+(((IkReal(-1.00000000000000))*(r00)*(x2824)*(x2825))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2827=((IkReal(1.00000000000000))*(sj6));
IkReal x2828=((r02)*(sj1));
IkReal x2829=((cj1)*(cj6));
IkReal x2830=((cj6)*(sj1));
IkReal x2831=((IkReal(0.400000000000000))*(r01));
IkReal x2832=((IkReal(1.00000000000000))*(cj2));
IkReal x2833=((r11)*(sj1));
IkReal x2834=((cj2)*(sj6));
IkReal x2835=((cj1)*(r01));
IkReal x2836=((cj1)*(r12));
IkReal x2837=((cj6)*(r20));
IkReal x2838=((sj1)*(sj6));
IkReal x2839=((r00)*(x2830));
IkReal x2840=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x2841=((r00)*(x2838));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.400000000000000))*(x2828)))+(((IkReal(-0.400000000000000))*(x2836)))+(npz));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2828)))+(x2836));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x2827)))+(((IkReal(-1.00000000000000))*(r11)*(x2829)))+(x2841)+(((r01)*(x2830))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((IkReal(0.400000000000000))*(r11)*(x2829)))+(((IkReal(-0.400000000000000))*(x2841)))+(((IkReal(-1.00000000000000))*(npx)*(x2827)))+(((r10)*(x2840)))+(((IkReal(-1.00000000000000))*(x2830)*(x2831))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x2839)))+(((r10)*(x2829)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x2827)))+(((r01)*(x2838))));
evalcond[6]=((IkReal(-0.390000000000000))+(((cj6)*(npx)))+(((r11)*(x2840)))+(((IkReal(-0.400000000000000))*(r10)*(x2829)))+(((IkReal(0.400000000000000))*(x2839)))+(((IkReal(-1.00000000000000))*(npy)*(x2827)))+(((IkReal(-1.00000000000000))*(x2831)*(x2838))));
evalcond[7]=((((IkReal(-1.00000000000000))*(cj2)*(r21)*(x2827)))+(((r10)*(sj2)*(x2830)))+(((cj2)*(x2837)))+(((r00)*(sj2)*(x2829)))+(((IkReal(-1.00000000000000))*(sj2)*(x2827)*(x2833)))+(((IkReal(-1.00000000000000))*(sj2)*(x2827)*(x2835))));
evalcond[8]=((((x2834)*(x2835)))+(((IkReal(-1.00000000000000))*(r10)*(x2830)*(x2832)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x2827)))+(((IkReal(-1.00000000000000))*(r00)*(x2829)*(x2832)))+(((sj2)*(x2837)))+(((x2833)*(x2834))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2842=((r12)*(sj1));
IkReal x2843=((cj1)*(r02));
IkReal x2844=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((sj2)*(x2842)))+(((sj2)*(x2843)))+(((cj2)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x2842)*(x2844)))+(((IkReal(-1.00000000000000))*(x2843)*(x2844)))+(((r22)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj2)*(x2842)))+(((sj2)*(x2843)))+(((cj2)*(r22)))))+IKsqr(((((IkReal(-1.00000000000000))*(x2842)*(x2844)))+(((IkReal(-1.00000000000000))*(x2843)*(x2844)))+(((r22)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((sj2)*(x2842)))+(((sj2)*(x2843)))+(((cj2)*(r22)))), ((((IkReal(-1.00000000000000))*(x2842)*(x2844)))+(((IkReal(-1.00000000000000))*(x2843)*(x2844)))+(((r22)*(sj2)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2845=IKsin(j4);
IkReal x2846=((cj2)*(sj6));
IkReal x2847=((cj1)*(r00));
IkReal x2848=((sj1)*(sj2));
IkReal x2849=((IkReal(1.00000000000000))*(sj6));
IkReal x2850=((IkReal(1.00000000000000))*(cj1));
IkReal x2851=((cj6)*(r01));
IkReal x2852=((cj2)*(sj1));
IkReal x2853=((cj6)*(r11));
IkReal x2854=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x2855=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((((r12)*(x2848)))+(((cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x2845)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x2850)))+(((IkReal(-1.00000000000000))*(r12)*(x2852)))+(((IkReal(-1.00000000000000))*(x2854))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj2)*(x2855)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x2849)))+(((x2846)*(x2847)))+(((r10)*(sj1)*(x2846)))+(((x2852)*(x2853)))+(x2845)+(((cj1)*(cj2)*(x2851))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(x2847)*(x2849)))+(((IkReal(-1.00000000000000))*(sj2)*(x2850)*(x2851)))+(((IkReal(-1.00000000000000))*(r20)*(x2846)))+(((IkReal(-1.00000000000000))*(cj2)*(x2855)))+(((IkReal(-1.00000000000000))*(x2854)))+(((IkReal(-1.00000000000000))*(x2848)*(x2853)))+(((IkReal(-1.00000000000000))*(r10)*(x2848)*(x2849))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2856=((IkReal(1.00000000000000))*(sj6));
IkReal x2857=((r02)*(sj1));
IkReal x2858=((cj1)*(cj6));
IkReal x2859=((cj6)*(sj1));
IkReal x2860=((IkReal(0.400000000000000))*(r01));
IkReal x2861=((IkReal(1.00000000000000))*(cj2));
IkReal x2862=((r11)*(sj1));
IkReal x2863=((cj2)*(sj6));
IkReal x2864=((cj1)*(r01));
IkReal x2865=((cj1)*(r12));
IkReal x2866=((cj6)*(r20));
IkReal x2867=((sj1)*(sj6));
IkReal x2868=((r00)*(x2859));
IkReal x2869=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x2870=((r00)*(x2867));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-0.400000000000000))*(x2865)))+(((IkReal(0.400000000000000))*(x2857)))+(npz));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2857)))+(x2865));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x2858)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x2856)))+(((r01)*(x2859)))+(x2870));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-0.400000000000000))*(x2870)))+(((r10)*(x2869)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((IkReal(-1.00000000000000))*(x2859)*(x2860)))+(((IkReal(-1.00000000000000))*(npx)*(x2856)))+(((IkReal(0.400000000000000))*(r11)*(x2858))));
evalcond[5]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x2868)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x2856)))+(((r10)*(x2858)))+(((r01)*(x2867))));
evalcond[6]=((IkReal(-0.390000000000000))+(((cj6)*(npx)))+(((IkReal(0.400000000000000))*(x2868)))+(((IkReal(-1.00000000000000))*(x2860)*(x2867)))+(((IkReal(-1.00000000000000))*(npy)*(x2856)))+(((r11)*(x2869)))+(((IkReal(-0.400000000000000))*(r10)*(x2858))));
evalcond[7]=((((IkReal(-1.00000000000000))*(sj2)*(x2856)*(x2864)))+(((IkReal(-1.00000000000000))*(sj2)*(x2856)*(x2862)))+(((r10)*(sj2)*(x2859)))+(((cj2)*(x2866)))+(((r00)*(sj2)*(x2858)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x2856))));
evalcond[8]=((((sj2)*(x2866)))+(((x2863)*(x2864)))+(((IkReal(-1.00000000000000))*(r00)*(x2858)*(x2861)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x2856)))+(((x2862)*(x2863)))+(((IkReal(-1.00000000000000))*(r10)*(x2859)*(x2861))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2871=((r12)*(sj1));
IkReal x2872=((cj1)*(r02));
if( IKabs(((((cj2)*(r22)))+(((sj2)*(x2871)))+(((sj2)*(x2872))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj2)*(x2872)))+(((cj2)*(x2871)))+(((IkReal(-1.00000000000000))*(r22)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj2)*(r22)))+(((sj2)*(x2871)))+(((sj2)*(x2872)))))+IKsqr(((((cj2)*(x2872)))+(((cj2)*(x2871)))+(((IkReal(-1.00000000000000))*(r22)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((cj2)*(r22)))+(((sj2)*(x2871)))+(((sj2)*(x2872)))), ((((cj2)*(x2872)))+(((cj2)*(x2871)))+(((IkReal(-1.00000000000000))*(r22)*(sj2)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x2873=IKcos(j4);
IkReal x2874=((cj2)*(sj6));
IkReal x2875=((cj1)*(r00));
IkReal x2876=((sj1)*(sj2));
IkReal x2877=((IkReal(1.00000000000000))*(sj6));
IkReal x2878=((IkReal(1.00000000000000))*(cj1));
IkReal x2879=((cj6)*(r01));
IkReal x2880=((cj2)*(sj1));
IkReal x2881=((cj6)*(r11));
IkReal x2882=((IkReal(1.00000000000000))*(IKsin(j4)));
IkReal x2883=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((((cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x2882)))+(((r12)*(x2876)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x2878)))+(((IkReal(-1.00000000000000))*(r12)*(x2880)))+(x2873));
evalcond[2]=((((cj1)*(cj2)*(x2879)))+(((x2880)*(x2881)))+(((x2874)*(x2875)))+(((IkReal(-1.00000000000000))*(x2882)))+(((IkReal(-1.00000000000000))*(sj2)*(x2883)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x2877)))+(((r10)*(sj1)*(x2874))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj2)*(x2883)))+(((IkReal(-1.00000000000000))*(r20)*(x2874)))+(((IkReal(-1.00000000000000))*(x2873)))+(((IkReal(-1.00000000000000))*(sj2)*(x2878)*(x2879)))+(((IkReal(-1.00000000000000))*(x2876)*(x2881)))+(((IkReal(-1.00000000000000))*(sj2)*(x2875)*(x2877)))+(((IkReal(-1.00000000000000))*(r10)*(x2876)*(x2877))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2884=((r12)*(sj1));
IkReal x2885=((cj1)*(r02));
IkReal x2886=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((sj2)*(x2885)))+(((sj2)*(x2884)))+(((cj2)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x2885)*(x2886)))+(((IkReal(-1.00000000000000))*(x2884)*(x2886))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj2)*(x2885)))+(((sj2)*(x2884)))+(((cj2)*(r22)))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x2885)*(x2886)))+(((IkReal(-1.00000000000000))*(x2884)*(x2886)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((sj2)*(x2885)))+(((sj2)*(x2884)))+(((cj2)*(r22)))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x2885)*(x2886)))+(((IkReal(-1.00000000000000))*(x2884)*(x2886)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2887=IKcos(j4);
IkReal x2888=IKsin(j4);
IkReal x2889=((cj1)*(cj2));
IkReal x2890=((r00)*(sj6));
IkReal x2891=((IkReal(1.00000000000000))*(cj6));
IkReal x2892=((IkReal(1.00000000000000))*(sj1));
IkReal x2893=((cj1)*(sj2));
IkReal x2894=((sj2)*(sj6));
IkReal x2895=((IkReal(1.00000000000000))*(r20));
IkReal x2896=((cj6)*(r01));
IkReal x2897=((cj2)*(sj6));
IkReal x2898=((r11)*(sj1));
IkReal x2899=((IkReal(1.00000000000000))*(x2887));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2888)))+(((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((r02)*(x2893))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(x2892)))+(((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(sj3)*(x2899))));
evalcond[2]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj3)*(x2899)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(x2892)))+(((IkReal(-1.00000000000000))*(r02)*(x2889))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(sj6)))+(((sj3)*(x2888)))+(((sj1)*(x2890)))+(((sj1)*(x2896)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x2891))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r21)*(sj2)*(x2891)))+(((cj2)*(cj6)*(x2898)))+(((cj3)*(x2888)))+(((x2889)*(x2890)))+(((x2889)*(x2896)))+(((r10)*(sj1)*(x2897)))+(((IkReal(-1.00000000000000))*(x2894)*(x2895))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2895)*(x2897)))+(((IkReal(-1.00000000000000))*(sj2)*(x2891)*(x2898)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x2891)))+(((IkReal(-1.00000000000000))*(x2890)*(x2893)))+(((IkReal(-1.00000000000000))*(x2899)))+(((IkReal(-1.00000000000000))*(r10)*(x2892)*(x2894)))+(((IkReal(-1.00000000000000))*(r01)*(x2891)*(x2893))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2900=IKcos(j4);
IkReal x2901=IKsin(j4);
IkReal x2902=((cj1)*(cj2));
IkReal x2903=((r00)*(sj6));
IkReal x2904=((IkReal(1.00000000000000))*(cj6));
IkReal x2905=((IkReal(1.00000000000000))*(sj1));
IkReal x2906=((cj1)*(sj2));
IkReal x2907=((sj2)*(sj6));
IkReal x2908=((IkReal(1.00000000000000))*(r20));
IkReal x2909=((cj6)*(r01));
IkReal x2910=((cj2)*(sj6));
IkReal x2911=((r11)*(sj1));
IkReal x2912=((IkReal(1.00000000000000))*(x2900));
evalcond[0]=((((r02)*(x2906)))+(((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x2901))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(x2905)))+(((IkReal(-1.00000000000000))*(sj3)*(x2912)))+(((cj1)*(r12))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj3)*(x2912)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(x2905)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(r02)*(x2902))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(sj6)))+(((sj3)*(x2901)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x2904)))+(((sj1)*(x2909)))+(((sj1)*(x2903))));
evalcond[4]=((((cj3)*(x2901)))+(((x2902)*(x2903)))+(((x2902)*(x2909)))+(((cj2)*(cj6)*(x2911)))+(((r10)*(sj1)*(x2910)))+(((IkReal(-1.00000000000000))*(x2907)*(x2908)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x2904))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x2905)*(x2907)))+(((IkReal(-1.00000000000000))*(r01)*(x2904)*(x2906)))+(((IkReal(-1.00000000000000))*(x2903)*(x2906)))+(((IkReal(-1.00000000000000))*(sj2)*(x2904)*(x2911)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x2904)))+(((IkReal(-1.00000000000000))*(x2908)*(x2910)))+(((IkReal(-1.00000000000000))*(x2912))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2913=((IkReal(1.00000000000000))*(sj1));
if( IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x2913)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x2913))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(x2913))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst6)*(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x2913)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x2913)))))), ((gconst6)*(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(x2913)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2914=IKcos(j4);
IkReal x2915=IKsin(j4);
IkReal x2916=((cj1)*(cj2));
IkReal x2917=((r00)*(sj6));
IkReal x2918=((IkReal(1.00000000000000))*(cj6));
IkReal x2919=((IkReal(1.00000000000000))*(sj1));
IkReal x2920=((cj1)*(sj2));
IkReal x2921=((sj2)*(sj6));
IkReal x2922=((IkReal(1.00000000000000))*(r20));
IkReal x2923=((cj6)*(r01));
IkReal x2924=((cj2)*(sj6));
IkReal x2925=((r11)*(sj1));
IkReal x2926=((IkReal(1.00000000000000))*(x2914));
evalcond[0]=((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x2915)))+(((r02)*(x2920))));
evalcond[1]=((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(sj3)*(x2926)))+(((IkReal(-1.00000000000000))*(r02)*(x2919))));
evalcond[2]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(r02)*(x2916)))+(((IkReal(-1.00000000000000))*(cj3)*(x2926)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(x2919))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(sj6)))+(((sj3)*(x2915)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x2918)))+(((sj1)*(x2923)))+(((sj1)*(x2917))));
evalcond[4]=((((x2916)*(x2923)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x2918)))+(((cj2)*(cj6)*(x2925)))+(((r10)*(sj1)*(x2924)))+(((cj3)*(x2915)))+(((IkReal(-1.00000000000000))*(x2921)*(x2922)))+(((x2916)*(x2917))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r01)*(x2918)*(x2920)))+(((IkReal(-1.00000000000000))*(r10)*(x2919)*(x2921)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x2918)))+(((IkReal(-1.00000000000000))*(x2926)))+(((IkReal(-1.00000000000000))*(x2917)*(x2920)))+(((IkReal(-1.00000000000000))*(sj2)*(x2918)*(x2925)))+(((IkReal(-1.00000000000000))*(x2922)*(x2924))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2927=((IkReal(1.00000000000000))*(sj1));
if( IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x2927)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x2927)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(r02)*(x2927)))+(((cj1)*(r12))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst5)*(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x2927)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x2927)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))))), ((gconst5)*(((((IkReal(-1.00000000000000))*(r02)*(x2927)))+(((cj1)*(r12)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x2928=((IkReal(1.00000000000000))*(cj1));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj3)*(IKcos(j4))))+(((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1))));
evalcond[1]=((((cj6)*(r01)*(sj1)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x2928)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x2928)))+(((sj3)*(IKsin(j4))))+(((r00)*(sj1)*(sj6))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign((((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1))))));
dummyeval[0]=(((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
IkReal x2929=((cj1)*(cj6));
IkReal x2930=((IkReal(1.00000000000000))*(r22));
IkReal x2931=((cj6)*(sj1));
IkReal x2932=((r22)*(sj6));
IkReal x2933=((IkReal(1.00000000000000))*(r21)*(sj6));
gconst8=IKsign(((((IkReal(-1.00000000000000))*(r10)*(x2930)*(x2931)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2933)))+(((cj1)*(r01)*(x2932)))+(((IkReal(-1.00000000000000))*(r00)*(x2929)*(x2930)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x2933)))+(((r11)*(sj1)*(x2932)))+(((r12)*(r20)*(x2931)))+(((r02)*(r20)*(x2929)))));
IkReal x2934=((cj1)*(cj6));
IkReal x2935=((IkReal(1.00000000000000))*(r22));
IkReal x2936=((cj6)*(sj1));
IkReal x2937=((r22)*(sj6));
IkReal x2938=((IkReal(1.00000000000000))*(r21)*(sj6));
dummyeval[0]=((((r02)*(r20)*(x2934)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2938)))+(((cj1)*(r01)*(x2937)))+(((IkReal(-1.00000000000000))*(r00)*(x2934)*(x2935)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x2938)))+(((IkReal(-1.00000000000000))*(r10)*(x2935)*(x2936)))+(((r11)*(sj1)*(x2937)))+(((r12)*(r20)*(x2936))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2939=((sj4)*(sj6));
IkReal x2940=((IkReal(1.00000000000000))*(cj6)*(sj4));
if( IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(r21)*(x2939)))+(((cj6)*(r20)*(sj4))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(cj1)*(r00)*(x2940)))+(((cj1)*(r01)*(x2939)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x2940)))+(((r11)*(sj1)*(x2939))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst8)*(((((IkReal(-1.00000000000000))*(r21)*(x2939)))+(((cj6)*(r20)*(sj4)))))), ((gconst8)*(((((IkReal(-1.00000000000000))*(cj1)*(r00)*(x2940)))+(((cj1)*(r01)*(x2939)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x2940)))+(((r11)*(sj1)*(x2939)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2941=IKsin(j2);
IkReal x2942=IKcos(j2);
IkReal x2943=((r11)*(sj6));
IkReal x2944=((IkReal(1.00000000000000))*(cj4));
IkReal x2945=((cj6)*(r11));
IkReal x2946=((cj6)*(r20));
IkReal x2947=((IkReal(1.00000000000000))*(sj6));
IkReal x2948=((cj1)*(r00));
IkReal x2949=((cj1)*(r01));
IkReal x2950=((IkReal(1.00000000000000))*(cj6));
IkReal x2951=((cj1)*(r02));
IkReal x2952=((sj1)*(x2941));
IkReal x2953=((sj1)*(x2942));
IkReal x2954=((r21)*(x2942));
IkReal x2955=((sj6)*(x2942));
IkReal x2956=((cj6)*(x2942));
IkReal x2957=((r21)*(x2941));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj4)))+(((r22)*(x2942)))+(((x2941)*(x2951)))+(((r12)*(x2952))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2942)*(x2951)))+(((IkReal(-1.00000000000000))*(r12)*(x2953)))+(((r22)*(x2941)))+(((IkReal(-1.00000000000000))*(cj3)*(x2944))));
evalcond[2]=((((x2945)*(x2953)))+(((x2948)*(x2955)))+(((IkReal(-1.00000000000000))*(x2950)*(x2957)))+(((x2949)*(x2956)))+(((IkReal(-1.00000000000000))*(r20)*(x2941)*(x2947)))+(((r10)*(sj6)*(x2953)))+(((cj3)*(sj4))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2947)*(x2954)))+(((cj6)*(x2941)*(x2948)))+(((IkReal(-1.00000000000000))*(x2943)*(x2952)))+(((IkReal(-1.00000000000000))*(x2941)*(x2947)*(x2949)))+(((x2942)*(x2946)))+(((cj6)*(r10)*(x2952))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(x2942)*(x2947)))+(((IkReal(-1.00000000000000))*(x2945)*(x2952)))+(((IkReal(-1.00000000000000))*(x2941)*(x2949)*(x2950)))+(((IkReal(-1.00000000000000))*(x2944)))+(((IkReal(-1.00000000000000))*(x2950)*(x2954)))+(((IkReal(-1.00000000000000))*(r10)*(x2947)*(x2952)))+(((IkReal(-1.00000000000000))*(x2941)*(x2947)*(x2948))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2947)*(x2957)))+(sj3)+(((IkReal(-1.00000000000000))*(x2942)*(x2948)*(x2950)))+(((x2941)*(x2946)))+(((x2943)*(x2953)))+(((IkReal(-1.00000000000000))*(r10)*(x2950)*(x2953)))+(((x2949)*(x2955))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2958=((cj3)*(cj4));
IkReal x2959=((r12)*(sj1));
IkReal x2960=((cj1)*(r02));
if( IKabs(((gconst7)*(((((r22)*(x2958)))+(((sj4)*(x2959)))+(((sj4)*(x2960))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(x2958)*(x2960)))+(((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(x2958)*(x2959))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst7)*(((((r22)*(x2958)))+(((sj4)*(x2959)))+(((sj4)*(x2960)))))), ((gconst7)*(((((IkReal(-1.00000000000000))*(x2958)*(x2960)))+(((r22)*(sj4)))+(((IkReal(-1.00000000000000))*(x2958)*(x2959)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2961=IKsin(j2);
IkReal x2962=IKcos(j2);
IkReal x2963=((r11)*(sj6));
IkReal x2964=((IkReal(1.00000000000000))*(cj4));
IkReal x2965=((cj6)*(r11));
IkReal x2966=((cj6)*(r20));
IkReal x2967=((IkReal(1.00000000000000))*(sj6));
IkReal x2968=((cj1)*(r00));
IkReal x2969=((cj1)*(r01));
IkReal x2970=((IkReal(1.00000000000000))*(cj6));
IkReal x2971=((cj1)*(r02));
IkReal x2972=((sj1)*(x2961));
IkReal x2973=((sj1)*(x2962));
IkReal x2974=((r21)*(x2962));
IkReal x2975=((sj6)*(x2962));
IkReal x2976=((cj6)*(x2962));
IkReal x2977=((r21)*(x2961));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj4)))+(((r22)*(x2962)))+(((r12)*(x2972)))+(((x2961)*(x2971))));
evalcond[1]=((((r22)*(x2961)))+(((IkReal(-1.00000000000000))*(cj3)*(x2964)))+(((IkReal(-1.00000000000000))*(x2962)*(x2971)))+(((IkReal(-1.00000000000000))*(r12)*(x2973))));
evalcond[2]=((((r10)*(sj6)*(x2973)))+(((x2968)*(x2975)))+(((x2969)*(x2976)))+(((IkReal(-1.00000000000000))*(r20)*(x2961)*(x2967)))+(((x2965)*(x2973)))+(((cj3)*(sj4)))+(((IkReal(-1.00000000000000))*(x2970)*(x2977))));
evalcond[3]=((((cj6)*(r10)*(x2972)))+(((x2962)*(x2966)))+(((cj6)*(x2961)*(x2968)))+(((IkReal(-1.00000000000000))*(x2963)*(x2972)))+(((IkReal(-1.00000000000000))*(x2961)*(x2967)*(x2969)))+(((IkReal(-1.00000000000000))*(x2967)*(x2974))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2961)*(x2969)*(x2970)))+(((IkReal(-1.00000000000000))*(r10)*(x2967)*(x2972)))+(((IkReal(-1.00000000000000))*(x2964)))+(((IkReal(-1.00000000000000))*(x2961)*(x2967)*(x2968)))+(((IkReal(-1.00000000000000))*(r20)*(x2962)*(x2967)))+(((IkReal(-1.00000000000000))*(x2965)*(x2972)))+(((IkReal(-1.00000000000000))*(x2970)*(x2974))));
evalcond[5]=((sj3)+(((IkReal(-1.00000000000000))*(r10)*(x2970)*(x2973)))+(((x2961)*(x2966)))+(((x2969)*(x2975)))+(((IkReal(-1.00000000000000))*(x2962)*(x2968)*(x2970)))+(((IkReal(-1.00000000000000))*(x2967)*(x2977)))+(((x2963)*(x2973))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x2978=((IkReal(0.400000000000000))*(cj6));
IkReal x2979=((r00)*(sj1));
IkReal x2980=((IkReal(1.00000000000000))*(cj6));
IkReal x2981=((cj1)*(r11));
IkReal x2982=((IkReal(0.400000000000000))*(sj1));
IkReal x2983=((cj1)*(r10));
IkReal x2984=((IkReal(1.00000000000000))*(sj6));
IkReal x2985=((IkReal(0.400000000000000))*(sj6));
IkReal x2986=((r01)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((npz)+(((IkReal(-0.400000000000000))*(cj1)*(r12)))+(((r02)*(x2982))));
evalcond[2]=((IkReal(0.000500000000000000))+(((x2983)*(x2985)))+(((IkReal(-1.00000000000000))*(x2979)*(x2985)))+(((x2978)*(x2981)))+(((IkReal(-1.00000000000000))*(npx)*(x2984)))+(((IkReal(-1.00000000000000))*(npy)*(x2980)))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x2978))));
evalcond[3]=((cj3)+(((IkReal(-1.00000000000000))*(x2979)*(x2980)))+(((IkReal(-1.00000000000000))*(x2981)*(x2984)))+(((cj6)*(x2983)))+(((sj1)*(x2986))));
evalcond[4]=((IkReal(0.390000000000000))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x2978)*(x2983)))+(((IkReal(-1.00000000000000))*(x2982)*(x2986)))+(((x2981)*(x2985)))+(((x2978)*(x2979)))+(((IkReal(-1.00000000000000))*(npy)*(x2984))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
IkReal x2987=(sj6)*(sj6);
IkReal x2988=(cj6)*(cj6);
IkReal x2989=(sj1)*(sj1);
IkReal x2990=(cj1)*(cj1);
IkReal x2991=((IkReal(2.00000000000000))*(r11));
IkReal x2992=((IkReal(2.00000000000000))*(r00));
IkReal x2993=((cj1)*(sj1));
IkReal x2994=((cj6)*(sj6));
IkReal x2995=((r01)*(x2993));
IkReal x2996=((IkReal(2.00000000000000))*(r10)*(x2994));
gconst9=IKsign(((((x2987)*(x2991)*(x2995)))+(((x2988)*((r20)*(r20))))+(((IkReal(-1.00000000000000))*(x2995)*(x2996)))+(((x2988)*(x2989)*((r10)*(r10))))+(((x2987)*(x2989)*((r11)*(r11))))+(((x2988)*(x2990)*((r00)*(r00))))+(((r10)*(x2988)*(x2992)*(x2993)))+(((IkReal(-1.00000000000000))*(r00)*(x2991)*(x2993)*(x2994)))+(((IkReal(-1.00000000000000))*(r10)*(x2989)*(x2991)*(x2994)))+(((x2987)*(x2990)*((r01)*(r01))))+(((IkReal(-2.00000000000000))*(r20)*(r21)*(x2994)))+(((IkReal(-1.00000000000000))*(r01)*(x2990)*(x2992)*(x2994)))+(((x2987)*((r21)*(r21))))));
IkReal x2997=(sj6)*(sj6);
IkReal x2998=(cj6)*(cj6);
IkReal x2999=(sj1)*(sj1);
IkReal x3000=(cj1)*(cj1);
IkReal x3001=((IkReal(2.00000000000000))*(r11));
IkReal x3002=((IkReal(2.00000000000000))*(r00));
IkReal x3003=((cj1)*(sj1));
IkReal x3004=((cj6)*(sj6));
IkReal x3005=((r01)*(x3003));
IkReal x3006=((IkReal(2.00000000000000))*(r10)*(x3004));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(x3001)*(x3003)*(x3004)))+(((IkReal(-2.00000000000000))*(r20)*(r21)*(x3004)))+(((IkReal(-1.00000000000000))*(r10)*(x2999)*(x3001)*(x3004)))+(((IkReal(-1.00000000000000))*(r01)*(x3000)*(x3002)*(x3004)))+(((x2997)*(x3001)*(x3005)))+(((x2998)*((r20)*(r20))))+(((x2997)*(x3000)*((r01)*(r01))))+(((x2998)*(x3000)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x3005)*(x3006)))+(((x2997)*((r21)*(r21))))+(((x2997)*(x2999)*((r11)*(r11))))+(((x2998)*(x2999)*((r10)*(r10))))+(((r10)*(x2998)*(x3002)*(x3003))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x3007=((IkReal(1.00000000000000))*(sj6));
IkReal x3008=((r02)*(sj1));
IkReal x3009=((IkReal(1.00000000000000))*(cj6));
IkReal x3010=((cj1)*(r11));
IkReal x3011=((IkReal(0.400000000000000))*(sj1));
IkReal x3012=((cj6)*(r01));
IkReal x3013=((r00)*(sj6));
IkReal x3014=((cj1)*(r12));
IkReal x3015=((r01)*(sj6));
IkReal x3016=((cj6)*(r00)*(sj1));
IkReal x3017=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x3018=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((npz)+(((IkReal(-0.400000000000000))*(x3014)))+(((IkReal(0.400000000000000))*(x3008))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3008)))+(x3014));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x3007)))+(((sj1)*(x3013)))+(((sj1)*(x3012)))+(((IkReal(-1.00000000000000))*(x3009)*(x3010))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(0.400000000000000))*(cj6)*(x3010)))+(((r10)*(x3017)))+(((IkReal(-1.00000000000000))*(npy)*(x3009)))+(((IkReal(-1.00000000000000))*(npx)*(x3007)))+(((IkReal(-1.00000000000000))*(x3011)*(x3012)))+(((IkReal(-1.00000000000000))*(x3011)*(x3013))));
evalcond[5]=((IkReal(1.00000000000000))+(x3018)+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x3009)))+(((sj1)*(x3015)))+(((IkReal(-1.00000000000000))*(x3007)*(x3010))));
evalcond[6]=((IkReal(0.390000000000000))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(x3007)))+(((IkReal(-0.400000000000000))*(x3018)))+(((IkReal(0.400000000000000))*(sj6)*(x3010)))+(((IkReal(-1.00000000000000))*(x3011)*(x3015)))+(((cj6)*(r00)*(x3011))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
IkReal x3019=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x3019))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj1)*(r01)*(x3019)))+(((cj6)*(r10)*(sj1)))+(((cj1)*(cj6)*(r00)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x3019))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x3020=IKatan2(((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x3019)))), ((((IkReal(-1.00000000000000))*(cj1)*(r01)*(x3019)))+(((cj6)*(r10)*(sj1)))+(((cj1)*(cj6)*(r00)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x3019)))));
j2array[0]=((IkReal(-1.00000000000000))*(x3020));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x3020))));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[1];
IkReal x3021=IKcos(j2);
IkReal x3022=IKsin(j2);
IkReal x3023=((IkReal(1.00000000000000))*(cj6));
IkReal x3024=((cj1)*(x3021));
IkReal x3025=((sj1)*(x3021));
evalcond[0]=((((cj6)*(r20)*(x3022)))+(((r01)*(sj6)*(x3024)))+(((r11)*(sj6)*(x3025)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x3022)))+(((IkReal(-1.00000000000000))*(r10)*(x3023)*(x3025)))+(((IkReal(-1.00000000000000))*(r00)*(x3023)*(x3024))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3026=((r12)*(sj1));
IkReal x3027=((IkReal(1.00000000000000))*(sj2));
IkReal x3028=((cj1)*(r02));
if( IKabs(((((IkReal(-1.00000000000000))*(x3027)*(x3028)))+(((IkReal(-1.00000000000000))*(x3026)*(x3027)))+(((IkReal(-1.00000000000000))*(cj2)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj2)*(x3028)))+(((cj2)*(x3026)))+(((IkReal(-1.00000000000000))*(r22)*(x3027))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x3027)*(x3028)))+(((IkReal(-1.00000000000000))*(x3026)*(x3027)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))))+IKsqr(((((cj2)*(x3028)))+(((cj2)*(x3026)))+(((IkReal(-1.00000000000000))*(r22)*(x3027)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x3027)*(x3028)))+(((IkReal(-1.00000000000000))*(x3026)*(x3027)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))), ((((cj2)*(x3028)))+(((cj2)*(x3026)))+(((IkReal(-1.00000000000000))*(r22)*(x3027)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3029=IKsin(j4);
IkReal x3030=IKcos(j4);
IkReal x3031=((cj2)*(sj6));
IkReal x3032=((cj1)*(r00));
IkReal x3033=((sj1)*(sj2));
IkReal x3034=((IkReal(1.00000000000000))*(sj6));
IkReal x3035=((IkReal(1.00000000000000))*(cj1));
IkReal x3036=((cj6)*(r01));
IkReal x3037=((cj2)*(sj1));
IkReal x3038=((cj6)*(r11));
IkReal x3039=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((x3029)+(((r12)*(x3033)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((x3030)+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x3035)))+(((IkReal(-1.00000000000000))*(r12)*(x3037))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj2)*(x3039)))+(x3029)+(((x3037)*(x3038)))+(((cj1)*(cj2)*(x3036)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x3034)))+(((x3031)*(x3032)))+(((r10)*(sj1)*(x3031))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj2)*(x3039)))+(((IkReal(-1.00000000000000))*(r20)*(x3031)))+(((IkReal(-1.00000000000000))*(x3030)))+(((IkReal(-1.00000000000000))*(sj2)*(x3032)*(x3034)))+(((IkReal(-1.00000000000000))*(x3033)*(x3038)))+(((IkReal(-1.00000000000000))*(sj2)*(x3035)*(x3036)))+(((IkReal(-1.00000000000000))*(r10)*(x3033)*(x3034))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

} else
{
IkReal x3040=((IkReal(1.00000000000000))*(sj6));
IkReal x3041=((r02)*(sj1));
IkReal x3042=((IkReal(1.00000000000000))*(cj6));
IkReal x3043=((cj1)*(r11));
IkReal x3044=((IkReal(0.400000000000000))*(sj1));
IkReal x3045=((cj6)*(r01));
IkReal x3046=((r00)*(sj6));
IkReal x3047=((cj1)*(r12));
IkReal x3048=((r01)*(sj6));
IkReal x3049=((cj6)*(r00)*(sj1));
IkReal x3050=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x3051=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((npz)+(((IkReal(0.400000000000000))*(x3041)))+(((IkReal(-0.400000000000000))*(x3047))));
evalcond[2]=((x3047)+(((IkReal(-1.00000000000000))*(x3041))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3042)*(x3043)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x3040)))+(((sj1)*(x3046)))+(((sj1)*(x3045))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(0.400000000000000))*(cj6)*(x3043)))+(((IkReal(-1.00000000000000))*(npx)*(x3040)))+(((IkReal(-1.00000000000000))*(npy)*(x3042)))+(((r10)*(x3050)))+(((IkReal(-1.00000000000000))*(x3044)*(x3045)))+(((IkReal(-1.00000000000000))*(x3044)*(x3046))));
evalcond[5]=((IkReal(-1.00000000000000))+(x3051)+(((sj1)*(x3048)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x3042)))+(((IkReal(-1.00000000000000))*(x3040)*(x3043))));
evalcond[6]=((IkReal(0.390000000000000))+(((cj6)*(npx)))+(((IkReal(-0.400000000000000))*(x3051)))+(((IkReal(-1.00000000000000))*(npy)*(x3040)))+(((cj6)*(r00)*(x3044)))+(((IkReal(0.400000000000000))*(sj6)*(x3043)))+(((IkReal(-1.00000000000000))*(x3044)*(x3048))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
IkReal x3052=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(r21)*(x3052)))+(((cj6)*(r20))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(r10)*(sj1)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x3052)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x3052)))+(((cj1)*(cj6)*(r00))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x3053=IKatan2(((((IkReal(-1.00000000000000))*(r21)*(x3052)))+(((cj6)*(r20)))), ((((cj6)*(r10)*(sj1)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x3052)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x3052)))+(((cj1)*(cj6)*(r00)))));
j2array[0]=((IkReal(-1.00000000000000))*(x3053));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x3053))));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[1];
IkReal x3054=IKcos(j2);
IkReal x3055=IKsin(j2);
IkReal x3056=((IkReal(1.00000000000000))*(cj6));
IkReal x3057=((cj1)*(x3054));
IkReal x3058=((sj1)*(x3054));
evalcond[0]=((((IkReal(-1.00000000000000))*(r10)*(x3056)*(x3058)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x3055)))+(((IkReal(-1.00000000000000))*(r00)*(x3056)*(x3057)))+(((r01)*(sj6)*(x3057)))+(((cj6)*(r20)*(x3055)))+(((r11)*(sj6)*(x3058))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3059=((IkReal(1.00000000000000))*(sj2));
IkReal x3060=((r12)*(sj1));
IkReal x3061=((cj1)*(r02));
IkReal x3062=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IkReal(-1.00000000000000))*(r22)*(x3062)))+(((IkReal(-1.00000000000000))*(x3059)*(x3061)))+(((IkReal(-1.00000000000000))*(x3059)*(x3060))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x3060)*(x3062)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x3061)*(x3062))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r22)*(x3062)))+(((IkReal(-1.00000000000000))*(x3059)*(x3061)))+(((IkReal(-1.00000000000000))*(x3059)*(x3060)))))+IKsqr(((((IkReal(-1.00000000000000))*(x3060)*(x3062)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x3061)*(x3062)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r22)*(x3062)))+(((IkReal(-1.00000000000000))*(x3059)*(x3061)))+(((IkReal(-1.00000000000000))*(x3059)*(x3060)))), ((((IkReal(-1.00000000000000))*(x3060)*(x3062)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x3061)*(x3062)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3063=IKsin(j4);
IkReal x3064=((cj2)*(sj6));
IkReal x3065=((cj1)*(r00));
IkReal x3066=((sj1)*(sj2));
IkReal x3067=((IkReal(1.00000000000000))*(sj6));
IkReal x3068=((IkReal(1.00000000000000))*(cj1));
IkReal x3069=((cj6)*(r01));
IkReal x3070=((cj2)*(sj1));
IkReal x3071=((cj6)*(r11));
IkReal x3072=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x3073=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((x3063)+(((cj2)*(r22)))+(((r12)*(x3066)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj2)*(r02)*(x3068)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x3072)))+(((IkReal(-1.00000000000000))*(r12)*(x3070))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3063)))+(((r10)*(sj1)*(x3064)))+(((x3064)*(x3065)))+(((cj1)*(cj2)*(x3069)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x3067)))+(((x3070)*(x3071)))+(((IkReal(-1.00000000000000))*(sj2)*(x3073))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x3066)*(x3067)))+(((IkReal(-1.00000000000000))*(x3066)*(x3071)))+(((IkReal(-1.00000000000000))*(sj2)*(x3068)*(x3069)))+(((IkReal(-1.00000000000000))*(x3072)))+(((IkReal(-1.00000000000000))*(r20)*(x3064)))+(((IkReal(-1.00000000000000))*(sj2)*(x3065)*(x3067)))+(((IkReal(-1.00000000000000))*(cj2)*(x3073))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3074=((sj3)*(sj6));
IkReal x3075=((IkReal(1.00000000000000))*(cj6)*(sj3));
if( IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(r21)*(x3074)))+(((cj6)*(r20)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(r10)*(sj1)*(x3075)))+(((cj1)*(r01)*(x3074)))+(((r11)*(sj1)*(x3074)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x3075))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst9)*(((((IkReal(-1.00000000000000))*(r21)*(x3074)))+(((cj6)*(r20)*(sj3)))))), ((gconst9)*(((((IkReal(-1.00000000000000))*(r10)*(sj1)*(x3075)))+(((cj1)*(r01)*(x3074)))+(((r11)*(sj1)*(x3074)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x3075)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x3076=IKsin(j2);
IkReal x3077=IKcos(j2);
IkReal x3078=((cj6)*(r10));
IkReal x3079=((IkReal(1.00000000000000))*(sj6));
IkReal x3080=((cj1)*(r01));
IkReal x3081=((cj1)*(r00));
IkReal x3082=((sj1)*(x3076));
IkReal x3083=((cj6)*(x3077));
IkReal x3084=((sj6)*(x3077));
IkReal x3085=((cj6)*(x3076));
evalcond[0]=((((x3081)*(x3085)))+(((r20)*(x3083)))+(((IkReal(-1.00000000000000))*(r21)*(x3077)*(x3079)))+(((IkReal(-1.00000000000000))*(x3076)*(x3079)*(x3080)))+(((IkReal(-1.00000000000000))*(r11)*(x3079)*(x3082)))+(((x3078)*(x3082))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj3)))+(((x3080)*(x3084)))+(((IkReal(-1.00000000000000))*(sj1)*(x3077)*(x3078)))+(((IkReal(-1.00000000000000))*(r21)*(x3076)*(x3079)))+(((r20)*(x3085)))+(((r11)*(sj1)*(x3084)))+(((IkReal(-1.00000000000000))*(x3081)*(x3083))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst11;
gconst11=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x3086=((cj2)*(sj6));
IkReal x3087=((cj1)*(r00));
IkReal x3088=((IkReal(1.00000000000000))*(r21));
IkReal x3089=((IkReal(1.00000000000000))*(sj6));
IkReal x3090=((cj6)*(sj2));
IkReal x3091=((r10)*(sj1));
IkReal x3092=((IkReal(0.400000000000000))*(sj6));
IkReal x3093=((cj1)*(r11));
IkReal x3094=((cj6)*(r01));
IkReal x3095=((IkReal(0.400000000000000))*(sj1));
IkReal x3096=((IkReal(1.00000000000000))*(cj6));
IkReal x3097=((cj1)*(cj2));
IkReal x3098=((r11)*(sj1));
IkReal x3099=((cj1)*(r01));
IkReal x3100=((cj2)*(cj6));
IkReal x3101=((r01)*(sj1));
IkReal x3102=((cj6)*(r00)*(sj1));
IkReal x3103=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((npz)+(((r02)*(x3095)))+(((IkReal(-0.400000000000000))*(cj1)*(r12))));
evalcond[2]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(r02)*(x3097)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(sj1))));
evalcond[3]=((IkReal(0.000500000000000000))+(((IkReal(0.400000000000000))*(cj6)*(x3093)))+(((cj1)*(r10)*(x3092)))+(((IkReal(-1.00000000000000))*(npy)*(x3096)))+(((IkReal(-1.00000000000000))*(npx)*(x3089)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x3092)))+(((IkReal(-1.00000000000000))*(x3094)*(x3095))));
evalcond[4]=((x3103)+(((IkReal(-1.00000000000000))*(x3089)*(x3093)))+(((sj6)*(x3101)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x3096))));
evalcond[5]=((IkReal(0.390000000000000))+(((cj6)*(npx)))+(((IkReal(-0.400000000000000))*(x3103)))+(((x3092)*(x3093)))+(((cj6)*(r00)*(x3095)))+(((IkReal(-1.00000000000000))*(x3092)*(x3101)))+(((IkReal(-1.00000000000000))*(npy)*(x3089))));
evalcond[6]=((((x3098)*(x3100)))+(((x3086)*(x3091)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x3089)))+(((IkReal(-1.00000000000000))*(x3088)*(x3090)))+(((x3086)*(x3087)))+(((x3094)*(x3097))));
evalcond[7]=((((x3087)*(x3090)))+(((x3090)*(x3091)))+(((r20)*(x3100)))+(((IkReal(-1.00000000000000))*(sj2)*(x3089)*(x3099)))+(((IkReal(-1.00000000000000))*(sj2)*(x3089)*(x3098)))+(((IkReal(-1.00000000000000))*(x3086)*(x3088))));
evalcond[8]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x3088)))+(((IkReal(-1.00000000000000))*(cj2)*(x3087)*(x3096)))+(((r20)*(x3090)))+(((x3086)*(x3098)))+(((x3086)*(x3099)))+(((IkReal(-1.00000000000000))*(cj2)*(x3091)*(x3096))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3104=((IkReal(1.00000000000000))*(sj2));
if( IKabs(((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3104)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3104))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3104)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3104)))))+IKsqr(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3104)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3104)))), ((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3105=IKsin(j4);
IkReal x3106=IKcos(j4);
IkReal x3107=((sj1)*(sj2));
IkReal x3108=((IkReal(1.00000000000000))*(cj6));
IkReal x3109=((IkReal(1.00000000000000))*(sj6));
IkReal x3110=((cj1)*(sj2));
evalcond[0]=((x3105)+(((r02)*(x3110)))+(((cj2)*(r22)))+(((r12)*(x3107))));
evalcond[1]=((x3106)+(((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1))));
evalcond[2]=((x3105)+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x3109)))+(((cj6)*(r01)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x3108)))+(((r00)*(sj1)*(sj6))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x3109)*(x3110)))+(((IkReal(-1.00000000000000))*(cj2)*(r20)*(x3109)))+(((IkReal(-1.00000000000000))*(x3106)))+(((IkReal(-1.00000000000000))*(r01)*(x3108)*(x3110)))+(((IkReal(-1.00000000000000))*(r10)*(x3107)*(x3109)))+(((IkReal(-1.00000000000000))*(r11)*(x3107)*(x3108)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x3108))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x3111=((cj2)*(sj6));
IkReal x3112=((cj1)*(r00));
IkReal x3113=((IkReal(1.00000000000000))*(r21));
IkReal x3114=((IkReal(1.00000000000000))*(sj6));
IkReal x3115=((cj6)*(sj2));
IkReal x3116=((r10)*(sj1));
IkReal x3117=((IkReal(0.400000000000000))*(sj6));
IkReal x3118=((cj1)*(r11));
IkReal x3119=((cj6)*(r01));
IkReal x3120=((IkReal(0.400000000000000))*(sj1));
IkReal x3121=((IkReal(1.00000000000000))*(cj6));
IkReal x3122=((cj1)*(cj2));
IkReal x3123=((r11)*(sj1));
IkReal x3124=((cj1)*(r01));
IkReal x3125=((cj2)*(cj6));
IkReal x3126=((r01)*(sj1));
IkReal x3127=((cj6)*(r00)*(sj1));
IkReal x3128=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((npz)+(((IkReal(-0.400000000000000))*(cj1)*(r12)))+(((r02)*(x3120))));
evalcond[2]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(x3122))));
evalcond[3]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x3117)))+(((cj1)*(r10)*(x3117)))+(((IkReal(-1.00000000000000))*(npx)*(x3114)))+(((IkReal(-1.00000000000000))*(npy)*(x3121)))+(((IkReal(-1.00000000000000))*(x3119)*(x3120)))+(((IkReal(0.400000000000000))*(cj6)*(x3118))));
evalcond[4]=((x3128)+(((IkReal(-1.00000000000000))*(x3114)*(x3118)))+(((sj6)*(x3126)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x3121))));
evalcond[5]=((IkReal(0.390000000000000))+(((cj6)*(npx)))+(((IkReal(-0.400000000000000))*(x3128)))+(((IkReal(-1.00000000000000))*(x3117)*(x3126)))+(((IkReal(-1.00000000000000))*(npy)*(x3114)))+(((cj6)*(r00)*(x3120)))+(((x3117)*(x3118))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x3113)*(x3115)))+(((x3111)*(x3112)))+(((x3111)*(x3116)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x3114)))+(((x3119)*(x3122)))+(((x3123)*(x3125))));
evalcond[7]=((((x3112)*(x3115)))+(((r20)*(x3125)))+(((IkReal(-1.00000000000000))*(sj2)*(x3114)*(x3123)))+(((IkReal(-1.00000000000000))*(sj2)*(x3114)*(x3124)))+(((IkReal(-1.00000000000000))*(x3111)*(x3113)))+(((x3115)*(x3116))));
evalcond[8]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(cj2)*(x3116)*(x3121)))+(((IkReal(-1.00000000000000))*(cj2)*(x3112)*(x3121)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x3113)))+(((r20)*(x3115)))+(((x3111)*(x3124)))+(((x3111)*(x3123))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3129=((IkReal(1.00000000000000))*(sj2));
if( IKabs(((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3129)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3129)))+(((IkReal(-1.00000000000000))*(cj2)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3129)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3129)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))))+IKsqr(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3129)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3129)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))), ((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3130=IKsin(j4);
IkReal x3131=((sj1)*(sj2));
IkReal x3132=((IkReal(1.00000000000000))*(cj6));
IkReal x3133=((IkReal(1.00000000000000))*(sj6));
IkReal x3134=((cj1)*(sj2));
IkReal x3135=((IkReal(1.00000000000000))*(IKcos(j4)));
evalcond[0]=((x3130)+(((r02)*(x3134)))+(((cj2)*(r22)))+(((r12)*(x3131))));
evalcond[1]=((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x3135))));
evalcond[2]=((((cj6)*(r01)*(sj1)))+(((IkReal(-1.00000000000000))*(x3130)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x3132)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x3133)))+(((r00)*(sj1)*(sj6))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x3131)*(x3133)))+(((IkReal(-1.00000000000000))*(r01)*(x3132)*(x3134)))+(((IkReal(-1.00000000000000))*(r11)*(x3131)*(x3132)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x3132)))+(((IkReal(-1.00000000000000))*(cj2)*(r20)*(x3133)))+(((IkReal(-1.00000000000000))*(r00)*(x3133)*(x3134)))+(((IkReal(-1.00000000000000))*(x3135))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x3136=((IkReal(1.00000000000000))*(sj6));
IkReal x3137=((r02)*(sj1));
IkReal x3138=((cj1)*(cj6));
IkReal x3139=((cj6)*(sj1));
IkReal x3140=((IkReal(0.400000000000000))*(r01));
IkReal x3141=((IkReal(1.00000000000000))*(cj2));
IkReal x3142=((r11)*(sj1));
IkReal x3143=((cj2)*(sj6));
IkReal x3144=((cj1)*(r01));
IkReal x3145=((cj1)*(r12));
IkReal x3146=((cj6)*(r20));
IkReal x3147=((sj1)*(sj6));
IkReal x3148=((r00)*(x3139));
IkReal x3149=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x3150=((r00)*(x3147));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((npz)+(((IkReal(0.400000000000000))*(x3137)))+(((IkReal(-0.400000000000000))*(x3145))));
evalcond[2]=((x3145)+(((IkReal(-1.00000000000000))*(x3137))));
evalcond[3]=((x3150)+(((r01)*(x3139)))+(((IkReal(-1.00000000000000))*(r11)*(x3138)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x3136))));
evalcond[4]=((IkReal(0.000500000000000000))+(((r10)*(x3149)))+(((IkReal(0.400000000000000))*(r11)*(x3138)))+(((IkReal(-0.400000000000000))*(x3150)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((IkReal(-1.00000000000000))*(npx)*(x3136)))+(((IkReal(-1.00000000000000))*(x3139)*(x3140))));
evalcond[5]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x3148)))+(((r01)*(x3147)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x3136)))+(((r10)*(x3138))));
evalcond[6]=((IkReal(0.390000000000000))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x3140)*(x3147)))+(((IkReal(-0.400000000000000))*(r10)*(x3138)))+(((r11)*(x3149)))+(((IkReal(-1.00000000000000))*(npy)*(x3136)))+(((IkReal(0.400000000000000))*(x3148))));
evalcond[7]=((((IkReal(-1.00000000000000))*(cj2)*(r21)*(x3136)))+(((r10)*(sj2)*(x3139)))+(((cj2)*(x3146)))+(((r00)*(sj2)*(x3138)))+(((IkReal(-1.00000000000000))*(sj2)*(x3136)*(x3144)))+(((IkReal(-1.00000000000000))*(sj2)*(x3136)*(x3142))));
evalcond[8]=((((x3142)*(x3143)))+(((sj2)*(x3146)))+(((x3143)*(x3144)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x3136)))+(((IkReal(-1.00000000000000))*(r00)*(x3138)*(x3141)))+(((IkReal(-1.00000000000000))*(r10)*(x3139)*(x3141))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3151=((r12)*(sj1));
IkReal x3152=((IkReal(1.00000000000000))*(sj2));
IkReal x3153=((cj1)*(r02));
if( IKabs(((((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x3152)*(x3153)))+(((IkReal(-1.00000000000000))*(x3151)*(x3152))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r22)*(x3152)))+(((cj2)*(x3153)))+(((cj2)*(x3151))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x3152)*(x3153)))+(((IkReal(-1.00000000000000))*(x3151)*(x3152)))))+IKsqr(((((IkReal(-1.00000000000000))*(r22)*(x3152)))+(((cj2)*(x3153)))+(((cj2)*(x3151)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x3152)*(x3153)))+(((IkReal(-1.00000000000000))*(x3151)*(x3152)))), ((((IkReal(-1.00000000000000))*(r22)*(x3152)))+(((cj2)*(x3153)))+(((cj2)*(x3151)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3154=IKsin(j4);
IkReal x3155=IKcos(j4);
IkReal x3156=((cj2)*(sj6));
IkReal x3157=((cj1)*(r00));
IkReal x3158=((sj1)*(sj2));
IkReal x3159=((IkReal(1.00000000000000))*(sj6));
IkReal x3160=((IkReal(1.00000000000000))*(cj1));
IkReal x3161=((cj6)*(r01));
IkReal x3162=((cj2)*(sj1));
IkReal x3163=((cj6)*(r11));
IkReal x3164=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((x3154)+(((r12)*(x3158)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((x3155)+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x3160)))+(((IkReal(-1.00000000000000))*(r12)*(x3162))));
evalcond[2]=((((cj1)*(cj2)*(x3161)))+(x3154)+(((r10)*(sj1)*(x3156)))+(((x3162)*(x3163)))+(((x3156)*(x3157)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x3159)))+(((IkReal(-1.00000000000000))*(sj2)*(x3164))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3155)))+(((IkReal(-1.00000000000000))*(x3158)*(x3163)))+(((IkReal(-1.00000000000000))*(sj2)*(x3160)*(x3161)))+(((IkReal(-1.00000000000000))*(r20)*(x3156)))+(((IkReal(-1.00000000000000))*(sj2)*(x3157)*(x3159)))+(((IkReal(-1.00000000000000))*(cj2)*(x3164)))+(((IkReal(-1.00000000000000))*(r10)*(x3158)*(x3159))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x3165=((IkReal(1.00000000000000))*(sj6));
IkReal x3166=((r02)*(sj1));
IkReal x3167=((cj1)*(cj6));
IkReal x3168=((cj6)*(sj1));
IkReal x3169=((IkReal(0.400000000000000))*(r01));
IkReal x3170=((IkReal(1.00000000000000))*(cj2));
IkReal x3171=((r11)*(sj1));
IkReal x3172=((cj2)*(sj6));
IkReal x3173=((cj1)*(r01));
IkReal x3174=((cj1)*(r12));
IkReal x3175=((cj6)*(r20));
IkReal x3176=((sj1)*(sj6));
IkReal x3177=((r00)*(x3168));
IkReal x3178=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x3179=((r00)*(x3176));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-0.400000000000000))*(x3174)))+(npz)+(((IkReal(0.400000000000000))*(x3166))));
evalcond[2]=((x3174)+(((IkReal(-1.00000000000000))*(x3166))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x3165)))+(x3179)+(((r01)*(x3168)))+(((IkReal(-1.00000000000000))*(r11)*(x3167))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-0.400000000000000))*(x3179)))+(((r10)*(x3178)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((IkReal(-1.00000000000000))*(npx)*(x3165)))+(((IkReal(0.400000000000000))*(r11)*(x3167)))+(((IkReal(-1.00000000000000))*(x3168)*(x3169))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x3165)))+(((r10)*(x3167)))+(((IkReal(-1.00000000000000))*(x3177)))+(((r01)*(x3176))));
evalcond[6]=((IkReal(0.390000000000000))+(((r11)*(x3178)))+(((IkReal(-1.00000000000000))*(x3169)*(x3176)))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(x3165)))+(((IkReal(0.400000000000000))*(x3177)))+(((IkReal(-0.400000000000000))*(r10)*(x3167))));
evalcond[7]=((((IkReal(-1.00000000000000))*(cj2)*(r21)*(x3165)))+(((r10)*(sj2)*(x3168)))+(((r00)*(sj2)*(x3167)))+(((cj2)*(x3175)))+(((IkReal(-1.00000000000000))*(sj2)*(x3165)*(x3173)))+(((IkReal(-1.00000000000000))*(sj2)*(x3165)*(x3171))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r10)*(x3168)*(x3170)))+(((sj2)*(x3175)))+(((IkReal(-1.00000000000000))*(r00)*(x3167)*(x3170)))+(((x3171)*(x3172)))+(((x3172)*(x3173)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x3165))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3180=((IkReal(1.00000000000000))*(sj2));
IkReal x3181=((r12)*(sj1));
IkReal x3182=((cj1)*(r02));
IkReal x3183=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IkReal(-1.00000000000000))*(x3180)*(x3181)))+(((IkReal(-1.00000000000000))*(x3180)*(x3182)))+(((IkReal(-1.00000000000000))*(r22)*(x3183))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x3181)*(x3183)))+(((IkReal(-1.00000000000000))*(x3182)*(x3183))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x3180)*(x3181)))+(((IkReal(-1.00000000000000))*(x3180)*(x3182)))+(((IkReal(-1.00000000000000))*(r22)*(x3183)))))+IKsqr(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x3181)*(x3183)))+(((IkReal(-1.00000000000000))*(x3182)*(x3183)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x3180)*(x3181)))+(((IkReal(-1.00000000000000))*(x3180)*(x3182)))+(((IkReal(-1.00000000000000))*(r22)*(x3183)))), ((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x3181)*(x3183)))+(((IkReal(-1.00000000000000))*(x3182)*(x3183)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3184=IKsin(j4);
IkReal x3185=((cj2)*(sj6));
IkReal x3186=((cj1)*(r00));
IkReal x3187=((sj1)*(sj2));
IkReal x3188=((IkReal(1.00000000000000))*(sj6));
IkReal x3189=((IkReal(1.00000000000000))*(cj1));
IkReal x3190=((cj6)*(r01));
IkReal x3191=((cj2)*(sj1));
IkReal x3192=((cj6)*(r11));
IkReal x3193=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x3194=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((x3184)+(((r12)*(x3187)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x3191)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x3193)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x3189))));
evalcond[2]=((((r10)*(sj1)*(x3185)))+(((cj1)*(cj2)*(x3190)))+(((x3185)*(x3186)))+(((IkReal(-1.00000000000000))*(sj2)*(x3194)))+(((IkReal(-1.00000000000000))*(x3184)))+(((x3191)*(x3192)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x3188))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj2)*(x3194)))+(((IkReal(-1.00000000000000))*(r20)*(x3185)))+(((IkReal(-1.00000000000000))*(x3187)*(x3192)))+(((IkReal(-1.00000000000000))*(sj2)*(x3186)*(x3188)))+(((IkReal(-1.00000000000000))*(r10)*(x3187)*(x3188)))+(((IkReal(-1.00000000000000))*(x3193)))+(((IkReal(-1.00000000000000))*(sj2)*(x3189)*(x3190))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3195=((r12)*(sj1));
IkReal x3196=((IkReal(1.00000000000000))*(sj2));
IkReal x3197=((cj1)*(r02));
if( IKabs(((((IkReal(-1.00000000000000))*(x3196)*(x3197)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x3195)*(x3196))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r22)*(x3196)))+(((cj2)*(x3197)))+(((cj2)*(x3195))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x3196)*(x3197)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x3195)*(x3196)))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r22)*(x3196)))+(((cj2)*(x3197)))+(((cj2)*(x3195)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x3196)*(x3197)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x3195)*(x3196)))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r22)*(x3196)))+(((cj2)*(x3197)))+(((cj2)*(x3195)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3198=IKcos(j4);
IkReal x3199=IKsin(j4);
IkReal x3200=((cj1)*(cj2));
IkReal x3201=((r00)*(sj6));
IkReal x3202=((IkReal(1.00000000000000))*(cj6));
IkReal x3203=((cj1)*(sj2));
IkReal x3204=((IkReal(1.00000000000000))*(sj1));
IkReal x3205=((sj2)*(sj6));
IkReal x3206=((IkReal(1.00000000000000))*(r20));
IkReal x3207=((cj6)*(r01));
IkReal x3208=((cj2)*(sj6));
IkReal x3209=((r11)*(sj1));
evalcond[0]=((x3199)+(((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((r02)*(x3203))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(x3204)))+(((cj1)*(r12)))+(((sj3)*(x3198))));
evalcond[2]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(r02)*(x3200)))+(((cj3)*(x3198)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(x3204))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(sj6)))+(((sj3)*(x3199)))+(((sj1)*(x3201)))+(((sj1)*(x3207)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x3202))));
evalcond[4]=((((r10)*(sj1)*(x3208)))+(((x3200)*(x3201)))+(((x3200)*(x3207)))+(((cj3)*(x3199)))+(((cj2)*(cj6)*(x3209)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x3202)))+(((IkReal(-1.00000000000000))*(x3205)*(x3206))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj2)*(x3202)*(x3209)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x3202)))+(((IkReal(-1.00000000000000))*(x3198)))+(((IkReal(-1.00000000000000))*(x3201)*(x3203)))+(((IkReal(-1.00000000000000))*(x3206)*(x3208)))+(((IkReal(-1.00000000000000))*(r10)*(x3204)*(x3205)))+(((IkReal(-1.00000000000000))*(r01)*(x3202)*(x3203))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3210=((IkReal(1.00000000000000))*(sj2));
if( IKabs(((((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3210)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3210))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3210)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3210)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3210)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3210)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3211=IKcos(j4);
IkReal x3212=IKsin(j4);
IkReal x3213=((cj1)*(cj2));
IkReal x3214=((r00)*(sj6));
IkReal x3215=((IkReal(1.00000000000000))*(cj6));
IkReal x3216=((cj1)*(sj2));
IkReal x3217=((IkReal(1.00000000000000))*(sj1));
IkReal x3218=((sj2)*(sj6));
IkReal x3219=((IkReal(1.00000000000000))*(r20));
IkReal x3220=((cj6)*(r01));
IkReal x3221=((cj2)*(sj6));
IkReal x3222=((r11)*(sj1));
evalcond[0]=((x3212)+(((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((r02)*(x3216))));
evalcond[1]=((((cj1)*(r12)))+(((sj3)*(x3211)))+(((IkReal(-1.00000000000000))*(r02)*(x3217))));
evalcond[2]=((((r22)*(sj2)))+(((cj3)*(x3211)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(x3217)))+(((IkReal(-1.00000000000000))*(r02)*(x3213))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x3215)))+(((sj1)*(x3220)))+(((sj3)*(x3212)))+(((sj1)*(x3214))));
evalcond[4]=((((x3213)*(x3214)))+(((cj2)*(cj6)*(x3222)))+(((cj3)*(x3212)))+(((IkReal(-1.00000000000000))*(x3218)*(x3219)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x3215)))+(((r10)*(sj1)*(x3221)))+(((x3213)*(x3220))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r01)*(x3215)*(x3216)))+(((IkReal(-1.00000000000000))*(sj2)*(x3215)*(x3222)))+(((IkReal(-1.00000000000000))*(x3211)))+(((IkReal(-1.00000000000000))*(r10)*(x3217)*(x3218)))+(((IkReal(-1.00000000000000))*(x3219)*(x3221)))+(((IkReal(-1.00000000000000))*(x3214)*(x3216)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x3215))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3223=((IkReal(1.00000000000000))*(sj1));
if( IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x3223)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x3223)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst11)*(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x3223)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x3223)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))))), ((gconst11)*(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3224=IKcos(j4);
IkReal x3225=IKsin(j4);
IkReal x3226=((cj1)*(cj2));
IkReal x3227=((r00)*(sj6));
IkReal x3228=((IkReal(1.00000000000000))*(cj6));
IkReal x3229=((cj1)*(sj2));
IkReal x3230=((IkReal(1.00000000000000))*(sj1));
IkReal x3231=((sj2)*(sj6));
IkReal x3232=((IkReal(1.00000000000000))*(r20));
IkReal x3233=((cj6)*(r01));
IkReal x3234=((cj2)*(sj6));
IkReal x3235=((r11)*(sj1));
evalcond[0]=((((r02)*(x3229)))+(x3225)+(((r12)*(sj1)*(sj2)))+(((cj2)*(r22))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(x3230)))+(((sj3)*(x3224)))+(((cj1)*(r12))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x3226)))+(((cj3)*(x3224)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(x3230))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(sj6)))+(((sj3)*(x3225)))+(((sj1)*(x3233)))+(((sj1)*(x3227)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x3228))));
evalcond[4]=((((r10)*(sj1)*(x3234)))+(((cj3)*(x3225)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x3228)))+(((IkReal(-1.00000000000000))*(x3231)*(x3232)))+(((x3226)*(x3227)))+(((x3226)*(x3233)))+(((cj2)*(cj6)*(x3235))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj2)*(r21)*(x3228)))+(((IkReal(-1.00000000000000))*(r01)*(x3228)*(x3229)))+(((IkReal(-1.00000000000000))*(x3227)*(x3229)))+(((IkReal(-1.00000000000000))*(r10)*(x3230)*(x3231)))+(((IkReal(-1.00000000000000))*(x3232)*(x3234)))+(((IkReal(-1.00000000000000))*(sj2)*(x3228)*(x3235)))+(((IkReal(-1.00000000000000))*(x3224))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3236=((IkReal(1.00000000000000))*(sj1));
if( IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x3236)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x3236)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst10)*(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x3236)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x3236)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))))), ((gconst10)*(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x3237=((IkReal(1.00000000000000))*(cj1));
evalcond[0]=((((sj3)*(IKcos(j4))))+(((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1))));
evalcond[1]=((((cj6)*(r01)*(sj1)))+(((sj3)*(IKsin(j4))))+(((r00)*(sj1)*(sj6)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x3237)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x3237))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign((((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1))))));
dummyeval[0]=(((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst13;
IkReal x3238=((cj1)*(cj6));
IkReal x3239=((IkReal(1.00000000000000))*(r20));
IkReal x3240=((r21)*(sj6));
IkReal x3241=((r12)*(sj1));
IkReal x3242=((IkReal(1.00000000000000))*(r22)*(sj6));
gconst13=IKsign(((((r00)*(r22)*(x3238)))+(((IkReal(-1.00000000000000))*(cj6)*(x3239)*(x3241)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x3242)))+(((cj1)*(r02)*(x3240)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x3242)))+(((IkReal(-1.00000000000000))*(r02)*(x3238)*(x3239)))+(((cj6)*(r10)*(r22)*(sj1)))+(((x3240)*(x3241)))));
IkReal x3243=((cj1)*(cj6));
IkReal x3244=((IkReal(1.00000000000000))*(r20));
IkReal x3245=((r21)*(sj6));
IkReal x3246=((r12)*(sj1));
IkReal x3247=((IkReal(1.00000000000000))*(r22)*(sj6));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj1)*(r01)*(x3247)))+(((IkReal(-1.00000000000000))*(cj6)*(x3244)*(x3246)))+(((cj1)*(r02)*(x3245)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x3247)))+(((IkReal(-1.00000000000000))*(r02)*(x3243)*(x3244)))+(((cj6)*(r10)*(r22)*(sj1)))+(((r00)*(r22)*(x3243)))+(((x3245)*(x3246))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3248=((sj4)*(sj6));
IkReal x3249=((IkReal(1.00000000000000))*(cj6)*(sj4));
if( IKabs(((gconst13)*(((((IkReal(-1.00000000000000))*(r21)*(x3248)))+(((cj6)*(r20)*(sj4))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*(((((cj1)*(r01)*(x3248)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x3249)))+(((r11)*(sj1)*(x3248)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x3249))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst13)*(((((IkReal(-1.00000000000000))*(r21)*(x3248)))+(((cj6)*(r20)*(sj4)))))), ((gconst13)*(((((cj1)*(r01)*(x3248)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x3249)))+(((r11)*(sj1)*(x3248)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x3249)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3250=IKsin(j2);
IkReal x3251=IKcos(j2);
IkReal x3252=((r11)*(sj6));
IkReal x3253=((cj6)*(r11));
IkReal x3254=((cj6)*(r20));
IkReal x3255=((IkReal(1.00000000000000))*(sj6));
IkReal x3256=((cj1)*(r00));
IkReal x3257=((cj1)*(r01));
IkReal x3258=((IkReal(1.00000000000000))*(cj6));
IkReal x3259=((cj1)*(r02));
IkReal x3260=((sj1)*(x3250));
IkReal x3261=((sj1)*(x3251));
IkReal x3262=((r21)*(x3251));
IkReal x3263=((sj6)*(x3251));
IkReal x3264=((cj6)*(x3251));
IkReal x3265=((r21)*(x3250));
evalcond[0]=((sj4)+(((x3250)*(x3259)))+(((r22)*(x3251)))+(((r12)*(x3260))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x3261)))+(((cj3)*(cj4)))+(((IkReal(-1.00000000000000))*(x3251)*(x3259)))+(((r22)*(x3250))));
evalcond[2]=((((r10)*(sj6)*(x3261)))+(((x3257)*(x3264)))+(((x3256)*(x3263)))+(((x3253)*(x3261)))+(((cj3)*(sj4)))+(((IkReal(-1.00000000000000))*(r20)*(x3250)*(x3255)))+(((IkReal(-1.00000000000000))*(x3258)*(x3265))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3250)*(x3255)*(x3257)))+(((IkReal(-1.00000000000000))*(x3252)*(x3260)))+(((x3251)*(x3254)))+(((IkReal(-1.00000000000000))*(x3255)*(x3262)))+(((cj6)*(x3250)*(x3256)))+(((cj6)*(r10)*(x3260))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x3250)*(x3255)*(x3256)))+(((IkReal(-1.00000000000000))*(x3253)*(x3260)))+(((IkReal(-1.00000000000000))*(x3250)*(x3257)*(x3258)))+(((IkReal(-1.00000000000000))*(cj4)))+(((IkReal(-1.00000000000000))*(r10)*(x3255)*(x3260)))+(((IkReal(-1.00000000000000))*(r20)*(x3251)*(x3255)))+(((IkReal(-1.00000000000000))*(x3258)*(x3262))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj3)))+(((x3257)*(x3263)))+(((IkReal(-1.00000000000000))*(r10)*(x3258)*(x3261)))+(((IkReal(-1.00000000000000))*(x3251)*(x3256)*(x3258)))+(((x3250)*(x3254)))+(((IkReal(-1.00000000000000))*(x3255)*(x3265)))+(((x3252)*(x3261))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3266=((cj1)*(r02));
IkReal x3267=((cj3)*(cj4));
IkReal x3268=((IkReal(1.00000000000000))*(sj4));
IkReal x3269=((r12)*(sj1));
if( IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(r22)*(x3267)))+(((IkReal(-1.00000000000000))*(x3266)*(x3268)))+(((IkReal(-1.00000000000000))*(x3268)*(x3269))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((x3267)*(x3269)))+(((IkReal(-1.00000000000000))*(r22)*(x3268)))+(((x3266)*(x3267))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst12)*(((((IkReal(-1.00000000000000))*(r22)*(x3267)))+(((IkReal(-1.00000000000000))*(x3266)*(x3268)))+(((IkReal(-1.00000000000000))*(x3268)*(x3269)))))), ((gconst12)*(((((x3267)*(x3269)))+(((IkReal(-1.00000000000000))*(r22)*(x3268)))+(((x3266)*(x3267)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3270=IKsin(j2);
IkReal x3271=IKcos(j2);
IkReal x3272=((r11)*(sj6));
IkReal x3273=((cj6)*(r11));
IkReal x3274=((cj6)*(r20));
IkReal x3275=((IkReal(1.00000000000000))*(sj6));
IkReal x3276=((cj1)*(r00));
IkReal x3277=((cj1)*(r01));
IkReal x3278=((IkReal(1.00000000000000))*(cj6));
IkReal x3279=((cj1)*(r02));
IkReal x3280=((sj1)*(x3270));
IkReal x3281=((sj1)*(x3271));
IkReal x3282=((r21)*(x3271));
IkReal x3283=((sj6)*(x3271));
IkReal x3284=((cj6)*(x3271));
IkReal x3285=((r21)*(x3270));
evalcond[0]=((sj4)+(((r22)*(x3271)))+(((r12)*(x3280)))+(((x3270)*(x3279))));
evalcond[1]=((((cj3)*(cj4)))+(((IkReal(-1.00000000000000))*(x3271)*(x3279)))+(((IkReal(-1.00000000000000))*(r12)*(x3281)))+(((r22)*(x3270))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x3270)*(x3275)))+(((x3273)*(x3281)))+(((x3276)*(x3283)))+(((r10)*(sj6)*(x3281)))+(((IkReal(-1.00000000000000))*(x3278)*(x3285)))+(((x3277)*(x3284)))+(((cj3)*(sj4))));
evalcond[3]=((((cj6)*(r10)*(x3280)))+(((IkReal(-1.00000000000000))*(x3272)*(x3280)))+(((cj6)*(x3270)*(x3276)))+(((IkReal(-1.00000000000000))*(x3270)*(x3275)*(x3277)))+(((IkReal(-1.00000000000000))*(x3275)*(x3282)))+(((x3271)*(x3274))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(x3271)*(x3275)))+(((IkReal(-1.00000000000000))*(x3273)*(x3280)))+(((IkReal(-1.00000000000000))*(x3270)*(x3275)*(x3276)))+(((IkReal(-1.00000000000000))*(r10)*(x3275)*(x3280)))+(((IkReal(-1.00000000000000))*(x3270)*(x3277)*(x3278)))+(((IkReal(-1.00000000000000))*(x3278)*(x3282)))+(((IkReal(-1.00000000000000))*(cj4))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj3)))+(((IkReal(-1.00000000000000))*(x3271)*(x3276)*(x3278)))+(((x3272)*(x3281)))+(((IkReal(-1.00000000000000))*(r10)*(x3278)*(x3281)))+(((IkReal(-1.00000000000000))*(x3275)*(x3285)))+(((x3270)*(x3274)))+(((x3277)*(x3283))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x3286=((IkReal(1.00000000000000))*(sj6));
IkReal x3287=((IkReal(0.400000000000000))*(cj6));
IkReal x3288=((r00)*(sj1));
IkReal x3289=((cj1)*(r11));
IkReal x3290=((r02)*(sj1));
IkReal x3291=((cj1)*(r10));
IkReal x3292=((IkReal(0.400000000000000))*(sj6));
IkReal x3293=((cj1)*(r12));
IkReal x3294=((r01)*(sj1));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(((IkReal(-0.400000000000000))*(x3293)))+(npz)+(((IkReal(0.400000000000000))*(x3290))));
evalcond[2]=((x3293)+(((IkReal(-1.00000000000000))*(x3290)))+(((IkReal(-1.00000000000000))*(cj3))));
evalcond[3]=((IkReal(0.000500000000000000))+(((x3287)*(x3289)))+(((IkReal(-1.00000000000000))*(npx)*(x3286)))+(((x3291)*(x3292)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((IkReal(-1.00000000000000))*(x3287)*(x3294)))+(((IkReal(-1.00000000000000))*(x3288)*(x3292))));
evalcond[4]=((((x3287)*(x3288)))+(((cj6)*(npx)))+(((x3289)*(x3292)))+(((IkReal(-1.00000000000000))*(npy)*(x3286)))+(((IkReal(-1.00000000000000))*(x3292)*(x3294)))+(((IkReal(-1.00000000000000))*(x3287)*(x3291))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign(((((IkReal(-1.00000000000000))*((cj1)*(cj1))*((r02)*(r02))))+(((IkReal(-1.00000000000000))*((r12)*(r12))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj1)*(cj1))*((r02)*(r02))))+(((IkReal(-1.00000000000000))*((r12)*(r12))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-2.00000000000000))*(cj1)*(r02)*(r12)*(sj1))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x3295=((IkReal(1.00000000000000))*(sj6));
IkReal x3296=((r02)*(sj1));
IkReal x3297=((IkReal(1.00000000000000))*(cj6));
IkReal x3298=((cj1)*(r11));
IkReal x3299=((IkReal(0.400000000000000))*(sj1));
IkReal x3300=((cj6)*(r01));
IkReal x3301=((r00)*(sj6));
IkReal x3302=((cj1)*(r12));
IkReal x3303=((r01)*(sj6));
IkReal x3304=((cj6)*(r00)*(sj1));
IkReal x3305=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x3306=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(((IkReal(-0.400000000000000))*(x3302)))+(npz)+(((IkReal(0.400000000000000))*(x3296))));
evalcond[2]=((IkReal(-1.00000000000000))+(x3302)+(((IkReal(-1.00000000000000))*(x3296))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x3295)))+(((IkReal(-1.00000000000000))*(x3297)*(x3298)))+(((sj1)*(x3301)))+(((sj1)*(x3300))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x3297)))+(((IkReal(-1.00000000000000))*(npx)*(x3295)))+(((IkReal(0.400000000000000))*(cj6)*(x3298)))+(((r10)*(x3305)))+(((IkReal(-1.00000000000000))*(x3299)*(x3301)))+(((IkReal(-1.00000000000000))*(x3299)*(x3300))));
evalcond[5]=((x3306)+(((IkReal(-1.00000000000000))*(x3295)*(x3298)))+(((sj1)*(x3303)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x3297))));
evalcond[6]=((((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(x3295)))+(((IkReal(-0.400000000000000))*(x3306)))+(((cj6)*(r00)*(x3299)))+(((IkReal(-1.00000000000000))*(x3299)*(x3303)))+(((IkReal(0.400000000000000))*(sj6)*(x3298))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
if( IKabs(r22) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(r02)))+(((r12)*(sj1))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x3307=IKatan2(r22, ((((cj1)*(r02)))+(((r12)*(sj1)))));
j2array[0]=((IkReal(-1.00000000000000))*(x3307));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x3307))));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[1];
IkReal x3308=IKcos(j2);
IkReal x3309=((IkReal(1.00000000000000))*(x3308));
evalcond[0]=((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3309)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3309)))+(((r22)*(IKsin(j2)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3310=((sj2)*(sj6));
IkReal x3311=((r11)*(sj1));
IkReal x3312=((cj2)*(sj6));
IkReal x3313=((cj2)*(cj6));
IkReal x3314=((r10)*(sj1));
IkReal x3315=((IkReal(1.00000000000000))*(r20));
IkReal x3316=((cj6)*(sj2));
IkReal x3317=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((cj1)*(r01)*(x3310)))+(((r21)*(x3312)))+(((IkReal(-1.00000000000000))*(x3314)*(x3316)))+(((IkReal(-1.00000000000000))*(x3313)*(x3315)))+(((IkReal(-1.00000000000000))*(r00)*(x3316)*(x3317)))+(((x3310)*(x3311))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(r00)*(x3313)))+(((IkReal(-1.00000000000000))*(x3311)*(x3312)))+(((r21)*(x3310)))+(((x3313)*(x3314)))+(((IkReal(-1.00000000000000))*(r01)*(x3312)*(x3317)))+(((IkReal(-1.00000000000000))*(x3315)*(x3316))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj1)*(r01)*(x3310)))+(((r21)*(x3312)))+(((IkReal(-1.00000000000000))*(x3314)*(x3316)))+(((IkReal(-1.00000000000000))*(x3313)*(x3315)))+(((IkReal(-1.00000000000000))*(r00)*(x3316)*(x3317)))+(((x3310)*(x3311)))))+IKsqr(((((cj1)*(r00)*(x3313)))+(((IkReal(-1.00000000000000))*(x3311)*(x3312)))+(((r21)*(x3310)))+(((x3313)*(x3314)))+(((IkReal(-1.00000000000000))*(r01)*(x3312)*(x3317)))+(((IkReal(-1.00000000000000))*(x3315)*(x3316)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((cj1)*(r01)*(x3310)))+(((r21)*(x3312)))+(((IkReal(-1.00000000000000))*(x3314)*(x3316)))+(((IkReal(-1.00000000000000))*(x3313)*(x3315)))+(((IkReal(-1.00000000000000))*(r00)*(x3316)*(x3317)))+(((x3310)*(x3311)))), ((((cj1)*(r00)*(x3313)))+(((IkReal(-1.00000000000000))*(x3311)*(x3312)))+(((r21)*(x3310)))+(((x3313)*(x3314)))+(((IkReal(-1.00000000000000))*(r01)*(x3312)*(x3317)))+(((IkReal(-1.00000000000000))*(x3315)*(x3316)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3318=IKsin(j4);
IkReal x3319=IKcos(j4);
IkReal x3320=((cj2)*(sj6));
IkReal x3321=((cj1)*(r00));
IkReal x3322=((IkReal(1.00000000000000))*(r21));
IkReal x3323=((cj6)*(sj2));
IkReal x3324=((r10)*(sj1));
IkReal x3325=((cj2)*(cj6));
IkReal x3326=((cj1)*(r01));
IkReal x3327=((r11)*(sj1));
IkReal x3328=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((x3318)+(((IkReal(-1.00000000000000))*(r20)*(x3328)))+(((IkReal(-1.00000000000000))*(x3322)*(x3323)))+(((x3325)*(x3326)))+(((x3325)*(x3327)))+(((x3320)*(x3324)))+(((x3320)*(x3321))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3327)*(x3328)))+(((IkReal(-1.00000000000000))*(x3326)*(x3328)))+(x3318)+(((r20)*(x3325)))+(((IkReal(-1.00000000000000))*(x3320)*(x3322)))+(((x3321)*(x3323)))+(((x3323)*(x3324))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3324)*(x3328)))+(((IkReal(-1.00000000000000))*(x3323)*(x3327)))+(((IkReal(-1.00000000000000))*(x3323)*(x3326)))+(((IkReal(-1.00000000000000))*(x3322)*(x3325)))+(((IkReal(-1.00000000000000))*(x3321)*(x3328)))+(((IkReal(-1.00000000000000))*(x3319)))+(((IkReal(-1.00000000000000))*(r20)*(x3320))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x3322)))+(x3319)+(((r20)*(x3323)))+(((IkReal(-1.00000000000000))*(x3321)*(x3325)))+(((IkReal(-1.00000000000000))*(x3324)*(x3325)))+(((x3320)*(x3326)))+(((x3320)*(x3327))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

} else
{
IkReal x3329=((IkReal(1.00000000000000))*(sj6));
IkReal x3330=((r02)*(sj1));
IkReal x3331=((IkReal(1.00000000000000))*(cj6));
IkReal x3332=((cj1)*(r11));
IkReal x3333=((IkReal(0.400000000000000))*(sj1));
IkReal x3334=((cj6)*(r01));
IkReal x3335=((r00)*(sj6));
IkReal x3336=((cj1)*(r12));
IkReal x3337=((r01)*(sj6));
IkReal x3338=((cj6)*(r00)*(sj1));
IkReal x3339=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x3340=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(((IkReal(0.400000000000000))*(x3330)))+(npz)+(((IkReal(-0.400000000000000))*(x3336))));
evalcond[2]=((IkReal(1.00000000000000))+(x3336)+(((IkReal(-1.00000000000000))*(x3330))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3331)*(x3332)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x3329)))+(((sj1)*(x3334)))+(((sj1)*(x3335))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x3331)))+(((r10)*(x3339)))+(((IkReal(-1.00000000000000))*(npx)*(x3329)))+(((IkReal(0.400000000000000))*(cj6)*(x3332)))+(((IkReal(-1.00000000000000))*(x3333)*(x3334)))+(((IkReal(-1.00000000000000))*(x3333)*(x3335))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(sj1)*(x3331)))+(x3340)+(((sj1)*(x3337)))+(((IkReal(-1.00000000000000))*(x3329)*(x3332))));
evalcond[6]=((((cj6)*(npx)))+(((cj6)*(r00)*(x3333)))+(((IkReal(-0.400000000000000))*(x3340)))+(((IkReal(-1.00000000000000))*(npy)*(x3329)))+(((IkReal(0.400000000000000))*(sj6)*(x3332)))+(((IkReal(-1.00000000000000))*(x3333)*(x3337))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
if( IKabs(r22) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(r02)))+(((r12)*(sj1))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x3341=IKatan2(r22, ((((cj1)*(r02)))+(((r12)*(sj1)))));
j2array[0]=((IkReal(-1.00000000000000))*(x3341));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x3341))));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[1];
IkReal x3342=IKcos(j2);
IkReal x3343=((IkReal(1.00000000000000))*(x3342));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3343)))+(((r22)*(IKsin(j2))))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3343))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3344=((cj1)*(cj2));
IkReal x3345=((IkReal(1.00000000000000))*(cj6));
IkReal x3346=((r21)*(sj2));
IkReal x3347=((IkReal(1.00000000000000))*(sj6));
IkReal x3348=((r20)*(sj2));
IkReal x3349=((cj2)*(sj1));
IkReal x3350=((sj6)*(x3349));
if( IKabs(((((IkReal(-1.00000000000000))*(x3347)*(x3348)))+(((cj6)*(r11)*(x3349)))+(((r00)*(sj6)*(x3344)))+(((cj6)*(r01)*(x3344)))+(((IkReal(-1.00000000000000))*(x3345)*(x3346)))+(((r10)*(x3350))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r11)*(x3350)))+(((IkReal(-1.00000000000000))*(x3346)*(x3347)))+(((r01)*(sj6)*(x3344)))+(((IkReal(-1.00000000000000))*(r00)*(x3344)*(x3345)))+(((IkReal(-1.00000000000000))*(r10)*(x3345)*(x3349)))+(((cj6)*(x3348))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x3347)*(x3348)))+(((cj6)*(r11)*(x3349)))+(((r00)*(sj6)*(x3344)))+(((cj6)*(r01)*(x3344)))+(((IkReal(-1.00000000000000))*(x3345)*(x3346)))+(((r10)*(x3350)))))+IKsqr(((((r11)*(x3350)))+(((IkReal(-1.00000000000000))*(x3346)*(x3347)))+(((r01)*(sj6)*(x3344)))+(((IkReal(-1.00000000000000))*(r00)*(x3344)*(x3345)))+(((IkReal(-1.00000000000000))*(r10)*(x3345)*(x3349)))+(((cj6)*(x3348)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x3347)*(x3348)))+(((cj6)*(r11)*(x3349)))+(((r00)*(sj6)*(x3344)))+(((cj6)*(r01)*(x3344)))+(((IkReal(-1.00000000000000))*(x3345)*(x3346)))+(((r10)*(x3350)))), ((((r11)*(x3350)))+(((IkReal(-1.00000000000000))*(x3346)*(x3347)))+(((r01)*(sj6)*(x3344)))+(((IkReal(-1.00000000000000))*(r00)*(x3344)*(x3345)))+(((IkReal(-1.00000000000000))*(r10)*(x3345)*(x3349)))+(((cj6)*(x3348)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3351=IKsin(j4);
IkReal x3352=((cj2)*(sj6));
IkReal x3353=((cj1)*(r00));
IkReal x3354=((IkReal(1.00000000000000))*(r21));
IkReal x3355=((cj6)*(sj2));
IkReal x3356=((r10)*(sj1));
IkReal x3357=((cj2)*(cj6));
IkReal x3358=((cj1)*(r01));
IkReal x3359=((r11)*(sj1));
IkReal x3360=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x3361=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3354)*(x3355)))+(((x3352)*(x3353)))+(((x3352)*(x3356)))+(((IkReal(-1.00000000000000))*(r20)*(x3361)))+(((x3357)*(x3358)))+(((x3357)*(x3359)))+(((IkReal(-1.00000000000000))*(x3351))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3359)*(x3361)))+(((IkReal(-1.00000000000000))*(x3352)*(x3354)))+(x3351)+(((r20)*(x3357)))+(((x3355)*(x3356)))+(((x3353)*(x3355)))+(((IkReal(-1.00000000000000))*(x3358)*(x3361))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3360)))+(((IkReal(-1.00000000000000))*(x3354)*(x3357)))+(((IkReal(-1.00000000000000))*(r20)*(x3352)))+(((IkReal(-1.00000000000000))*(x3356)*(x3361)))+(((IkReal(-1.00000000000000))*(x3355)*(x3358)))+(((IkReal(-1.00000000000000))*(x3355)*(x3359)))+(((IkReal(-1.00000000000000))*(x3353)*(x3361))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3353)*(x3357)))+(((IkReal(-1.00000000000000))*(x3360)))+(((IkReal(-1.00000000000000))*(x3356)*(x3357)))+(((r20)*(x3355)))+(((x3352)*(x3358)))+(((x3352)*(x3359)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x3354))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3362=((IkReal(1.00000000000000))*(sj3));
if( IKabs(((gconst14)*(r22)*(sj3))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3362)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3362))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst14)*(r22)*(sj3)), ((gconst14)*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3362)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3362)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x3363=IKsin(j2);
IkReal x3364=IKcos(j2);
IkReal x3365=((r12)*(sj1));
IkReal x3366=((cj1)*(r02));
IkReal x3367=((IkReal(1.00000000000000))*(x3364));
evalcond[0]=((((x3363)*(x3365)))+(((x3363)*(x3366)))+(((r22)*(x3364))));
evalcond[1]=((sj3)+(((r22)*(x3363)))+(((IkReal(-1.00000000000000))*(x3365)*(x3367)))+(((IkReal(-1.00000000000000))*(x3366)*(x3367))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst16;
gconst16=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj3;
dummyeval[1]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x3368=((IkReal(1.00000000000000))*(sj6));
IkReal x3369=((IkReal(1.00000000000000))*(r02));
IkReal x3370=((cj1)*(r11));
IkReal x3371=((IkReal(1.00000000000000))*(cj6));
IkReal x3372=((IkReal(0.400000000000000))*(sj6));
IkReal x3373=((r00)*(sj1));
IkReal x3374=((cj1)*(r12));
IkReal x3375=((r12)*(sj1));
IkReal x3376=((r01)*(sj1));
IkReal x3377=((cj1)*(r10));
IkReal x3378=((cj6)*(x3373));
IkReal x3379=((cj6)*(x3376));
IkReal x3380=((cj6)*(x3377));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(((IkReal(-0.400000000000000))*(x3374)))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1))));
evalcond[2]=((((sj2)*(x3375)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((IkReal(-1.00000000000000))+(x3374)+(((IkReal(-1.00000000000000))*(sj1)*(x3369))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj2)*(x3375)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(x3369))));
evalcond[5]=((x3379)+(((IkReal(-1.00000000000000))*(x3370)*(x3371)))+(((IkReal(-1.00000000000000))*(x3368)*(x3377)))+(((sj6)*(x3373))));
evalcond[6]=((IkReal(0.000500000000000000))+(((IkReal(-0.400000000000000))*(x3379)))+(((IkReal(-1.00000000000000))*(npx)*(x3368)))+(((x3372)*(x3377)))+(((IkReal(0.400000000000000))*(cj6)*(x3370)))+(((IkReal(-1.00000000000000))*(npy)*(x3371)))+(((IkReal(-1.00000000000000))*(x3372)*(x3373))));
evalcond[7]=((x3380)+(((IkReal(-1.00000000000000))*(x3371)*(x3373)))+(((IkReal(-1.00000000000000))*(x3368)*(x3370)))+(((sj6)*(x3376))));
evalcond[8]=((((cj6)*(npx)))+(((IkReal(-0.400000000000000))*(x3380)))+(((IkReal(-1.00000000000000))*(npy)*(x3368)))+(((x3370)*(x3372)))+(((IkReal(0.400000000000000))*(x3378)))+(((IkReal(-1.00000000000000))*(x3372)*(x3376))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3381=((sj2)*(sj6));
IkReal x3382=((r11)*(sj1));
IkReal x3383=((cj2)*(sj6));
IkReal x3384=((cj2)*(cj6));
IkReal x3385=((r10)*(sj1));
IkReal x3386=((IkReal(1.00000000000000))*(r20));
IkReal x3387=((cj6)*(sj2));
IkReal x3388=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((x3381)*(x3382)))+(((IkReal(-1.00000000000000))*(x3384)*(x3386)))+(((r21)*(x3383)))+(((IkReal(-1.00000000000000))*(x3385)*(x3387)))+(((cj1)*(r01)*(x3381)))+(((IkReal(-1.00000000000000))*(r00)*(x3387)*(x3388))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r21)*(x3381)))+(((IkReal(-1.00000000000000))*(r01)*(x3383)*(x3388)))+(((IkReal(-1.00000000000000))*(x3386)*(x3387)))+(((IkReal(-1.00000000000000))*(x3382)*(x3383)))+(((x3384)*(x3385)))+(((cj1)*(r00)*(x3384))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((x3381)*(x3382)))+(((IkReal(-1.00000000000000))*(x3384)*(x3386)))+(((r21)*(x3383)))+(((IkReal(-1.00000000000000))*(x3385)*(x3387)))+(((cj1)*(r01)*(x3381)))+(((IkReal(-1.00000000000000))*(r00)*(x3387)*(x3388)))))+IKsqr(((((r21)*(x3381)))+(((IkReal(-1.00000000000000))*(r01)*(x3383)*(x3388)))+(((IkReal(-1.00000000000000))*(x3386)*(x3387)))+(((IkReal(-1.00000000000000))*(x3382)*(x3383)))+(((x3384)*(x3385)))+(((cj1)*(r00)*(x3384)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((x3381)*(x3382)))+(((IkReal(-1.00000000000000))*(x3384)*(x3386)))+(((r21)*(x3383)))+(((IkReal(-1.00000000000000))*(x3385)*(x3387)))+(((cj1)*(r01)*(x3381)))+(((IkReal(-1.00000000000000))*(r00)*(x3387)*(x3388)))), ((((r21)*(x3381)))+(((IkReal(-1.00000000000000))*(r01)*(x3383)*(x3388)))+(((IkReal(-1.00000000000000))*(x3386)*(x3387)))+(((IkReal(-1.00000000000000))*(x3382)*(x3383)))+(((x3384)*(x3385)))+(((cj1)*(r00)*(x3384)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3389=IKsin(j4);
IkReal x3390=IKcos(j4);
IkReal x3391=((cj2)*(sj6));
IkReal x3392=((cj1)*(r00));
IkReal x3393=((IkReal(1.00000000000000))*(r21));
IkReal x3394=((cj6)*(sj2));
IkReal x3395=((r10)*(sj1));
IkReal x3396=((cj2)*(cj6));
IkReal x3397=((cj1)*(r01));
IkReal x3398=((r11)*(sj1));
IkReal x3399=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((x3391)*(x3392)))+(((x3391)*(x3395)))+(x3389)+(((x3396)*(x3397)))+(((x3396)*(x3398)))+(((IkReal(-1.00000000000000))*(r20)*(x3399)))+(((IkReal(-1.00000000000000))*(x3393)*(x3394))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3398)*(x3399)))+(((r20)*(x3396)))+(((x3394)*(x3395)))+(x3389)+(((x3392)*(x3394)))+(((IkReal(-1.00000000000000))*(x3391)*(x3393)))+(((IkReal(-1.00000000000000))*(x3397)*(x3399))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3392)*(x3399)))+(((IkReal(-1.00000000000000))*(x3390)))+(((IkReal(-1.00000000000000))*(x3395)*(x3399)))+(((IkReal(-1.00000000000000))*(r20)*(x3391)))+(((IkReal(-1.00000000000000))*(x3394)*(x3397)))+(((IkReal(-1.00000000000000))*(x3394)*(x3398)))+(((IkReal(-1.00000000000000))*(x3393)*(x3396))));
evalcond[3]=((((r20)*(x3394)))+(((IkReal(-1.00000000000000))*(x3392)*(x3396)))+(((x3391)*(x3397)))+(((x3391)*(x3398)))+(x3390)+(((IkReal(-1.00000000000000))*(x3395)*(x3396)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x3393))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x3400=((IkReal(1.00000000000000))*(sj6));
IkReal x3401=((IkReal(1.00000000000000))*(r02));
IkReal x3402=((cj1)*(r11));
IkReal x3403=((IkReal(1.00000000000000))*(cj6));
IkReal x3404=((IkReal(0.400000000000000))*(sj6));
IkReal x3405=((r00)*(sj1));
IkReal x3406=((cj1)*(r12));
IkReal x3407=((r12)*(sj1));
IkReal x3408=((r01)*(sj1));
IkReal x3409=((cj1)*(r10));
IkReal x3410=((cj6)*(x3405));
IkReal x3411=((cj6)*(x3408));
IkReal x3412=((cj6)*(x3409));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1)))+(((IkReal(-0.400000000000000))*(x3406))));
evalcond[2]=((((sj2)*(x3407)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(sj1)*(x3401)))+(x3406));
evalcond[4]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(x3401)))+(((IkReal(-1.00000000000000))*(cj2)*(x3407))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x3400)*(x3409)))+(((IkReal(-1.00000000000000))*(x3402)*(x3403)))+(x3411)+(((sj6)*(x3405))));
evalcond[6]=((IkReal(0.000500000000000000))+(((IkReal(-0.400000000000000))*(x3411)))+(((IkReal(-1.00000000000000))*(x3404)*(x3405)))+(((IkReal(-1.00000000000000))*(npx)*(x3400)))+(((IkReal(-1.00000000000000))*(npy)*(x3403)))+(((IkReal(0.400000000000000))*(cj6)*(x3402)))+(((x3404)*(x3409))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x3400)*(x3402)))+(x3412)+(((sj6)*(x3408)))+(((IkReal(-1.00000000000000))*(x3403)*(x3405))));
evalcond[8]=((((cj6)*(npx)))+(((IkReal(-0.400000000000000))*(x3412)))+(((IkReal(-1.00000000000000))*(x3404)*(x3408)))+(((IkReal(-1.00000000000000))*(npy)*(x3400)))+(((IkReal(0.400000000000000))*(x3410)))+(((x3402)*(x3404))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3413=((cj1)*(cj2));
IkReal x3414=((IkReal(1.00000000000000))*(cj6));
IkReal x3415=((r21)*(sj2));
IkReal x3416=((IkReal(1.00000000000000))*(sj6));
IkReal x3417=((r20)*(sj2));
IkReal x3418=((cj2)*(sj1));
IkReal x3419=((sj6)*(x3418));
if( IKabs(((((IkReal(-1.00000000000000))*(x3414)*(x3415)))+(((cj6)*(r01)*(x3413)))+(((r10)*(x3419)))+(((r00)*(sj6)*(x3413)))+(((IkReal(-1.00000000000000))*(x3416)*(x3417)))+(((cj6)*(r11)*(x3418))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x3415)*(x3416)))+(((r01)*(sj6)*(x3413)))+(((cj6)*(x3417)))+(((r11)*(x3419)))+(((IkReal(-1.00000000000000))*(r00)*(x3413)*(x3414)))+(((IkReal(-1.00000000000000))*(r10)*(x3414)*(x3418))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x3414)*(x3415)))+(((cj6)*(r01)*(x3413)))+(((r10)*(x3419)))+(((r00)*(sj6)*(x3413)))+(((IkReal(-1.00000000000000))*(x3416)*(x3417)))+(((cj6)*(r11)*(x3418)))))+IKsqr(((((IkReal(-1.00000000000000))*(x3415)*(x3416)))+(((r01)*(sj6)*(x3413)))+(((cj6)*(x3417)))+(((r11)*(x3419)))+(((IkReal(-1.00000000000000))*(r00)*(x3413)*(x3414)))+(((IkReal(-1.00000000000000))*(r10)*(x3414)*(x3418)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x3414)*(x3415)))+(((cj6)*(r01)*(x3413)))+(((r10)*(x3419)))+(((r00)*(sj6)*(x3413)))+(((IkReal(-1.00000000000000))*(x3416)*(x3417)))+(((cj6)*(r11)*(x3418)))), ((((IkReal(-1.00000000000000))*(x3415)*(x3416)))+(((r01)*(sj6)*(x3413)))+(((cj6)*(x3417)))+(((r11)*(x3419)))+(((IkReal(-1.00000000000000))*(r00)*(x3413)*(x3414)))+(((IkReal(-1.00000000000000))*(r10)*(x3414)*(x3418)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3420=IKsin(j4);
IkReal x3421=((cj2)*(sj6));
IkReal x3422=((cj1)*(r00));
IkReal x3423=((IkReal(1.00000000000000))*(r21));
IkReal x3424=((cj6)*(sj2));
IkReal x3425=((r10)*(sj1));
IkReal x3426=((cj2)*(cj6));
IkReal x3427=((cj1)*(r01));
IkReal x3428=((r11)*(sj1));
IkReal x3429=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x3430=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((x3421)*(x3422)))+(((x3421)*(x3425)))+(((IkReal(-1.00000000000000))*(x3420)))+(((IkReal(-1.00000000000000))*(r20)*(x3430)))+(((x3426)*(x3428)))+(((x3426)*(x3427)))+(((IkReal(-1.00000000000000))*(x3423)*(x3424))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3427)*(x3430)))+(((x3424)*(x3425)))+(((IkReal(-1.00000000000000))*(x3428)*(x3430)))+(((r20)*(x3426)))+(x3420)+(((x3422)*(x3424)))+(((IkReal(-1.00000000000000))*(x3421)*(x3423))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3425)*(x3430)))+(((IkReal(-1.00000000000000))*(x3429)))+(((IkReal(-1.00000000000000))*(r20)*(x3421)))+(((IkReal(-1.00000000000000))*(x3422)*(x3430)))+(((IkReal(-1.00000000000000))*(x3423)*(x3426)))+(((IkReal(-1.00000000000000))*(x3424)*(x3427)))+(((IkReal(-1.00000000000000))*(x3424)*(x3428))));
evalcond[3]=((((r20)*(x3424)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x3423)))+(((IkReal(-1.00000000000000))*(x3422)*(x3426)))+(((IkReal(-1.00000000000000))*(x3429)))+(((x3421)*(x3427)))+(((x3421)*(x3428)))+(((IkReal(-1.00000000000000))*(x3425)*(x3426))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x3431=((cj1)*(sj6));
IkReal x3432=((cj2)*(r00));
IkReal x3433=((IkReal(1.00000000000000))*(sj6));
IkReal x3434=((IkReal(0.400000000000000))*(r10));
IkReal x3435=((IkReal(1.00000000000000))*(r02));
IkReal x3436=((IkReal(0.400000000000000))*(r11));
IkReal x3437=((r20)*(sj2));
IkReal x3438=((IkReal(1.00000000000000))*(cj6));
IkReal x3439=((sj1)*(sj6));
IkReal x3440=((cj1)*(cj2));
IkReal x3441=((r21)*(sj2));
IkReal x3442=((cj1)*(r12));
IkReal x3443=((cj2)*(r11));
IkReal x3444=((r12)*(sj1));
IkReal x3445=((cj1)*(cj6));
IkReal x3446=((cj2)*(r10));
IkReal x3447=((IkReal(0.400000000000000))*(cj6)*(sj1));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1)))+(((IkReal(-0.400000000000000))*(x3442))));
evalcond[2]=((((cj2)*(r22)))+(((sj2)*(x3444)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((x3442)+(((IkReal(-1.00000000000000))*(sj1)*(x3435))));
evalcond[4]=((IkReal(1.00000000000000))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x3444)))+(((IkReal(-1.00000000000000))*(x3435)*(x3440))));
evalcond[5]=((IkReal(0.000500000000000000))+(((IkReal(-0.400000000000000))*(r00)*(x3439)))+(((x3436)*(x3445)))+(((IkReal(-1.00000000000000))*(npx)*(x3433)))+(((x3431)*(x3434)))+(((IkReal(-1.00000000000000))*(npy)*(x3438)))+(((IkReal(-1.00000000000000))*(r01)*(x3447))));
evalcond[6]=((((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x3434)*(x3445)))+(((IkReal(-0.400000000000000))*(r01)*(x3439)))+(((x3431)*(x3436)))+(((IkReal(-1.00000000000000))*(npy)*(x3433)))+(((r00)*(x3447))));
evalcond[7]=((((cj6)*(sj1)*(x3443)))+(((IkReal(-1.00000000000000))*(x3438)*(x3441)))+(((IkReal(-1.00000000000000))*(x3433)*(x3437)))+(((cj6)*(r01)*(x3440)))+(((x3431)*(x3432)))+(((x3439)*(x3446))));
evalcond[8]=((((IkReal(-1.00000000000000))*(sj1)*(x3438)*(x3446)))+(((IkReal(-1.00000000000000))*(x3433)*(x3441)))+(((IkReal(-1.00000000000000))*(cj1)*(x3432)*(x3438)))+(((cj6)*(x3437)))+(((x3439)*(x3443)))+(((cj2)*(r01)*(x3431))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3448=((IkReal(1.00000000000000))*(cj6));
IkReal x3449=((cj1)*(r10));
IkReal x3450=((r01)*(sj1));
IkReal x3451=((r00)*(sj1));
IkReal x3452=((cj1)*(r11));
IkReal x3453=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(x3451)*(x3453)))+(((cj6)*(x3452)))+(((sj6)*(x3449)))+(((IkReal(-1.00000000000000))*(x3448)*(x3450))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(x3451)))+(((sj6)*(x3452)))+(((IkReal(-1.00000000000000))*(x3448)*(x3449)))+(((IkReal(-1.00000000000000))*(x3450)*(x3453))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x3451)*(x3453)))+(((cj6)*(x3452)))+(((sj6)*(x3449)))+(((IkReal(-1.00000000000000))*(x3448)*(x3450)))))+IKsqr(((((cj6)*(x3451)))+(((sj6)*(x3452)))+(((IkReal(-1.00000000000000))*(x3448)*(x3449)))+(((IkReal(-1.00000000000000))*(x3450)*(x3453)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x3451)*(x3453)))+(((cj6)*(x3452)))+(((sj6)*(x3449)))+(((IkReal(-1.00000000000000))*(x3448)*(x3450)))), ((((cj6)*(x3451)))+(((sj6)*(x3452)))+(((IkReal(-1.00000000000000))*(x3448)*(x3449)))+(((IkReal(-1.00000000000000))*(x3450)*(x3453)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3454=IKsin(j4);
IkReal x3455=IKcos(j4);
IkReal x3456=((IkReal(1.00000000000000))*(sj2));
IkReal x3457=((cj6)*(sj1));
IkReal x3458=((cj1)*(sj6));
IkReal x3459=((IkReal(1.00000000000000))*(r11));
IkReal x3460=((cj1)*(cj6));
IkReal x3461=((sj1)*(sj6));
IkReal x3462=((cj2)*(cj6));
IkReal x3463=((IkReal(1.00000000000000))*(cj2)*(sj6));
evalcond[0]=((x3454)+(((r00)*(x3461)))+(((IkReal(-1.00000000000000))*(x3459)*(x3460)))+(((r01)*(x3457)))+(((IkReal(-1.00000000000000))*(r10)*(x3458))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(x3457)))+(((r01)*(x3461)))+(x3455)+(((IkReal(-1.00000000000000))*(x3458)*(x3459)))+(((r10)*(x3460))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r21)*(x3463)))+(((r00)*(sj2)*(x3460)))+(((IkReal(-1.00000000000000))*(r01)*(x3456)*(x3458)))+(((r10)*(sj2)*(x3457)))+(x3454)+(((IkReal(-1.00000000000000))*(r11)*(x3456)*(x3461)))+(((r20)*(x3462))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x3463)))+(((IkReal(-1.00000000000000))*(r00)*(x3456)*(x3458)))+(((IkReal(-1.00000000000000))*(r01)*(x3456)*(x3460)))+(((IkReal(-1.00000000000000))*(r11)*(x3456)*(x3457)))+(((IkReal(-1.00000000000000))*(x3455)))+(((IkReal(-1.00000000000000))*(r21)*(x3462)))+(((IkReal(-1.00000000000000))*(r10)*(x3456)*(x3461))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x3464=((cj1)*(sj6));
IkReal x3465=((cj2)*(r00));
IkReal x3466=((IkReal(1.00000000000000))*(sj6));
IkReal x3467=((IkReal(0.400000000000000))*(r10));
IkReal x3468=((IkReal(1.00000000000000))*(r02));
IkReal x3469=((IkReal(0.400000000000000))*(r11));
IkReal x3470=((r20)*(sj2));
IkReal x3471=((IkReal(1.00000000000000))*(cj6));
IkReal x3472=((sj1)*(sj6));
IkReal x3473=((cj1)*(cj2));
IkReal x3474=((r21)*(sj2));
IkReal x3475=((cj1)*(r12));
IkReal x3476=((cj2)*(r11));
IkReal x3477=((r12)*(sj1));
IkReal x3478=((cj1)*(cj6));
IkReal x3479=((cj2)*(r10));
IkReal x3480=((IkReal(0.400000000000000))*(cj6)*(sj1));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1)))+(((IkReal(-0.400000000000000))*(x3475))));
evalcond[2]=((((sj2)*(x3477)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((x3475)+(((IkReal(-1.00000000000000))*(sj1)*(x3468))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj2)*(x3477)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x3468)*(x3473))));
evalcond[5]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(r01)*(x3480)))+(((x3464)*(x3467)))+(((IkReal(-1.00000000000000))*(npy)*(x3471)))+(((x3469)*(x3478)))+(((IkReal(-1.00000000000000))*(npx)*(x3466)))+(((IkReal(-0.400000000000000))*(r00)*(x3472))));
evalcond[6]=((((x3464)*(x3469)))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x3467)*(x3478)))+(((r00)*(x3480)))+(((IkReal(-1.00000000000000))*(npy)*(x3466)))+(((IkReal(-0.400000000000000))*(r01)*(x3472))));
evalcond[7]=((((x3464)*(x3465)))+(((cj6)*(r01)*(x3473)))+(((IkReal(-1.00000000000000))*(x3471)*(x3474)))+(((cj6)*(sj1)*(x3476)))+(((x3472)*(x3479)))+(((IkReal(-1.00000000000000))*(x3466)*(x3470))));
evalcond[8]=((((cj2)*(r01)*(x3464)))+(((IkReal(-1.00000000000000))*(sj1)*(x3471)*(x3479)))+(((IkReal(-1.00000000000000))*(cj1)*(x3465)*(x3471)))+(((cj6)*(x3470)))+(((x3472)*(x3476)))+(((IkReal(-1.00000000000000))*(x3466)*(x3474))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3481=((cj1)*(r10));
IkReal x3482=((r00)*(sj1));
IkReal x3483=((r01)*(sj1));
IkReal x3484=((IkReal(1.00000000000000))*(cj1)*(r11));
if( IKabs(((((IkReal(-1.00000000000000))*(cj6)*(x3484)))+(((IkReal(-1.00000000000000))*(sj6)*(x3481)))+(((cj6)*(x3483)))+(((sj6)*(x3482))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj6)*(x3482)))+(((IkReal(-1.00000000000000))*(sj6)*(x3484)))+(((cj6)*(x3481)))+(((sj6)*(x3483))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj6)*(x3484)))+(((IkReal(-1.00000000000000))*(sj6)*(x3481)))+(((cj6)*(x3483)))+(((sj6)*(x3482)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj6)*(x3482)))+(((IkReal(-1.00000000000000))*(sj6)*(x3484)))+(((cj6)*(x3481)))+(((sj6)*(x3483)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj6)*(x3484)))+(((IkReal(-1.00000000000000))*(sj6)*(x3481)))+(((cj6)*(x3483)))+(((sj6)*(x3482)))), ((((IkReal(-1.00000000000000))*(cj6)*(x3482)))+(((IkReal(-1.00000000000000))*(sj6)*(x3484)))+(((cj6)*(x3481)))+(((sj6)*(x3483)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3485=IKsin(j4);
IkReal x3486=((IkReal(1.00000000000000))*(sj6));
IkReal x3487=((cj2)*(r21));
IkReal x3488=((IkReal(1.00000000000000))*(cj6));
IkReal x3489=((cj1)*(r11));
IkReal x3490=((r00)*(sj1));
IkReal x3491=((cj6)*(sj2));
IkReal x3492=((r10)*(sj1));
IkReal x3493=((cj1)*(r00));
IkReal x3494=((cj1)*(r10));
IkReal x3495=((cj2)*(r20));
IkReal x3496=((r01)*(sj1));
IkReal x3497=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x3498=((cj1)*(r01)*(sj2));
IkReal x3499=((r11)*(sj1)*(sj2));
evalcond[0]=((((sj6)*(x3490)))+(((IkReal(-1.00000000000000))*(x3486)*(x3494)))+(((IkReal(-1.00000000000000))*(x3485)))+(((IkReal(-1.00000000000000))*(x3488)*(x3489)))+(((cj6)*(x3496))));
evalcond[1]=((((sj6)*(x3496)))+(((IkReal(-1.00000000000000))*(x3497)))+(((IkReal(-1.00000000000000))*(x3488)*(x3490)))+(((cj6)*(x3494)))+(((IkReal(-1.00000000000000))*(x3486)*(x3489))));
evalcond[2]=((((x3491)*(x3492)))+(((x3491)*(x3493)))+(((IkReal(-1.00000000000000))*(x3486)*(x3499)))+(((IkReal(-1.00000000000000))*(x3486)*(x3498)))+(x3485)+(((cj6)*(x3495)))+(((IkReal(-1.00000000000000))*(x3486)*(x3487))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(x3486)*(x3493)))+(((IkReal(-1.00000000000000))*(sj2)*(x3486)*(x3492)))+(((IkReal(-1.00000000000000))*(x3497)))+(((IkReal(-1.00000000000000))*(x3486)*(x3495)))+(((IkReal(-1.00000000000000))*(x3488)*(x3498)))+(((IkReal(-1.00000000000000))*(x3488)*(x3499)))+(((IkReal(-1.00000000000000))*(x3487)*(x3488))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3500=((IkReal(1.00000000000000))*(cj6));
IkReal x3501=((cj2)*(cj6));
IkReal x3502=((cj1)*(sj6));
IkReal x3503=((IkReal(1.00000000000000))*(cj2));
IkReal x3504=((sj1)*(sj6));
if( IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r10)*(x3502)))+(((IkReal(-1.00000000000000))*(r00)*(x3504)))+(((cj1)*(cj6)*(r11)))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x3500))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj1)*(r00)*(x3501)))+(((r10)*(sj1)*(x3501)))+(((IkReal(-1.00000000000000))*(r11)*(x3503)*(x3504)))+(((IkReal(-1.00000000000000))*(r01)*(x3502)*(x3503)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x3500)))+(((r21)*(sj2)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r10)*(x3502)))+(((IkReal(-1.00000000000000))*(r00)*(x3504)))+(((cj1)*(cj6)*(r11)))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x3500)))))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj1)*(r00)*(x3501)))+(((r10)*(sj1)*(x3501)))+(((IkReal(-1.00000000000000))*(r11)*(x3503)*(x3504)))+(((IkReal(-1.00000000000000))*(r01)*(x3502)*(x3503)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x3500)))+(((r21)*(sj2)*(sj6)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r10)*(x3502)))+(((IkReal(-1.00000000000000))*(r00)*(x3504)))+(((cj1)*(cj6)*(r11)))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x3500)))))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj1)*(r00)*(x3501)))+(((r10)*(sj1)*(x3501)))+(((IkReal(-1.00000000000000))*(r11)*(x3503)*(x3504)))+(((IkReal(-1.00000000000000))*(r01)*(x3502)*(x3503)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x3500)))+(((r21)*(sj2)*(sj6)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3505=IKsin(j4);
IkReal x3506=IKcos(j4);
IkReal x3507=((cj2)*(sj6));
IkReal x3508=((cj1)*(r00));
IkReal x3509=((IkReal(1.00000000000000))*(r21));
IkReal x3510=((cj6)*(sj2));
IkReal x3511=((IkReal(1.00000000000000))*(cj6));
IkReal x3512=((cj1)*(r11));
IkReal x3513=((r00)*(sj1));
IkReal x3514=((r10)*(sj1));
IkReal x3515=((sj2)*(sj6));
IkReal x3516=((IkReal(1.00000000000000))*(r20));
IkReal x3517=((cj2)*(cj6));
IkReal x3518=((cj1)*(r01));
IkReal x3519=((cj1)*(r10));
IkReal x3520=((r11)*(sj1));
IkReal x3521=((IkReal(1.00000000000000))*(sj6));
IkReal x3522=((r01)*(sj1));
evalcond[0]=((((cj6)*(x3522)))+(((sj3)*(x3505)))+(((IkReal(-1.00000000000000))*(x3519)*(x3521)))+(((IkReal(-1.00000000000000))*(x3511)*(x3512)))+(((sj6)*(x3513))));
evalcond[1]=((((sj3)*(x3506)))+(((IkReal(-1.00000000000000))*(x3512)*(x3521)))+(((IkReal(-1.00000000000000))*(x3511)*(x3513)))+(((sj6)*(x3522)))+(((cj6)*(x3519))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3515)*(x3516)))+(((x3507)*(x3514)))+(((cj3)*(x3505)))+(((IkReal(-1.00000000000000))*(x3509)*(x3510)))+(((x3517)*(x3520)))+(((x3507)*(x3508)))+(((x3517)*(x3518))));
evalcond[3]=((((x3510)*(x3514)))+(((r20)*(x3517)))+(x3505)+(((x3508)*(x3510)))+(((IkReal(-1.00000000000000))*(x3507)*(x3509)))+(((IkReal(-1.00000000000000))*(x3515)*(x3520)))+(((IkReal(-1.00000000000000))*(x3515)*(x3518))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x3509)*(x3517)))+(((IkReal(-1.00000000000000))*(x3508)*(x3515)))+(((IkReal(-1.00000000000000))*(x3510)*(x3520)))+(((IkReal(-1.00000000000000))*(x3510)*(x3518)))+(((IkReal(-1.00000000000000))*(x3506)))+(((IkReal(-1.00000000000000))*(x3507)*(x3516)))+(((IkReal(-1.00000000000000))*(x3514)*(x3515))));
evalcond[5]=((((x3507)*(x3518)))+(((cj3)*(x3506)))+(((x3507)*(x3520)))+(((IkReal(-1.00000000000000))*(x3509)*(x3515)))+(((r20)*(x3510)))+(((IkReal(-1.00000000000000))*(cj2)*(x3511)*(x3514)))+(((IkReal(-1.00000000000000))*(cj2)*(x3508)*(x3511))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3523=((sj1)*(sj6));
IkReal x3524=((cj6)*(r00));
IkReal x3525=((cj1)*(sj6));
IkReal x3526=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x3524)))+(((r01)*(sj2)*(x3525)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(sj2)*(x3526)))+(((cj2)*(r21)*(sj6)))+(((IkReal(-1.00000000000000))*(cj2)*(r20)*(x3526)))+(((r11)*(sj2)*(x3523))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x3526)))+(((r11)*(x3525)))+(((IkReal(-1.00000000000000))*(r01)*(x3523)))+(((sj1)*(x3524))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x3524)))+(((r01)*(sj2)*(x3525)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(sj2)*(x3526)))+(((cj2)*(r21)*(sj6)))+(((IkReal(-1.00000000000000))*(cj2)*(r20)*(x3526)))+(((r11)*(sj2)*(x3523)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x3526)))+(((r11)*(x3525)))+(((IkReal(-1.00000000000000))*(r01)*(x3523)))+(((sj1)*(x3524)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x3524)))+(((r01)*(sj2)*(x3525)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(sj2)*(x3526)))+(((cj2)*(r21)*(sj6)))+(((IkReal(-1.00000000000000))*(cj2)*(r20)*(x3526)))+(((r11)*(sj2)*(x3523)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x3526)))+(((r11)*(x3525)))+(((IkReal(-1.00000000000000))*(r01)*(x3523)))+(((sj1)*(x3524)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3527=IKsin(j4);
IkReal x3528=IKcos(j4);
IkReal x3529=((cj2)*(sj6));
IkReal x3530=((cj1)*(r00));
IkReal x3531=((IkReal(1.00000000000000))*(r21));
IkReal x3532=((cj6)*(sj2));
IkReal x3533=((IkReal(1.00000000000000))*(cj6));
IkReal x3534=((cj1)*(r11));
IkReal x3535=((r00)*(sj1));
IkReal x3536=((r10)*(sj1));
IkReal x3537=((sj2)*(sj6));
IkReal x3538=((IkReal(1.00000000000000))*(r20));
IkReal x3539=((cj2)*(cj6));
IkReal x3540=((cj1)*(r01));
IkReal x3541=((cj1)*(r10));
IkReal x3542=((r11)*(sj1));
IkReal x3543=((IkReal(1.00000000000000))*(sj6));
IkReal x3544=((r01)*(sj1));
evalcond[0]=((((sj6)*(x3535)))+(((IkReal(-1.00000000000000))*(x3541)*(x3543)))+(((IkReal(-1.00000000000000))*(x3533)*(x3534)))+(((cj6)*(x3544)))+(((sj3)*(x3527))));
evalcond[1]=((((sj6)*(x3544)))+(((IkReal(-1.00000000000000))*(x3534)*(x3543)))+(((IkReal(-1.00000000000000))*(x3533)*(x3535)))+(((cj6)*(x3541)))+(((sj3)*(x3528))));
evalcond[2]=((((x3539)*(x3542)))+(((x3539)*(x3540)))+(((IkReal(-1.00000000000000))*(x3531)*(x3532)))+(((x3529)*(x3530)))+(((x3529)*(x3536)))+(((IkReal(-1.00000000000000))*(x3537)*(x3538)))+(((cj3)*(x3527))));
evalcond[3]=((x3527)+(((IkReal(-1.00000000000000))*(x3529)*(x3531)))+(((IkReal(-1.00000000000000))*(x3537)*(x3542)))+(((IkReal(-1.00000000000000))*(x3537)*(x3540)))+(((x3532)*(x3536)))+(((r20)*(x3539)))+(((x3530)*(x3532))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x3528)))+(((IkReal(-1.00000000000000))*(x3530)*(x3537)))+(((IkReal(-1.00000000000000))*(x3532)*(x3542)))+(((IkReal(-1.00000000000000))*(x3532)*(x3540)))+(((IkReal(-1.00000000000000))*(x3536)*(x3537)))+(((IkReal(-1.00000000000000))*(x3529)*(x3538)))+(((IkReal(-1.00000000000000))*(x3531)*(x3539))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj2)*(x3530)*(x3533)))+(((IkReal(-1.00000000000000))*(x3531)*(x3537)))+(((x3529)*(x3542)))+(((x3529)*(x3540)))+(((r20)*(x3532)))+(((cj3)*(x3528)))+(((IkReal(-1.00000000000000))*(cj2)*(x3533)*(x3536))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3545=((IkReal(1.00000000000000))*(cj6));
IkReal x3546=((cj1)*(r10));
IkReal x3547=((r01)*(sj1));
IkReal x3548=((r00)*(sj1));
IkReal x3549=((cj1)*(r11));
IkReal x3550=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(x3545)*(x3547)))+(((sj6)*(x3546)))+(((IkReal(-1.00000000000000))*(x3548)*(x3550)))+(((cj6)*(x3549))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(x3545)*(x3546)))+(((sj6)*(x3549)))+(((cj6)*(x3548)))+(((IkReal(-1.00000000000000))*(x3547)*(x3550))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst16)*(((((IkReal(-1.00000000000000))*(x3545)*(x3547)))+(((sj6)*(x3546)))+(((IkReal(-1.00000000000000))*(x3548)*(x3550)))+(((cj6)*(x3549)))))), ((gconst16)*(((((IkReal(-1.00000000000000))*(x3545)*(x3546)))+(((sj6)*(x3549)))+(((cj6)*(x3548)))+(((IkReal(-1.00000000000000))*(x3547)*(x3550)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3551=IKsin(j4);
IkReal x3552=IKcos(j4);
IkReal x3553=((cj2)*(sj6));
IkReal x3554=((cj1)*(r00));
IkReal x3555=((IkReal(1.00000000000000))*(r21));
IkReal x3556=((cj6)*(sj2));
IkReal x3557=((IkReal(1.00000000000000))*(cj6));
IkReal x3558=((cj1)*(r11));
IkReal x3559=((r00)*(sj1));
IkReal x3560=((r10)*(sj1));
IkReal x3561=((sj2)*(sj6));
IkReal x3562=((IkReal(1.00000000000000))*(r20));
IkReal x3563=((cj2)*(cj6));
IkReal x3564=((cj1)*(r01));
IkReal x3565=((cj1)*(r10));
IkReal x3566=((r11)*(sj1));
IkReal x3567=((IkReal(1.00000000000000))*(sj6));
IkReal x3568=((r01)*(sj1));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3557)*(x3558)))+(((IkReal(-1.00000000000000))*(x3565)*(x3567)))+(((sj3)*(x3551)))+(((sj6)*(x3559)))+(((cj6)*(x3568))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3557)*(x3559)))+(((sj3)*(x3552)))+(((sj6)*(x3568)))+(((IkReal(-1.00000000000000))*(x3558)*(x3567)))+(((cj6)*(x3565))));
evalcond[2]=((((x3563)*(x3564)))+(((x3563)*(x3566)))+(((IkReal(-1.00000000000000))*(x3555)*(x3556)))+(((IkReal(-1.00000000000000))*(x3561)*(x3562)))+(((x3553)*(x3554)))+(((x3553)*(x3560)))+(((cj3)*(x3551))));
evalcond[3]=((x3551)+(((IkReal(-1.00000000000000))*(x3561)*(x3564)))+(((IkReal(-1.00000000000000))*(x3561)*(x3566)))+(((IkReal(-1.00000000000000))*(x3553)*(x3555)))+(((x3556)*(x3560)))+(((x3554)*(x3556)))+(((r20)*(x3563))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x3560)*(x3561)))+(((IkReal(-1.00000000000000))*(x3555)*(x3563)))+(((IkReal(-1.00000000000000))*(x3554)*(x3561)))+(((IkReal(-1.00000000000000))*(x3552)))+(((IkReal(-1.00000000000000))*(x3553)*(x3562)))+(((IkReal(-1.00000000000000))*(x3556)*(x3564)))+(((IkReal(-1.00000000000000))*(x3556)*(x3566))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj2)*(x3557)*(x3560)))+(((r20)*(x3556)))+(((IkReal(-1.00000000000000))*(x3555)*(x3561)))+(((IkReal(-1.00000000000000))*(cj2)*(x3554)*(x3557)))+(((x3553)*(x3564)))+(((x3553)*(x3566)))+(((cj3)*(x3552))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3569=((IkReal(1.00000000000000))*(cj6));
IkReal x3570=((cj1)*(r10));
IkReal x3571=((r01)*(sj1));
IkReal x3572=((cj1)*(r11));
IkReal x3573=((IkReal(1.00000000000000))*(sj6));
IkReal x3574=((r00)*(sj1));
if( IKabs(((gconst15)*(((((IkReal(-1.00000000000000))*(x3573)*(x3574)))+(((IkReal(-1.00000000000000))*(x3569)*(x3571)))+(((cj6)*(x3572)))+(((sj6)*(x3570))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((IkReal(-1.00000000000000))*(x3571)*(x3573)))+(((IkReal(-1.00000000000000))*(x3569)*(x3570)))+(((cj6)*(x3574)))+(((sj6)*(x3572))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst15)*(((((IkReal(-1.00000000000000))*(x3573)*(x3574)))+(((IkReal(-1.00000000000000))*(x3569)*(x3571)))+(((cj6)*(x3572)))+(((sj6)*(x3570)))))), ((gconst15)*(((((IkReal(-1.00000000000000))*(x3571)*(x3573)))+(((IkReal(-1.00000000000000))*(x3569)*(x3570)))+(((cj6)*(x3574)))+(((sj6)*(x3572)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x3575=((cj1)*(r10));
IkReal x3576=((r00)*(sj1));
IkReal x3577=((r01)*(sj1));
IkReal x3578=((IkReal(1.00000000000000))*(cj1)*(r11));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj6)*(x3578)))+(((IkReal(-1.00000000000000))*(sj6)*(x3575)))+(((cj6)*(x3577)))+(((sj6)*(x3576)))+(((sj3)*(IKsin(j4)))));
evalcond[1]=((((sj3)*(IKcos(j4))))+(((IkReal(-1.00000000000000))*(cj6)*(x3576)))+(((IkReal(-1.00000000000000))*(sj6)*(x3578)))+(((cj6)*(x3575)))+(((sj6)*(x3577))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst17;
gconst17=IKsign(((((IkReal(-1.00000000000000))*((cj1)*(cj1))*((r02)*(r02))))+(((IkReal(-1.00000000000000))*((r12)*(r12))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj1)*(cj1))*((r02)*(r02))))+(((IkReal(-1.00000000000000))*((r12)*(r12))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-2.00000000000000))*(cj1)*(r02)*(r12)*(sj1))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst18;
IkReal x3579=((cj1)*(cj6));
IkReal x3580=((IkReal(1.00000000000000))*(r22));
IkReal x3581=((cj6)*(sj1));
IkReal x3582=((r22)*(sj6));
IkReal x3583=((IkReal(1.00000000000000))*(r21)*(sj6));
gconst18=IKsign(((((IkReal(-1.00000000000000))*(r10)*(x3580)*(x3581)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3583)))+(((IkReal(-1.00000000000000))*(r00)*(x3579)*(x3580)))+(((r12)*(r20)*(x3581)))+(((r11)*(sj1)*(x3582)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3583)))+(((cj1)*(r01)*(x3582)))+(((r02)*(r20)*(x3579)))));
IkReal x3584=((cj1)*(cj6));
IkReal x3585=((IkReal(1.00000000000000))*(r22));
IkReal x3586=((cj6)*(sj1));
IkReal x3587=((r22)*(sj6));
IkReal x3588=((IkReal(1.00000000000000))*(r21)*(sj6));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(x3584)*(x3585)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3588)))+(((IkReal(-1.00000000000000))*(r10)*(x3585)*(x3586)))+(((r12)*(r20)*(x3586)))+(((r11)*(sj1)*(x3587)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3588)))+(((cj1)*(r01)*(x3587)))+(((r02)*(r20)*(x3584))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3589=((IkReal(1.00000000000000))*(sj4));
if( IKabs(((gconst18)*(r22)*(sj4))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst18)*(((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3589)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3589))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst18)*(r22)*(sj4)), ((gconst18)*(((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3589)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3589)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3590=IKsin(j2);
IkReal x3591=IKcos(j2);
IkReal x3592=((r11)*(sj6));
IkReal x3593=((cj6)*(r11));
IkReal x3594=((cj6)*(r20));
IkReal x3595=((IkReal(1.00000000000000))*(sj6));
IkReal x3596=((cj1)*(r00));
IkReal x3597=((cj1)*(r01));
IkReal x3598=((IkReal(1.00000000000000))*(cj6));
IkReal x3599=((cj1)*(r02));
IkReal x3600=((sj1)*(x3590));
IkReal x3601=((sj1)*(x3591));
IkReal x3602=((r21)*(x3591));
IkReal x3603=((sj6)*(x3591));
IkReal x3604=((cj6)*(x3591));
IkReal x3605=((r21)*(x3590));
evalcond[0]=((((x3590)*(x3599)))+(((r22)*(x3591)))+(((r12)*(x3600))));
evalcond[1]=((sj3)+(((IkReal(-1.00000000000000))*(x3591)*(x3599)))+(((IkReal(-1.00000000000000))*(r12)*(x3601)))+(((r22)*(x3590))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3598)*(x3605)))+(((x3593)*(x3601)))+(((r10)*(sj6)*(x3601)))+(((x3596)*(x3603)))+(((x3597)*(x3604)))+(((IkReal(-1.00000000000000))*(r20)*(x3590)*(x3595)))+(((cj3)*(sj4))));
evalcond[3]=((sj4)+(((IkReal(-1.00000000000000))*(x3590)*(x3595)*(x3597)))+(((IkReal(-1.00000000000000))*(x3592)*(x3600)))+(((x3591)*(x3594)))+(((cj6)*(r10)*(x3600)))+(((cj6)*(x3590)*(x3596)))+(((IkReal(-1.00000000000000))*(x3595)*(x3602))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x3590)*(x3595)*(x3596)))+(((IkReal(-1.00000000000000))*(r20)*(x3591)*(x3595)))+(((IkReal(-1.00000000000000))*(x3598)*(x3602)))+(((IkReal(-1.00000000000000))*(x3590)*(x3597)*(x3598)))+(((IkReal(-1.00000000000000))*(r10)*(x3595)*(x3600)))+(((IkReal(-1.00000000000000))*(cj4)))+(((IkReal(-1.00000000000000))*(x3593)*(x3600))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x3598)*(x3601)))+(((cj3)*(cj4)))+(((x3590)*(x3594)))+(((IkReal(-1.00000000000000))*(x3591)*(x3596)*(x3598)))+(((x3592)*(x3601)))+(((IkReal(-1.00000000000000))*(x3595)*(x3605)))+(((x3597)*(x3603))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3606=((IkReal(1.00000000000000))*(sj3));
if( IKabs(((gconst17)*(r22)*(sj3))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3606)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3606))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst17)*(r22)*(sj3)), ((gconst17)*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3606)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3606)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3607=IKsin(j2);
IkReal x3608=IKcos(j2);
IkReal x3609=((r11)*(sj6));
IkReal x3610=((cj6)*(r11));
IkReal x3611=((cj6)*(r20));
IkReal x3612=((IkReal(1.00000000000000))*(sj6));
IkReal x3613=((cj1)*(r00));
IkReal x3614=((cj1)*(r01));
IkReal x3615=((IkReal(1.00000000000000))*(cj6));
IkReal x3616=((cj1)*(r02));
IkReal x3617=((sj1)*(x3607));
IkReal x3618=((sj1)*(x3608));
IkReal x3619=((r21)*(x3608));
IkReal x3620=((sj6)*(x3608));
IkReal x3621=((cj6)*(x3608));
IkReal x3622=((r21)*(x3607));
evalcond[0]=((((r22)*(x3608)))+(((x3607)*(x3616)))+(((r12)*(x3617))));
evalcond[1]=((sj3)+(((IkReal(-1.00000000000000))*(r12)*(x3618)))+(((r22)*(x3607)))+(((IkReal(-1.00000000000000))*(x3608)*(x3616))));
evalcond[2]=((((x3614)*(x3621)))+(((IkReal(-1.00000000000000))*(r20)*(x3607)*(x3612)))+(((x3610)*(x3618)))+(((r10)*(sj6)*(x3618)))+(((x3613)*(x3620)))+(((cj3)*(sj4)))+(((IkReal(-1.00000000000000))*(x3615)*(x3622))));
evalcond[3]=((sj4)+(((IkReal(-1.00000000000000))*(x3607)*(x3612)*(x3614)))+(((x3608)*(x3611)))+(((IkReal(-1.00000000000000))*(x3612)*(x3619)))+(((cj6)*(r10)*(x3617)))+(((cj6)*(x3607)*(x3613)))+(((IkReal(-1.00000000000000))*(x3609)*(x3617))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x3607)*(x3612)*(x3613)))+(((IkReal(-1.00000000000000))*(r10)*(x3612)*(x3617)))+(((IkReal(-1.00000000000000))*(x3610)*(x3617)))+(((IkReal(-1.00000000000000))*(x3615)*(x3619)))+(((IkReal(-1.00000000000000))*(cj4)))+(((IkReal(-1.00000000000000))*(x3607)*(x3614)*(x3615)))+(((IkReal(-1.00000000000000))*(r20)*(x3608)*(x3612))));
evalcond[5]=((((x3614)*(x3620)))+(((x3609)*(x3618)))+(((cj3)*(cj4)))+(((x3607)*(x3611)))+(((IkReal(-1.00000000000000))*(r10)*(x3615)*(x3618)))+(((IkReal(-1.00000000000000))*(x3608)*(x3613)*(x3615)))+(((IkReal(-1.00000000000000))*(x3612)*(x3622))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x3623=((IkReal(1.00000000000000))*(sj6));
IkReal x3624=((IkReal(0.400000000000000))*(cj6));
IkReal x3625=((r00)*(sj1));
IkReal x3626=((cj1)*(r11));
IkReal x3627=((r02)*(sj1));
IkReal x3628=((cj1)*(r10));
IkReal x3629=((IkReal(0.400000000000000))*(sj6));
IkReal x3630=((cj1)*(r12));
IkReal x3631=((r01)*(sj1));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(((IkReal(0.400000000000000))*(x3627)))+(((IkReal(-0.400000000000000))*(x3630)))+(npz));
evalcond[2]=((cj3)+(x3630)+(((IkReal(-1.00000000000000))*(x3627))));
evalcond[3]=((IkReal(0.000500000000000000))+(((x3628)*(x3629)))+(((IkReal(-1.00000000000000))*(x3625)*(x3629)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((IkReal(-1.00000000000000))*(npx)*(x3623)))+(((x3624)*(x3626)))+(((IkReal(-1.00000000000000))*(x3624)*(x3631))));
evalcond[4]=((((cj6)*(npx)))+(((x3626)*(x3629)))+(((IkReal(-1.00000000000000))*(x3624)*(x3628)))+(((IkReal(-1.00000000000000))*(npy)*(x3623)))+(((x3624)*(x3625)))+(((IkReal(-1.00000000000000))*(x3629)*(x3631))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst19;
gconst19=IKsign((((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1))))));
dummyeval[0]=(((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst20;
gconst20=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x3632=((IkReal(1.00000000000000))*(sj6));
IkReal x3633=((r02)*(sj1));
IkReal x3634=((IkReal(1.00000000000000))*(cj6));
IkReal x3635=((cj1)*(r11));
IkReal x3636=((IkReal(0.400000000000000))*(sj1));
IkReal x3637=((cj6)*(r01));
IkReal x3638=((r00)*(sj6));
IkReal x3639=((cj1)*(r12));
IkReal x3640=((r01)*(sj6));
IkReal x3641=((cj6)*(r00)*(sj1));
IkReal x3642=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x3643=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(((IkReal(-0.400000000000000))*(x3639)))+(npz)+(((IkReal(0.400000000000000))*(x3633))));
evalcond[2]=((IkReal(1.00000000000000))+(x3639)+(((IkReal(-1.00000000000000))*(x3633))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3634)*(x3635)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x3632)))+(((sj1)*(x3637)))+(((sj1)*(x3638))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x3632)))+(((IkReal(0.400000000000000))*(cj6)*(x3635)))+(((r10)*(x3642)))+(((IkReal(-1.00000000000000))*(x3636)*(x3637)))+(((IkReal(-1.00000000000000))*(x3636)*(x3638)))+(((IkReal(-1.00000000000000))*(npy)*(x3634))));
evalcond[5]=((x3643)+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x3634)))+(((sj1)*(x3640)))+(((IkReal(-1.00000000000000))*(x3632)*(x3635))));
evalcond[6]=((((cj6)*(npx)))+(((cj6)*(r00)*(x3636)))+(((IkReal(-1.00000000000000))*(x3636)*(x3640)))+(((IkReal(-0.400000000000000))*(x3643)))+(((IkReal(0.400000000000000))*(sj6)*(x3635)))+(((IkReal(-1.00000000000000))*(npy)*(x3632))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
if( IKabs(r22) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(r02)))+(((r12)*(sj1))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x3644=IKatan2(r22, ((((cj1)*(r02)))+(((r12)*(sj1)))));
j2array[0]=((IkReal(-1.00000000000000))*(x3644));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x3644))));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[1];
IkReal x3645=IKcos(j2);
IkReal x3646=((IkReal(1.00000000000000))*(x3645));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3646)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3646)))+(((r22)*(IKsin(j2)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3647=((cj2)*(sj6));
IkReal x3648=((IkReal(1.00000000000000))*(sj1));
IkReal x3649=((r20)*(sj2));
IkReal x3650=((cj1)*(r01));
IkReal x3651=((cj2)*(cj6));
IkReal x3652=((r21)*(sj2));
IkReal x3653=((IkReal(1.00000000000000))*(cj1)*(r00));
if( IKabs(((((cj6)*(x3652)))+(((IkReal(-1.00000000000000))*(r11)*(x3648)*(x3651)))+(((sj6)*(x3649)))+(((IkReal(-1.00000000000000))*(x3647)*(x3653)))+(((IkReal(-1.00000000000000))*(x3650)*(x3651)))+(((IkReal(-1.00000000000000))*(r10)*(x3647)*(x3648))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(x3649)))+(((IkReal(-1.00000000000000))*(r10)*(x3648)*(x3651)))+(((r11)*(sj1)*(x3647)))+(((x3647)*(x3650)))+(((IkReal(-1.00000000000000))*(x3651)*(x3653)))+(((IkReal(-1.00000000000000))*(sj6)*(x3652))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj6)*(x3652)))+(((IkReal(-1.00000000000000))*(r11)*(x3648)*(x3651)))+(((sj6)*(x3649)))+(((IkReal(-1.00000000000000))*(x3647)*(x3653)))+(((IkReal(-1.00000000000000))*(x3650)*(x3651)))+(((IkReal(-1.00000000000000))*(r10)*(x3647)*(x3648)))))+IKsqr(((((cj6)*(x3649)))+(((IkReal(-1.00000000000000))*(r10)*(x3648)*(x3651)))+(((r11)*(sj1)*(x3647)))+(((x3647)*(x3650)))+(((IkReal(-1.00000000000000))*(x3651)*(x3653)))+(((IkReal(-1.00000000000000))*(sj6)*(x3652)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((cj6)*(x3652)))+(((IkReal(-1.00000000000000))*(r11)*(x3648)*(x3651)))+(((sj6)*(x3649)))+(((IkReal(-1.00000000000000))*(x3647)*(x3653)))+(((IkReal(-1.00000000000000))*(x3650)*(x3651)))+(((IkReal(-1.00000000000000))*(r10)*(x3647)*(x3648)))), ((((cj6)*(x3649)))+(((IkReal(-1.00000000000000))*(r10)*(x3648)*(x3651)))+(((r11)*(sj1)*(x3647)))+(((x3647)*(x3650)))+(((IkReal(-1.00000000000000))*(x3651)*(x3653)))+(((IkReal(-1.00000000000000))*(sj6)*(x3652)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3654=IKsin(j4);
IkReal x3655=((cj2)*(sj6));
IkReal x3656=((cj1)*(r00));
IkReal x3657=((IkReal(1.00000000000000))*(r21));
IkReal x3658=((cj6)*(sj2));
IkReal x3659=((r10)*(sj1));
IkReal x3660=((cj2)*(cj6));
IkReal x3661=((cj1)*(r01));
IkReal x3662=((r11)*(sj1));
IkReal x3663=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x3664=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3657)*(x3658)))+(x3654)+(((x3655)*(x3656)))+(((x3655)*(x3659)))+(((IkReal(-1.00000000000000))*(r20)*(x3664)))+(((x3660)*(x3662)))+(((x3660)*(x3661))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3662)*(x3664)))+(((IkReal(-1.00000000000000))*(x3661)*(x3664)))+(((IkReal(-1.00000000000000))*(x3654)))+(((r20)*(x3660)))+(((x3658)*(x3659)))+(((IkReal(-1.00000000000000))*(x3655)*(x3657)))+(((x3656)*(x3658))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x3655)))+(((IkReal(-1.00000000000000))*(x3663)))+(((IkReal(-1.00000000000000))*(x3659)*(x3664)))+(((IkReal(-1.00000000000000))*(x3658)*(x3661)))+(((IkReal(-1.00000000000000))*(x3658)*(x3662)))+(((IkReal(-1.00000000000000))*(x3656)*(x3664)))+(((IkReal(-1.00000000000000))*(x3657)*(x3660))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3663)))+(((r20)*(x3658)))+(((IkReal(-1.00000000000000))*(x3656)*(x3660)))+(((IkReal(-1.00000000000000))*(x3659)*(x3660)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x3657)))+(((x3655)*(x3662)))+(((x3655)*(x3661))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

} else
{
IkReal x3665=((IkReal(1.00000000000000))*(sj6));
IkReal x3666=((r02)*(sj1));
IkReal x3667=((IkReal(1.00000000000000))*(cj6));
IkReal x3668=((cj1)*(r11));
IkReal x3669=((IkReal(0.400000000000000))*(sj1));
IkReal x3670=((cj6)*(r01));
IkReal x3671=((r00)*(sj6));
IkReal x3672=((cj1)*(r12));
IkReal x3673=((r01)*(sj6));
IkReal x3674=((cj6)*(r00)*(sj1));
IkReal x3675=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x3676=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(npz)+(((IkReal(-0.400000000000000))*(x3672)))+(((IkReal(0.400000000000000))*(x3666))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x3666)))+(x3672));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x3665)))+(((IkReal(-1.00000000000000))*(x3667)*(x3668)))+(((sj1)*(x3671)))+(((sj1)*(x3670))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x3667)))+(((IkReal(-1.00000000000000))*(npx)*(x3665)))+(((r10)*(x3675)))+(((IkReal(0.400000000000000))*(cj6)*(x3668)))+(((IkReal(-1.00000000000000))*(x3669)*(x3671)))+(((IkReal(-1.00000000000000))*(x3669)*(x3670))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(sj1)*(x3667)))+(((IkReal(-1.00000000000000))*(x3665)*(x3668)))+(x3676)+(((sj1)*(x3673))));
evalcond[6]=((((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(x3665)))+(((IkReal(-0.400000000000000))*(x3676)))+(((IkReal(-1.00000000000000))*(x3669)*(x3673)))+(((cj6)*(r00)*(x3669)))+(((IkReal(0.400000000000000))*(sj6)*(x3668))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
if( IKabs(r22) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(r02)))+(((r12)*(sj1))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x3677=IKatan2(r22, ((((cj1)*(r02)))+(((r12)*(sj1)))));
j2array[0]=((IkReal(-1.00000000000000))*(x3677));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x3677))));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[1];
IkReal x3678=IKcos(j2);
IkReal x3679=((IkReal(1.00000000000000))*(x3678));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3679)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3679)))+(((r22)*(IKsin(j2)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3680=((cj1)*(cj2));
IkReal x3681=((sj2)*(sj6));
IkReal x3682=((IkReal(1.00000000000000))*(sj6));
IkReal x3683=((IkReal(1.00000000000000))*(cj6)*(sj2));
IkReal x3684=((cj2)*(r10)*(sj1));
IkReal x3685=((cj2)*(r11)*(sj1));
if( IKabs(((((cj6)*(x3685)))+(((IkReal(-1.00000000000000))*(r21)*(x3683)))+(((sj6)*(x3684)))+(((cj6)*(r01)*(x3680)))+(((r00)*(sj6)*(x3680)))+(((IkReal(-1.00000000000000))*(r20)*(x3681))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(x3684)))+(((IkReal(-1.00000000000000))*(r20)*(x3683)))+(((r21)*(x3681)))+(((IkReal(-1.00000000000000))*(x3682)*(x3685)))+(((cj6)*(r00)*(x3680)))+(((IkReal(-1.00000000000000))*(r01)*(x3680)*(x3682))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj6)*(x3685)))+(((IkReal(-1.00000000000000))*(r21)*(x3683)))+(((sj6)*(x3684)))+(((cj6)*(r01)*(x3680)))+(((r00)*(sj6)*(x3680)))+(((IkReal(-1.00000000000000))*(r20)*(x3681)))))+IKsqr(((((cj6)*(x3684)))+(((IkReal(-1.00000000000000))*(r20)*(x3683)))+(((r21)*(x3681)))+(((IkReal(-1.00000000000000))*(x3682)*(x3685)))+(((cj6)*(r00)*(x3680)))+(((IkReal(-1.00000000000000))*(r01)*(x3680)*(x3682)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((cj6)*(x3685)))+(((IkReal(-1.00000000000000))*(r21)*(x3683)))+(((sj6)*(x3684)))+(((cj6)*(r01)*(x3680)))+(((r00)*(sj6)*(x3680)))+(((IkReal(-1.00000000000000))*(r20)*(x3681)))), ((((cj6)*(x3684)))+(((IkReal(-1.00000000000000))*(r20)*(x3683)))+(((r21)*(x3681)))+(((IkReal(-1.00000000000000))*(x3682)*(x3685)))+(((cj6)*(r00)*(x3680)))+(((IkReal(-1.00000000000000))*(r01)*(x3680)*(x3682)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3686=IKcos(j4);
IkReal x3687=((cj2)*(sj6));
IkReal x3688=((cj1)*(r00));
IkReal x3689=((IkReal(1.00000000000000))*(r21));
IkReal x3690=((cj6)*(sj2));
IkReal x3691=((r10)*(sj1));
IkReal x3692=((cj2)*(cj6));
IkReal x3693=((cj1)*(r01));
IkReal x3694=((r11)*(sj1));
IkReal x3695=((IkReal(1.00000000000000))*(IKsin(j4)));
IkReal x3696=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x3696)))+(((IkReal(-1.00000000000000))*(x3689)*(x3690)))+(((x3687)*(x3691)))+(((x3692)*(x3693)))+(((x3692)*(x3694)))+(((x3687)*(x3688)))+(((IkReal(-1.00000000000000))*(x3695))));
evalcond[1]=((((r20)*(x3692)))+(((x3688)*(x3690)))+(((x3690)*(x3691)))+(((IkReal(-1.00000000000000))*(x3687)*(x3689)))+(((IkReal(-1.00000000000000))*(x3695)))+(((IkReal(-1.00000000000000))*(x3694)*(x3696)))+(((IkReal(-1.00000000000000))*(x3693)*(x3696))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3688)*(x3696)))+(((IkReal(-1.00000000000000))*(x3689)*(x3692)))+(((IkReal(-1.00000000000000))*(x3686)))+(((IkReal(-1.00000000000000))*(r20)*(x3687)))+(((IkReal(-1.00000000000000))*(x3691)*(x3696)))+(((IkReal(-1.00000000000000))*(x3690)*(x3694)))+(((IkReal(-1.00000000000000))*(x3690)*(x3693))));
evalcond[3]=((((r20)*(x3690)))+(((x3687)*(x3693)))+(((x3687)*(x3694)))+(x3686)+(((IkReal(-1.00000000000000))*(x3691)*(x3692)))+(((IkReal(-1.00000000000000))*(x3688)*(x3692)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x3689))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3697=((cj1)*(sj6));
IkReal x3698=((cj1)*(cj6));
IkReal x3699=((sj1)*(sj6));
IkReal x3700=((IkReal(1.00000000000000))*(cj6)*(sj1));
if( IKabs(((gconst20)*(((((IkReal(-1.00000000000000))*(r01)*(x3700)))+(((IkReal(-1.00000000000000))*(r00)*(x3699)))+(((r11)*(x3698)))+(((r10)*(x3697))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst20)*(((((r01)*(x3699)))+(((IkReal(-1.00000000000000))*(r00)*(x3700)))+(((IkReal(-1.00000000000000))*(r11)*(x3697)))+(((r10)*(x3698))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst20)*(((((IkReal(-1.00000000000000))*(r01)*(x3700)))+(((IkReal(-1.00000000000000))*(r00)*(x3699)))+(((r11)*(x3698)))+(((r10)*(x3697)))))), ((gconst20)*(((((r01)*(x3699)))+(((IkReal(-1.00000000000000))*(r00)*(x3700)))+(((IkReal(-1.00000000000000))*(r11)*(x3697)))+(((r10)*(x3698)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x3701=((cj1)*(r10));
IkReal x3702=((r00)*(sj1));
IkReal x3703=((r01)*(sj1));
IkReal x3704=((IkReal(1.00000000000000))*(cj1)*(r11));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj6)*(x3704)))+(((IkReal(-1.00000000000000))*(sj6)*(x3701)))+(((cj6)*(x3703)))+(((sj6)*(x3702)))+(((sj3)*(IKsin(j4)))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj6)*(x3702)))+(((IkReal(-1.00000000000000))*(sj3)*(IKcos(j4))))+(((IkReal(-1.00000000000000))*(sj6)*(x3704)))+(((cj6)*(x3701)))+(((sj6)*(x3703))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst21;
gconst21=IKsign((((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1))))));
dummyeval[0]=(((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst22;
IkReal x3705=(sj1)*(sj1);
IkReal x3706=(cj1)*(cj1);
IkReal x3707=((r10)*(sj6));
IkReal x3708=((cj1)*(sj1));
IkReal x3709=((r00)*(sj6));
IkReal x3710=((r12)*(x3705));
IkReal x3711=((cj6)*(x3708));
IkReal x3712=((r02)*(x3706));
gconst22=IKsign(((((r12)*(x3708)*(x3709)))+(((cj6)*(r21)*(r22)))+(((x3709)*(x3712)))+(((r01)*(r12)*(x3711)))+(((r20)*(r22)*(sj6)))+(((cj6)*(r01)*(x3712)))+(((r02)*(r11)*(x3711)))+(((x3707)*(x3710)))+(((cj6)*(r11)*(x3710)))+(((r02)*(x3707)*(x3708)))));
IkReal x3713=(sj1)*(sj1);
IkReal x3714=(cj1)*(cj1);
IkReal x3715=((r10)*(sj6));
IkReal x3716=((cj1)*(sj1));
IkReal x3717=((r00)*(sj6));
IkReal x3718=((r12)*(x3713));
IkReal x3719=((cj6)*(x3716));
IkReal x3720=((r02)*(x3714));
dummyeval[0]=((((cj6)*(r01)*(x3720)))+(((cj6)*(r21)*(r22)))+(((r02)*(x3715)*(x3716)))+(((x3717)*(x3720)))+(((r01)*(r12)*(x3719)))+(((r20)*(r22)*(sj6)))+(((r02)*(r11)*(x3719)))+(((cj6)*(r11)*(x3718)))+(((r12)*(x3716)*(x3717)))+(((x3715)*(x3718))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3721=((IkReal(1.00000000000000))*(cj3)*(sj4));
if( IKabs(((cj3)*(gconst22)*(r22)*(sj4))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst22)*(((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3721)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3721))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((cj3)*(gconst22)*(r22)*(sj4)), ((gconst22)*(((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3721)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3721)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3722=IKsin(j2);
IkReal x3723=IKcos(j2);
IkReal x3724=((r11)*(sj6));
IkReal x3725=((cj6)*(r11));
IkReal x3726=((IkReal(1.00000000000000))*(cj4));
IkReal x3727=((cj6)*(r20));
IkReal x3728=((IkReal(1.00000000000000))*(sj6));
IkReal x3729=((cj1)*(r00));
IkReal x3730=((cj1)*(r01));
IkReal x3731=((IkReal(1.00000000000000))*(cj6));
IkReal x3732=((cj1)*(r02));
IkReal x3733=((sj1)*(x3722));
IkReal x3734=((sj1)*(x3723));
IkReal x3735=((r21)*(x3723));
IkReal x3736=((sj6)*(x3723));
IkReal x3737=((cj6)*(x3723));
IkReal x3738=((r21)*(x3722));
evalcond[0]=((((r22)*(x3723)))+(((r12)*(x3733)))+(((x3722)*(x3732))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj3)))+(((r22)*(x3722)))+(((IkReal(-1.00000000000000))*(x3723)*(x3732)))+(((IkReal(-1.00000000000000))*(r12)*(x3734))));
evalcond[2]=((((x3729)*(x3736)))+(((x3730)*(x3737)))+(((IkReal(-1.00000000000000))*(r20)*(x3722)*(x3728)))+(((x3725)*(x3734)))+(((IkReal(-1.00000000000000))*(x3731)*(x3738)))+(((r10)*(sj6)*(x3734)))+(((cj3)*(sj4))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3724)*(x3733)))+(((IkReal(-1.00000000000000))*(x3722)*(x3728)*(x3730)))+(((IkReal(-1.00000000000000))*(sj4)))+(((cj6)*(x3722)*(x3729)))+(((x3723)*(x3727)))+(((cj6)*(r10)*(x3733)))+(((IkReal(-1.00000000000000))*(x3728)*(x3735))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x3722)*(x3728)*(x3729)))+(((IkReal(-1.00000000000000))*(r20)*(x3723)*(x3728)))+(((IkReal(-1.00000000000000))*(x3726)))+(((IkReal(-1.00000000000000))*(r10)*(x3728)*(x3733)))+(((IkReal(-1.00000000000000))*(x3731)*(x3735)))+(((IkReal(-1.00000000000000))*(x3722)*(x3730)*(x3731)))+(((IkReal(-1.00000000000000))*(x3725)*(x3733))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x3723)*(x3729)*(x3731)))+(((IkReal(-1.00000000000000))*(cj3)*(x3726)))+(((x3730)*(x3736)))+(((x3724)*(x3734)))+(((x3722)*(x3727)))+(((IkReal(-1.00000000000000))*(r10)*(x3731)*(x3734)))+(((IkReal(-1.00000000000000))*(x3728)*(x3738))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3739=((IkReal(1.00000000000000))*(sj3));
if( IKabs(((gconst21)*(r22)*(sj3))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3739)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3739))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst21)*(r22)*(sj3)), ((gconst21)*(((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3739)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3739)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3740=IKsin(j2);
IkReal x3741=IKcos(j2);
IkReal x3742=((r11)*(sj6));
IkReal x3743=((cj6)*(r11));
IkReal x3744=((IkReal(1.00000000000000))*(cj4));
IkReal x3745=((cj6)*(r20));
IkReal x3746=((IkReal(1.00000000000000))*(sj6));
IkReal x3747=((cj1)*(r00));
IkReal x3748=((cj1)*(r01));
IkReal x3749=((IkReal(1.00000000000000))*(cj6));
IkReal x3750=((cj1)*(r02));
IkReal x3751=((sj1)*(x3740));
IkReal x3752=((sj1)*(x3741));
IkReal x3753=((r21)*(x3741));
IkReal x3754=((sj6)*(x3741));
IkReal x3755=((cj6)*(x3741));
IkReal x3756=((r21)*(x3740));
evalcond[0]=((((r12)*(x3751)))+(((r22)*(x3741)))+(((x3740)*(x3750))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj3)))+(((IkReal(-1.00000000000000))*(x3741)*(x3750)))+(((r22)*(x3740)))+(((IkReal(-1.00000000000000))*(r12)*(x3752))));
evalcond[2]=((((x3743)*(x3752)))+(((IkReal(-1.00000000000000))*(x3749)*(x3756)))+(((x3748)*(x3755)))+(((IkReal(-1.00000000000000))*(r20)*(x3740)*(x3746)))+(((x3747)*(x3754)))+(((cj3)*(sj4)))+(((r10)*(sj6)*(x3752))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj4)))+(((IkReal(-1.00000000000000))*(x3746)*(x3753)))+(((cj6)*(x3740)*(x3747)))+(((x3741)*(x3745)))+(((IkReal(-1.00000000000000))*(x3740)*(x3746)*(x3748)))+(((IkReal(-1.00000000000000))*(x3742)*(x3751)))+(((cj6)*(r10)*(x3751))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(x3741)*(x3746)))+(((IkReal(-1.00000000000000))*(x3749)*(x3753)))+(((IkReal(-1.00000000000000))*(x3743)*(x3751)))+(((IkReal(-1.00000000000000))*(x3744)))+(((IkReal(-1.00000000000000))*(r10)*(x3746)*(x3751)))+(((IkReal(-1.00000000000000))*(x3740)*(x3748)*(x3749)))+(((IkReal(-1.00000000000000))*(x3740)*(x3746)*(x3747))));
evalcond[5]=((((x3742)*(x3752)))+(((IkReal(-1.00000000000000))*(cj3)*(x3744)))+(((IkReal(-1.00000000000000))*(x3741)*(x3747)*(x3749)))+(((IkReal(-1.00000000000000))*(x3746)*(x3756)))+(((x3748)*(x3754)))+(((IkReal(-1.00000000000000))*(r10)*(x3749)*(x3752)))+(((x3740)*(x3745))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3757=((IkReal(1.00000000000000))*(sj3));
if( IKabs(((gconst19)*(r22)*(sj3))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst19)*(((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3757)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3757))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst19)*(r22)*(sj3)), ((gconst19)*(((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3757)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3757)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x3758=IKsin(j2);
IkReal x3759=IKcos(j2);
IkReal x3760=((r12)*(sj1));
IkReal x3761=((cj1)*(r02));
IkReal x3762=((IkReal(1.00000000000000))*(x3759));
evalcond[0]=((((x3758)*(x3761)))+(((x3758)*(x3760)))+(((r22)*(x3759))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3761)*(x3762)))+(((IkReal(-1.00000000000000))*(sj3)))+(((r22)*(x3758)))+(((IkReal(-1.00000000000000))*(x3760)*(x3762))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst23;
gconst23=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj3;
dummyeval[1]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x3763=((IkReal(1.00000000000000))*(sj6));
IkReal x3764=((IkReal(1.00000000000000))*(r02));
IkReal x3765=((cj1)*(r11));
IkReal x3766=((IkReal(1.00000000000000))*(cj6));
IkReal x3767=((IkReal(0.400000000000000))*(sj6));
IkReal x3768=((r00)*(sj1));
IkReal x3769=((cj1)*(r12));
IkReal x3770=((r12)*(sj1));
IkReal x3771=((r01)*(sj1));
IkReal x3772=((cj1)*(r10));
IkReal x3773=((cj6)*(x3768));
IkReal x3774=((cj6)*(x3771));
IkReal x3775=((cj6)*(x3772));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1)))+(((IkReal(-0.400000000000000))*(x3769))));
evalcond[2]=((((sj2)*(x3770)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(sj1)*(x3764)))+(x3769));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj2)*(x3770)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(x3764))));
evalcond[5]=((((sj6)*(x3768)))+(((IkReal(-1.00000000000000))*(x3763)*(x3772)))+(((IkReal(-1.00000000000000))*(x3765)*(x3766)))+(x3774));
evalcond[6]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(x3767)*(x3768)))+(((x3767)*(x3772)))+(((IkReal(-1.00000000000000))*(npx)*(x3763)))+(((IkReal(-1.00000000000000))*(npy)*(x3766)))+(((IkReal(-0.400000000000000))*(x3774)))+(((IkReal(0.400000000000000))*(cj6)*(x3765))));
evalcond[7]=((((sj6)*(x3771)))+(((IkReal(-1.00000000000000))*(x3763)*(x3765)))+(x3775)+(((IkReal(-1.00000000000000))*(x3766)*(x3768))));
evalcond[8]=((((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x3767)*(x3771)))+(((IkReal(-1.00000000000000))*(npy)*(x3763)))+(((IkReal(0.400000000000000))*(x3773)))+(((IkReal(-0.400000000000000))*(x3775)))+(((x3765)*(x3767))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3776=((cj2)*(sj6));
IkReal x3777=((IkReal(1.00000000000000))*(sj1));
IkReal x3778=((r20)*(sj2));
IkReal x3779=((cj1)*(r01));
IkReal x3780=((cj2)*(cj6));
IkReal x3781=((r21)*(sj2));
IkReal x3782=((IkReal(1.00000000000000))*(cj1)*(r00));
if( IKabs(((((IkReal(-1.00000000000000))*(r11)*(x3777)*(x3780)))+(((sj6)*(x3778)))+(((IkReal(-1.00000000000000))*(r10)*(x3776)*(x3777)))+(((IkReal(-1.00000000000000))*(x3779)*(x3780)))+(((cj6)*(x3781)))+(((IkReal(-1.00000000000000))*(x3776)*(x3782))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r10)*(x3777)*(x3780)))+(((r11)*(sj1)*(x3776)))+(((cj6)*(x3778)))+(((x3776)*(x3779)))+(((IkReal(-1.00000000000000))*(sj6)*(x3781)))+(((IkReal(-1.00000000000000))*(x3780)*(x3782))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r11)*(x3777)*(x3780)))+(((sj6)*(x3778)))+(((IkReal(-1.00000000000000))*(r10)*(x3776)*(x3777)))+(((IkReal(-1.00000000000000))*(x3779)*(x3780)))+(((cj6)*(x3781)))+(((IkReal(-1.00000000000000))*(x3776)*(x3782)))))+IKsqr(((((IkReal(-1.00000000000000))*(r10)*(x3777)*(x3780)))+(((r11)*(sj1)*(x3776)))+(((cj6)*(x3778)))+(((x3776)*(x3779)))+(((IkReal(-1.00000000000000))*(sj6)*(x3781)))+(((IkReal(-1.00000000000000))*(x3780)*(x3782)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r11)*(x3777)*(x3780)))+(((sj6)*(x3778)))+(((IkReal(-1.00000000000000))*(r10)*(x3776)*(x3777)))+(((IkReal(-1.00000000000000))*(x3779)*(x3780)))+(((cj6)*(x3781)))+(((IkReal(-1.00000000000000))*(x3776)*(x3782)))), ((((IkReal(-1.00000000000000))*(r10)*(x3777)*(x3780)))+(((r11)*(sj1)*(x3776)))+(((cj6)*(x3778)))+(((x3776)*(x3779)))+(((IkReal(-1.00000000000000))*(sj6)*(x3781)))+(((IkReal(-1.00000000000000))*(x3780)*(x3782)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3783=IKsin(j4);
IkReal x3784=((cj2)*(sj6));
IkReal x3785=((cj1)*(r00));
IkReal x3786=((IkReal(1.00000000000000))*(r21));
IkReal x3787=((cj6)*(sj2));
IkReal x3788=((r10)*(sj1));
IkReal x3789=((cj2)*(cj6));
IkReal x3790=((cj1)*(r01));
IkReal x3791=((r11)*(sj1));
IkReal x3792=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x3793=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((x3784)*(x3785)))+(((x3784)*(x3788)))+(((x3789)*(x3791)))+(((x3789)*(x3790)))+(x3783)+(((IkReal(-1.00000000000000))*(x3786)*(x3787)))+(((IkReal(-1.00000000000000))*(r20)*(x3793))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3784)*(x3786)))+(((x3785)*(x3787)))+(((IkReal(-1.00000000000000))*(x3791)*(x3793)))+(((x3787)*(x3788)))+(((r20)*(x3789)))+(((IkReal(-1.00000000000000))*(x3783)))+(((IkReal(-1.00000000000000))*(x3790)*(x3793))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3792)))+(((IkReal(-1.00000000000000))*(x3786)*(x3789)))+(((IkReal(-1.00000000000000))*(r20)*(x3784)))+(((IkReal(-1.00000000000000))*(x3785)*(x3793)))+(((IkReal(-1.00000000000000))*(x3788)*(x3793)))+(((IkReal(-1.00000000000000))*(x3787)*(x3790)))+(((IkReal(-1.00000000000000))*(x3787)*(x3791))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3792)))+(((r20)*(x3787)))+(((IkReal(-1.00000000000000))*(x3785)*(x3789)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x3786)))+(((x3784)*(x3791)))+(((x3784)*(x3790)))+(((IkReal(-1.00000000000000))*(x3788)*(x3789))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x3794=((IkReal(1.00000000000000))*(sj6));
IkReal x3795=((IkReal(1.00000000000000))*(r02));
IkReal x3796=((cj1)*(r11));
IkReal x3797=((IkReal(1.00000000000000))*(cj6));
IkReal x3798=((IkReal(0.400000000000000))*(sj6));
IkReal x3799=((r00)*(sj1));
IkReal x3800=((cj1)*(r12));
IkReal x3801=((r12)*(sj1));
IkReal x3802=((r01)*(sj1));
IkReal x3803=((cj1)*(r10));
IkReal x3804=((cj6)*(x3799));
IkReal x3805=((cj6)*(x3802));
IkReal x3806=((cj6)*(x3803));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(((IkReal(-0.400000000000000))*(x3800)))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1))));
evalcond[2]=((((sj2)*(x3801)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(sj1)*(x3795)))+(x3800));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj1)*(cj2)*(x3795)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x3801))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x3796)*(x3797)))+(((sj6)*(x3799)))+(((IkReal(-1.00000000000000))*(x3794)*(x3803)))+(x3805));
evalcond[6]=((IkReal(0.000500000000000000))+(((IkReal(-0.400000000000000))*(x3805)))+(((IkReal(-1.00000000000000))*(x3798)*(x3799)))+(((x3798)*(x3803)))+(((IkReal(-1.00000000000000))*(npx)*(x3794)))+(((IkReal(-1.00000000000000))*(npy)*(x3797)))+(((IkReal(0.400000000000000))*(cj6)*(x3796))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x3797)*(x3799)))+(x3806)+(((sj6)*(x3802)))+(((IkReal(-1.00000000000000))*(x3794)*(x3796))));
evalcond[8]=((((x3796)*(x3798)))+(((cj6)*(npx)))+(((IkReal(0.400000000000000))*(x3804)))+(((IkReal(-0.400000000000000))*(x3806)))+(((IkReal(-1.00000000000000))*(npy)*(x3794)))+(((IkReal(-1.00000000000000))*(x3798)*(x3802))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3807=((cj1)*(cj2));
IkReal x3808=((sj2)*(sj6));
IkReal x3809=((IkReal(1.00000000000000))*(sj6));
IkReal x3810=((IkReal(1.00000000000000))*(cj6)*(sj2));
IkReal x3811=((cj2)*(r10)*(sj1));
IkReal x3812=((cj2)*(r11)*(sj1));
if( IKabs(((((cj6)*(r01)*(x3807)))+(((IkReal(-1.00000000000000))*(r21)*(x3810)))+(((r00)*(sj6)*(x3807)))+(((sj6)*(x3811)))+(((IkReal(-1.00000000000000))*(r20)*(x3808)))+(((cj6)*(x3812))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r01)*(x3807)*(x3809)))+(((r21)*(x3808)))+(((cj6)*(r00)*(x3807)))+(((IkReal(-1.00000000000000))*(x3809)*(x3812)))+(((IkReal(-1.00000000000000))*(r20)*(x3810)))+(((cj6)*(x3811))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj6)*(r01)*(x3807)))+(((IkReal(-1.00000000000000))*(r21)*(x3810)))+(((r00)*(sj6)*(x3807)))+(((sj6)*(x3811)))+(((IkReal(-1.00000000000000))*(r20)*(x3808)))+(((cj6)*(x3812)))))+IKsqr(((((IkReal(-1.00000000000000))*(r01)*(x3807)*(x3809)))+(((r21)*(x3808)))+(((cj6)*(r00)*(x3807)))+(((IkReal(-1.00000000000000))*(x3809)*(x3812)))+(((IkReal(-1.00000000000000))*(r20)*(x3810)))+(((cj6)*(x3811)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((cj6)*(r01)*(x3807)))+(((IkReal(-1.00000000000000))*(r21)*(x3810)))+(((r00)*(sj6)*(x3807)))+(((sj6)*(x3811)))+(((IkReal(-1.00000000000000))*(r20)*(x3808)))+(((cj6)*(x3812)))), ((((IkReal(-1.00000000000000))*(r01)*(x3807)*(x3809)))+(((r21)*(x3808)))+(((cj6)*(r00)*(x3807)))+(((IkReal(-1.00000000000000))*(x3809)*(x3812)))+(((IkReal(-1.00000000000000))*(r20)*(x3810)))+(((cj6)*(x3811)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3813=IKcos(j4);
IkReal x3814=((cj2)*(sj6));
IkReal x3815=((cj1)*(r00));
IkReal x3816=((IkReal(1.00000000000000))*(r21));
IkReal x3817=((cj6)*(sj2));
IkReal x3818=((r10)*(sj1));
IkReal x3819=((cj2)*(cj6));
IkReal x3820=((cj1)*(r01));
IkReal x3821=((r11)*(sj1));
IkReal x3822=((IkReal(1.00000000000000))*(IKsin(j4)));
IkReal x3823=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((x3819)*(x3821)))+(((x3819)*(x3820)))+(((IkReal(-1.00000000000000))*(x3822)))+(((IkReal(-1.00000000000000))*(r20)*(x3823)))+(((x3814)*(x3818)))+(((x3814)*(x3815)))+(((IkReal(-1.00000000000000))*(x3816)*(x3817))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3814)*(x3816)))+(((IkReal(-1.00000000000000))*(x3822)))+(((IkReal(-1.00000000000000))*(x3821)*(x3823)))+(((x3815)*(x3817)))+(((x3817)*(x3818)))+(((r20)*(x3819)))+(((IkReal(-1.00000000000000))*(x3820)*(x3823))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x3814)))+(((IkReal(-1.00000000000000))*(x3815)*(x3823)))+(((IkReal(-1.00000000000000))*(x3813)))+(((IkReal(-1.00000000000000))*(x3817)*(x3820)))+(((IkReal(-1.00000000000000))*(x3817)*(x3821)))+(((IkReal(-1.00000000000000))*(x3816)*(x3819)))+(((IkReal(-1.00000000000000))*(x3818)*(x3823))));
evalcond[3]=((x3813)+(((IkReal(-1.00000000000000))*(x3818)*(x3819)))+(((x3814)*(x3820)))+(((x3814)*(x3821)))+(((r20)*(x3817)))+(((IkReal(-1.00000000000000))*(x3815)*(x3819)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x3816))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x3824=((cj1)*(sj6));
IkReal x3825=((cj2)*(r00));
IkReal x3826=((IkReal(1.00000000000000))*(sj6));
IkReal x3827=((IkReal(0.400000000000000))*(r10));
IkReal x3828=((IkReal(1.00000000000000))*(r02));
IkReal x3829=((IkReal(0.400000000000000))*(r11));
IkReal x3830=((r20)*(sj2));
IkReal x3831=((IkReal(1.00000000000000))*(cj6));
IkReal x3832=((sj1)*(sj6));
IkReal x3833=((cj1)*(cj2));
IkReal x3834=((r21)*(sj2));
IkReal x3835=((cj1)*(r12));
IkReal x3836=((cj2)*(r11));
IkReal x3837=((r12)*(sj1));
IkReal x3838=((cj1)*(cj6));
IkReal x3839=((cj2)*(r10));
IkReal x3840=((IkReal(0.400000000000000))*(cj6)*(sj1));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1)))+(((IkReal(-0.400000000000000))*(x3835))));
evalcond[2]=((((sj2)*(x3837)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj1)*(x3828)))+(x3835));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x3828)*(x3833)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x3837))));
evalcond[5]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x3831)))+(((IkReal(-0.400000000000000))*(r00)*(x3832)))+(((x3829)*(x3838)))+(((IkReal(-1.00000000000000))*(npx)*(x3826)))+(((x3824)*(x3827)))+(((IkReal(-1.00000000000000))*(r01)*(x3840))));
evalcond[6]=((((cj6)*(npx)))+(((IkReal(-0.400000000000000))*(r01)*(x3832)))+(((IkReal(-1.00000000000000))*(npy)*(x3826)))+(((x3824)*(x3829)))+(((r00)*(x3840)))+(((IkReal(-1.00000000000000))*(x3827)*(x3838))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x3831)*(x3834)))+(((x3832)*(x3839)))+(((x3824)*(x3825)))+(((cj6)*(sj1)*(x3836)))+(((cj6)*(r01)*(x3833)))+(((IkReal(-1.00000000000000))*(x3826)*(x3830))));
evalcond[8]=((((IkReal(-1.00000000000000))*(sj1)*(x3831)*(x3839)))+(((cj2)*(r01)*(x3824)))+(((cj6)*(x3830)))+(((x3832)*(x3836)))+(((IkReal(-1.00000000000000))*(cj1)*(x3825)*(x3831)))+(((IkReal(-1.00000000000000))*(x3826)*(x3834))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3841=((cj1)*(sj6));
IkReal x3842=((cj1)*(cj6));
IkReal x3843=((sj1)*(sj6));
IkReal x3844=((IkReal(1.00000000000000))*(cj6)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r00)*(x3843)))+(((r10)*(x3841)))+(((IkReal(-1.00000000000000))*(r01)*(x3844)))+(((r11)*(x3842))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r01)*(x3843)))+(((r10)*(x3842)))+(((IkReal(-1.00000000000000))*(r00)*(x3844)))+(((IkReal(-1.00000000000000))*(r11)*(x3841))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r00)*(x3843)))+(((r10)*(x3841)))+(((IkReal(-1.00000000000000))*(r01)*(x3844)))+(((r11)*(x3842)))))+IKsqr(((((r01)*(x3843)))+(((r10)*(x3842)))+(((IkReal(-1.00000000000000))*(r00)*(x3844)))+(((IkReal(-1.00000000000000))*(r11)*(x3841)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r00)*(x3843)))+(((r10)*(x3841)))+(((IkReal(-1.00000000000000))*(r01)*(x3844)))+(((r11)*(x3842)))), ((((r01)*(x3843)))+(((r10)*(x3842)))+(((IkReal(-1.00000000000000))*(r00)*(x3844)))+(((IkReal(-1.00000000000000))*(r11)*(x3841)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3845=IKsin(j4);
IkReal x3846=((IkReal(1.00000000000000))*(sj6));
IkReal x3847=((cj2)*(r21));
IkReal x3848=((IkReal(1.00000000000000))*(cj6));
IkReal x3849=((cj1)*(r11));
IkReal x3850=((r00)*(sj1));
IkReal x3851=((cj6)*(sj2));
IkReal x3852=((r10)*(sj1));
IkReal x3853=((cj1)*(r00));
IkReal x3854=((cj1)*(r10));
IkReal x3855=((cj2)*(r20));
IkReal x3856=((r01)*(sj1));
IkReal x3857=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x3858=((cj1)*(r01)*(sj2));
IkReal x3859=((r11)*(sj1)*(sj2));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3848)*(x3849)))+(((cj6)*(x3856)))+(x3845)+(((IkReal(-1.00000000000000))*(x3846)*(x3854)))+(((sj6)*(x3850))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3857)))+(((IkReal(-1.00000000000000))*(x3848)*(x3850)))+(((cj6)*(x3854)))+(((IkReal(-1.00000000000000))*(x3846)*(x3849)))+(((sj6)*(x3856))));
evalcond[2]=((((cj6)*(x3855)))+(((IkReal(-1.00000000000000))*(x3845)))+(((x3851)*(x3853)))+(((x3851)*(x3852)))+(((IkReal(-1.00000000000000))*(x3846)*(x3858)))+(((IkReal(-1.00000000000000))*(x3846)*(x3859)))+(((IkReal(-1.00000000000000))*(x3846)*(x3847))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3857)))+(((IkReal(-1.00000000000000))*(x3848)*(x3859)))+(((IkReal(-1.00000000000000))*(x3848)*(x3858)))+(((IkReal(-1.00000000000000))*(sj2)*(x3846)*(x3852)))+(((IkReal(-1.00000000000000))*(sj2)*(x3846)*(x3853)))+(((IkReal(-1.00000000000000))*(x3846)*(x3855)))+(((IkReal(-1.00000000000000))*(x3847)*(x3848))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x3860=((cj1)*(sj6));
IkReal x3861=((cj2)*(r00));
IkReal x3862=((IkReal(1.00000000000000))*(sj6));
IkReal x3863=((IkReal(0.400000000000000))*(r10));
IkReal x3864=((IkReal(1.00000000000000))*(r02));
IkReal x3865=((IkReal(0.400000000000000))*(r11));
IkReal x3866=((r20)*(sj2));
IkReal x3867=((IkReal(1.00000000000000))*(cj6));
IkReal x3868=((sj1)*(sj6));
IkReal x3869=((cj1)*(cj2));
IkReal x3870=((r21)*(sj2));
IkReal x3871=((cj1)*(r12));
IkReal x3872=((cj2)*(r11));
IkReal x3873=((r12)*(sj1));
IkReal x3874=((cj1)*(cj6));
IkReal x3875=((cj2)*(r10));
IkReal x3876=((IkReal(0.400000000000000))*(cj6)*(sj1));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(((IkReal(-0.400000000000000))*(x3871)))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1))));
evalcond[2]=((((cj2)*(r22)))+(((sj2)*(x3873)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj1)*(x3864)))+(x3871));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(cj2)*(x3873)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x3864)*(x3869))));
evalcond[5]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x3867)))+(((x3860)*(x3863)))+(((x3865)*(x3874)))+(((IkReal(-0.400000000000000))*(r00)*(x3868)))+(((IkReal(-1.00000000000000))*(r01)*(x3876)))+(((IkReal(-1.00000000000000))*(npx)*(x3862))));
evalcond[6]=((((IkReal(-1.00000000000000))*(npy)*(x3862)))+(((x3860)*(x3865)))+(((cj6)*(npx)))+(((r00)*(x3876)))+(((IkReal(-0.400000000000000))*(r01)*(x3868)))+(((IkReal(-1.00000000000000))*(x3863)*(x3874))));
evalcond[7]=((((x3860)*(x3861)))+(((IkReal(-1.00000000000000))*(x3867)*(x3870)))+(((cj6)*(sj1)*(x3872)))+(((x3868)*(x3875)))+(((IkReal(-1.00000000000000))*(x3862)*(x3866)))+(((cj6)*(r01)*(x3869))));
evalcond[8]=((((cj2)*(r01)*(x3860)))+(((IkReal(-1.00000000000000))*(sj1)*(x3867)*(x3875)))+(((cj6)*(x3866)))+(((IkReal(-1.00000000000000))*(cj1)*(x3861)*(x3867)))+(((IkReal(-1.00000000000000))*(x3862)*(x3870)))+(((x3868)*(x3872))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3877=((r00)*(sj1));
IkReal x3878=((cj1)*(r11));
IkReal x3879=((r01)*(sj1));
IkReal x3880=((IkReal(1.00000000000000))*(sj6));
IkReal x3881=((IkReal(1.00000000000000))*(cj6));
IkReal x3882=((cj1)*(r10));
if( IKabs(((((IkReal(-1.00000000000000))*(x3880)*(x3882)))+(((IkReal(-1.00000000000000))*(x3878)*(x3881)))+(((sj6)*(x3877)))+(((cj6)*(x3879))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x3879)*(x3880)))+(((sj6)*(x3878)))+(((cj6)*(x3877)))+(((IkReal(-1.00000000000000))*(x3881)*(x3882))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x3880)*(x3882)))+(((IkReal(-1.00000000000000))*(x3878)*(x3881)))+(((sj6)*(x3877)))+(((cj6)*(x3879)))))+IKsqr(((((IkReal(-1.00000000000000))*(x3879)*(x3880)))+(((sj6)*(x3878)))+(((cj6)*(x3877)))+(((IkReal(-1.00000000000000))*(x3881)*(x3882)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x3880)*(x3882)))+(((IkReal(-1.00000000000000))*(x3878)*(x3881)))+(((sj6)*(x3877)))+(((cj6)*(x3879)))), ((((IkReal(-1.00000000000000))*(x3879)*(x3880)))+(((sj6)*(x3878)))+(((cj6)*(x3877)))+(((IkReal(-1.00000000000000))*(x3881)*(x3882)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x3883=IKcos(j4);
IkReal x3884=((IkReal(1.00000000000000))*(sj6));
IkReal x3885=((cj2)*(r21));
IkReal x3886=((IkReal(1.00000000000000))*(cj6));
IkReal x3887=((cj1)*(r11));
IkReal x3888=((r00)*(sj1));
IkReal x3889=((cj6)*(sj2));
IkReal x3890=((r10)*(sj1));
IkReal x3891=((cj1)*(r00));
IkReal x3892=((cj1)*(r10));
IkReal x3893=((cj2)*(r20));
IkReal x3894=((r01)*(sj1));
IkReal x3895=((IkReal(1.00000000000000))*(IKsin(j4)));
IkReal x3896=((cj1)*(r01)*(sj2));
IkReal x3897=((r11)*(sj1)*(sj2));
evalcond[0]=((((cj6)*(x3894)))+(((IkReal(-1.00000000000000))*(x3884)*(x3892)))+(((IkReal(-1.00000000000000))*(x3895)))+(((IkReal(-1.00000000000000))*(x3886)*(x3887)))+(((sj6)*(x3888))));
evalcond[1]=((((sj6)*(x3894)))+(((cj6)*(x3892)))+(x3883)+(((IkReal(-1.00000000000000))*(x3884)*(x3887)))+(((IkReal(-1.00000000000000))*(x3886)*(x3888))));
evalcond[2]=((((x3889)*(x3890)))+(((x3889)*(x3891)))+(((cj6)*(x3893)))+(((IkReal(-1.00000000000000))*(x3884)*(x3896)))+(((IkReal(-1.00000000000000))*(x3884)*(x3897)))+(((IkReal(-1.00000000000000))*(x3895)))+(((IkReal(-1.00000000000000))*(x3884)*(x3885))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(x3884)*(x3891)))+(((IkReal(-1.00000000000000))*(sj2)*(x3884)*(x3890)))+(((IkReal(-1.00000000000000))*(x3883)))+(((IkReal(-1.00000000000000))*(x3885)*(x3886)))+(((IkReal(-1.00000000000000))*(x3886)*(x3897)))+(((IkReal(-1.00000000000000))*(x3886)*(x3896)))+(((IkReal(-1.00000000000000))*(x3884)*(x3893))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3898=((cj2)*(sj6));
IkReal x3899=((IkReal(1.00000000000000))*(cj6));
IkReal x3900=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r00)*(sj1)*(x3900)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x3899))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(r10)*(sj1)*(x3899)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r00)*(x3899)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x3900)))+(((cj6)*(r20)*(sj2)))+(((r11)*(sj1)*(x3898)))+(((cj1)*(r01)*(x3898))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r00)*(sj1)*(x3900)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x3899)))))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(r10)*(sj1)*(x3899)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r00)*(x3899)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x3900)))+(((cj6)*(r20)*(sj2)))+(((r11)*(sj1)*(x3898)))+(((cj1)*(r01)*(x3898)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r00)*(sj1)*(x3900)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x3899)))))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(r10)*(sj1)*(x3899)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r00)*(x3899)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x3900)))+(((cj6)*(r20)*(sj2)))+(((r11)*(sj1)*(x3898)))+(((cj1)*(r01)*(x3898)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3901=IKsin(j4);
IkReal x3902=IKcos(j4);
IkReal x3903=((cj2)*(sj6));
IkReal x3904=((cj1)*(r00));
IkReal x3905=((IkReal(1.00000000000000))*(r21));
IkReal x3906=((cj6)*(sj2));
IkReal x3907=((IkReal(1.00000000000000))*(cj6));
IkReal x3908=((cj1)*(r11));
IkReal x3909=((r00)*(sj1));
IkReal x3910=((r10)*(sj1));
IkReal x3911=((sj2)*(sj6));
IkReal x3912=((IkReal(1.00000000000000))*(r20));
IkReal x3913=((cj2)*(cj6));
IkReal x3914=((cj1)*(r01));
IkReal x3915=((cj1)*(r10));
IkReal x3916=((r11)*(sj1));
IkReal x3917=((IkReal(1.00000000000000))*(sj6));
IkReal x3918=((r01)*(sj1));
IkReal x3919=((IkReal(1.00000000000000))*(x3902));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3915)*(x3917)))+(((sj3)*(x3901)))+(((sj6)*(x3909)))+(((IkReal(-1.00000000000000))*(x3907)*(x3908)))+(((cj6)*(x3918))));
evalcond[1]=((((sj6)*(x3918)))+(((IkReal(-1.00000000000000))*(sj3)*(x3919)))+(((IkReal(-1.00000000000000))*(x3908)*(x3917)))+(((IkReal(-1.00000000000000))*(x3907)*(x3909)))+(((cj6)*(x3915))));
evalcond[2]=((((cj3)*(x3901)))+(((IkReal(-1.00000000000000))*(x3911)*(x3912)))+(((x3903)*(x3904)))+(((IkReal(-1.00000000000000))*(x3905)*(x3906)))+(((x3903)*(x3910)))+(((x3913)*(x3914)))+(((x3913)*(x3916))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3903)*(x3905)))+(((x3906)*(x3910)))+(((x3904)*(x3906)))+(((IkReal(-1.00000000000000))*(x3901)))+(((IkReal(-1.00000000000000))*(x3911)*(x3916)))+(((IkReal(-1.00000000000000))*(x3911)*(x3914)))+(((r20)*(x3913))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x3905)*(x3913)))+(((IkReal(-1.00000000000000))*(x3919)))+(((IkReal(-1.00000000000000))*(x3904)*(x3911)))+(((IkReal(-1.00000000000000))*(x3903)*(x3912)))+(((IkReal(-1.00000000000000))*(x3906)*(x3914)))+(((IkReal(-1.00000000000000))*(x3906)*(x3916)))+(((IkReal(-1.00000000000000))*(x3910)*(x3911))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x3905)*(x3911)))+(((IkReal(-1.00000000000000))*(cj2)*(x3904)*(x3907)))+(((x3903)*(x3914)))+(((x3903)*(x3916)))+(((IkReal(-1.00000000000000))*(cj3)*(x3919)))+(((IkReal(-1.00000000000000))*(cj2)*(x3907)*(x3910)))+(((r20)*(x3906))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3920=((IkReal(1.00000000000000))*(sj6));
IkReal x3921=((cj6)*(r10));
IkReal x3922=((cj6)*(r00));
IkReal x3923=((sj1)*(sj2));
IkReal x3924=((cj1)*(x3920));
if( IKabs(((((x3921)*(x3923)))+(((cj2)*(cj6)*(r20)))+(((cj1)*(sj2)*(x3922)))+(((IkReal(-1.00000000000000))*(r01)*(sj2)*(x3924)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x3920)))+(((IkReal(-1.00000000000000))*(r11)*(x3920)*(x3923))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r11)*(x3924)))+(((IkReal(-1.00000000000000))*(sj1)*(x3922)))+(((cj1)*(x3921)))+(((r01)*(sj1)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((x3921)*(x3923)))+(((cj2)*(cj6)*(r20)))+(((cj1)*(sj2)*(x3922)))+(((IkReal(-1.00000000000000))*(r01)*(sj2)*(x3924)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x3920)))+(((IkReal(-1.00000000000000))*(r11)*(x3920)*(x3923)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r11)*(x3924)))+(((IkReal(-1.00000000000000))*(sj1)*(x3922)))+(((cj1)*(x3921)))+(((r01)*(sj1)*(sj6)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((x3921)*(x3923)))+(((cj2)*(cj6)*(r20)))+(((cj1)*(sj2)*(x3922)))+(((IkReal(-1.00000000000000))*(r01)*(sj2)*(x3924)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x3920)))+(((IkReal(-1.00000000000000))*(r11)*(x3920)*(x3923)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r11)*(x3924)))+(((IkReal(-1.00000000000000))*(sj1)*(x3922)))+(((cj1)*(x3921)))+(((r01)*(sj1)*(sj6)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3925=IKsin(j4);
IkReal x3926=IKcos(j4);
IkReal x3927=((cj2)*(sj6));
IkReal x3928=((cj1)*(r00));
IkReal x3929=((IkReal(1.00000000000000))*(r21));
IkReal x3930=((cj6)*(sj2));
IkReal x3931=((IkReal(1.00000000000000))*(cj6));
IkReal x3932=((cj1)*(r11));
IkReal x3933=((r00)*(sj1));
IkReal x3934=((r10)*(sj1));
IkReal x3935=((sj2)*(sj6));
IkReal x3936=((IkReal(1.00000000000000))*(r20));
IkReal x3937=((cj2)*(cj6));
IkReal x3938=((cj1)*(r01));
IkReal x3939=((cj1)*(r10));
IkReal x3940=((r11)*(sj1));
IkReal x3941=((IkReal(1.00000000000000))*(sj6));
IkReal x3942=((r01)*(sj1));
IkReal x3943=((IkReal(1.00000000000000))*(x3926));
evalcond[0]=((((sj6)*(x3933)))+(((sj3)*(x3925)))+(((IkReal(-1.00000000000000))*(x3931)*(x3932)))+(((IkReal(-1.00000000000000))*(x3939)*(x3941)))+(((cj6)*(x3942))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3932)*(x3941)))+(((sj6)*(x3942)))+(((IkReal(-1.00000000000000))*(sj3)*(x3943)))+(((IkReal(-1.00000000000000))*(x3931)*(x3933)))+(((cj6)*(x3939))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3929)*(x3930)))+(((cj3)*(x3925)))+(((x3937)*(x3938)))+(((x3937)*(x3940)))+(((x3927)*(x3934)))+(((IkReal(-1.00000000000000))*(x3935)*(x3936)))+(((x3927)*(x3928))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3925)))+(((IkReal(-1.00000000000000))*(x3935)*(x3940)))+(((IkReal(-1.00000000000000))*(x3935)*(x3938)))+(((IkReal(-1.00000000000000))*(x3927)*(x3929)))+(((r20)*(x3937)))+(((x3928)*(x3930)))+(((x3930)*(x3934))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x3929)*(x3937)))+(((IkReal(-1.00000000000000))*(x3928)*(x3935)))+(((IkReal(-1.00000000000000))*(x3930)*(x3940)))+(((IkReal(-1.00000000000000))*(x3930)*(x3938)))+(((IkReal(-1.00000000000000))*(x3943)))+(((IkReal(-1.00000000000000))*(x3927)*(x3936)))+(((IkReal(-1.00000000000000))*(x3934)*(x3935))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x3929)*(x3935)))+(((IkReal(-1.00000000000000))*(cj2)*(x3928)*(x3931)))+(((r20)*(x3930)))+(((x3927)*(x3940)))+(((IkReal(-1.00000000000000))*(cj3)*(x3943)))+(((x3927)*(x3938)))+(((IkReal(-1.00000000000000))*(cj2)*(x3931)*(x3934))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3944=((cj1)*(sj6));
IkReal x3945=((cj1)*(cj6));
IkReal x3946=((sj1)*(sj6));
IkReal x3947=((IkReal(1.00000000000000))*(cj6)*(sj1));
if( IKabs(((gconst23)*(((((IkReal(-1.00000000000000))*(r01)*(x3947)))+(((IkReal(-1.00000000000000))*(r00)*(x3946)))+(((r10)*(x3944)))+(((r11)*(x3945))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst23)*(((((IkReal(-1.00000000000000))*(r11)*(x3944)))+(((r01)*(x3946)))+(((IkReal(-1.00000000000000))*(r00)*(x3947)))+(((r10)*(x3945))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst23)*(((((IkReal(-1.00000000000000))*(r01)*(x3947)))+(((IkReal(-1.00000000000000))*(r00)*(x3946)))+(((r10)*(x3944)))+(((r11)*(x3945)))))), ((gconst23)*(((((IkReal(-1.00000000000000))*(r11)*(x3944)))+(((r01)*(x3946)))+(((IkReal(-1.00000000000000))*(r00)*(x3947)))+(((r10)*(x3945)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3948=IKsin(j4);
IkReal x3949=IKcos(j4);
IkReal x3950=((cj2)*(sj6));
IkReal x3951=((cj1)*(r00));
IkReal x3952=((IkReal(1.00000000000000))*(r21));
IkReal x3953=((cj6)*(sj2));
IkReal x3954=((IkReal(1.00000000000000))*(cj6));
IkReal x3955=((cj1)*(r11));
IkReal x3956=((r00)*(sj1));
IkReal x3957=((r10)*(sj1));
IkReal x3958=((sj2)*(sj6));
IkReal x3959=((IkReal(1.00000000000000))*(r20));
IkReal x3960=((cj2)*(cj6));
IkReal x3961=((cj1)*(r01));
IkReal x3962=((cj1)*(r10));
IkReal x3963=((r11)*(sj1));
IkReal x3964=((IkReal(1.00000000000000))*(sj6));
IkReal x3965=((r01)*(sj1));
IkReal x3966=((IkReal(1.00000000000000))*(x3949));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3954)*(x3955)))+(((IkReal(-1.00000000000000))*(x3962)*(x3964)))+(((sj6)*(x3956)))+(((cj6)*(x3965)))+(((sj3)*(x3948))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3954)*(x3956)))+(((IkReal(-1.00000000000000))*(x3955)*(x3964)))+(((cj6)*(x3962)))+(((IkReal(-1.00000000000000))*(sj3)*(x3966)))+(((sj6)*(x3965))));
evalcond[2]=((((cj3)*(x3948)))+(((x3960)*(x3963)))+(((x3960)*(x3961)))+(((x3950)*(x3957)))+(((x3950)*(x3951)))+(((IkReal(-1.00000000000000))*(x3952)*(x3953)))+(((IkReal(-1.00000000000000))*(x3958)*(x3959))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3948)))+(((x3953)*(x3957)))+(((IkReal(-1.00000000000000))*(x3958)*(x3963)))+(((IkReal(-1.00000000000000))*(x3958)*(x3961)))+(((IkReal(-1.00000000000000))*(x3950)*(x3952)))+(((r20)*(x3960)))+(((x3951)*(x3953))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x3952)*(x3960)))+(((IkReal(-1.00000000000000))*(x3966)))+(((IkReal(-1.00000000000000))*(x3953)*(x3963)))+(((IkReal(-1.00000000000000))*(x3953)*(x3961)))+(((IkReal(-1.00000000000000))*(x3951)*(x3958)))+(((IkReal(-1.00000000000000))*(x3957)*(x3958)))+(((IkReal(-1.00000000000000))*(x3950)*(x3959))));
evalcond[5]=((((x3950)*(x3961)))+(((x3950)*(x3963)))+(((IkReal(-1.00000000000000))*(cj2)*(x3954)*(x3957)))+(((r20)*(x3953)))+(((IkReal(-1.00000000000000))*(x3952)*(x3958)))+(((IkReal(-1.00000000000000))*(cj2)*(x3951)*(x3954)))+(((IkReal(-1.00000000000000))*(cj3)*(x3966))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3967=((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30);
IkReal x3968=((IkReal(1.00000000000000))*(cj6));
IkReal x3969=((cj1)*(r10));
IkReal x3970=((r01)*(sj1));
IkReal x3971=((r00)*(sj1));
IkReal x3972=((cj1)*(r11));
IkReal x3973=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((x3967)*(((((IkReal(-1.00000000000000))*(x3968)*(x3970)))+(((IkReal(-1.00000000000000))*(x3971)*(x3973)))+(((cj6)*(x3972)))+(((sj6)*(x3969))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x3967)*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x3968)*(x3969)))+(((IkReal(-1.00000000000000))*(x3970)*(x3973)))+(((cj6)*(x3971)))+(((sj6)*(x3972)))+(((cj3)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x3967)*(((((IkReal(-1.00000000000000))*(x3968)*(x3970)))+(((IkReal(-1.00000000000000))*(x3971)*(x3973)))+(((cj6)*(x3972)))+(((sj6)*(x3969)))))))+IKsqr(((x3967)*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x3968)*(x3969)))+(((IkReal(-1.00000000000000))*(x3970)*(x3973)))+(((cj6)*(x3971)))+(((sj6)*(x3972)))+(((cj3)*(sj5)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x3967)*(((((IkReal(-1.00000000000000))*(x3968)*(x3970)))+(((IkReal(-1.00000000000000))*(x3971)*(x3973)))+(((cj6)*(x3972)))+(((sj6)*(x3969)))))), ((x3967)*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x3968)*(x3969)))+(((IkReal(-1.00000000000000))*(x3970)*(x3973)))+(((cj6)*(x3971)))+(((sj6)*(x3972)))+(((cj3)*(sj5)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x3974=IKcos(j4);
IkReal x3975=((cj1)*(cj6));
IkReal x3976=((IkReal(1.00000000000000))*(cj3));
IkReal x3977=((IkReal(1.00000000000000))*(r11));
IkReal x3978=((cj1)*(sj6));
IkReal x3979=((IkReal(1.00000000000000))*(sj1));
IkReal x3980=((r01)*(sj1));
IkReal x3981=((sj3)*(x3974));
evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x3979)))+(((IkReal(-1.00000000000000))*(sj5)*(x3981)))+(((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(cj5)*(x3976))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x3978)))+(((cj6)*(x3980)))+(((sj3)*(IKsin(j4))))+(((IkReal(-1.00000000000000))*(x3975)*(x3977)))+(((r00)*(sj1)*(sj6))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3977)*(x3978)))+(((sj6)*(x3980)))+(((r10)*(x3975)))+(((cj5)*(x3981)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x3979)))+(((IkReal(-1.00000000000000))*(sj5)*(x3976))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign((((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1))))));
dummyeval[0]=(((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x3982=(sj1)*(sj1);
IkReal x3983=(cj1)*(cj1);
IkReal x3984=((r10)*(sj6));
IkReal x3985=((cj1)*(sj1));
IkReal x3986=((r00)*(sj6));
IkReal x3987=((r12)*(x3982));
IkReal x3988=((cj6)*(x3985));
IkReal x3989=((r02)*(x3983));
gconst1=IKsign(((((r12)*(x3985)*(x3986)))+(((x3984)*(x3987)))+(((r02)*(x3984)*(x3985)))+(((cj6)*(r21)*(r22)))+(((r01)*(r12)*(x3988)))+(((r20)*(r22)*(sj6)))+(((r02)*(r11)*(x3988)))+(((x3986)*(x3989)))+(((cj6)*(r01)*(x3989)))+(((cj6)*(r11)*(x3987)))));
IkReal x3990=(sj1)*(sj1);
IkReal x3991=(cj1)*(cj1);
IkReal x3992=((r10)*(sj6));
IkReal x3993=((cj1)*(sj1));
IkReal x3994=((r00)*(sj6));
IkReal x3995=((r12)*(x3990));
IkReal x3996=((cj6)*(x3993));
IkReal x3997=((r02)*(x3991));
dummyeval[0]=((((x3994)*(x3997)))+(((r02)*(x3992)*(x3993)))+(((r02)*(r11)*(x3996)))+(((cj6)*(r21)*(r22)))+(((r20)*(r22)*(sj6)))+(((cj6)*(r11)*(x3995)))+(((r12)*(x3993)*(x3994)))+(((r01)*(r12)*(x3996)))+(((cj6)*(r01)*(x3997)))+(((x3992)*(x3995))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3998=((IkReal(1.00000000000000))*(cj3)*(sj4));
IkReal x3999=((sj4)*(sj5)*(sj6));
IkReal x4000=((cj6)*(sj4)*(sj5));
if( IKabs(((gconst1)*(((((cj3)*(r22)*(sj4)))+(((cj1)*(r01)*(x4000)))+(((r10)*(sj1)*(x3999)))+(((cj1)*(r00)*(x3999)))+(((r11)*(sj1)*(x4000))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3998)))+(((r21)*(x4000)))+(((r20)*(x3999)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3998))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst1)*(((((cj3)*(r22)*(sj4)))+(((cj1)*(r01)*(x4000)))+(((r10)*(sj1)*(x3999)))+(((cj1)*(r00)*(x3999)))+(((r11)*(sj1)*(x4000)))))), ((gconst1)*(((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x3998)))+(((r21)*(x4000)))+(((r20)*(x3999)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x3998)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4001=IKsin(j2);
IkReal x4002=IKcos(j2);
IkReal x4003=((r11)*(sj6));
IkReal x4004=((cj6)*(r11));
IkReal x4005=((cj6)*(r20));
IkReal x4006=((cj3)*(cj4));
IkReal x4007=((IkReal(1.00000000000000))*(sj5));
IkReal x4008=((IkReal(1.00000000000000))*(sj6));
IkReal x4009=((cj1)*(r00));
IkReal x4010=((cj1)*(r01));
IkReal x4011=((IkReal(1.00000000000000))*(cj6));
IkReal x4012=((cj1)*(r02));
IkReal x4013=((sj1)*(x4001));
IkReal x4014=((sj1)*(x4002));
IkReal x4015=((r21)*(x4002));
IkReal x4016=((sj6)*(x4002));
IkReal x4017=((cj6)*(x4002));
IkReal x4018=((r21)*(x4001));
evalcond[0]=((((x4001)*(x4012)))+(((r22)*(x4002)))+(((r12)*(x4013)))+(((IkReal(-1.00000000000000))*(sj4)*(x4007))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x4014)))+(((r22)*(x4001)))+(((cj5)*(sj3)))+(((IkReal(-1.00000000000000))*(x4002)*(x4012)))+(((IkReal(-1.00000000000000))*(x4006)*(x4007))));
evalcond[2]=((((x4004)*(x4014)))+(((x4010)*(x4017)))+(((IkReal(-1.00000000000000))*(x4011)*(x4018)))+(((x4009)*(x4016)))+(((IkReal(-1.00000000000000))*(r20)*(x4001)*(x4008)))+(((r10)*(sj6)*(x4014)))+(((cj3)*(sj4))));
evalcond[3]=((((cj6)*(x4001)*(x4009)))+(((cj6)*(r10)*(x4013)))+(((cj5)*(sj4)))+(((IkReal(-1.00000000000000))*(x4001)*(x4008)*(x4010)))+(((IkReal(-1.00000000000000))*(x4003)*(x4013)))+(((IkReal(-1.00000000000000))*(x4008)*(x4015)))+(((x4002)*(x4005))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x4001)*(x4010)*(x4011)))+(((IkReal(-1.00000000000000))*(x4001)*(x4008)*(x4009)))+(((IkReal(-1.00000000000000))*(x4011)*(x4015)))+(((IkReal(-1.00000000000000))*(x4004)*(x4013)))+(((IkReal(-1.00000000000000))*(r20)*(x4002)*(x4008)))+(((IkReal(-1.00000000000000))*(r10)*(x4008)*(x4013)))+(((IkReal(-1.00000000000000))*(cj4))));
evalcond[5]=((((x4001)*(x4005)))+(((x4003)*(x4014)))+(((sj3)*(sj5)))+(((cj5)*(x4006)))+(((x4010)*(x4016)))+(((IkReal(-1.00000000000000))*(x4008)*(x4018)))+(((IkReal(-1.00000000000000))*(r10)*(x4011)*(x4014)))+(((IkReal(-1.00000000000000))*(x4002)*(x4009)*(x4011))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4019=((cj1)*(r02));
IkReal x4020=((r22)*(sj5));
IkReal x4021=((cj5)*(sj3));
IkReal x4022=((r12)*(sj1));
IkReal x4023=((sj4)*(sj5));
IkReal x4024=((IkReal(1.00000000000000))*(cj3)*(cj4)*(sj5));
if( IKabs(((gconst0)*(((((x4019)*(x4023)))+(((cj3)*(cj4)*(x4020)))+(((x4022)*(x4023)))+(((IkReal(-1.00000000000000))*(r22)*(x4021))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((x4021)*(x4022)))+(((IkReal(-1.00000000000000))*(x4022)*(x4024)))+(((x4019)*(x4021)))+(((sj4)*(x4020)))+(((IkReal(-1.00000000000000))*(x4019)*(x4024))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst0)*(((((x4019)*(x4023)))+(((cj3)*(cj4)*(x4020)))+(((x4022)*(x4023)))+(((IkReal(-1.00000000000000))*(r22)*(x4021)))))), ((gconst0)*(((((x4021)*(x4022)))+(((IkReal(-1.00000000000000))*(x4022)*(x4024)))+(((x4019)*(x4021)))+(((sj4)*(x4020)))+(((IkReal(-1.00000000000000))*(x4019)*(x4024)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4025=IKsin(j2);
IkReal x4026=IKcos(j2);
IkReal x4027=((r11)*(sj6));
IkReal x4028=((cj6)*(r11));
IkReal x4029=((cj6)*(r20));
IkReal x4030=((cj3)*(cj4));
IkReal x4031=((IkReal(1.00000000000000))*(sj5));
IkReal x4032=((IkReal(1.00000000000000))*(sj6));
IkReal x4033=((cj1)*(r00));
IkReal x4034=((cj1)*(r01));
IkReal x4035=((IkReal(1.00000000000000))*(cj6));
IkReal x4036=((cj1)*(r02));
IkReal x4037=((sj1)*(x4025));
IkReal x4038=((sj1)*(x4026));
IkReal x4039=((r21)*(x4026));
IkReal x4040=((sj6)*(x4026));
IkReal x4041=((cj6)*(x4026));
IkReal x4042=((r21)*(x4025));
evalcond[0]=((((r22)*(x4026)))+(((IkReal(-1.00000000000000))*(sj4)*(x4031)))+(((r12)*(x4037)))+(((x4025)*(x4036))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x4030)*(x4031)))+(((IkReal(-1.00000000000000))*(r12)*(x4038)))+(((cj5)*(sj3)))+(((IkReal(-1.00000000000000))*(x4026)*(x4036)))+(((r22)*(x4025))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4035)*(x4042)))+(((r10)*(sj6)*(x4038)))+(((x4028)*(x4038)))+(((x4033)*(x4040)))+(((x4034)*(x4041)))+(((IkReal(-1.00000000000000))*(r20)*(x4025)*(x4032)))+(((cj3)*(sj4))));
evalcond[3]=((((cj6)*(x4025)*(x4033)))+(((cj6)*(r10)*(x4037)))+(((cj5)*(sj4)))+(((IkReal(-1.00000000000000))*(x4027)*(x4037)))+(((IkReal(-1.00000000000000))*(x4032)*(x4039)))+(((x4026)*(x4029)))+(((IkReal(-1.00000000000000))*(x4025)*(x4032)*(x4034))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(x4026)*(x4032)))+(((IkReal(-1.00000000000000))*(x4035)*(x4039)))+(((IkReal(-1.00000000000000))*(x4025)*(x4034)*(x4035)))+(((IkReal(-1.00000000000000))*(r10)*(x4032)*(x4037)))+(((IkReal(-1.00000000000000))*(x4028)*(x4037)))+(((IkReal(-1.00000000000000))*(x4025)*(x4032)*(x4033)))+(((IkReal(-1.00000000000000))*(cj4))));
evalcond[5]=((((sj3)*(sj5)))+(((IkReal(-1.00000000000000))*(r10)*(x4035)*(x4038)))+(((x4027)*(x4038)))+(((IkReal(-1.00000000000000))*(x4032)*(x4042)))+(((x4025)*(x4029)))+(((IkReal(-1.00000000000000))*(x4026)*(x4033)*(x4035)))+(((x4034)*(x4040)))+(((cj5)*(x4030))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4043=((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30);
IkReal x4044=((IkReal(1.00000000000000))*(sj1));
if( IKabs(((x4043)*(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x4044)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x4044))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x4043)*(((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj3)*(cj5)))+(((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(x4044))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x4043)*(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x4044)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x4044)))))))+IKsqr(((x4043)*(((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj3)*(cj5)))+(((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(x4044)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x4043)*(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x4044)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x4044)))))), ((x4043)*(((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj3)*(cj5)))+(((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(x4044)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x4045=IKcos(j4);
IkReal x4046=((cj1)*(cj6));
IkReal x4047=((IkReal(1.00000000000000))*(cj3));
IkReal x4048=((IkReal(1.00000000000000))*(r11));
IkReal x4049=((cj1)*(sj6));
IkReal x4050=((IkReal(1.00000000000000))*(sj1));
IkReal x4051=((r01)*(sj1));
IkReal x4052=((sj3)*(x4045));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj5)*(x4052)))+(((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(cj5)*(x4047)))+(((IkReal(-1.00000000000000))*(r02)*(x4050))));
evalcond[1]=((((cj6)*(x4051)))+(((IkReal(-1.00000000000000))*(r10)*(x4049)))+(((IkReal(-1.00000000000000))*(x4046)*(x4048)))+(((sj3)*(IKsin(j4))))+(((r00)*(sj1)*(sj6))));
evalcond[2]=((((sj6)*(x4051)))+(((cj5)*(x4052)))+(((r10)*(x4046)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x4050)))+(((IkReal(-1.00000000000000))*(x4048)*(x4049)))+(((IkReal(-1.00000000000000))*(sj5)*(x4047))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign((((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1))))));
dummyeval[0]=(((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x4053=(sj1)*(sj1);
IkReal x4054=(cj1)*(cj1);
IkReal x4055=((r10)*(sj6));
IkReal x4056=((cj1)*(sj1));
IkReal x4057=((r00)*(sj6));
IkReal x4058=((r12)*(x4053));
IkReal x4059=((cj6)*(x4056));
IkReal x4060=((r02)*(x4054));
gconst1=IKsign(((((r02)*(r11)*(x4059)))+(((r12)*(x4056)*(x4057)))+(((r02)*(x4055)*(x4056)))+(((cj6)*(r21)*(r22)))+(((cj6)*(r01)*(x4060)))+(((r20)*(r22)*(sj6)))+(((cj6)*(r11)*(x4058)))+(((x4055)*(x4058)))+(((x4057)*(x4060)))+(((r01)*(r12)*(x4059)))));
IkReal x4061=(sj1)*(sj1);
IkReal x4062=(cj1)*(cj1);
IkReal x4063=((r10)*(sj6));
IkReal x4064=((cj1)*(sj1));
IkReal x4065=((r00)*(sj6));
IkReal x4066=((r12)*(x4061));
IkReal x4067=((cj6)*(x4064));
IkReal x4068=((r02)*(x4062));
dummyeval[0]=((((r02)*(r11)*(x4067)))+(((cj6)*(r21)*(r22)))+(((cj6)*(r01)*(x4068)))+(((r20)*(r22)*(sj6)))+(((x4063)*(x4066)))+(((cj6)*(r11)*(x4066)))+(((r12)*(x4064)*(x4065)))+(((r01)*(r12)*(x4067)))+(((r02)*(x4063)*(x4064)))+(((x4065)*(x4068))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4069=((IkReal(1.00000000000000))*(cj3)*(sj4));
IkReal x4070=((sj4)*(sj5)*(sj6));
IkReal x4071=((cj6)*(sj4)*(sj5));
if( IKabs(((gconst1)*(((((r11)*(sj1)*(x4071)))+(((cj1)*(r00)*(x4070)))+(((cj3)*(r22)*(sj4)))+(((cj1)*(r01)*(x4071)))+(((r10)*(sj1)*(x4070))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x4069)))+(((r20)*(x4070)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x4069)))+(((r21)*(x4071))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst1)*(((((r11)*(sj1)*(x4071)))+(((cj1)*(r00)*(x4070)))+(((cj3)*(r22)*(sj4)))+(((cj1)*(r01)*(x4071)))+(((r10)*(sj1)*(x4070)))))), ((gconst1)*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x4069)))+(((r20)*(x4070)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x4069)))+(((r21)*(x4071)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4072=IKsin(j2);
IkReal x4073=IKcos(j2);
IkReal x4074=((r11)*(sj6));
IkReal x4075=((cj6)*(r11));
IkReal x4076=((cj6)*(r20));
IkReal x4077=((cj3)*(cj4));
IkReal x4078=((IkReal(1.00000000000000))*(sj5));
IkReal x4079=((IkReal(1.00000000000000))*(sj6));
IkReal x4080=((cj1)*(r00));
IkReal x4081=((cj1)*(r01));
IkReal x4082=((IkReal(1.00000000000000))*(cj6));
IkReal x4083=((cj1)*(r02));
IkReal x4084=((sj1)*(x4072));
IkReal x4085=((sj1)*(x4073));
IkReal x4086=((r21)*(x4073));
IkReal x4087=((sj6)*(x4073));
IkReal x4088=((cj6)*(x4073));
IkReal x4089=((r21)*(x4072));
evalcond[0]=((((x4072)*(x4083)))+(((r22)*(x4073)))+(((r12)*(x4084)))+(((IkReal(-1.00000000000000))*(sj4)*(x4078))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x4073)*(x4083)))+(((r22)*(x4072)))+(((cj5)*(sj3)))+(((IkReal(-1.00000000000000))*(r12)*(x4085)))+(((IkReal(-1.00000000000000))*(x4077)*(x4078))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x4072)*(x4079)))+(((x4080)*(x4087)))+(((x4081)*(x4088)))+(((IkReal(-1.00000000000000))*(x4082)*(x4089)))+(((r10)*(sj6)*(x4085)))+(((x4075)*(x4085)))+(((cj3)*(sj4))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4074)*(x4084)))+(((cj6)*(x4072)*(x4080)))+(((IkReal(-1.00000000000000))*(x4072)*(x4079)*(x4081)))+(((cj5)*(sj4)))+(((x4073)*(x4076)))+(((cj6)*(r10)*(x4084)))+(((IkReal(-1.00000000000000))*(x4079)*(x4086))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x4075)*(x4084)))+(((IkReal(-1.00000000000000))*(r10)*(x4079)*(x4084)))+(((IkReal(-1.00000000000000))*(x4072)*(x4079)*(x4080)))+(((IkReal(-1.00000000000000))*(r20)*(x4073)*(x4079)))+(((IkReal(-1.00000000000000))*(x4082)*(x4086)))+(((IkReal(-1.00000000000000))*(x4072)*(x4081)*(x4082)))+(((IkReal(-1.00000000000000))*(cj4))));
evalcond[5]=((((cj5)*(x4077)))+(((sj3)*(sj5)))+(((IkReal(-1.00000000000000))*(r10)*(x4082)*(x4085)))+(((x4072)*(x4076)))+(((x4081)*(x4087)))+(((IkReal(-1.00000000000000))*(x4073)*(x4080)*(x4082)))+(((x4074)*(x4085)))+(((IkReal(-1.00000000000000))*(x4079)*(x4089))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4090=((cj1)*(r02));
IkReal x4091=((r22)*(sj5));
IkReal x4092=((cj5)*(sj3));
IkReal x4093=((r12)*(sj1));
IkReal x4094=((sj4)*(sj5));
IkReal x4095=((IkReal(1.00000000000000))*(cj3)*(cj4)*(sj5));
if( IKabs(((gconst0)*(((((cj3)*(cj4)*(x4091)))+(((IkReal(-1.00000000000000))*(r22)*(x4092)))+(((x4090)*(x4094)))+(((x4093)*(x4094))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((sj4)*(x4091)))+(((IkReal(-1.00000000000000))*(x4090)*(x4095)))+(((IkReal(-1.00000000000000))*(x4093)*(x4095)))+(((x4090)*(x4092)))+(((x4092)*(x4093))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst0)*(((((cj3)*(cj4)*(x4091)))+(((IkReal(-1.00000000000000))*(r22)*(x4092)))+(((x4090)*(x4094)))+(((x4093)*(x4094)))))), ((gconst0)*(((((sj4)*(x4091)))+(((IkReal(-1.00000000000000))*(x4090)*(x4095)))+(((IkReal(-1.00000000000000))*(x4093)*(x4095)))+(((x4090)*(x4092)))+(((x4092)*(x4093)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4096=IKsin(j2);
IkReal x4097=IKcos(j2);
IkReal x4098=((r11)*(sj6));
IkReal x4099=((cj6)*(r11));
IkReal x4100=((cj6)*(r20));
IkReal x4101=((cj3)*(cj4));
IkReal x4102=((IkReal(1.00000000000000))*(sj5));
IkReal x4103=((IkReal(1.00000000000000))*(sj6));
IkReal x4104=((cj1)*(r00));
IkReal x4105=((cj1)*(r01));
IkReal x4106=((IkReal(1.00000000000000))*(cj6));
IkReal x4107=((cj1)*(r02));
IkReal x4108=((sj1)*(x4096));
IkReal x4109=((sj1)*(x4097));
IkReal x4110=((r21)*(x4097));
IkReal x4111=((sj6)*(x4097));
IkReal x4112=((cj6)*(x4097));
IkReal x4113=((r21)*(x4096));
evalcond[0]=((((r22)*(x4097)))+(((IkReal(-1.00000000000000))*(sj4)*(x4102)))+(((r12)*(x4108)))+(((x4096)*(x4107))));
evalcond[1]=((((cj5)*(sj3)))+(((r22)*(x4096)))+(((IkReal(-1.00000000000000))*(r12)*(x4109)))+(((IkReal(-1.00000000000000))*(x4101)*(x4102)))+(((IkReal(-1.00000000000000))*(x4097)*(x4107))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x4096)*(x4103)))+(((x4099)*(x4109)))+(((x4105)*(x4112)))+(((x4104)*(x4111)))+(((IkReal(-1.00000000000000))*(x4106)*(x4113)))+(((cj3)*(sj4)))+(((r10)*(sj6)*(x4109))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4103)*(x4110)))+(((IkReal(-1.00000000000000))*(x4098)*(x4108)))+(((IkReal(-1.00000000000000))*(x4096)*(x4103)*(x4105)))+(((cj5)*(sj4)))+(((cj6)*(r10)*(x4108)))+(((x4097)*(x4100)))+(((cj6)*(x4096)*(x4104))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(x4097)*(x4103)))+(((IkReal(-1.00000000000000))*(x4099)*(x4108)))+(((IkReal(-1.00000000000000))*(x4096)*(x4103)*(x4104)))+(((IkReal(-1.00000000000000))*(r10)*(x4103)*(x4108)))+(((IkReal(-1.00000000000000))*(x4096)*(x4105)*(x4106)))+(((IkReal(-1.00000000000000))*(cj4)))+(((IkReal(-1.00000000000000))*(x4106)*(x4110))));
evalcond[5]=((((sj3)*(sj5)))+(((IkReal(-1.00000000000000))*(x4103)*(x4113)))+(((x4098)*(x4109)))+(((cj5)*(x4101)))+(((IkReal(-1.00000000000000))*(r10)*(x4106)*(x4109)))+(((IkReal(-1.00000000000000))*(x4097)*(x4104)*(x4106)))+(((x4105)*(x4111)))+(((x4096)*(x4100))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j6array[2], cj6array[2], sj6array[2];
bool j6valid[2]={false};
_nj6 = 2;
IkReal x4114=((IkReal(0.400000000000000))*(cj1));
IkReal x4115=((IkReal(0.400000000000000))*(sj1));
IkReal x4116=((((IkReal(-1.00000000000000))*(r11)*(x4114)))+(npy)+(((r01)*(x4115))));
IkReal x4117=((npx)+(((IkReal(-1.00000000000000))*(r10)*(x4114)))+(((r00)*(x4115))));
if( IKabs(x4116) < IKFAST_ATAN2_MAGTHRESH && IKabs(x4117) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x4118=((IkReal(1.00000000000000))*(IKatan2(x4116, x4117)));
if( ((((x4116)*(x4116))+((x4117)*(x4117)))) < (IkReal)-0.00001 )
    continue;
if( (((IkReal(0.000500000000000000))*(((IKabs(IKabs(IKsqrt((((x4116)*(x4116))+((x4117)*(x4117)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x4116)*(x4116))+((x4117)*(x4117))))))):(IkReal)1.0e30)))) < -1-IKFAST_SINCOS_THRESH || (((IkReal(0.000500000000000000))*(((IKabs(IKabs(IKsqrt((((x4116)*(x4116))+((x4117)*(x4117)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x4116)*(x4116))+((x4117)*(x4117))))))):(IkReal)1.0e30)))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x4119=IKasin(((IkReal(0.000500000000000000))*(((IKabs(IKabs(IKsqrt((((x4116)*(x4116))+((x4117)*(x4117)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((x4116)*(x4116))+((x4117)*(x4117))))))):(IkReal)1.0e30))));
j6array[0]=((((IkReal(-1.00000000000000))*(x4118)))+(x4119));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
j6array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x4118)))+(((IkReal(-1.00000000000000))*(x4119))));
sj6array[1]=IKsin(j6array[1]);
cj6array[1]=IKcos(j6array[1]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
if( j6array[1] > IKPI )
{
    j6array[1]-=IK2PI;
}
else if( j6array[1] < -IKPI )
{    j6array[1]+=IK2PI;
}
j6valid[1] = true;
for(int ij6 = 0; ij6 < 2; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
for(int iij6 = ij6+1; iij6 < 2; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[2];
IkReal x4120=IKsin(j6);
IkReal x4121=IKcos(j6);
IkReal x4122=((IkReal(10.8695652173913))*(pp));
IkReal x4123=((IkReal(21.7391304347826))*(npy));
IkReal x4124=((cj1)*(py));
IkReal x4125=((px)*(sj1));
IkReal x4126=((sj1)*(x4120));
IkReal x4127=((npx)*(x4120));
IkReal x4128=((sj1)*(x4121));
IkReal x4129=((npy)*(x4121));
IkReal x4130=((cj1)*(r11)*(x4121));
IkReal x4131=((cj1)*(r10)*(x4120));
evalcond[0]=((IkReal(0.00785425000000000))+(((IkReal(0.0910000000000000))*(x4127)))+(((IkReal(0.0910000000000000))*(x4129)))+(((IkReal(0.800000000000000))*(x4125)))+(((IkReal(-0.800000000000000))*(x4124)))+(((IkReal(0.0364000000000000))*(r01)*(x4128)))+(pp)+(((IkReal(0.0364000000000000))*(r00)*(x4126)))+(((IkReal(-0.0364000000000000))*(x4131)))+(((IkReal(-0.0364000000000000))*(x4130))));
evalcond[1]=((IkReal(0.00434782608695652))+(((IkReal(-3.39239402173913))*(r01)*(x4128)))+(((IkReal(21.7391304347826))*(x4124)*(x4127)))+(((IkReal(-21.7391304347826))*(x4125)*(x4127)))+(((IkReal(-1.00000000000000))*(x4122)*(x4131)))+(((IkReal(-1.00000000000000))*(x4122)*(x4130)))+(((IkReal(-0.0108695652173913))*(x4124)))+(((r00)*(x4122)*(x4126)))+(((IkReal(3.39239402173913))*(x4131)))+(((IkReal(3.39239402173913))*(x4130)))+(((IkReal(-3.39239402173913))*(r00)*(x4126)))+(((x4121)*(x4123)*(x4124)))+(((IkReal(0.0108695652173913))*(x4125)))+(((r01)*(x4122)*(x4128)))+(((IkReal(-1.00000000000000))*(x4121)*(x4123)*(x4125)))+(((IkReal(-8.69565217391304))*(x4129)))+(((IkReal(-8.69565217391304))*(x4127))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=((((IkReal(-2.50000000000000))*(cj6)*(npx)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(sj6)))+(((cj1)*(cj6)*(r10)))+(((r01)*(sj1)*(sj6)))+(((IkReal(2.50000000000000))*(npy)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj1))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x4132=((IkReal(0.400000000000000))*(sj1));
IkReal x4133=((IkReal(0.400000000000000))*(cj1));
IkReal x4134=((IKabs(((((IkReal(-1.00000000000000))*(cj6)*(npx)))+(((npy)*(sj6)))+(((cj6)*(r10)*(x4133)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x4132)))+(((r01)*(sj6)*(x4132)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x4133))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(cj6)*(npx)))+(((npy)*(sj6)))+(((cj6)*(r10)*(x4133)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x4132)))+(((r01)*(sj6)*(x4132)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x4133)))))):(IkReal)1.0e30);
j5array[0]=((IkReal(2.00000000000000))*(atan(((((IkReal(-0.390000000000000))*(x4134)))+(((IkReal(-1.00000000000000))*(r12)*(x4133)*(((IKabs(((((IkReal(-1.00000000000000))*(cj6)*(npx)))+(((npy)*(sj6)))+(((IkReal(-0.400000000000000))*(cj1)*(r11)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x4132)))+(((r01)*(sj6)*(x4132)))+(((IkReal(0.400000000000000))*(cj1)*(cj6)*(r10))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(cj6)*(npx)))+(((npy)*(sj6)))+(((IkReal(-0.400000000000000))*(cj1)*(r11)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x4132)))+(((r01)*(sj6)*(x4132)))+(((IkReal(0.400000000000000))*(cj1)*(cj6)*(r10)))))):(IkReal)1.0e30))))+(((r02)*(x4132)*(((IKabs(((((IkReal(0.400000000000000))*(r01)*(sj1)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(npx)))+(((npy)*(sj6)))+(((IkReal(-0.400000000000000))*(cj6)*(r00)*(sj1)))+(((cj6)*(r10)*(x4133)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x4133))))) != 0)?((IkReal)1/(((((IkReal(0.400000000000000))*(r01)*(sj1)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(npx)))+(((npy)*(sj6)))+(((IkReal(-0.400000000000000))*(cj6)*(r00)*(sj1)))+(((cj6)*(r10)*(x4133)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x4133)))))):(IkReal)1.0e30))))+(((npz)*(x4134)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];

{
IkReal dummyeval[1];
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[2], cj3array[2], sj3array[2];
bool j3valid[2]={false};
_nj3 = 2;
IkReal x4135=((sj1)*(sj5));
IkReal x4136=((cj1)*(sj5));
cj3array[0]=((((IKabs(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5)))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*((cj5)*(cj5))))+(((IkReal(-1.00000000000000))*((sj5)*(sj5))))))):(IkReal)1.0e30))*(((((IkReal(1.00000000000000))*(r11)*(sj6)*(x4136)))+(((IkReal(1.00000000000000))*(cj5)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(cj5)*(r12)))+(((IkReal(1.00000000000000))*(cj6)*(r00)*(x4135)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x4136)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x4135))))));
if( cj3array[0] >= -1-IKFAST_SINCOS_THRESH && cj3array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j3valid[0] = j3valid[1] = true;
    j3array[0] = IKacos(cj3array[0]);
    sj3array[0] = IKsin(j3array[0]);
    cj3array[1] = cj3array[0];
    j3array[1] = -j3array[0];
    sj3array[1] = -sj3array[0];
}
else if( isnan(cj3array[0]) )
{
    // probably any value will work
    j3valid[0] = true;
    cj3array[0] = 1; sj3array[0] = 0; j3array[0] = 0;
}
for(int ij3 = 0; ij3 < 2; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 2; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];

{
IkReal dummyeval[2];
dummyeval[0]=sj3;
dummyeval[1]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj3;
dummyeval[1]=cj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x4137=((IkReal(1.00000000000000))*(sj6));
IkReal x4138=((r02)*(sj1));
IkReal x4139=((IkReal(1.00000000000000))*(cj6));
IkReal x4140=((cj1)*(r11));
IkReal x4141=((IkReal(0.400000000000000))*(sj1));
IkReal x4142=((cj6)*(r01));
IkReal x4143=((r00)*(sj6));
IkReal x4144=((cj1)*(r12));
IkReal x4145=((r01)*(sj6));
IkReal x4146=((cj6)*(r00)*(sj1));
IkReal x4147=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x4148=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-0.390000000000000))*(cj5)))+(npz)+(((IkReal(-0.400000000000000))*(x4144)))+(((IkReal(0.400000000000000))*(x4138))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4138)))+(x4144)+(((IkReal(-1.00000000000000))*(cj5))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x4137)))+(((sj1)*(x4142)))+(((sj1)*(x4143)))+(((IkReal(-1.00000000000000))*(x4139)*(x4140))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x4137)))+(((IkReal(-1.00000000000000))*(npy)*(x4139)))+(((IkReal(-1.00000000000000))*(x4141)*(x4143)))+(((IkReal(-1.00000000000000))*(x4141)*(x4142)))+(((r10)*(x4147)))+(((IkReal(0.400000000000000))*(cj6)*(x4140))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x4139)))+(((sj1)*(x4145)))+(x4148)+(((IkReal(-1.00000000000000))*(x4137)*(x4140))));
evalcond[6]=((((IkReal(-0.390000000000000))*(sj5)))+(((IkReal(-1.00000000000000))*(npy)*(x4137)))+(((cj6)*(npx)))+(((cj6)*(r00)*(x4141)))+(((IkReal(-1.00000000000000))*(x4141)*(x4145)))+(((IkReal(-0.400000000000000))*(x4148)))+(((IkReal(0.400000000000000))*(sj6)*(x4140))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(sj6)))+(((cj6)*(r20)*(sj5))));
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
IkReal op[6+1], zeror[6];
int numroots;
IkReal j2evalpoly[4];
IkReal x4149=((IkReal(8.00000000000000))*(cj5));
IkReal x4150=((cj1)*(r02));
IkReal x4151=((r12)*(sj1));
IkReal x4152=((IkReal(16.0000000000000))*(sj5));
IkReal x4153=((IkReal(4.00000000000000))*(sj5));
IkReal x4154=((IkReal(16.0000000000000))*(cj5));
IkReal x4155=((IkReal(8.00000000000000))*(sj5));
IkReal x4156=((r11)*(sj1)*(sj6));
IkReal x4157=((cj1)*(cj6)*(r00));
IkReal x4158=((cj6)*(r10)*(sj1));
IkReal x4159=((r21)*(sj6)*(x4153));
IkReal x4160=((cj1)*(r01)*(sj5)*(sj6));
IkReal x4161=((((IkReal(4.00000000000000))*(cj5)*(r22)))+(((cj6)*(r20)*(x4153))));
IkReal x4162=((x4161)+(((IkReal(-1.00000000000000))*(x4159))));
IkReal x4163=((((IkReal(-1.00000000000000))*(x4161)))+(x4159));
IkReal x4164=((((IkReal(-1.00000000000000))*(x4155)*(x4157)))+(((IkReal(-1.00000000000000))*(x4155)*(x4158)))+(((x4155)*(x4156)))+(((cj1)*(r01)*(sj6)*(x4155)))+(((IkReal(-1.00000000000000))*(x4149)*(x4151)))+(((IkReal(-1.00000000000000))*(x4149)*(x4150))));
op[0]=x4162;
op[1]=x4164;
op[2]=x4162;
op[3]=((((x4152)*(x4156)))+(((IkReal(-1.00000000000000))*(x4150)*(x4154)))+(((IkReal(-1.00000000000000))*(x4152)*(x4158)))+(((IkReal(-1.00000000000000))*(x4152)*(x4157)))+(((IkReal(-1.00000000000000))*(x4151)*(x4154)))+(((cj1)*(r01)*(sj6)*(x4152))));
op[4]=x4163;
op[5]=x4164;
op[6]=x4163;
polyroots6(op,zeror,numroots);
IkReal j2array[6], cj2array[6], sj2array[6], tempj2array[1];
int numsolutions = 0;
for(int ij2 = 0; ij2 < numroots; ++ij2)
{
IkReal htj2 = zeror[ij2];
tempj2array[0]=((IkReal(2.00000000000000))*(atan(htj2)));
for(int kj2 = 0; kj2 < 1; ++kj2)
{
j2array[numsolutions] = tempj2array[kj2];
if( j2array[numsolutions] > IKPI )
{
    j2array[numsolutions]-=IK2PI;
}
else if( j2array[numsolutions] < -IKPI )
{
    j2array[numsolutions]+=IK2PI;
}
sj2array[numsolutions] = IKsin(j2array[numsolutions]);
cj2array[numsolutions] = IKcos(j2array[numsolutions]);
numsolutions++;
}
}
bool j2valid[6]={true,true,true,true,true,true};
_nj2 = 6;
for(int ij2 = 0; ij2 < numsolutions; ++ij2)
    {
if( !j2valid[ij2] )
{
    continue;
}
    j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
htj2 = IKtan(j2/2);

IkReal x4165=(htj2)*(htj2)*(htj2)*(htj2)*(htj2);
IkReal x4166=(cj5)*(cj5);
IkReal x4167=(htj2)*(htj2);
IkReal x4168=(htj2)*(htj2)*(htj2);
IkReal x4169=(htj2)*(htj2)*(htj2)*(htj2);
IkReal x4170=(htj2)*(htj2)*(htj2)*(htj2)*(htj2)*(htj2);
IkReal x4171=(sj5)*(sj5);
IkReal x4172=((cj1)*(r02));
IkReal x4173=((r11)*(sj1));
IkReal x4174=((IkReal(4.00000000000000))*(sj5));
IkReal x4175=((cj1)*(r01));
IkReal x4176=((IkReal(16.0000000000000))*(r20));
IkReal x4177=((IkReal(16.0000000000000))*(sj5));
IkReal x4178=((cj6)*(r21));
IkReal x4179=((cj5)*(cj6));
IkReal x4180=((r12)*(sj1));
IkReal x4181=((cj5)*(sj5));
IkReal x4182=((IkReal(4.00000000000000))*(r22));
IkReal x4183=((IkReal(8.00000000000000))*(r20));
IkReal x4184=((r10)*(sj1));
IkReal x4185=((IkReal(8.00000000000000))*(sj6));
IkReal x4186=((IkReal(8.00000000000000))*(sj5));
IkReal x4187=((cj5)*(sj6));
IkReal x4188=((cj1)*(r00));
IkReal x4189=((sj5)*(sj6));
IkReal x4190=((IkReal(16.0000000000000))*(x4166));
IkReal x4191=((IkReal(16.0000000000000))*(x4180));
IkReal x4192=((cj6)*(x4171));
IkReal x4193=((IkReal(8.00000000000000))*(x4188));
IkReal x4194=((sj6)*(x4171));
IkReal x4195=((IkReal(8.00000000000000))*(x4166));
IkReal x4196=((r21)*(x4174)*(x4187));
IkReal x4197=((IkReal(4.00000000000000))*(r21)*(x4194));
IkReal x4198=((((r20)*(x4174)*(x4179)))+(((x4166)*(x4182))));
IkReal x4199=((((cj5)*(r22)*(x4174)))+(((IkReal(4.00000000000000))*(r20)*(x4192))));
IkReal x4200=((((x4178)*(x4186)))+(((x4183)*(x4189)))+(((IkReal(-8.00000000000000))*(x4172)))+(((IkReal(-8.00000000000000))*(x4180))));
IkReal x4201=((((IkReal(-1.00000000000000))*(x4196)))+(x4198));
IkReal x4202=((((IkReal(-1.00000000000000))*(x4197)))+(x4199));
IkReal x4203=((((IkReal(-1.00000000000000))*(x4172)*(x4186)))+(((IkReal(-1.00000000000000))*(x4180)*(x4186)))+(((IkReal(8.00000000000000))*(x4171)*(x4178)))+(((x4183)*(x4194))));
IkReal x4204=((((sj6)*(x4174)*(x4184)))+(((sj6)*(x4174)*(x4188)))+(((cj6)*(x4173)*(x4174)))+(x4182)+(((cj6)*(x4174)*(x4175))));
IkReal x4205=((((IkReal(4.00000000000000))*(x4175)*(x4192)))+(((r22)*(x4174)))+(((IkReal(4.00000000000000))*(x4188)*(x4194)))+(((IkReal(4.00000000000000))*(x4173)*(x4192)))+(((IkReal(4.00000000000000))*(x4184)*(x4194))));
IkReal x4206=((((IkReal(-1.00000000000000))*(x4180)*(x4195)))+(((IkReal(-1.00000000000000))*(x4172)*(x4195)))+(((x4175)*(x4181)*(x4185)))+(((x4173)*(x4181)*(x4185)))+(((IkReal(-1.00000000000000))*(x4179)*(x4186)*(x4188)))+(((IkReal(-1.00000000000000))*(x4179)*(x4184)*(x4186))));
IkReal x4207=((((IkReal(-8.00000000000000))*(x4180)*(x4181)))+(((x4171)*(x4173)*(x4185)))+(((IkReal(-8.00000000000000))*(x4184)*(x4192)))+(((x4171)*(x4175)*(x4185)))+(((IkReal(-1.00000000000000))*(x4192)*(x4193)))+(((IkReal(-8.00000000000000))*(x4172)*(x4181))));
j2evalpoly[0]=((((x4168)*(((((IkReal(-1.00000000000000))*(x4191)))+(((x4177)*(x4178)))+(((IkReal(-16.0000000000000))*(x4172)))+(((x4176)*(x4189)))))))+(((x4170)*(x4204)))+(((x4165)*(x4200)))+(((htj2)*(x4200)))+(((IkReal(-1.00000000000000))*(x4204)))+(((IkReal(-1.00000000000000))*(x4167)*(x4204)))+(((x4169)*(x4204))));
j2evalpoly[1]=((((x4170)*(x4201)))+(((x4165)*(x4206)))+(((x4167)*(((((IkReal(-1.00000000000000))*(x4198)))+(x4196)))))+(((htj2)*(x4206)))+(((IkReal(-1.00000000000000))*(x4198)))+(x4196)+(((x4169)*(x4201)))+(((x4168)*(((((IkReal(-1.00000000000000))*(x4180)*(x4190)))+(((IkReal(-1.00000000000000))*(x4172)*(x4190)))+(((IkReal(-1.00000000000000))*(x4177)*(x4179)*(x4184)))+(((IkReal(-1.00000000000000))*(x4177)*(x4179)*(x4188)))+(((x4173)*(x4177)*(x4187)))+(((x4175)*(x4177)*(x4187))))))));
j2evalpoly[2]=((((x4170)*(x4202)))+(((x4165)*(x4207)))+(((htj2)*(x4207)))+(((IkReal(-1.00000000000000))*(x4199)))+(((x4168)*(((((IkReal(16.0000000000000))*(x4173)*(x4194)))+(((IkReal(-16.0000000000000))*(x4184)*(x4192)))+(((IkReal(16.0000000000000))*(x4175)*(x4194)))+(((IkReal(-16.0000000000000))*(x4188)*(x4192)))+(((IkReal(-1.00000000000000))*(cj5)*(x4172)*(x4177)))+(((IkReal(-1.00000000000000))*(cj5)*(x4177)*(x4180)))))))+(((x4167)*(((((IkReal(-1.00000000000000))*(x4199)))+(x4197)))))+(x4197)+(((x4169)*(x4202))));
j2evalpoly[3]=((((x4170)*(x4205)))+(((x4165)*(x4203)))+(((htj2)*(x4203)))+(((IkReal(-1.00000000000000))*(x4205)))+(((x4168)*(((((IkReal(-1.00000000000000))*(x4172)*(x4177)))+(((IkReal(-1.00000000000000))*(x4177)*(x4180)))+(((IkReal(16.0000000000000))*(x4171)*(x4178)))+(((x4176)*(x4194)))))))+(((IkReal(-1.00000000000000))*(x4167)*(x4205)))+(((x4169)*(x4205))));
if( IKabs(j2evalpoly[0]) > 0.0000001000000000  || IKabs(j2evalpoly[1]) > 0.0000001000000000  || IKabs(j2evalpoly[2]) > 0.0000001000000000  || IKabs(j2evalpoly[3]) > 0.0000001000000000  )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < numsolutions; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(sj5);
dummyeval[0]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj5;
dummyeval[1]=cj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x4208=((IkReal(1.00000000000000))*(sj6));
IkReal x4209=((IkReal(1.00000000000000))*(r02));
IkReal x4210=((cj1)*(r11));
IkReal x4211=((IkReal(1.00000000000000))*(cj6));
IkReal x4212=((IkReal(0.400000000000000))*(sj6));
IkReal x4213=((r00)*(sj1));
IkReal x4214=((cj1)*(r12));
IkReal x4215=((r12)*(sj1));
IkReal x4216=((r01)*(sj1));
IkReal x4217=((cj1)*(r10));
IkReal x4218=((cj6)*(x4213));
IkReal x4219=((cj6)*(x4216));
IkReal x4220=((cj6)*(x4217));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1)))+(((IkReal(-0.400000000000000))*(x4214))));
evalcond[2]=((((sj2)*(x4215)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(sj1)*(x4209)))+(x4214));
evalcond[4]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x4215)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(x4209))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x4210)*(x4211)))+(((sj6)*(x4213)))+(((IkReal(-1.00000000000000))*(x4208)*(x4217)))+(x4219));
evalcond[6]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(x4212)*(x4213)))+(((IkReal(0.400000000000000))*(cj6)*(x4210)))+(((x4212)*(x4217)))+(((IkReal(-1.00000000000000))*(npy)*(x4211)))+(((IkReal(-1.00000000000000))*(npx)*(x4208)))+(((IkReal(-0.400000000000000))*(x4219))));
evalcond[7]=((((sj6)*(x4216)))+(((IkReal(-1.00000000000000))*(x4208)*(x4210)))+(x4220)+(((IkReal(-1.00000000000000))*(x4211)*(x4213))));
evalcond[8]=((((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x4212)*(x4216)))+(((IkReal(0.400000000000000))*(x4218)))+(((IkReal(-0.400000000000000))*(x4220)))+(((x4210)*(x4212)))+(((IkReal(-1.00000000000000))*(npy)*(x4208))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4221=((sj2)*(sj6));
IkReal x4222=((r11)*(sj1));
IkReal x4223=((cj2)*(sj6));
IkReal x4224=((cj2)*(cj6));
IkReal x4225=((r10)*(sj1));
IkReal x4226=((IkReal(1.00000000000000))*(r20));
IkReal x4227=((cj6)*(sj2));
IkReal x4228=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((IkReal(-1.00000000000000))*(x4224)*(x4226)))+(((IkReal(-1.00000000000000))*(r00)*(x4227)*(x4228)))+(((cj1)*(r01)*(x4221)))+(((r21)*(x4223)))+(((x4221)*(x4222)))+(((IkReal(-1.00000000000000))*(x4225)*(x4227))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x4224)*(x4225)))+(((IkReal(-1.00000000000000))*(x4226)*(x4227)))+(((cj1)*(r00)*(x4224)))+(((r21)*(x4221)))+(((IkReal(-1.00000000000000))*(r01)*(x4223)*(x4228)))+(((IkReal(-1.00000000000000))*(x4222)*(x4223))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x4224)*(x4226)))+(((IkReal(-1.00000000000000))*(r00)*(x4227)*(x4228)))+(((cj1)*(r01)*(x4221)))+(((r21)*(x4223)))+(((x4221)*(x4222)))+(((IkReal(-1.00000000000000))*(x4225)*(x4227)))))+IKsqr(((((x4224)*(x4225)))+(((IkReal(-1.00000000000000))*(x4226)*(x4227)))+(((cj1)*(r00)*(x4224)))+(((r21)*(x4221)))+(((IkReal(-1.00000000000000))*(r01)*(x4223)*(x4228)))+(((IkReal(-1.00000000000000))*(x4222)*(x4223)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x4224)*(x4226)))+(((IkReal(-1.00000000000000))*(r00)*(x4227)*(x4228)))+(((cj1)*(r01)*(x4221)))+(((r21)*(x4223)))+(((x4221)*(x4222)))+(((IkReal(-1.00000000000000))*(x4225)*(x4227)))), ((((x4224)*(x4225)))+(((IkReal(-1.00000000000000))*(x4226)*(x4227)))+(((cj1)*(r00)*(x4224)))+(((r21)*(x4221)))+(((IkReal(-1.00000000000000))*(r01)*(x4223)*(x4228)))+(((IkReal(-1.00000000000000))*(x4222)*(x4223)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x4229=IKsin(j4);
IkReal x4230=IKcos(j4);
IkReal x4231=((cj2)*(sj6));
IkReal x4232=((cj1)*(r00));
IkReal x4233=((IkReal(1.00000000000000))*(r21));
IkReal x4234=((cj6)*(sj2));
IkReal x4235=((r10)*(sj1));
IkReal x4236=((cj2)*(cj6));
IkReal x4237=((cj1)*(r01));
IkReal x4238=((r11)*(sj1));
IkReal x4239=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((x4231)*(x4232)))+(((x4231)*(x4235)))+(((x4236)*(x4237)))+(((x4236)*(x4238)))+(((IkReal(-1.00000000000000))*(x4233)*(x4234)))+(x4229)+(((IkReal(-1.00000000000000))*(r20)*(x4239))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x4231)*(x4233)))+(((x4232)*(x4234)))+(((IkReal(-1.00000000000000))*(x4237)*(x4239)))+(((IkReal(-1.00000000000000))*(x4238)*(x4239)))+(x4229)+(((r20)*(x4236)))+(((x4234)*(x4235))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4232)*(x4239)))+(((IkReal(-1.00000000000000))*(x4234)*(x4237)))+(((IkReal(-1.00000000000000))*(x4234)*(x4238)))+(((IkReal(-1.00000000000000))*(x4230)))+(((IkReal(-1.00000000000000))*(x4233)*(x4236)))+(((IkReal(-1.00000000000000))*(r20)*(x4231)))+(((IkReal(-1.00000000000000))*(x4235)*(x4239))));
evalcond[3]=((((x4231)*(x4238)))+(((x4231)*(x4237)))+(((IkReal(-1.00000000000000))*(x4235)*(x4236)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x4233)))+(x4230)+(((IkReal(-1.00000000000000))*(x4232)*(x4236)))+(((r20)*(x4234))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x4240=((IkReal(1.00000000000000))*(sj6));
IkReal x4241=((IkReal(1.00000000000000))*(r02));
IkReal x4242=((cj1)*(r11));
IkReal x4243=((IkReal(1.00000000000000))*(cj6));
IkReal x4244=((IkReal(0.400000000000000))*(sj6));
IkReal x4245=((r00)*(sj1));
IkReal x4246=((cj1)*(r12));
IkReal x4247=((r12)*(sj1));
IkReal x4248=((r01)*(sj1));
IkReal x4249=((cj1)*(r10));
IkReal x4250=((cj6)*(x4245));
IkReal x4251=((cj6)*(x4248));
IkReal x4252=((cj6)*(x4249));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(npz)+(((IkReal(-0.400000000000000))*(x4246)))+(((IkReal(0.400000000000000))*(r02)*(sj1))));
evalcond[2]=((((cj2)*(r22)))+(((sj2)*(x4247)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(sj1)*(x4241)))+(x4246));
evalcond[4]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(x4241)))+(((IkReal(-1.00000000000000))*(cj2)*(x4247))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x4240)*(x4249)))+(((sj6)*(x4245)))+(x4251)+(((IkReal(-1.00000000000000))*(x4242)*(x4243))));
evalcond[6]=((IkReal(0.000500000000000000))+(((IkReal(0.400000000000000))*(cj6)*(x4242)))+(((IkReal(-1.00000000000000))*(x4244)*(x4245)))+(((IkReal(-1.00000000000000))*(npx)*(x4240)))+(((IkReal(-1.00000000000000))*(npy)*(x4243)))+(((x4244)*(x4249)))+(((IkReal(-0.400000000000000))*(x4251))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x4240)*(x4242)))+(((sj6)*(x4248)))+(((IkReal(-1.00000000000000))*(x4243)*(x4245)))+(x4252));
evalcond[8]=((((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x4244)*(x4248)))+(((IkReal(-1.00000000000000))*(npy)*(x4240)))+(((IkReal(0.400000000000000))*(x4250)))+(((x4242)*(x4244)))+(((IkReal(-0.400000000000000))*(x4252))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4253=((cj2)*(sj6));
IkReal x4254=((IkReal(1.00000000000000))*(sj1));
IkReal x4255=((r20)*(sj2));
IkReal x4256=((cj1)*(r01));
IkReal x4257=((cj2)*(cj6));
IkReal x4258=((r21)*(sj2));
IkReal x4259=((IkReal(1.00000000000000))*(cj1)*(r00));
if( IKabs(((((IkReal(-1.00000000000000))*(r10)*(x4253)*(x4254)))+(((IkReal(-1.00000000000000))*(x4253)*(x4259)))+(((IkReal(-1.00000000000000))*(r11)*(x4254)*(x4257)))+(((sj6)*(x4255)))+(((IkReal(-1.00000000000000))*(x4256)*(x4257)))+(((cj6)*(x4258))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x4257)*(x4259)))+(((IkReal(-1.00000000000000))*(sj6)*(x4258)))+(((r11)*(sj1)*(x4253)))+(((x4253)*(x4256)))+(((IkReal(-1.00000000000000))*(r10)*(x4254)*(x4257)))+(((cj6)*(x4255))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r10)*(x4253)*(x4254)))+(((IkReal(-1.00000000000000))*(x4253)*(x4259)))+(((IkReal(-1.00000000000000))*(r11)*(x4254)*(x4257)))+(((sj6)*(x4255)))+(((IkReal(-1.00000000000000))*(x4256)*(x4257)))+(((cj6)*(x4258)))))+IKsqr(((((IkReal(-1.00000000000000))*(x4257)*(x4259)))+(((IkReal(-1.00000000000000))*(sj6)*(x4258)))+(((r11)*(sj1)*(x4253)))+(((x4253)*(x4256)))+(((IkReal(-1.00000000000000))*(r10)*(x4254)*(x4257)))+(((cj6)*(x4255)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r10)*(x4253)*(x4254)))+(((IkReal(-1.00000000000000))*(x4253)*(x4259)))+(((IkReal(-1.00000000000000))*(r11)*(x4254)*(x4257)))+(((sj6)*(x4255)))+(((IkReal(-1.00000000000000))*(x4256)*(x4257)))+(((cj6)*(x4258)))), ((((IkReal(-1.00000000000000))*(x4257)*(x4259)))+(((IkReal(-1.00000000000000))*(sj6)*(x4258)))+(((r11)*(sj1)*(x4253)))+(((x4253)*(x4256)))+(((IkReal(-1.00000000000000))*(r10)*(x4254)*(x4257)))+(((cj6)*(x4255)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x4260=IKsin(j4);
IkReal x4261=((cj2)*(sj6));
IkReal x4262=((cj1)*(r00));
IkReal x4263=((IkReal(1.00000000000000))*(r21));
IkReal x4264=((cj6)*(sj2));
IkReal x4265=((r10)*(sj1));
IkReal x4266=((cj2)*(cj6));
IkReal x4267=((cj1)*(r01));
IkReal x4268=((r11)*(sj1));
IkReal x4269=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x4270=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((x4266)*(x4268)))+(((x4266)*(x4267)))+(((IkReal(-1.00000000000000))*(x4263)*(x4264)))+(((IkReal(-1.00000000000000))*(r20)*(x4270)))+(x4260)+(((x4261)*(x4265)))+(((x4261)*(x4262))));
evalcond[1]=((((x4264)*(x4265)))+(((IkReal(-1.00000000000000))*(x4261)*(x4263)))+(((x4262)*(x4264)))+(((r20)*(x4266)))+(((IkReal(-1.00000000000000))*(x4268)*(x4270)))+(((IkReal(-1.00000000000000))*(x4267)*(x4270)))+(((IkReal(-1.00000000000000))*(x4260))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4264)*(x4268)))+(((IkReal(-1.00000000000000))*(x4264)*(x4267)))+(((IkReal(-1.00000000000000))*(x4263)*(x4266)))+(((IkReal(-1.00000000000000))*(r20)*(x4261)))+(((IkReal(-1.00000000000000))*(x4262)*(x4270)))+(((IkReal(-1.00000000000000))*(x4265)*(x4270)))+(((IkReal(-1.00000000000000))*(x4269))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4262)*(x4266)))+(((IkReal(-1.00000000000000))*(x4265)*(x4266)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x4263)))+(((r20)*(x4264)))+(((IkReal(-1.00000000000000))*(x4269)))+(((x4261)*(x4267)))+(((x4261)*(x4268))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x4271=((IkReal(1.00000000000000))*(sj6));
IkReal x4272=((r02)*(sj1));
IkReal x4273=((cj1)*(cj6));
IkReal x4274=((cj6)*(sj1));
IkReal x4275=((IkReal(0.400000000000000))*(r01));
IkReal x4276=((IkReal(1.00000000000000))*(cj2));
IkReal x4277=((r11)*(sj1));
IkReal x4278=((cj2)*(sj6));
IkReal x4279=((cj1)*(r01));
IkReal x4280=((cj1)*(r12));
IkReal x4281=((cj6)*(r20));
IkReal x4282=((sj1)*(sj6));
IkReal x4283=((r00)*(x4274));
IkReal x4284=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x4285=((r00)*(x4282));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.400000000000000))*(x4272)))+(npz)+(((IkReal(-0.400000000000000))*(x4280))));
evalcond[2]=((x4280)+(((IkReal(-1.00000000000000))*(x4272))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x4271)))+(x4285)+(((IkReal(-1.00000000000000))*(r11)*(x4273)))+(((r01)*(x4274))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((IkReal(-1.00000000000000))*(x4274)*(x4275)))+(((IkReal(0.400000000000000))*(r11)*(x4273)))+(((r10)*(x4284)))+(((IkReal(-0.400000000000000))*(x4285)))+(((IkReal(-1.00000000000000))*(npx)*(x4271))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x4271)))+(((IkReal(-1.00000000000000))*(x4283)))+(((r01)*(x4282)))+(((r10)*(x4273))));
evalcond[6]=((IkReal(-0.390000000000000))+(((IkReal(-1.00000000000000))*(x4275)*(x4282)))+(((cj6)*(npx)))+(((r11)*(x4284)))+(((IkReal(0.400000000000000))*(x4283)))+(((IkReal(-0.400000000000000))*(r10)*(x4273)))+(((IkReal(-1.00000000000000))*(npy)*(x4271))));
evalcond[7]=((((cj2)*(x4281)))+(((r10)*(sj2)*(x4274)))+(((r00)*(sj2)*(x4273)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x4271)))+(((IkReal(-1.00000000000000))*(sj2)*(x4271)*(x4277)))+(((IkReal(-1.00000000000000))*(sj2)*(x4271)*(x4279))));
evalcond[8]=((((x4278)*(x4279)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x4271)))+(((IkReal(-1.00000000000000))*(r00)*(x4273)*(x4276)))+(((sj2)*(x4281)))+(((x4277)*(x4278)))+(((IkReal(-1.00000000000000))*(r10)*(x4274)*(x4276))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4286=((r12)*(sj1));
IkReal x4287=((cj1)*(r02));
IkReal x4288=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((sj2)*(x4286)))+(((sj2)*(x4287)))+(((cj2)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x4286)*(x4288)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x4287)*(x4288))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj2)*(x4286)))+(((sj2)*(x4287)))+(((cj2)*(r22)))))+IKsqr(((((IkReal(-1.00000000000000))*(x4286)*(x4288)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x4287)*(x4288)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((sj2)*(x4286)))+(((sj2)*(x4287)))+(((cj2)*(r22)))), ((((IkReal(-1.00000000000000))*(x4286)*(x4288)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x4287)*(x4288)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x4289=IKsin(j4);
IkReal x4290=((cj2)*(sj6));
IkReal x4291=((cj1)*(r00));
IkReal x4292=((sj1)*(sj2));
IkReal x4293=((IkReal(1.00000000000000))*(sj6));
IkReal x4294=((IkReal(1.00000000000000))*(cj1));
IkReal x4295=((cj6)*(r01));
IkReal x4296=((cj2)*(sj1));
IkReal x4297=((cj6)*(r11));
IkReal x4298=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x4299=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((((cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x4289)))+(((r12)*(x4292)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x4296)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x4294)))+(((IkReal(-1.00000000000000))*(x4298))));
evalcond[2]=((((cj1)*(cj2)*(x4295)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x4293)))+(x4289)+(((x4296)*(x4297)))+(((x4290)*(x4291)))+(((IkReal(-1.00000000000000))*(sj2)*(x4299)))+(((r10)*(sj1)*(x4290))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(x4291)*(x4293)))+(((IkReal(-1.00000000000000))*(r20)*(x4290)))+(((IkReal(-1.00000000000000))*(cj2)*(x4299)))+(((IkReal(-1.00000000000000))*(x4298)))+(((IkReal(-1.00000000000000))*(r10)*(x4292)*(x4293)))+(((IkReal(-1.00000000000000))*(sj2)*(x4294)*(x4295)))+(((IkReal(-1.00000000000000))*(x4292)*(x4297))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x4300=((IkReal(1.00000000000000))*(sj6));
IkReal x4301=((r02)*(sj1));
IkReal x4302=((cj1)*(cj6));
IkReal x4303=((cj6)*(sj1));
IkReal x4304=((IkReal(0.400000000000000))*(r01));
IkReal x4305=((IkReal(1.00000000000000))*(cj2));
IkReal x4306=((r11)*(sj1));
IkReal x4307=((cj2)*(sj6));
IkReal x4308=((cj1)*(r01));
IkReal x4309=((cj1)*(r12));
IkReal x4310=((cj6)*(r20));
IkReal x4311=((sj1)*(sj6));
IkReal x4312=((r00)*(x4303));
IkReal x4313=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x4314=((r00)*(x4311));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((npz)+(((IkReal(-0.400000000000000))*(x4309)))+(((IkReal(0.400000000000000))*(x4301))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4301)))+(x4309));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x4300)))+(x4314)+(((IkReal(-1.00000000000000))*(r11)*(x4302)))+(((r01)*(x4303))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(0.400000000000000))*(r11)*(x4302)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((IkReal(-0.400000000000000))*(x4314)))+(((r10)*(x4313)))+(((IkReal(-1.00000000000000))*(npx)*(x4300)))+(((IkReal(-1.00000000000000))*(x4303)*(x4304))));
evalcond[5]=((IkReal(1.00000000000000))+(((r01)*(x4311)))+(((r10)*(x4302)))+(((IkReal(-1.00000000000000))*(x4312)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x4300))));
evalcond[6]=((IkReal(0.390000000000000))+(((cj6)*(npx)))+(((r11)*(x4313)))+(((IkReal(-1.00000000000000))*(npy)*(x4300)))+(((IkReal(-0.400000000000000))*(r10)*(x4302)))+(((IkReal(0.400000000000000))*(x4312)))+(((IkReal(-1.00000000000000))*(x4304)*(x4311))));
evalcond[7]=((((cj2)*(x4310)))+(((r10)*(sj2)*(x4303)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x4300)))+(((IkReal(-1.00000000000000))*(sj2)*(x4300)*(x4308)))+(((IkReal(-1.00000000000000))*(sj2)*(x4300)*(x4306)))+(((r00)*(sj2)*(x4302))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r00)*(x4302)*(x4305)))+(((sj2)*(x4310)))+(((IkReal(-1.00000000000000))*(r10)*(x4303)*(x4305)))+(((x4307)*(x4308)))+(((x4306)*(x4307)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x4300))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4315=((r12)*(sj1));
IkReal x4316=((IkReal(1.00000000000000))*(sj2));
IkReal x4317=((cj1)*(r02));
if( IKabs(((((IkReal(-1.00000000000000))*(x4316)*(x4317)))+(((IkReal(-1.00000000000000))*(x4315)*(x4316)))+(((IkReal(-1.00000000000000))*(cj2)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r22)*(x4316)))+(((cj2)*(x4315)))+(((cj2)*(x4317))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x4316)*(x4317)))+(((IkReal(-1.00000000000000))*(x4315)*(x4316)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))))+IKsqr(((((IkReal(-1.00000000000000))*(r22)*(x4316)))+(((cj2)*(x4315)))+(((cj2)*(x4317)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x4316)*(x4317)))+(((IkReal(-1.00000000000000))*(x4315)*(x4316)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))), ((((IkReal(-1.00000000000000))*(r22)*(x4316)))+(((cj2)*(x4315)))+(((cj2)*(x4317)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x4318=IKsin(j4);
IkReal x4319=IKcos(j4);
IkReal x4320=((cj2)*(sj6));
IkReal x4321=((cj1)*(r00));
IkReal x4322=((sj1)*(sj2));
IkReal x4323=((IkReal(1.00000000000000))*(sj6));
IkReal x4324=((IkReal(1.00000000000000))*(cj1));
IkReal x4325=((cj6)*(r01));
IkReal x4326=((cj2)*(sj1));
IkReal x4327=((cj6)*(r11));
IkReal x4328=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((((r12)*(x4322)))+(((cj2)*(r22)))+(x4318)+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((r22)*(sj2)))+(x4319)+(((IkReal(-1.00000000000000))*(r12)*(x4326)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x4324))));
evalcond[2]=((((r10)*(sj1)*(x4320)))+(((x4326)*(x4327)))+(((IkReal(-1.00000000000000))*(sj2)*(x4328)))+(((cj1)*(cj2)*(x4325)))+(((x4320)*(x4321)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x4323)))+(x4318));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x4320)))+(((IkReal(-1.00000000000000))*(r10)*(x4322)*(x4323)))+(((IkReal(-1.00000000000000))*(x4322)*(x4327)))+(((IkReal(-1.00000000000000))*(sj2)*(x4324)*(x4325)))+(((IkReal(-1.00000000000000))*(sj2)*(x4321)*(x4323)))+(((IkReal(-1.00000000000000))*(cj2)*(x4328)))+(((IkReal(-1.00000000000000))*(x4319))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4329=((cj2)*(cj6));
IkReal x4330=((IkReal(1.00000000000000))*(cj2)*(sj6));
if( IKabs(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((r10)*(sj1)*(x4329)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x4330)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x4330)))+(((r21)*(sj2)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(sj2)))+(((cj1)*(r00)*(x4329))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))))))+IKsqr(((((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((r10)*(sj1)*(x4329)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x4330)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x4330)))+(((r21)*(sj2)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(sj2)))+(((cj1)*(r00)*(x4329)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))))), ((((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((r10)*(sj1)*(x4329)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x4330)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x4330)))+(((r21)*(sj2)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(sj2)))+(((cj1)*(r00)*(x4329)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x4331=IKsin(j4);
IkReal x4332=IKcos(j4);
IkReal x4333=((cj2)*(sj6));
IkReal x4334=((cj1)*(r00));
IkReal x4335=((IkReal(1.00000000000000))*(r21));
IkReal x4336=((cj6)*(sj2));
IkReal x4337=((cj1)*(r02));
IkReal x4338=((r10)*(sj1));
IkReal x4339=((cj2)*(cj6));
IkReal x4340=((cj1)*(r01));
IkReal x4341=((IkReal(1.00000000000000))*(cj2));
IkReal x4342=((r11)*(sj1));
IkReal x4343=((r12)*(sj1));
IkReal x4344=((IkReal(1.00000000000000))*(sj2)*(sj6));
IkReal x4345=((IkReal(1.00000000000000))*(x4332));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj5)*(x4331)))+(((sj2)*(x4343)))+(((sj2)*(x4337)))+(((cj2)*(r22))));
evalcond[1]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x4341)*(x4343)))+(((IkReal(-1.00000000000000))*(sj5)*(x4345)))+(((IkReal(-1.00000000000000))*(x4337)*(x4341))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x4344)))+(((x4339)*(x4340)))+(((x4339)*(x4342)))+(((x4333)*(x4334)))+(((x4333)*(x4338)))+(x4331)+(((IkReal(-1.00000000000000))*(x4335)*(x4336))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4333)*(x4335)))+(((r20)*(x4339)))+(((x4334)*(x4336)))+(((cj5)*(x4331)))+(((IkReal(-1.00000000000000))*(x4342)*(x4344)))+(((IkReal(-1.00000000000000))*(x4340)*(x4344)))+(((x4336)*(x4338))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(x4333)))+(((IkReal(-1.00000000000000))*(x4345)))+(((IkReal(-1.00000000000000))*(x4336)*(x4340)))+(((IkReal(-1.00000000000000))*(x4336)*(x4342)))+(((IkReal(-1.00000000000000))*(x4338)*(x4344)))+(((IkReal(-1.00000000000000))*(x4335)*(x4339)))+(((IkReal(-1.00000000000000))*(x4334)*(x4344))));
evalcond[5]=((((r20)*(x4336)))+(((cj5)*(x4332)))+(((IkReal(-1.00000000000000))*(x4338)*(x4339)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x4335)))+(((IkReal(-1.00000000000000))*(x4334)*(x4339)))+(((x4333)*(x4342)))+(((x4333)*(x4340))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4346=((IkReal(1.00000000000000))*(cj2)*(sj1));
IkReal x4347=((IkReal(1.00000000000000))*(cj1)*(cj2));
if( IKabs(((((IkReal(-1.00000000000000))*(r10)*(sj6)*(x4346)))+(((r20)*(sj2)*(sj6)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x4347)))+(((cj6)*(r21)*(sj2)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x4346)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x4347))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(x4347)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(r12)*(x4346))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r10)*(sj6)*(x4346)))+(((r20)*(sj2)*(sj6)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x4347)))+(((cj6)*(r21)*(sj2)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x4346)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x4347)))))+IKsqr(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(x4347)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(r12)*(x4346)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r10)*(sj6)*(x4346)))+(((r20)*(sj2)*(sj6)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x4347)))+(((cj6)*(r21)*(sj2)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x4346)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x4347)))), ((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(x4347)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(r12)*(x4346)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x4348=IKsin(j4);
IkReal x4349=IKcos(j4);
IkReal x4350=((cj2)*(sj6));
IkReal x4351=((cj1)*(r00));
IkReal x4352=((IkReal(1.00000000000000))*(r21));
IkReal x4353=((cj6)*(sj2));
IkReal x4354=((cj1)*(r02));
IkReal x4355=((r10)*(sj1));
IkReal x4356=((cj2)*(cj6));
IkReal x4357=((cj1)*(r01));
IkReal x4358=((IkReal(1.00000000000000))*(cj2));
IkReal x4359=((r11)*(sj1));
IkReal x4360=((r12)*(sj1));
IkReal x4361=((IkReal(1.00000000000000))*(sj2)*(sj6));
IkReal x4362=((IkReal(1.00000000000000))*(x4349));
evalcond[0]=((((sj2)*(x4354)))+(((sj2)*(x4360)))+(((cj2)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x4348))));
evalcond[1]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x4358)*(x4360)))+(((IkReal(-1.00000000000000))*(sj5)*(x4362)))+(((IkReal(-1.00000000000000))*(x4354)*(x4358))));
evalcond[2]=((((x4350)*(x4351)))+(((x4350)*(x4355)))+(((IkReal(-1.00000000000000))*(r20)*(x4361)))+(((IkReal(-1.00000000000000))*(x4352)*(x4353)))+(x4348)+(((x4356)*(x4359)))+(((x4356)*(x4357))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4357)*(x4361)))+(((r20)*(x4356)))+(((cj5)*(x4348)))+(((x4351)*(x4353)))+(((IkReal(-1.00000000000000))*(x4359)*(x4361)))+(((x4353)*(x4355)))+(((IkReal(-1.00000000000000))*(x4350)*(x4352))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(x4350)))+(((IkReal(-1.00000000000000))*(x4355)*(x4361)))+(((IkReal(-1.00000000000000))*(x4353)*(x4357)))+(((IkReal(-1.00000000000000))*(x4353)*(x4359)))+(((IkReal(-1.00000000000000))*(x4362)))+(((IkReal(-1.00000000000000))*(x4352)*(x4356)))+(((IkReal(-1.00000000000000))*(x4351)*(x4361))));
evalcond[5]=((((x4350)*(x4357)))+(((x4350)*(x4359)))+(((r20)*(x4353)))+(((cj5)*(x4349)))+(((IkReal(-1.00000000000000))*(x4351)*(x4356)))+(((IkReal(-1.00000000000000))*(x4355)*(x4356)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x4352))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4363=((r12)*(sj1));
IkReal x4364=((cj1)*(r02));
IkReal x4365=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((gconst2)*(((((sj2)*(x4364)))+(((sj2)*(x4363)))+(((cj2)*(r22))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x4364)*(x4365)))+(((IkReal(-1.00000000000000))*(x4363)*(x4365))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst2)*(((((sj2)*(x4364)))+(((sj2)*(x4363)))+(((cj2)*(r22)))))), ((gconst2)*(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x4364)*(x4365)))+(((IkReal(-1.00000000000000))*(x4363)*(x4365)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x4366=IKsin(j4);
IkReal x4367=IKcos(j4);
IkReal x4368=((cj2)*(sj6));
IkReal x4369=((cj1)*(r00));
IkReal x4370=((IkReal(1.00000000000000))*(r21));
IkReal x4371=((cj6)*(sj2));
IkReal x4372=((cj1)*(r02));
IkReal x4373=((r10)*(sj1));
IkReal x4374=((cj2)*(cj6));
IkReal x4375=((cj1)*(r01));
IkReal x4376=((IkReal(1.00000000000000))*(cj2));
IkReal x4377=((r11)*(sj1));
IkReal x4378=((r12)*(sj1));
IkReal x4379=((IkReal(1.00000000000000))*(sj2)*(sj6));
IkReal x4380=((IkReal(1.00000000000000))*(x4367));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj5)*(x4366)))+(((cj2)*(r22)))+(((sj2)*(x4378)))+(((sj2)*(x4372))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj5)*(x4380)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x4376)*(x4378)))+(((IkReal(-1.00000000000000))*(x4372)*(x4376))));
evalcond[2]=((((x4368)*(x4373)))+(((IkReal(-1.00000000000000))*(x4370)*(x4371)))+(((x4374)*(x4377)))+(((x4374)*(x4375)))+(((IkReal(-1.00000000000000))*(r20)*(x4379)))+(x4366)+(((x4368)*(x4369))));
evalcond[3]=((((x4371)*(x4373)))+(((IkReal(-1.00000000000000))*(x4375)*(x4379)))+(((IkReal(-1.00000000000000))*(x4377)*(x4379)))+(((r20)*(x4374)))+(((cj5)*(x4366)))+(((IkReal(-1.00000000000000))*(x4368)*(x4370)))+(((x4369)*(x4371))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x4370)*(x4374)))+(((IkReal(-1.00000000000000))*(x4371)*(x4375)))+(((IkReal(-1.00000000000000))*(x4371)*(x4377)))+(((IkReal(-1.00000000000000))*(x4373)*(x4379)))+(((IkReal(-1.00000000000000))*(r20)*(x4368)))+(((IkReal(-1.00000000000000))*(x4369)*(x4379)))+(((IkReal(-1.00000000000000))*(x4380))));
evalcond[5]=((((x4368)*(x4377)))+(((x4368)*(x4375)))+(((r20)*(x4371)))+(((IkReal(-1.00000000000000))*(x4369)*(x4374)))+(((cj5)*(x4367)))+(((IkReal(-1.00000000000000))*(x4373)*(x4374)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x4370))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
    }

}

}

} else
{
IkReal x4381=((IkReal(1.00000000000000))*(sj6));
IkReal x4382=((r02)*(sj1));
IkReal x4383=((IkReal(1.00000000000000))*(cj6));
IkReal x4384=((cj1)*(r11));
IkReal x4385=((IkReal(0.400000000000000))*(sj1));
IkReal x4386=((cj6)*(r01));
IkReal x4387=((r00)*(sj6));
IkReal x4388=((cj1)*(r12));
IkReal x4389=((r01)*(sj6));
IkReal x4390=((cj6)*(r00)*(sj1));
IkReal x4391=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x4392=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-0.390000000000000))*(cj5)))+(((IkReal(0.400000000000000))*(x4382)))+(npz)+(((IkReal(-0.400000000000000))*(x4388))));
evalcond[2]=((cj5)+(((IkReal(-1.00000000000000))*(x4382)))+(x4388));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x4381)))+(((sj1)*(x4386)))+(((sj1)*(x4387)))+(((IkReal(-1.00000000000000))*(x4383)*(x4384))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x4383)))+(((IkReal(-1.00000000000000))*(npx)*(x4381)))+(((IkReal(-1.00000000000000))*(x4385)*(x4387)))+(((IkReal(-1.00000000000000))*(x4385)*(x4386)))+(((r10)*(x4391)))+(((IkReal(0.400000000000000))*(cj6)*(x4384))));
evalcond[5]=((sj5)+(((IkReal(-1.00000000000000))*(x4381)*(x4384)))+(x4392)+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x4383)))+(((sj1)*(x4389))));
evalcond[6]=((((IkReal(-0.390000000000000))*(sj5)))+(((cj6)*(npx)))+(((IkReal(0.400000000000000))*(sj6)*(x4384)))+(((IkReal(-1.00000000000000))*(npy)*(x4381)))+(((cj6)*(r00)*(x4385)))+(((IkReal(-1.00000000000000))*(x4385)*(x4389)))+(((IkReal(-0.400000000000000))*(x4392))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(sj6)))+(((cj6)*(r20)*(sj5))));
if( IKabs(dummyeval[0]) < 0.0000001000000000  )
{
continue;

} else
{
IkReal op[6+1], zeror[6];
int numroots;
IkReal j2evalpoly[4];
IkReal x4393=((IkReal(8.00000000000000))*(cj5));
IkReal x4394=((cj1)*(r02));
IkReal x4395=((r12)*(sj1));
IkReal x4396=((IkReal(16.0000000000000))*(sj5));
IkReal x4397=((IkReal(4.00000000000000))*(sj5));
IkReal x4398=((IkReal(16.0000000000000))*(cj5));
IkReal x4399=((IkReal(8.00000000000000))*(sj5));
IkReal x4400=((r11)*(sj1)*(sj6));
IkReal x4401=((cj1)*(cj6)*(r00));
IkReal x4402=((cj6)*(r10)*(sj1));
IkReal x4403=((r21)*(sj6)*(x4397));
IkReal x4404=((cj1)*(r01)*(sj5)*(sj6));
IkReal x4405=((((IkReal(4.00000000000000))*(cj5)*(r22)))+(((cj6)*(r20)*(x4397))));
IkReal x4406=((x4405)+(((IkReal(-1.00000000000000))*(x4403))));
IkReal x4407=((x4403)+(((IkReal(-1.00000000000000))*(x4405))));
IkReal x4408=((((IkReal(-1.00000000000000))*(x4399)*(x4402)))+(((IkReal(-1.00000000000000))*(x4399)*(x4401)))+(((IkReal(-1.00000000000000))*(x4393)*(x4395)))+(((IkReal(-1.00000000000000))*(x4393)*(x4394)))+(((cj1)*(r01)*(sj6)*(x4399)))+(((x4399)*(x4400))));
op[0]=x4406;
op[1]=x4408;
op[2]=x4406;
op[3]=((((IkReal(-1.00000000000000))*(x4396)*(x4401)))+(((IkReal(-1.00000000000000))*(x4396)*(x4402)))+(((IkReal(-1.00000000000000))*(x4395)*(x4398)))+(((x4396)*(x4400)))+(((cj1)*(r01)*(sj6)*(x4396)))+(((IkReal(-1.00000000000000))*(x4394)*(x4398))));
op[4]=x4407;
op[5]=x4408;
op[6]=x4407;
polyroots6(op,zeror,numroots);
IkReal j2array[6], cj2array[6], sj2array[6], tempj2array[1];
int numsolutions = 0;
for(int ij2 = 0; ij2 < numroots; ++ij2)
{
IkReal htj2 = zeror[ij2];
tempj2array[0]=((IkReal(2.00000000000000))*(atan(htj2)));
for(int kj2 = 0; kj2 < 1; ++kj2)
{
j2array[numsolutions] = tempj2array[kj2];
if( j2array[numsolutions] > IKPI )
{
    j2array[numsolutions]-=IK2PI;
}
else if( j2array[numsolutions] < -IKPI )
{
    j2array[numsolutions]+=IK2PI;
}
sj2array[numsolutions] = IKsin(j2array[numsolutions]);
cj2array[numsolutions] = IKcos(j2array[numsolutions]);
numsolutions++;
}
}
bool j2valid[6]={true,true,true,true,true,true};
_nj2 = 6;
for(int ij2 = 0; ij2 < numsolutions; ++ij2)
    {
if( !j2valid[ij2] )
{
    continue;
}
    j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
htj2 = IKtan(j2/2);

IkReal x4409=((IkReal(4.00000000000000))*(r22));
IkReal x4410=(cj5)*(cj5);
IkReal x4411=(htj2)*(htj2)*(htj2);
IkReal x4412=(htj2)*(htj2)*(htj2)*(htj2)*(htj2);
IkReal x4413=(htj2)*(htj2)*(htj2)*(htj2);
IkReal x4414=(htj2)*(htj2)*(htj2)*(htj2)*(htj2)*(htj2);
IkReal x4415=(htj2)*(htj2);
IkReal x4416=(sj5)*(sj5);
IkReal x4417=((cj1)*(r02));
IkReal x4418=((IkReal(4.00000000000000))*(cj6));
IkReal x4419=((cj1)*(r01));
IkReal x4420=((IkReal(8.00000000000000))*(sj6));
IkReal x4421=((r12)*(sj1));
IkReal x4422=((IkReal(16.0000000000000))*(sj6));
IkReal x4423=((IkReal(16.0000000000000))*(sj5));
IkReal x4424=((cj6)*(r21));
IkReal x4425=((r10)*(sj1));
IkReal x4426=((cj5)*(sj5));
IkReal x4427=((r11)*(sj1));
IkReal x4428=((IkReal(8.00000000000000))*(cj6));
IkReal x4429=((cj1)*(r00));
IkReal x4430=((IkReal(4.00000000000000))*(sj6));
IkReal x4431=((r20)*(sj5));
IkReal x4432=((IkReal(8.00000000000000))*(sj5));
IkReal x4433=((cj5)*(cj6));
IkReal x4434=((sj5)*(x4409));
IkReal x4435=((IkReal(16.0000000000000))*(x4410));
IkReal x4436=((IkReal(16.0000000000000))*(x4416));
IkReal x4437=((IkReal(8.00000000000000))*(x4410));
IkReal x4438=((r20)*(x4416));
IkReal x4439=((x4409)*(x4410));
IkReal x4440=((x4409)*(x4426));
IkReal x4441=((x4416)*(x4427));
IkReal x4442=((x4416)*(x4430));
IkReal x4443=((r20)*(x4418)*(x4426));
IkReal x4444=((r21)*(x4426)*(x4430));
IkReal x4445=((x4418)*(x4438));
IkReal x4446=((r21)*(x4442));
IkReal x4447=((x4429)*(x4442));
IkReal x4448=((x4416)*(x4418)*(x4419));
IkReal x4449=((x4418)*(x4441));
IkReal x4450=((x4425)*(x4442));
IkReal x4451=((x4439)+(x4443));
IkReal x4452=((x4440)+(x4445));
IkReal x4453=((((IkReal(-1.00000000000000))*(x4451)))+(x4444));
IkReal x4454=((((IkReal(-1.00000000000000))*(x4452)))+(x4446));
IkReal x4455=((((IkReal(8.00000000000000))*(x4417)))+(((IkReal(8.00000000000000))*(x4421)))+(((x4420)*(x4431)))+(((x4424)*(x4432))));
IkReal x4456=((((IkReal(-8.00000000000000))*(x4416)*(x4424)))+(((IkReal(-1.00000000000000))*(x4417)*(x4432)))+(((IkReal(-1.00000000000000))*(x4421)*(x4432)))+(((IkReal(-1.00000000000000))*(x4420)*(x4438))));
IkReal x4457=((((sj5)*(x4425)*(x4430)))+(((sj5)*(x4418)*(x4427)))+(((sj5)*(x4429)*(x4430)))+(((sj5)*(x4418)*(x4419))));
IkReal x4458=((x4457)+(((IkReal(-1.00000000000000))*(x4409))));
IkReal x4459=((x4447)+(x4448)+(x4449)+(x4450));
IkReal x4460=((((IkReal(-1.00000000000000))*(x4459)))+(x4434));
IkReal x4461=((((IkReal(-1.00000000000000))*(x4419)*(x4420)*(x4426)))+(((x4426)*(x4428)*(x4429)))+(((x4421)*(x4437)))+(((x4417)*(x4437)))+(((x4425)*(x4426)*(x4428)))+(((IkReal(-1.00000000000000))*(x4420)*(x4426)*(x4427))));
IkReal x4462=((((x4416)*(x4425)*(x4428)))+(((IkReal(-1.00000000000000))*(x4416)*(x4419)*(x4420)))+(((IkReal(8.00000000000000))*(x4421)*(x4426)))+(((IkReal(-1.00000000000000))*(x4420)*(x4441)))+(((IkReal(8.00000000000000))*(x4417)*(x4426)))+(((x4416)*(x4428)*(x4429))));
j2evalpoly[0]=((((IkReal(-1.00000000000000))*(x4457)))+(((x4411)*(((((x4423)*(x4424)))+(((x4422)*(x4431)))+(((IkReal(16.0000000000000))*(x4417)))+(((IkReal(16.0000000000000))*(x4421)))))))+(x4409)+(((x4414)*(x4458)))+(((htj2)*(x4455)))+(((x4415)*(((((IkReal(-1.00000000000000))*(x4457)))+(x4409)))))+(((x4412)*(x4455)))+(((x4413)*(x4458))));
j2evalpoly[1]=((x4451)+(((IkReal(-1.00000000000000))*(x4444)))+(((htj2)*(x4461)))+(((x4414)*(x4453)))+(((x4412)*(x4461)))+(((x4413)*(x4453)))+(((x4415)*(((x4451)+(((IkReal(-1.00000000000000))*(x4444)))))))+(((x4411)*(((((x4423)*(x4429)*(x4433)))+(((IkReal(-1.00000000000000))*(x4422)*(x4426)*(x4427)))+(((x4421)*(x4435)))+(((x4417)*(x4435)))+(((IkReal(-1.00000000000000))*(x4419)*(x4422)*(x4426)))+(((x4423)*(x4425)*(x4433))))))));
j2evalpoly[2]=((x4452)+(((IkReal(-1.00000000000000))*(x4446)))+(((htj2)*(x4462)))+(((x4414)*(x4454)))+(((x4412)*(x4462)))+(((x4413)*(x4454)))+(((x4411)*(((((IkReal(-1.00000000000000))*(x4416)*(x4419)*(x4422)))+(((cj5)*(x4417)*(x4423)))+(((cj6)*(x4429)*(x4436)))+(((IkReal(-1.00000000000000))*(x4422)*(x4441)))+(((cj6)*(x4425)*(x4436)))+(((cj5)*(x4421)*(x4423)))))))+(((x4415)*(((x4452)+(((IkReal(-1.00000000000000))*(x4446))))))));
j2evalpoly[3]=((x4459)+(((IkReal(-1.00000000000000))*(x4434)))+(((htj2)*(x4456)))+(((x4413)*(x4460)))+(((x4411)*(((((IkReal(-1.00000000000000))*(x4417)*(x4423)))+(((IkReal(-1.00000000000000))*(x4422)*(x4438)))+(((IkReal(-1.00000000000000))*(x4421)*(x4423)))+(((IkReal(-1.00000000000000))*(x4424)*(x4436)))))))+(((x4412)*(x4456)))+(((x4415)*(((x4459)+(((IkReal(-1.00000000000000))*(x4434)))))))+(((x4414)*(x4460))));
if( IKabs(j2evalpoly[0]) > 0.0000001000000000  || IKabs(j2evalpoly[1]) > 0.0000001000000000  || IKabs(j2evalpoly[2]) > 0.0000001000000000  || IKabs(j2evalpoly[3]) > 0.0000001000000000  )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < numsolutions; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(sj5);
dummyeval[0]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj5;
dummyeval[1]=cj5;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x4463=((IkReal(1.00000000000000))*(sj6));
IkReal x4464=((IkReal(1.00000000000000))*(r02));
IkReal x4465=((cj1)*(r11));
IkReal x4466=((IkReal(1.00000000000000))*(cj6));
IkReal x4467=((IkReal(0.400000000000000))*(sj6));
IkReal x4468=((r00)*(sj1));
IkReal x4469=((cj1)*(r12));
IkReal x4470=((r12)*(sj1));
IkReal x4471=((r01)*(sj1));
IkReal x4472=((cj1)*(r10));
IkReal x4473=((cj6)*(x4468));
IkReal x4474=((cj6)*(x4471));
IkReal x4475=((cj6)*(x4472));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1)))+(((IkReal(-0.400000000000000))*(x4469))));
evalcond[2]=((((sj2)*(x4470)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((IkReal(1.00000000000000))+(x4469)+(((IkReal(-1.00000000000000))*(sj1)*(x4464))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj1)*(cj2)*(x4464)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x4470))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x4465)*(x4466)))+(x4474)+(((IkReal(-1.00000000000000))*(x4463)*(x4472)))+(((sj6)*(x4468))));
evalcond[6]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x4463)))+(((IkReal(-0.400000000000000))*(x4474)))+(((IkReal(-1.00000000000000))*(npy)*(x4466)))+(((x4467)*(x4472)))+(((IkReal(0.400000000000000))*(cj6)*(x4465)))+(((IkReal(-1.00000000000000))*(x4467)*(x4468))));
evalcond[7]=((((sj6)*(x4471)))+(((IkReal(-1.00000000000000))*(x4463)*(x4465)))+(x4475)+(((IkReal(-1.00000000000000))*(x4466)*(x4468))));
evalcond[8]=((((cj6)*(npx)))+(((IkReal(-0.400000000000000))*(x4475)))+(((IkReal(-1.00000000000000))*(npy)*(x4463)))+(((IkReal(0.400000000000000))*(x4473)))+(((IkReal(-1.00000000000000))*(x4467)*(x4471)))+(((x4465)*(x4467))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4476=((cj1)*(cj2));
IkReal x4477=((IkReal(1.00000000000000))*(cj6));
IkReal x4478=((r21)*(sj2));
IkReal x4479=((IkReal(1.00000000000000))*(sj6));
IkReal x4480=((r20)*(sj2));
IkReal x4481=((cj2)*(sj1));
IkReal x4482=((sj6)*(x4481));
if( IKabs(((((r00)*(sj6)*(x4476)))+(((r10)*(x4482)))+(((IkReal(-1.00000000000000))*(x4479)*(x4480)))+(((cj6)*(r01)*(x4476)))+(((cj6)*(r11)*(x4481)))+(((IkReal(-1.00000000000000))*(x4477)*(x4478))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r11)*(x4482)))+(((r01)*(sj6)*(x4476)))+(((IkReal(-1.00000000000000))*(r10)*(x4477)*(x4481)))+(((cj6)*(x4480)))+(((IkReal(-1.00000000000000))*(x4478)*(x4479)))+(((IkReal(-1.00000000000000))*(r00)*(x4476)*(x4477))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r00)*(sj6)*(x4476)))+(((r10)*(x4482)))+(((IkReal(-1.00000000000000))*(x4479)*(x4480)))+(((cj6)*(r01)*(x4476)))+(((cj6)*(r11)*(x4481)))+(((IkReal(-1.00000000000000))*(x4477)*(x4478)))))+IKsqr(((((r11)*(x4482)))+(((r01)*(sj6)*(x4476)))+(((IkReal(-1.00000000000000))*(r10)*(x4477)*(x4481)))+(((cj6)*(x4480)))+(((IkReal(-1.00000000000000))*(x4478)*(x4479)))+(((IkReal(-1.00000000000000))*(r00)*(x4476)*(x4477)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((r00)*(sj6)*(x4476)))+(((r10)*(x4482)))+(((IkReal(-1.00000000000000))*(x4479)*(x4480)))+(((cj6)*(r01)*(x4476)))+(((cj6)*(r11)*(x4481)))+(((IkReal(-1.00000000000000))*(x4477)*(x4478)))), ((((r11)*(x4482)))+(((r01)*(sj6)*(x4476)))+(((IkReal(-1.00000000000000))*(r10)*(x4477)*(x4481)))+(((cj6)*(x4480)))+(((IkReal(-1.00000000000000))*(x4478)*(x4479)))+(((IkReal(-1.00000000000000))*(r00)*(x4476)*(x4477)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x4483=IKsin(j4);
IkReal x4484=((cj2)*(sj6));
IkReal x4485=((cj1)*(r00));
IkReal x4486=((IkReal(1.00000000000000))*(r21));
IkReal x4487=((cj6)*(sj2));
IkReal x4488=((r10)*(sj1));
IkReal x4489=((cj2)*(cj6));
IkReal x4490=((cj1)*(r01));
IkReal x4491=((r11)*(sj1));
IkReal x4492=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x4493=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(x4483)))+(((IkReal(-1.00000000000000))*(x4486)*(x4487)))+(((x4484)*(x4488)))+(((x4484)*(x4485)))+(((IkReal(-1.00000000000000))*(r20)*(x4493)))+(((x4489)*(x4491)))+(((x4489)*(x4490))));
evalcond[1]=((((r20)*(x4489)))+(((IkReal(-1.00000000000000))*(x4484)*(x4486)))+(((x4487)*(x4488)))+(x4483)+(((x4485)*(x4487)))+(((IkReal(-1.00000000000000))*(x4490)*(x4493)))+(((IkReal(-1.00000000000000))*(x4491)*(x4493))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4486)*(x4489)))+(((IkReal(-1.00000000000000))*(r20)*(x4484)))+(((IkReal(-1.00000000000000))*(x4487)*(x4490)))+(((IkReal(-1.00000000000000))*(x4487)*(x4491)))+(((IkReal(-1.00000000000000))*(x4488)*(x4493)))+(((IkReal(-1.00000000000000))*(x4485)*(x4493)))+(((IkReal(-1.00000000000000))*(x4492))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4488)*(x4489)))+(((r20)*(x4487)))+(((x4484)*(x4491)))+(((x4484)*(x4490)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x4486)))+(((IkReal(-1.00000000000000))*(x4485)*(x4489)))+(((IkReal(-1.00000000000000))*(x4492))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x4494=((IkReal(1.00000000000000))*(sj6));
IkReal x4495=((IkReal(1.00000000000000))*(r02));
IkReal x4496=((cj1)*(r11));
IkReal x4497=((IkReal(1.00000000000000))*(cj6));
IkReal x4498=((IkReal(0.400000000000000))*(sj6));
IkReal x4499=((r00)*(sj1));
IkReal x4500=((cj1)*(r12));
IkReal x4501=((r12)*(sj1));
IkReal x4502=((r01)*(sj1));
IkReal x4503=((cj1)*(r10));
IkReal x4504=((cj6)*(x4499));
IkReal x4505=((cj6)*(x4502));
IkReal x4506=((cj6)*(x4503));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(npz)+(((IkReal(-0.400000000000000))*(x4500)))+(((IkReal(0.400000000000000))*(r02)*(sj1))));
evalcond[2]=((((cj2)*(r22)))+(((sj2)*(x4501)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(sj1)*(x4495)))+(x4500));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj1)*(cj2)*(x4495)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x4501))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x4494)*(x4503)))+(x4505)+(((IkReal(-1.00000000000000))*(x4496)*(x4497)))+(((sj6)*(x4499))));
evalcond[6]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x4494)))+(((x4498)*(x4503)))+(((IkReal(-1.00000000000000))*(npy)*(x4497)))+(((IkReal(0.400000000000000))*(cj6)*(x4496)))+(((IkReal(-1.00000000000000))*(x4498)*(x4499)))+(((IkReal(-0.400000000000000))*(x4505))));
evalcond[7]=((x4506)+(((sj6)*(x4502)))+(((IkReal(-1.00000000000000))*(x4497)*(x4499)))+(((IkReal(-1.00000000000000))*(x4494)*(x4496))));
evalcond[8]=((((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(x4494)))+(((IkReal(0.400000000000000))*(x4504)))+(((IkReal(-0.400000000000000))*(x4506)))+(((IkReal(-1.00000000000000))*(x4498)*(x4502)))+(((x4496)*(x4498))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4507=((cj1)*(cj2));
IkReal x4508=((sj2)*(sj6));
IkReal x4509=((IkReal(1.00000000000000))*(sj6));
IkReal x4510=((IkReal(1.00000000000000))*(cj6)*(sj2));
IkReal x4511=((cj2)*(r10)*(sj1));
IkReal x4512=((cj2)*(r11)*(sj1));
if( IKabs(((((r00)*(sj6)*(x4507)))+(((cj6)*(x4512)))+(((cj6)*(r01)*(x4507)))+(((IkReal(-1.00000000000000))*(r20)*(x4508)))+(((sj6)*(x4511)))+(((IkReal(-1.00000000000000))*(r21)*(x4510))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(x4511)))+(((r21)*(x4508)))+(((cj6)*(r00)*(x4507)))+(((IkReal(-1.00000000000000))*(r01)*(x4507)*(x4509)))+(((IkReal(-1.00000000000000))*(r20)*(x4510)))+(((IkReal(-1.00000000000000))*(x4509)*(x4512))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r00)*(sj6)*(x4507)))+(((cj6)*(x4512)))+(((cj6)*(r01)*(x4507)))+(((IkReal(-1.00000000000000))*(r20)*(x4508)))+(((sj6)*(x4511)))+(((IkReal(-1.00000000000000))*(r21)*(x4510)))))+IKsqr(((((cj6)*(x4511)))+(((r21)*(x4508)))+(((cj6)*(r00)*(x4507)))+(((IkReal(-1.00000000000000))*(r01)*(x4507)*(x4509)))+(((IkReal(-1.00000000000000))*(r20)*(x4510)))+(((IkReal(-1.00000000000000))*(x4509)*(x4512)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((r00)*(sj6)*(x4507)))+(((cj6)*(x4512)))+(((cj6)*(r01)*(x4507)))+(((IkReal(-1.00000000000000))*(r20)*(x4508)))+(((sj6)*(x4511)))+(((IkReal(-1.00000000000000))*(r21)*(x4510)))), ((((cj6)*(x4511)))+(((r21)*(x4508)))+(((cj6)*(r00)*(x4507)))+(((IkReal(-1.00000000000000))*(r01)*(x4507)*(x4509)))+(((IkReal(-1.00000000000000))*(r20)*(x4510)))+(((IkReal(-1.00000000000000))*(x4509)*(x4512)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x4513=IKcos(j4);
IkReal x4514=((cj2)*(sj6));
IkReal x4515=((cj1)*(r00));
IkReal x4516=((IkReal(1.00000000000000))*(r21));
IkReal x4517=((cj6)*(sj2));
IkReal x4518=((r10)*(sj1));
IkReal x4519=((cj2)*(cj6));
IkReal x4520=((cj1)*(r01));
IkReal x4521=((r11)*(sj1));
IkReal x4522=((IkReal(1.00000000000000))*(IKsin(j4)));
IkReal x4523=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(x4516)*(x4517)))+(((IkReal(-1.00000000000000))*(x4522)))+(((IkReal(-1.00000000000000))*(r20)*(x4523)))+(((x4519)*(x4520)))+(((x4519)*(x4521)))+(((x4514)*(x4515)))+(((x4514)*(x4518))));
evalcond[1]=((((x4517)*(x4518)))+(((IkReal(-1.00000000000000))*(x4522)))+(((r20)*(x4519)))+(((IkReal(-1.00000000000000))*(x4520)*(x4523)))+(((IkReal(-1.00000000000000))*(x4521)*(x4523)))+(((IkReal(-1.00000000000000))*(x4514)*(x4516)))+(((x4515)*(x4517))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4516)*(x4519)))+(((IkReal(-1.00000000000000))*(r20)*(x4514)))+(((IkReal(-1.00000000000000))*(x4513)))+(((IkReal(-1.00000000000000))*(x4518)*(x4523)))+(((IkReal(-1.00000000000000))*(x4515)*(x4523)))+(((IkReal(-1.00000000000000))*(x4517)*(x4520)))+(((IkReal(-1.00000000000000))*(x4517)*(x4521))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x4516)))+(x4513)+(((r20)*(x4517)))+(((x4514)*(x4520)))+(((x4514)*(x4521)))+(((IkReal(-1.00000000000000))*(x4518)*(x4519)))+(((IkReal(-1.00000000000000))*(x4515)*(x4519))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x4524=((IkReal(1.00000000000000))*(sj6));
IkReal x4525=((r02)*(sj1));
IkReal x4526=((cj1)*(cj6));
IkReal x4527=((cj6)*(sj1));
IkReal x4528=((IkReal(0.400000000000000))*(r01));
IkReal x4529=((IkReal(1.00000000000000))*(cj2));
IkReal x4530=((r11)*(sj1));
IkReal x4531=((cj2)*(sj6));
IkReal x4532=((cj1)*(r01));
IkReal x4533=((cj1)*(r12));
IkReal x4534=((cj6)*(r20));
IkReal x4535=((sj1)*(sj6));
IkReal x4536=((r00)*(x4527));
IkReal x4537=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x4538=((r00)*(x4535));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-0.400000000000000))*(x4533)))+(npz)+(((IkReal(0.400000000000000))*(x4525))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4525)))+(x4533));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x4524)))+(((r01)*(x4527)))+(((IkReal(-1.00000000000000))*(r11)*(x4526)))+(x4538));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x4524)))+(((IkReal(0.400000000000000))*(r11)*(x4526)))+(((IkReal(-0.400000000000000))*(x4538)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((r10)*(x4537)))+(((IkReal(-1.00000000000000))*(x4527)*(x4528))));
evalcond[5]=((IkReal(1.00000000000000))+(((r01)*(x4535)))+(((IkReal(-1.00000000000000))*(x4536)))+(((r10)*(x4526)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x4524))));
evalcond[6]=((IkReal(-0.390000000000000))+(((cj6)*(npx)))+(((IkReal(-0.400000000000000))*(r10)*(x4526)))+(((IkReal(-1.00000000000000))*(x4528)*(x4535)))+(((IkReal(0.400000000000000))*(x4536)))+(((r11)*(x4537)))+(((IkReal(-1.00000000000000))*(npy)*(x4524))));
evalcond[7]=((((r10)*(sj2)*(x4527)))+(((r00)*(sj2)*(x4526)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x4524)))+(((cj2)*(x4534)))+(((IkReal(-1.00000000000000))*(sj2)*(x4524)*(x4530)))+(((IkReal(-1.00000000000000))*(sj2)*(x4524)*(x4532))));
evalcond[8]=((((x4530)*(x4531)))+(((x4531)*(x4532)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x4524)))+(((IkReal(-1.00000000000000))*(r10)*(x4527)*(x4529)))+(((sj2)*(x4534)))+(((IkReal(-1.00000000000000))*(r00)*(x4526)*(x4529))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4539=((r12)*(sj1));
IkReal x4540=((cj1)*(r02));
if( IKabs(((((sj2)*(x4540)))+(((cj2)*(r22)))+(((sj2)*(x4539))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj2)*(x4540)))+(((cj2)*(x4539)))+(((IkReal(-1.00000000000000))*(r22)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj2)*(x4540)))+(((cj2)*(r22)))+(((sj2)*(x4539)))))+IKsqr(((((cj2)*(x4540)))+(((cj2)*(x4539)))+(((IkReal(-1.00000000000000))*(r22)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((sj2)*(x4540)))+(((cj2)*(r22)))+(((sj2)*(x4539)))), ((((cj2)*(x4540)))+(((cj2)*(x4539)))+(((IkReal(-1.00000000000000))*(r22)*(sj2)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x4541=IKcos(j4);
IkReal x4542=((cj2)*(sj6));
IkReal x4543=((cj1)*(r00));
IkReal x4544=((sj1)*(sj2));
IkReal x4545=((IkReal(1.00000000000000))*(sj6));
IkReal x4546=((IkReal(1.00000000000000))*(cj1));
IkReal x4547=((cj6)*(r01));
IkReal x4548=((cj2)*(sj1));
IkReal x4549=((cj6)*(r11));
IkReal x4550=((IkReal(1.00000000000000))*(IKsin(j4)));
IkReal x4551=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((((IkReal(-1.00000000000000))*(x4550)))+(((cj2)*(r22)))+(((r12)*(x4544)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((x4541)+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x4546)))+(((IkReal(-1.00000000000000))*(r12)*(x4548))));
evalcond[2]=((((cj1)*(cj2)*(x4547)))+(((x4542)*(x4543)))+(((IkReal(-1.00000000000000))*(x4550)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x4545)))+(((r10)*(sj1)*(x4542)))+(((x4548)*(x4549)))+(((IkReal(-1.00000000000000))*(sj2)*(x4551))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(x4546)*(x4547)))+(((IkReal(-1.00000000000000))*(r10)*(x4544)*(x4545)))+(((IkReal(-1.00000000000000))*(sj2)*(x4543)*(x4545)))+(((IkReal(-1.00000000000000))*(cj2)*(x4551)))+(((IkReal(-1.00000000000000))*(x4541)))+(((IkReal(-1.00000000000000))*(r20)*(x4542)))+(((IkReal(-1.00000000000000))*(x4544)*(x4549))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x4552=((IkReal(1.00000000000000))*(sj6));
IkReal x4553=((r02)*(sj1));
IkReal x4554=((cj1)*(cj6));
IkReal x4555=((cj6)*(sj1));
IkReal x4556=((IkReal(0.400000000000000))*(r01));
IkReal x4557=((IkReal(1.00000000000000))*(cj2));
IkReal x4558=((r11)*(sj1));
IkReal x4559=((cj2)*(sj6));
IkReal x4560=((cj1)*(r01));
IkReal x4561=((cj1)*(r12));
IkReal x4562=((cj6)*(r20));
IkReal x4563=((sj1)*(sj6));
IkReal x4564=((r00)*(x4555));
IkReal x4565=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x4566=((r00)*(x4563));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.400000000000000))*(x4553)))+(npz)+(((IkReal(-0.400000000000000))*(x4561))));
evalcond[2]=((x4561)+(((IkReal(-1.00000000000000))*(x4553))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x4552)))+(((r01)*(x4555)))+(x4566)+(((IkReal(-1.00000000000000))*(r11)*(x4554))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(0.400000000000000))*(r11)*(x4554)))+(((r10)*(x4565)))+(((IkReal(-1.00000000000000))*(x4555)*(x4556)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((IkReal(-0.400000000000000))*(x4566)))+(((IkReal(-1.00000000000000))*(npx)*(x4552))));
evalcond[5]=((IkReal(-1.00000000000000))+(((r10)*(x4554)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x4552)))+(((r01)*(x4563)))+(((IkReal(-1.00000000000000))*(x4564))));
evalcond[6]=((IkReal(0.390000000000000))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x4556)*(x4563)))+(((r11)*(x4565)))+(((IkReal(0.400000000000000))*(x4564)))+(((IkReal(-1.00000000000000))*(npy)*(x4552)))+(((IkReal(-0.400000000000000))*(r10)*(x4554))));
evalcond[7]=((((IkReal(-1.00000000000000))*(cj2)*(r21)*(x4552)))+(((IkReal(-1.00000000000000))*(sj2)*(x4552)*(x4558)))+(((IkReal(-1.00000000000000))*(sj2)*(x4552)*(x4560)))+(((r00)*(sj2)*(x4554)))+(((r10)*(sj2)*(x4555)))+(((cj2)*(x4562))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r00)*(x4554)*(x4557)))+(((sj2)*(x4562)))+(((x4558)*(x4559)))+(((IkReal(-1.00000000000000))*(r10)*(x4555)*(x4557)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x4552)))+(((x4559)*(x4560))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4567=((IkReal(1.00000000000000))*(sj2));
IkReal x4568=((r12)*(sj1));
IkReal x4569=((cj1)*(r02));
IkReal x4570=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IkReal(-1.00000000000000))*(x4567)*(x4569)))+(((IkReal(-1.00000000000000))*(x4567)*(x4568)))+(((IkReal(-1.00000000000000))*(r22)*(x4570))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x4569)*(x4570)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x4568)*(x4570))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x4567)*(x4569)))+(((IkReal(-1.00000000000000))*(x4567)*(x4568)))+(((IkReal(-1.00000000000000))*(r22)*(x4570)))))+IKsqr(((((IkReal(-1.00000000000000))*(x4569)*(x4570)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x4568)*(x4570)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x4567)*(x4569)))+(((IkReal(-1.00000000000000))*(x4567)*(x4568)))+(((IkReal(-1.00000000000000))*(r22)*(x4570)))), ((((IkReal(-1.00000000000000))*(x4569)*(x4570)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x4568)*(x4570)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x4571=IKsin(j4);
IkReal x4572=((cj2)*(sj6));
IkReal x4573=((cj1)*(r00));
IkReal x4574=((sj1)*(sj2));
IkReal x4575=((IkReal(1.00000000000000))*(sj6));
IkReal x4576=((IkReal(1.00000000000000))*(cj1));
IkReal x4577=((cj6)*(r01));
IkReal x4578=((cj2)*(sj1));
IkReal x4579=((cj6)*(r11));
IkReal x4580=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x4581=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((((r12)*(x4574)))+(x4571)+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x4580)))+(((IkReal(-1.00000000000000))*(r12)*(x4578)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x4576))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(sj2)*(x4575)))+(((r10)*(sj1)*(x4572)))+(((IkReal(-1.00000000000000))*(sj2)*(x4581)))+(((IkReal(-1.00000000000000))*(x4571)))+(((x4572)*(x4573)))+(((x4578)*(x4579)))+(((cj1)*(cj2)*(x4577))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4580)))+(((IkReal(-1.00000000000000))*(x4574)*(x4579)))+(((IkReal(-1.00000000000000))*(sj2)*(x4576)*(x4577)))+(((IkReal(-1.00000000000000))*(r20)*(x4572)))+(((IkReal(-1.00000000000000))*(r10)*(x4574)*(x4575)))+(((IkReal(-1.00000000000000))*(cj2)*(x4581)))+(((IkReal(-1.00000000000000))*(sj2)*(x4573)*(x4575))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4582=((cj2)*(sj6));
IkReal x4583=((IkReal(1.00000000000000))*(cj2)*(cj6));
if( IKabs(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((cj1)*(r01)*(x4582)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x4583)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x4583)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(sj6)))+(((cj6)*(r20)*(sj2)))+(((r11)*(sj1)*(x4582))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))))))+IKsqr(((((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((cj1)*(r01)*(x4582)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x4583)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x4583)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(sj6)))+(((cj6)*(r20)*(sj2)))+(((r11)*(sj1)*(x4582)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))))), ((((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((cj1)*(r01)*(x4582)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x4583)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x4583)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(sj6)))+(((cj6)*(r20)*(sj2)))+(((r11)*(sj1)*(x4582)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x4584=IKsin(j4);
IkReal x4585=IKcos(j4);
IkReal x4586=((cj2)*(sj6));
IkReal x4587=((cj1)*(r00));
IkReal x4588=((IkReal(1.00000000000000))*(r21));
IkReal x4589=((cj6)*(sj2));
IkReal x4590=((cj1)*(r02));
IkReal x4591=((r10)*(sj1));
IkReal x4592=((cj2)*(cj6));
IkReal x4593=((cj1)*(r01));
IkReal x4594=((IkReal(1.00000000000000))*(cj2));
IkReal x4595=((r11)*(sj1));
IkReal x4596=((r12)*(sj1));
IkReal x4597=((IkReal(1.00000000000000))*(sj2)*(sj6));
IkReal x4598=((IkReal(1.00000000000000))*(x4585));
IkReal x4599=((IkReal(1.00000000000000))*(x4584));
evalcond[0]=((((cj2)*(r22)))+(((sj2)*(x4596)))+(((sj2)*(x4590)))+(((IkReal(-1.00000000000000))*(sj5)*(x4599))));
evalcond[1]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x4594)*(x4596)))+(((sj5)*(x4585)))+(((IkReal(-1.00000000000000))*(x4590)*(x4594))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4599)))+(((IkReal(-1.00000000000000))*(x4588)*(x4589)))+(((IkReal(-1.00000000000000))*(r20)*(x4597)))+(((x4586)*(x4587)))+(((x4586)*(x4591)))+(((x4592)*(x4595)))+(((x4592)*(x4593))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4595)*(x4597)))+(((cj5)*(x4584)))+(((IkReal(-1.00000000000000))*(x4593)*(x4597)))+(((x4589)*(x4591)))+(((IkReal(-1.00000000000000))*(x4586)*(x4588)))+(((r20)*(x4592)))+(((x4587)*(x4589))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x4589)*(x4593)))+(((IkReal(-1.00000000000000))*(x4589)*(x4595)))+(((IkReal(-1.00000000000000))*(x4598)))+(((IkReal(-1.00000000000000))*(x4587)*(x4597)))+(((IkReal(-1.00000000000000))*(r20)*(x4586)))+(((IkReal(-1.00000000000000))*(x4591)*(x4597)))+(((IkReal(-1.00000000000000))*(x4588)*(x4592))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj5)*(x4598)))+(((IkReal(-1.00000000000000))*(x4587)*(x4592)))+(((r20)*(x4589)))+(((IkReal(-1.00000000000000))*(x4591)*(x4592)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x4588)))+(((x4586)*(x4593)))+(((x4586)*(x4595))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4600=((cj1)*(cj2));
IkReal x4601=((cj2)*(sj1));
IkReal x4602=((IkReal(1.00000000000000))*(sj2));
if( IKabs(((((cj6)*(r01)*(x4600)))+(((r00)*(sj6)*(x4600)))+(((cj6)*(r11)*(x4601)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x4602)))+(((r10)*(sj6)*(x4601)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x4602))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r12)*(x4601)))+(((r02)*(x4600)))+(((IkReal(-1.00000000000000))*(r22)*(x4602))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj6)*(r01)*(x4600)))+(((r00)*(sj6)*(x4600)))+(((cj6)*(r11)*(x4601)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x4602)))+(((r10)*(sj6)*(x4601)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x4602)))))+IKsqr(((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r12)*(x4601)))+(((r02)*(x4600)))+(((IkReal(-1.00000000000000))*(r22)*(x4602)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((cj6)*(r01)*(x4600)))+(((r00)*(sj6)*(x4600)))+(((cj6)*(r11)*(x4601)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x4602)))+(((r10)*(sj6)*(x4601)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x4602)))), ((((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((r12)*(x4601)))+(((r02)*(x4600)))+(((IkReal(-1.00000000000000))*(r22)*(x4602)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x4603=IKsin(j4);
IkReal x4604=IKcos(j4);
IkReal x4605=((cj2)*(sj6));
IkReal x4606=((cj1)*(r00));
IkReal x4607=((IkReal(1.00000000000000))*(r21));
IkReal x4608=((cj6)*(sj2));
IkReal x4609=((cj1)*(r02));
IkReal x4610=((r10)*(sj1));
IkReal x4611=((cj2)*(cj6));
IkReal x4612=((cj1)*(r01));
IkReal x4613=((IkReal(1.00000000000000))*(cj2));
IkReal x4614=((r11)*(sj1));
IkReal x4615=((r12)*(sj1));
IkReal x4616=((IkReal(1.00000000000000))*(sj2)*(sj6));
IkReal x4617=((IkReal(1.00000000000000))*(x4604));
IkReal x4618=((IkReal(1.00000000000000))*(x4603));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj5)*(x4618)))+(((sj2)*(x4615)))+(((cj2)*(r22)))+(((sj2)*(x4609))));
evalcond[1]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x4609)*(x4613)))+(((sj5)*(x4604)))+(((IkReal(-1.00000000000000))*(x4613)*(x4615))));
evalcond[2]=((((x4605)*(x4610)))+(((x4605)*(x4606)))+(((IkReal(-1.00000000000000))*(r20)*(x4616)))+(((x4611)*(x4612)))+(((x4611)*(x4614)))+(((IkReal(-1.00000000000000))*(x4618)))+(((IkReal(-1.00000000000000))*(x4607)*(x4608))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4612)*(x4616)))+(((r20)*(x4611)))+(((cj5)*(x4603)))+(((x4608)*(x4610)))+(((x4606)*(x4608)))+(((IkReal(-1.00000000000000))*(x4614)*(x4616)))+(((IkReal(-1.00000000000000))*(x4605)*(x4607))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(x4605)))+(((IkReal(-1.00000000000000))*(x4608)*(x4614)))+(((IkReal(-1.00000000000000))*(x4608)*(x4612)))+(((IkReal(-1.00000000000000))*(x4606)*(x4616)))+(((IkReal(-1.00000000000000))*(x4607)*(x4611)))+(((IkReal(-1.00000000000000))*(x4617)))+(((IkReal(-1.00000000000000))*(x4610)*(x4616))));
evalcond[5]=((((x4605)*(x4612)))+(((x4605)*(x4614)))+(((IkReal(-1.00000000000000))*(x4610)*(x4611)))+(((IkReal(-1.00000000000000))*(cj5)*(x4617)))+(((r20)*(x4608)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x4607)))+(((IkReal(-1.00000000000000))*(x4606)*(x4611))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4619=((r12)*(sj1));
IkReal x4620=((cj1)*(r02));
if( IKabs(((gconst3)*(((((sj2)*(x4619)))+(((sj2)*(x4620)))+(((cj2)*(r22))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((cj2)*(x4620)))+(((cj2)*(x4619)))+(((IkReal(-1.00000000000000))*(r22)*(sj2))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(((((sj2)*(x4619)))+(((sj2)*(x4620)))+(((cj2)*(r22)))))), ((gconst3)*(((((cj2)*(x4620)))+(((cj2)*(x4619)))+(((IkReal(-1.00000000000000))*(r22)*(sj2)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x4621=IKsin(j4);
IkReal x4622=IKcos(j4);
IkReal x4623=((cj2)*(sj6));
IkReal x4624=((cj1)*(r00));
IkReal x4625=((IkReal(1.00000000000000))*(r21));
IkReal x4626=((cj6)*(sj2));
IkReal x4627=((cj1)*(r02));
IkReal x4628=((r10)*(sj1));
IkReal x4629=((cj2)*(cj6));
IkReal x4630=((cj1)*(r01));
IkReal x4631=((IkReal(1.00000000000000))*(cj2));
IkReal x4632=((r11)*(sj1));
IkReal x4633=((r12)*(sj1));
IkReal x4634=((IkReal(1.00000000000000))*(sj2)*(sj6));
IkReal x4635=((IkReal(1.00000000000000))*(x4622));
IkReal x4636=((IkReal(1.00000000000000))*(x4621));
evalcond[0]=((((sj2)*(x4627)))+(((cj2)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x4636)))+(((sj2)*(x4633))));
evalcond[1]=((((sj5)*(x4622)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x4631)*(x4633)))+(((IkReal(-1.00000000000000))*(x4627)*(x4631))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4636)))+(((x4623)*(x4624)))+(((x4623)*(x4628)))+(((IkReal(-1.00000000000000))*(r20)*(x4634)))+(((IkReal(-1.00000000000000))*(x4625)*(x4626)))+(((x4629)*(x4632)))+(((x4629)*(x4630))));
evalcond[3]=((((x4624)*(x4626)))+(((r20)*(x4629)))+(((IkReal(-1.00000000000000))*(x4630)*(x4634)))+(((cj5)*(x4621)))+(((IkReal(-1.00000000000000))*(x4623)*(x4625)))+(((IkReal(-1.00000000000000))*(x4632)*(x4634)))+(((x4626)*(x4628))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x4635)))+(((IkReal(-1.00000000000000))*(x4624)*(x4634)))+(((IkReal(-1.00000000000000))*(x4625)*(x4629)))+(((IkReal(-1.00000000000000))*(x4628)*(x4634)))+(((IkReal(-1.00000000000000))*(r20)*(x4623)))+(((IkReal(-1.00000000000000))*(x4626)*(x4632)))+(((IkReal(-1.00000000000000))*(x4626)*(x4630))));
evalcond[5]=((((r20)*(x4626)))+(((IkReal(-1.00000000000000))*(x4628)*(x4629)))+(((IkReal(-1.00000000000000))*(x4624)*(x4629)))+(((x4623)*(x4632)))+(((x4623)*(x4630)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x4625)))+(((IkReal(-1.00000000000000))*(cj5)*(x4635))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
    }

}

}

} else
{
IkReal x4637=((IkReal(0.400000000000000))*(cj6));
IkReal x4638=((r00)*(sj1));
IkReal x4639=((IkReal(1.00000000000000))*(cj6));
IkReal x4640=((cj1)*(r11));
IkReal x4641=((IkReal(0.400000000000000))*(sj1));
IkReal x4642=((cj1)*(r10));
IkReal x4643=((IkReal(1.00000000000000))*(sj6));
IkReal x4644=((IkReal(0.400000000000000))*(sj6));
IkReal x4645=((r01)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(x4641)))+(npz)+(((IkReal(-0.400000000000000))*(cj1)*(r12))));
evalcond[2]=((IkReal(0.000500000000000000))+(((x4642)*(x4644)))+(((IkReal(-1.00000000000000))*(npy)*(x4639)))+(((x4637)*(x4640)))+(((IkReal(-1.00000000000000))*(x4638)*(x4644)))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x4637)))+(((IkReal(-1.00000000000000))*(npx)*(x4643))));
evalcond[3]=((((cj6)*(x4642)))+(((IkReal(-1.00000000000000))*(x4640)*(x4643)))+(((sj1)*(x4645)))+(((IkReal(-1.00000000000000))*(cj3)))+(((IkReal(-1.00000000000000))*(x4638)*(x4639))));
evalcond[4]=((IkReal(-0.390000000000000))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x4637)*(x4642)))+(((IkReal(-1.00000000000000))*(x4641)*(x4645)))+(((x4637)*(x4638)))+(((IkReal(-1.00000000000000))*(npy)*(x4643)))+(((x4640)*(x4644))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
IkReal x4646=(sj1)*(sj1);
IkReal x4647=(sj6)*(sj6);
IkReal x4648=(cj1)*(cj1);
IkReal x4649=(cj6)*(cj6);
IkReal x4650=((IkReal(2.00000000000000))*(r11));
IkReal x4651=((cj1)*(sj1));
IkReal x4652=((IkReal(2.00000000000000))*(r00));
IkReal x4653=((cj6)*(sj6));
IkReal x4654=((r10)*(x4653));
IkReal x4655=((IkReal(1.00000000000000))*(x4647));
IkReal x4656=((IkReal(1.00000000000000))*(x4649));
gconst4=IKsign(((((IkReal(-1.00000000000000))*(x4655)*((r21)*(r21))))+(((IkReal(-1.00000000000000))*(x4646)*(x4656)*((r10)*(r10))))+(((IkReal(2.00000000000000))*(r01)*(x4651)*(x4654)))+(((r00)*(x4650)*(x4651)*(x4653)))+(((x4646)*(x4650)*(x4654)))+(((r01)*(x4648)*(x4652)*(x4653)))+(((IkReal(-1.00000000000000))*(r10)*(x4649)*(x4651)*(x4652)))+(((IkReal(-1.00000000000000))*(x4656)*((r20)*(r20))))+(((IkReal(-1.00000000000000))*(x4648)*(x4656)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x4646)*(x4655)*((r11)*(r11))))+(((IkReal(2.00000000000000))*(r20)*(r21)*(x4653)))+(((IkReal(-1.00000000000000))*(x4648)*(x4655)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r01)*(x4647)*(x4650)*(x4651)))));
IkReal x4657=(sj1)*(sj1);
IkReal x4658=(sj6)*(sj6);
IkReal x4659=(cj1)*(cj1);
IkReal x4660=(cj6)*(cj6);
IkReal x4661=((IkReal(2.00000000000000))*(r11));
IkReal x4662=((cj1)*(sj1));
IkReal x4663=((IkReal(2.00000000000000))*(r00));
IkReal x4664=((cj6)*(sj6));
IkReal x4665=((r10)*(x4664));
IkReal x4666=((IkReal(1.00000000000000))*(x4658));
IkReal x4667=((IkReal(1.00000000000000))*(x4660));
dummyeval[0]=((((IkReal(2.00000000000000))*(r20)*(r21)*(x4664)))+(((x4657)*(x4661)*(x4665)))+(((IkReal(2.00000000000000))*(r01)*(x4662)*(x4665)))+(((r01)*(x4659)*(x4663)*(x4664)))+(((IkReal(-1.00000000000000))*(x4666)*((r21)*(r21))))+(((IkReal(-1.00000000000000))*(x4659)*(x4667)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x4657)*(x4667)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r01)*(x4658)*(x4661)*(x4662)))+(((r00)*(x4661)*(x4662)*(x4664)))+(((IkReal(-1.00000000000000))*(x4667)*((r20)*(r20))))+(((IkReal(-1.00000000000000))*(r10)*(x4660)*(x4662)*(x4663)))+(((IkReal(-1.00000000000000))*(x4659)*(x4666)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x4657)*(x4666)*((r11)*(r11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x4668=((IkReal(1.00000000000000))*(sj6));
IkReal x4669=((r02)*(sj1));
IkReal x4670=((IkReal(1.00000000000000))*(cj6));
IkReal x4671=((cj1)*(r11));
IkReal x4672=((IkReal(0.400000000000000))*(sj1));
IkReal x4673=((cj6)*(r01));
IkReal x4674=((r00)*(sj6));
IkReal x4675=((cj1)*(r12));
IkReal x4676=((r01)*(sj6));
IkReal x4677=((cj6)*(r00)*(sj1));
IkReal x4678=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x4679=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.400000000000000))*(x4669)))+(npz)+(((IkReal(-0.400000000000000))*(x4675))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4669)))+(x4675));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x4668)))+(((sj1)*(x4673)))+(((sj1)*(x4674)))+(((IkReal(-1.00000000000000))*(x4670)*(x4671))));
evalcond[4]=((IkReal(0.000500000000000000))+(((r10)*(x4678)))+(((IkReal(0.400000000000000))*(cj6)*(x4671)))+(((IkReal(-1.00000000000000))*(x4672)*(x4674)))+(((IkReal(-1.00000000000000))*(x4672)*(x4673)))+(((IkReal(-1.00000000000000))*(npx)*(x4668)))+(((IkReal(-1.00000000000000))*(npy)*(x4670))));
evalcond[5]=((IkReal(-1.00000000000000))+(x4679)+(((sj1)*(x4676)))+(((IkReal(-1.00000000000000))*(x4668)*(x4671)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x4670))));
evalcond[6]=((IkReal(-0.390000000000000))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x4672)*(x4676)))+(((IkReal(0.400000000000000))*(sj6)*(x4671)))+(((cj6)*(r00)*(x4672)))+(((IkReal(-1.00000000000000))*(npy)*(x4668)))+(((IkReal(-0.400000000000000))*(x4679))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
IkReal x4680=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x4680))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(r10)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x4680)))+(((cj1)*(cj6)*(r00)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x4680))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x4681=IKatan2(((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x4680)))), ((((cj6)*(r10)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x4680)))+(((cj1)*(cj6)*(r00)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x4680)))));
j2array[0]=((IkReal(-1.00000000000000))*(x4681));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x4681))));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[1];
IkReal x4682=IKcos(j2);
IkReal x4683=IKsin(j2);
IkReal x4684=((IkReal(1.00000000000000))*(cj6));
IkReal x4685=((cj1)*(x4682));
IkReal x4686=((sj1)*(x4682));
evalcond[0]=((((IkReal(-1.00000000000000))*(r10)*(x4684)*(x4686)))+(((cj6)*(r20)*(x4683)))+(((r11)*(sj6)*(x4686)))+(((IkReal(-1.00000000000000))*(r00)*(x4684)*(x4685)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x4683)))+(((r01)*(sj6)*(x4685))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4687=((r12)*(sj1));
IkReal x4688=((cj1)*(r02));
IkReal x4689=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((sj2)*(x4687)))+(((sj2)*(x4688)))+(((cj2)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x4687)*(x4689)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x4688)*(x4689))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj2)*(x4687)))+(((sj2)*(x4688)))+(((cj2)*(r22)))))+IKsqr(((((IkReal(-1.00000000000000))*(x4687)*(x4689)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x4688)*(x4689)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((sj2)*(x4687)))+(((sj2)*(x4688)))+(((cj2)*(r22)))), ((((IkReal(-1.00000000000000))*(x4687)*(x4689)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x4688)*(x4689)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x4690=IKsin(j4);
IkReal x4691=((cj2)*(sj6));
IkReal x4692=((cj1)*(r00));
IkReal x4693=((sj1)*(sj2));
IkReal x4694=((IkReal(1.00000000000000))*(sj6));
IkReal x4695=((IkReal(1.00000000000000))*(cj1));
IkReal x4696=((cj6)*(r01));
IkReal x4697=((cj2)*(sj1));
IkReal x4698=((cj6)*(r11));
IkReal x4699=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x4700=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((((r12)*(x4693)))+(((cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x4690)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(r12)*(x4697)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x4695)))+(((IkReal(-1.00000000000000))*(x4699))));
evalcond[2]=((((x4697)*(x4698)))+(((cj1)*(cj2)*(x4696)))+(x4690)+(((r10)*(sj1)*(x4691)))+(((IkReal(-1.00000000000000))*(sj2)*(x4700)))+(((x4691)*(x4692)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x4694))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(x4692)*(x4694)))+(((IkReal(-1.00000000000000))*(sj2)*(x4695)*(x4696)))+(((IkReal(-1.00000000000000))*(x4693)*(x4698)))+(((IkReal(-1.00000000000000))*(r20)*(x4691)))+(((IkReal(-1.00000000000000))*(r10)*(x4693)*(x4694)))+(((IkReal(-1.00000000000000))*(x4699)))+(((IkReal(-1.00000000000000))*(cj2)*(x4700))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

} else
{
IkReal x4701=((IkReal(1.00000000000000))*(sj6));
IkReal x4702=((r02)*(sj1));
IkReal x4703=((IkReal(1.00000000000000))*(cj6));
IkReal x4704=((cj1)*(r11));
IkReal x4705=((IkReal(0.400000000000000))*(sj1));
IkReal x4706=((cj6)*(r01));
IkReal x4707=((r00)*(sj6));
IkReal x4708=((cj1)*(r12));
IkReal x4709=((r01)*(sj6));
IkReal x4710=((cj6)*(r00)*(sj1));
IkReal x4711=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x4712=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.400000000000000))*(x4702)))+(npz)+(((IkReal(-0.400000000000000))*(x4708))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4702)))+(x4708));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x4701)))+(((IkReal(-1.00000000000000))*(x4703)*(x4704)))+(((sj1)*(x4706)))+(((sj1)*(x4707))));
evalcond[4]=((IkReal(0.000500000000000000))+(((r10)*(x4711)))+(((IkReal(0.400000000000000))*(cj6)*(x4704)))+(((IkReal(-1.00000000000000))*(npx)*(x4701)))+(((IkReal(-1.00000000000000))*(npy)*(x4703)))+(((IkReal(-1.00000000000000))*(x4705)*(x4706)))+(((IkReal(-1.00000000000000))*(x4705)*(x4707))));
evalcond[5]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x4703)))+(x4712)+(((sj1)*(x4709)))+(((IkReal(-1.00000000000000))*(x4701)*(x4704))));
evalcond[6]=((IkReal(-0.390000000000000))+(((cj6)*(npx)))+(((cj6)*(r00)*(x4705)))+(((IkReal(-0.400000000000000))*(x4712)))+(((IkReal(-1.00000000000000))*(npy)*(x4701)))+(((IkReal(-1.00000000000000))*(x4705)*(x4709)))+(((IkReal(0.400000000000000))*(sj6)*(x4704))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
IkReal x4713=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(r21)*(x4713)))+(((cj6)*(r20))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(r10)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x4713)))+(((cj1)*(cj6)*(r00)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x4713))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x4714=IKatan2(((((IkReal(-1.00000000000000))*(r21)*(x4713)))+(((cj6)*(r20)))), ((((cj6)*(r10)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x4713)))+(((cj1)*(cj6)*(r00)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x4713)))));
j2array[0]=((IkReal(-1.00000000000000))*(x4714));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x4714))));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[1];
IkReal x4715=IKcos(j2);
IkReal x4716=IKsin(j2);
IkReal x4717=((IkReal(1.00000000000000))*(cj6));
IkReal x4718=((cj1)*(x4715));
IkReal x4719=((sj1)*(x4715));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(sj6)*(x4716)))+(((cj6)*(r20)*(x4716)))+(((r01)*(sj6)*(x4718)))+(((r11)*(sj6)*(x4719)))+(((IkReal(-1.00000000000000))*(r00)*(x4717)*(x4718)))+(((IkReal(-1.00000000000000))*(r10)*(x4717)*(x4719))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4720=((r12)*(sj1));
IkReal x4721=((cj1)*(r02));
if( IKabs(((((sj2)*(x4720)))+(((sj2)*(x4721)))+(((cj2)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj2)*(x4721)))+(((cj2)*(x4720)))+(((IkReal(-1.00000000000000))*(r22)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj2)*(x4720)))+(((sj2)*(x4721)))+(((cj2)*(r22)))))+IKsqr(((((cj2)*(x4721)))+(((cj2)*(x4720)))+(((IkReal(-1.00000000000000))*(r22)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((sj2)*(x4720)))+(((sj2)*(x4721)))+(((cj2)*(r22)))), ((((cj2)*(x4721)))+(((cj2)*(x4720)))+(((IkReal(-1.00000000000000))*(r22)*(sj2)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x4722=IKcos(j4);
IkReal x4723=((cj2)*(sj6));
IkReal x4724=((cj1)*(r00));
IkReal x4725=((sj1)*(sj2));
IkReal x4726=((IkReal(1.00000000000000))*(sj6));
IkReal x4727=((IkReal(1.00000000000000))*(cj1));
IkReal x4728=((cj6)*(r01));
IkReal x4729=((cj2)*(sj1));
IkReal x4730=((cj6)*(r11));
IkReal x4731=((IkReal(1.00000000000000))*(IKsin(j4)));
IkReal x4732=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((((IkReal(-1.00000000000000))*(x4731)))+(((cj2)*(r22)))+(((r12)*(x4725)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x4729)))+(((r22)*(sj2)))+(x4722)+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x4727))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj2)*(x4732)))+(((x4723)*(x4724)))+(((x4729)*(x4730)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x4726)))+(((IkReal(-1.00000000000000))*(x4731)))+(((r10)*(sj1)*(x4723)))+(((cj1)*(cj2)*(x4728))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj2)*(x4732)))+(((IkReal(-1.00000000000000))*(x4722)))+(((IkReal(-1.00000000000000))*(x4725)*(x4730)))+(((IkReal(-1.00000000000000))*(r10)*(x4725)*(x4726)))+(((IkReal(-1.00000000000000))*(r20)*(x4723)))+(((IkReal(-1.00000000000000))*(sj2)*(x4727)*(x4728)))+(((IkReal(-1.00000000000000))*(sj2)*(x4724)*(x4726))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4733=((sj3)*(sj6));
IkReal x4734=((IkReal(1.00000000000000))*(cj6)*(sj3));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(r21)*(x4733)))+(((cj6)*(r20)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((cj1)*(r01)*(x4733)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x4734)))+(((r11)*(sj1)*(x4733)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x4734))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(r21)*(x4733)))+(((cj6)*(r20)*(sj3)))))), ((gconst4)*(((((cj1)*(r01)*(x4733)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x4734)))+(((r11)*(sj1)*(x4733)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x4734)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x4735=IKsin(j2);
IkReal x4736=IKcos(j2);
IkReal x4737=((cj6)*(r10));
IkReal x4738=((IkReal(1.00000000000000))*(sj6));
IkReal x4739=((cj1)*(r01));
IkReal x4740=((cj1)*(r00));
IkReal x4741=((sj1)*(x4735));
IkReal x4742=((cj6)*(x4736));
IkReal x4743=((sj6)*(x4736));
IkReal x4744=((cj6)*(x4735));
evalcond[0]=((((x4737)*(x4741)))+(((IkReal(-1.00000000000000))*(x4735)*(x4738)*(x4739)))+(((x4740)*(x4744)))+(((IkReal(-1.00000000000000))*(r11)*(x4738)*(x4741)))+(((r20)*(x4742)))+(((IkReal(-1.00000000000000))*(r21)*(x4736)*(x4738))));
evalcond[1]=((sj3)+(((IkReal(-1.00000000000000))*(r21)*(x4735)*(x4738)))+(((r20)*(x4744)))+(((r11)*(sj1)*(x4743)))+(((IkReal(-1.00000000000000))*(x4740)*(x4742)))+(((IkReal(-1.00000000000000))*(sj1)*(x4736)*(x4737)))+(((x4739)*(x4743))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x4745=((cj2)*(sj6));
IkReal x4746=((cj1)*(r00));
IkReal x4747=((IkReal(1.00000000000000))*(r21));
IkReal x4748=((IkReal(1.00000000000000))*(sj6));
IkReal x4749=((cj6)*(sj2));
IkReal x4750=((r10)*(sj1));
IkReal x4751=((IkReal(0.400000000000000))*(sj6));
IkReal x4752=((cj1)*(r11));
IkReal x4753=((cj6)*(r01));
IkReal x4754=((IkReal(0.400000000000000))*(sj1));
IkReal x4755=((IkReal(1.00000000000000))*(cj6));
IkReal x4756=((cj1)*(cj2));
IkReal x4757=((r11)*(sj1));
IkReal x4758=((cj1)*(r01));
IkReal x4759=((cj2)*(cj6));
IkReal x4760=((r01)*(sj1));
IkReal x4761=((cj6)*(r00)*(sj1));
IkReal x4762=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((npz)+(((IkReal(-0.400000000000000))*(cj1)*(r12)))+(((r02)*(x4754))));
evalcond[2]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(x4756))));
evalcond[3]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(x4753)*(x4754)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x4751)))+(((IkReal(0.400000000000000))*(cj6)*(x4752)))+(((IkReal(-1.00000000000000))*(npy)*(x4755)))+(((IkReal(-1.00000000000000))*(npx)*(x4748)))+(((cj1)*(r10)*(x4751))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(sj1)*(x4755)))+(((sj6)*(x4760)))+(((IkReal(-1.00000000000000))*(x4748)*(x4752)))+(x4762));
evalcond[5]=((IkReal(-0.390000000000000))+(((cj6)*(npx)))+(((IkReal(-0.400000000000000))*(x4762)))+(((IkReal(-1.00000000000000))*(x4751)*(x4760)))+(((x4751)*(x4752)))+(((IkReal(-1.00000000000000))*(npy)*(x4748)))+(((cj6)*(r00)*(x4754))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r20)*(sj2)*(x4748)))+(((x4745)*(x4750)))+(((x4753)*(x4756)))+(((x4757)*(x4759)))+(((IkReal(-1.00000000000000))*(x4747)*(x4749)))+(((x4745)*(x4746))));
evalcond[7]=((((IkReal(-1.00000000000000))*(sj2)*(x4748)*(x4757)))+(((IkReal(-1.00000000000000))*(sj2)*(x4748)*(x4758)))+(((x4746)*(x4749)))+(((r20)*(x4759)))+(((IkReal(-1.00000000000000))*(x4745)*(x4747)))+(((x4749)*(x4750))));
evalcond[8]=((IkReal(1.00000000000000))+(((x4745)*(x4758)))+(((x4745)*(x4757)))+(((r20)*(x4749)))+(((IkReal(-1.00000000000000))*(cj2)*(x4750)*(x4755)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x4747)))+(((IkReal(-1.00000000000000))*(cj2)*(x4746)*(x4755))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))))+IKsqr(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))), ((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x4763=IKsin(j4);
IkReal x4764=((sj1)*(sj2));
IkReal x4765=((IkReal(1.00000000000000))*(cj6));
IkReal x4766=((IkReal(1.00000000000000))*(sj6));
IkReal x4767=((cj1)*(sj2));
IkReal x4768=((IkReal(1.00000000000000))*(IKcos(j4)));
evalcond[0]=((((r02)*(x4767)))+(((IkReal(-1.00000000000000))*(x4763)))+(((cj2)*(r22)))+(((r12)*(x4764))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x4768)))+(((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x4766)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x4765)))+(((cj6)*(r01)*(sj1)))+(x4763)+(((r00)*(sj1)*(sj6))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4768)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x4765)))+(((IkReal(-1.00000000000000))*(r00)*(x4766)*(x4767)))+(((IkReal(-1.00000000000000))*(r10)*(x4764)*(x4766)))+(((IkReal(-1.00000000000000))*(r01)*(x4765)*(x4767)))+(((IkReal(-1.00000000000000))*(r11)*(x4764)*(x4765)))+(((IkReal(-1.00000000000000))*(cj2)*(r20)*(x4766))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x4769=((cj2)*(sj6));
IkReal x4770=((cj1)*(r00));
IkReal x4771=((IkReal(1.00000000000000))*(r21));
IkReal x4772=((IkReal(1.00000000000000))*(sj6));
IkReal x4773=((cj6)*(sj2));
IkReal x4774=((r10)*(sj1));
IkReal x4775=((IkReal(0.400000000000000))*(sj6));
IkReal x4776=((cj1)*(r11));
IkReal x4777=((cj6)*(r01));
IkReal x4778=((IkReal(0.400000000000000))*(sj1));
IkReal x4779=((IkReal(1.00000000000000))*(cj6));
IkReal x4780=((cj1)*(cj2));
IkReal x4781=((r11)*(sj1));
IkReal x4782=((cj1)*(r01));
IkReal x4783=((cj2)*(cj6));
IkReal x4784=((r01)*(sj1));
IkReal x4785=((cj6)*(r00)*(sj1));
IkReal x4786=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((npz)+(((r02)*(x4778)))+(((IkReal(-0.400000000000000))*(cj1)*(r12))));
evalcond[2]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(r02)*(x4780)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(sj1))));
evalcond[3]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x4775)))+(((IkReal(-1.00000000000000))*(x4777)*(x4778)))+(((IkReal(-1.00000000000000))*(npy)*(x4779)))+(((IkReal(0.400000000000000))*(cj6)*(x4776)))+(((IkReal(-1.00000000000000))*(npx)*(x4772)))+(((cj1)*(r10)*(x4775))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(sj1)*(x4779)))+(x4786)+(((sj6)*(x4784)))+(((IkReal(-1.00000000000000))*(x4772)*(x4776))));
evalcond[5]=((IkReal(-0.390000000000000))+(((IkReal(-0.400000000000000))*(x4786)))+(((cj6)*(npx)))+(((x4775)*(x4776)))+(((IkReal(-1.00000000000000))*(npy)*(x4772)))+(((cj6)*(r00)*(x4778)))+(((IkReal(-1.00000000000000))*(x4775)*(x4784))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r20)*(sj2)*(x4772)))+(((x4769)*(x4774)))+(((x4769)*(x4770)))+(((x4777)*(x4780)))+(((IkReal(-1.00000000000000))*(x4771)*(x4773)))+(((x4781)*(x4783))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x4769)*(x4771)))+(((x4773)*(x4774)))+(((r20)*(x4783)))+(((x4770)*(x4773)))+(((IkReal(-1.00000000000000))*(sj2)*(x4772)*(x4781)))+(((IkReal(-1.00000000000000))*(sj2)*(x4772)*(x4782))));
evalcond[8]=((IkReal(-1.00000000000000))+(((x4769)*(x4782)))+(((x4769)*(x4781)))+(((IkReal(-1.00000000000000))*(cj2)*(x4770)*(x4779)))+(((r20)*(x4773)))+(((IkReal(-1.00000000000000))*(cj2)*(x4774)*(x4779)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x4771))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))))+IKsqr(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))), ((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x4787=IKcos(j4);
IkReal x4788=((sj1)*(sj2));
IkReal x4789=((IkReal(1.00000000000000))*(cj6));
IkReal x4790=((IkReal(1.00000000000000))*(sj6));
IkReal x4791=((cj1)*(sj2));
IkReal x4792=((IkReal(1.00000000000000))*(IKsin(j4)));
evalcond[0]=((((r12)*(x4788)))+(((IkReal(-1.00000000000000))*(x4792)))+(((cj2)*(r22)))+(((r02)*(x4791))));
evalcond[1]=((((cj1)*(r12)))+(x4787)+(((IkReal(-1.00000000000000))*(r02)*(sj1))));
evalcond[2]=((((cj6)*(r01)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x4790)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x4789)))+(((IkReal(-1.00000000000000))*(x4792)))+(((r00)*(sj1)*(sj6))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x4788)*(x4789)))+(((IkReal(-1.00000000000000))*(r10)*(x4788)*(x4790)))+(((IkReal(-1.00000000000000))*(r00)*(x4790)*(x4791)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x4789)))+(((IkReal(-1.00000000000000))*(x4787)))+(((IkReal(-1.00000000000000))*(r01)*(x4789)*(x4791)))+(((IkReal(-1.00000000000000))*(cj2)*(r20)*(x4790))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x4793=((IkReal(1.00000000000000))*(sj6));
IkReal x4794=((r02)*(sj1));
IkReal x4795=((cj1)*(cj6));
IkReal x4796=((cj6)*(sj1));
IkReal x4797=((IkReal(0.400000000000000))*(r01));
IkReal x4798=((IkReal(1.00000000000000))*(cj2));
IkReal x4799=((r11)*(sj1));
IkReal x4800=((cj2)*(sj6));
IkReal x4801=((cj1)*(r01));
IkReal x4802=((cj1)*(r12));
IkReal x4803=((cj6)*(r20));
IkReal x4804=((sj1)*(sj6));
IkReal x4805=((r00)*(x4796));
IkReal x4806=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x4807=((r00)*(x4804));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-0.400000000000000))*(x4802)))+(npz)+(((IkReal(0.400000000000000))*(x4794))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4794)))+(x4802));
evalcond[3]=((((r01)*(x4796)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x4793)))+(((IkReal(-1.00000000000000))*(r11)*(x4795)))+(x4807));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(0.400000000000000))*(r11)*(x4795)))+(((IkReal(-0.400000000000000))*(x4807)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((IkReal(-1.00000000000000))*(x4796)*(x4797)))+(((r10)*(x4806)))+(((IkReal(-1.00000000000000))*(npx)*(x4793))));
evalcond[5]=((IkReal(-1.00000000000000))+(((r10)*(x4795)))+(((r01)*(x4804)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x4793)))+(((IkReal(-1.00000000000000))*(x4805))));
evalcond[6]=((IkReal(-0.390000000000000))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x4797)*(x4804)))+(((IkReal(-0.400000000000000))*(r10)*(x4795)))+(((IkReal(-1.00000000000000))*(npy)*(x4793)))+(((r11)*(x4806)))+(((IkReal(0.400000000000000))*(x4805))));
evalcond[7]=((((IkReal(-1.00000000000000))*(sj2)*(x4793)*(x4801)))+(((cj2)*(x4803)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x4793)))+(((r10)*(sj2)*(x4796)))+(((r00)*(sj2)*(x4795)))+(((IkReal(-1.00000000000000))*(sj2)*(x4793)*(x4799))));
evalcond[8]=((((x4800)*(x4801)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x4793)))+(((IkReal(-1.00000000000000))*(r00)*(x4795)*(x4798)))+(((IkReal(-1.00000000000000))*(r10)*(x4796)*(x4798)))+(((sj2)*(x4803)))+(((x4799)*(x4800))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4808=((r12)*(sj1));
IkReal x4809=((cj1)*(r02));
IkReal x4810=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((cj2)*(r22)))+(((sj2)*(x4809)))+(((sj2)*(x4808))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x4808)*(x4810)))+(((IkReal(-1.00000000000000))*(x4809)*(x4810)))+(((r22)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj2)*(r22)))+(((sj2)*(x4809)))+(((sj2)*(x4808)))))+IKsqr(((((IkReal(-1.00000000000000))*(x4808)*(x4810)))+(((IkReal(-1.00000000000000))*(x4809)*(x4810)))+(((r22)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((cj2)*(r22)))+(((sj2)*(x4809)))+(((sj2)*(x4808)))), ((((IkReal(-1.00000000000000))*(x4808)*(x4810)))+(((IkReal(-1.00000000000000))*(x4809)*(x4810)))+(((r22)*(sj2)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x4811=IKsin(j4);
IkReal x4812=((cj2)*(sj6));
IkReal x4813=((cj1)*(r00));
IkReal x4814=((sj1)*(sj2));
IkReal x4815=((IkReal(1.00000000000000))*(sj6));
IkReal x4816=((IkReal(1.00000000000000))*(cj1));
IkReal x4817=((cj6)*(r01));
IkReal x4818=((cj2)*(sj1));
IkReal x4819=((cj6)*(r11));
IkReal x4820=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x4821=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((((IkReal(-1.00000000000000))*(x4811)))+(((r12)*(x4814)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x4820)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x4816)))+(((IkReal(-1.00000000000000))*(r12)*(x4818))));
evalcond[2]=((((x4818)*(x4819)))+(((r10)*(sj1)*(x4812)))+(((x4812)*(x4813)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x4815)))+(((IkReal(-1.00000000000000))*(sj2)*(x4821)))+(((cj1)*(cj2)*(x4817)))+(x4811));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x4812)))+(((IkReal(-1.00000000000000))*(x4820)))+(((IkReal(-1.00000000000000))*(x4814)*(x4819)))+(((IkReal(-1.00000000000000))*(sj2)*(x4813)*(x4815)))+(((IkReal(-1.00000000000000))*(cj2)*(x4821)))+(((IkReal(-1.00000000000000))*(sj2)*(x4816)*(x4817)))+(((IkReal(-1.00000000000000))*(r10)*(x4814)*(x4815))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x4822=((IkReal(1.00000000000000))*(sj6));
IkReal x4823=((r02)*(sj1));
IkReal x4824=((cj1)*(cj6));
IkReal x4825=((cj6)*(sj1));
IkReal x4826=((IkReal(0.400000000000000))*(r01));
IkReal x4827=((IkReal(1.00000000000000))*(cj2));
IkReal x4828=((r11)*(sj1));
IkReal x4829=((cj2)*(sj6));
IkReal x4830=((cj1)*(r01));
IkReal x4831=((cj1)*(r12));
IkReal x4832=((cj6)*(r20));
IkReal x4833=((sj1)*(sj6));
IkReal x4834=((r00)*(x4825));
IkReal x4835=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x4836=((r00)*(x4833));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.400000000000000))*(x4823)))+(npz)+(((IkReal(-0.400000000000000))*(x4831))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4823)))+(x4831));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x4822)))+(((IkReal(-1.00000000000000))*(r11)*(x4824)))+(((r01)*(x4825)))+(x4836));
evalcond[4]=((IkReal(0.000500000000000000))+(((r10)*(x4835)))+(((IkReal(-1.00000000000000))*(x4825)*(x4826)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((IkReal(0.400000000000000))*(r11)*(x4824)))+(((IkReal(-0.400000000000000))*(x4836)))+(((IkReal(-1.00000000000000))*(npx)*(x4822))));
evalcond[5]=((IkReal(1.00000000000000))+(((r01)*(x4833)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x4822)))+(((r10)*(x4824)))+(((IkReal(-1.00000000000000))*(x4834))));
evalcond[6]=((IkReal(-0.390000000000000))+(((cj6)*(npx)))+(((r11)*(x4835)))+(((IkReal(0.400000000000000))*(x4834)))+(((IkReal(-0.400000000000000))*(r10)*(x4824)))+(((IkReal(-1.00000000000000))*(x4826)*(x4833)))+(((IkReal(-1.00000000000000))*(npy)*(x4822))));
evalcond[7]=((((r10)*(sj2)*(x4825)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x4822)))+(((IkReal(-1.00000000000000))*(sj2)*(x4822)*(x4828)))+(((IkReal(-1.00000000000000))*(sj2)*(x4822)*(x4830)))+(((cj2)*(x4832)))+(((r00)*(sj2)*(x4824))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r21)*(sj2)*(x4822)))+(((IkReal(-1.00000000000000))*(r00)*(x4824)*(x4827)))+(((x4828)*(x4829)))+(((sj2)*(x4832)))+(((x4829)*(x4830)))+(((IkReal(-1.00000000000000))*(r10)*(x4825)*(x4827))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4837=((r12)*(sj1));
IkReal x4838=((cj1)*(r02));
if( IKabs(((((sj2)*(x4838)))+(((sj2)*(x4837)))+(((cj2)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj2)*(x4838)))+(((cj2)*(x4837)))+(((IkReal(-1.00000000000000))*(r22)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj2)*(x4838)))+(((sj2)*(x4837)))+(((cj2)*(r22)))))+IKsqr(((((cj2)*(x4838)))+(((cj2)*(x4837)))+(((IkReal(-1.00000000000000))*(r22)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((sj2)*(x4838)))+(((sj2)*(x4837)))+(((cj2)*(r22)))), ((((cj2)*(x4838)))+(((cj2)*(x4837)))+(((IkReal(-1.00000000000000))*(r22)*(sj2)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x4839=IKcos(j4);
IkReal x4840=((cj2)*(sj6));
IkReal x4841=((cj1)*(r00));
IkReal x4842=((sj1)*(sj2));
IkReal x4843=((IkReal(1.00000000000000))*(sj6));
IkReal x4844=((IkReal(1.00000000000000))*(cj1));
IkReal x4845=((cj6)*(r01));
IkReal x4846=((cj2)*(sj1));
IkReal x4847=((cj6)*(r11));
IkReal x4848=((IkReal(1.00000000000000))*(IKsin(j4)));
IkReal x4849=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((((IkReal(-1.00000000000000))*(x4848)))+(((cj2)*(r22)))+(((r12)*(x4842)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(r12)*(x4846)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x4844)))+(x4839));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj2)*(x4849)))+(((IkReal(-1.00000000000000))*(x4848)))+(((r10)*(sj1)*(x4840)))+(((cj1)*(cj2)*(x4845)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x4843)))+(((x4840)*(x4841)))+(((x4846)*(x4847))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(x4844)*(x4845)))+(((IkReal(-1.00000000000000))*(cj2)*(x4849)))+(((IkReal(-1.00000000000000))*(r10)*(x4842)*(x4843)))+(((IkReal(-1.00000000000000))*(r20)*(x4840)))+(((IkReal(-1.00000000000000))*(x4839)))+(((IkReal(-1.00000000000000))*(x4842)*(x4847)))+(((IkReal(-1.00000000000000))*(sj2)*(x4841)*(x4843))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4850=((r12)*(sj1));
IkReal x4851=((cj1)*(r02));
IkReal x4852=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((sj2)*(x4850)))+(((sj2)*(x4851)))+(((cj2)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x4851)*(x4852)))+(((IkReal(-1.00000000000000))*(x4850)*(x4852))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj2)*(x4850)))+(((sj2)*(x4851)))+(((cj2)*(r22)))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x4851)*(x4852)))+(((IkReal(-1.00000000000000))*(x4850)*(x4852)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((sj2)*(x4850)))+(((sj2)*(x4851)))+(((cj2)*(r22)))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x4851)*(x4852)))+(((IkReal(-1.00000000000000))*(x4850)*(x4852)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x4853=IKcos(j4);
IkReal x4854=IKsin(j4);
IkReal x4855=((cj1)*(cj2));
IkReal x4856=((r00)*(sj6));
IkReal x4857=((IkReal(1.00000000000000))*(cj6));
IkReal x4858=((IkReal(1.00000000000000))*(sj1));
IkReal x4859=((cj1)*(sj2));
IkReal x4860=((sj2)*(sj6));
IkReal x4861=((IkReal(1.00000000000000))*(r20));
IkReal x4862=((cj6)*(r01));
IkReal x4863=((cj2)*(sj6));
IkReal x4864=((r11)*(sj1));
IkReal x4865=((IkReal(1.00000000000000))*(x4853));
evalcond[0]=((((r12)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x4854)))+(((cj2)*(r22)))+(((r02)*(x4859))));
evalcond[1]=((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(x4858)))+(((IkReal(-1.00000000000000))*(sj3)*(x4865))));
evalcond[2]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj3)*(x4865)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(x4858)))+(((IkReal(-1.00000000000000))*(r02)*(x4855))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(sj6)))+(((sj3)*(x4854)))+(((sj1)*(x4856)))+(((sj1)*(x4862)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x4857))));
evalcond[4]=((((r10)*(sj1)*(x4863)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x4857)))+(((cj3)*(x4854)))+(((x4855)*(x4856)))+(((x4855)*(x4862)))+(((IkReal(-1.00000000000000))*(x4860)*(x4861)))+(((cj2)*(cj6)*(x4864))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r01)*(x4857)*(x4859)))+(((IkReal(-1.00000000000000))*(r10)*(x4858)*(x4860)))+(((IkReal(-1.00000000000000))*(x4865)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x4857)))+(((IkReal(-1.00000000000000))*(sj2)*(x4857)*(x4864)))+(((IkReal(-1.00000000000000))*(x4856)*(x4859)))+(((IkReal(-1.00000000000000))*(x4861)*(x4863))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x4866=IKcos(j4);
IkReal x4867=IKsin(j4);
IkReal x4868=((cj1)*(cj2));
IkReal x4869=((r00)*(sj6));
IkReal x4870=((IkReal(1.00000000000000))*(cj6));
IkReal x4871=((IkReal(1.00000000000000))*(sj1));
IkReal x4872=((cj1)*(sj2));
IkReal x4873=((sj2)*(sj6));
IkReal x4874=((IkReal(1.00000000000000))*(r20));
IkReal x4875=((cj6)*(r01));
IkReal x4876=((cj2)*(sj6));
IkReal x4877=((r11)*(sj1));
IkReal x4878=((IkReal(1.00000000000000))*(x4866));
evalcond[0]=((((r02)*(x4872)))+(((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x4867))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj3)*(x4878)))+(((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(x4871))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x4868)))+(((IkReal(-1.00000000000000))*(cj3)*(x4878)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(x4871))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(sj6)))+(((sj1)*(x4875)))+(((sj3)*(x4867)))+(((sj1)*(x4869)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x4870))));
evalcond[4]=((((x4868)*(x4875)))+(((cj3)*(x4867)))+(((x4868)*(x4869)))+(((cj2)*(cj6)*(x4877)))+(((r10)*(sj1)*(x4876)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x4870)))+(((IkReal(-1.00000000000000))*(x4873)*(x4874))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x4871)*(x4873)))+(((IkReal(-1.00000000000000))*(x4874)*(x4876)))+(((IkReal(-1.00000000000000))*(sj2)*(x4870)*(x4877)))+(((IkReal(-1.00000000000000))*(r01)*(x4870)*(x4872)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x4870)))+(((IkReal(-1.00000000000000))*(x4878)))+(((IkReal(-1.00000000000000))*(x4869)*(x4872))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4879=((IkReal(1.00000000000000))*(sj1));
if( IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x4879)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x4879))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(x4879))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst6)*(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x4879)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x4879)))))), ((gconst6)*(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(x4879)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x4880=IKcos(j4);
IkReal x4881=IKsin(j4);
IkReal x4882=((cj1)*(cj2));
IkReal x4883=((r00)*(sj6));
IkReal x4884=((IkReal(1.00000000000000))*(cj6));
IkReal x4885=((IkReal(1.00000000000000))*(sj1));
IkReal x4886=((cj1)*(sj2));
IkReal x4887=((sj2)*(sj6));
IkReal x4888=((IkReal(1.00000000000000))*(r20));
IkReal x4889=((cj6)*(r01));
IkReal x4890=((cj2)*(sj6));
IkReal x4891=((r11)*(sj1));
IkReal x4892=((IkReal(1.00000000000000))*(x4880));
evalcond[0]=((((IkReal(-1.00000000000000))*(x4881)))+(((r02)*(x4886)))+(((r12)*(sj1)*(sj2)))+(((cj2)*(r22))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj3)*(x4892)))+(((IkReal(-1.00000000000000))*(r02)*(x4885)))+(((cj1)*(r12))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x4882)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj3)*(x4892)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(x4885))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(sj6)))+(((sj3)*(x4881)))+(((sj1)*(x4889)))+(((sj1)*(x4883)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x4884))));
evalcond[4]=((((cj3)*(x4881)))+(((IkReal(-1.00000000000000))*(x4887)*(x4888)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x4884)))+(((cj2)*(cj6)*(x4891)))+(((r10)*(sj1)*(x4890)))+(((x4882)*(x4889)))+(((x4882)*(x4883))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x4892)))+(((IkReal(-1.00000000000000))*(r10)*(x4885)*(x4887)))+(((IkReal(-1.00000000000000))*(x4888)*(x4890)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x4884)))+(((IkReal(-1.00000000000000))*(r01)*(x4884)*(x4886)))+(((IkReal(-1.00000000000000))*(x4883)*(x4886)))+(((IkReal(-1.00000000000000))*(sj2)*(x4884)*(x4891))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4893=((IkReal(1.00000000000000))*(sj1));
if( IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x4893)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x4893)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(x4893))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst5)*(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x4893)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x4893)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))))), ((gconst5)*(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(x4893)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x4894=((IkReal(1.00000000000000))*(cj1));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj3)*(IKcos(j4))))+(((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1))));
evalcond[1]=((((cj6)*(r01)*(sj1)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x4894)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x4894)))+(((sj3)*(IKsin(j4))))+(((r00)*(sj1)*(sj6))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign((((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1))))));
dummyeval[0]=(((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
IkReal x4895=((cj1)*(cj6));
IkReal x4896=((IkReal(1.00000000000000))*(r22));
IkReal x4897=((cj6)*(sj1));
IkReal x4898=((r22)*(sj6));
IkReal x4899=((IkReal(1.00000000000000))*(r21)*(sj6));
gconst8=IKsign(((((IkReal(-1.00000000000000))*(r10)*(x4896)*(x4897)))+(((r12)*(r20)*(x4897)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x4899)))+(((r11)*(sj1)*(x4898)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x4899)))+(((cj1)*(r01)*(x4898)))+(((r02)*(r20)*(x4895)))+(((IkReal(-1.00000000000000))*(r00)*(x4895)*(x4896)))));
IkReal x4900=((cj1)*(cj6));
IkReal x4901=((IkReal(1.00000000000000))*(r22));
IkReal x4902=((cj6)*(sj1));
IkReal x4903=((r22)*(sj6));
IkReal x4904=((IkReal(1.00000000000000))*(r21)*(sj6));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r10)*(x4901)*(x4902)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x4904)))+(((r11)*(sj1)*(x4903)))+(((r12)*(r20)*(x4902)))+(((cj1)*(r01)*(x4903)))+(((IkReal(-1.00000000000000))*(r00)*(x4900)*(x4901)))+(((r02)*(r20)*(x4900)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x4904))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4905=((sj4)*(sj6));
IkReal x4906=((IkReal(1.00000000000000))*(cj6)*(sj4));
if( IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(r21)*(x4905)))+(((cj6)*(r20)*(sj4))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(cj1)*(r00)*(x4906)))+(((r11)*(sj1)*(x4905)))+(((cj1)*(r01)*(x4905)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x4906))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst8)*(((((IkReal(-1.00000000000000))*(r21)*(x4905)))+(((cj6)*(r20)*(sj4)))))), ((gconst8)*(((((IkReal(-1.00000000000000))*(cj1)*(r00)*(x4906)))+(((r11)*(sj1)*(x4905)))+(((cj1)*(r01)*(x4905)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x4906)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4907=IKsin(j2);
IkReal x4908=IKcos(j2);
IkReal x4909=((r11)*(sj6));
IkReal x4910=((IkReal(1.00000000000000))*(cj4));
IkReal x4911=((cj6)*(r11));
IkReal x4912=((cj6)*(r20));
IkReal x4913=((IkReal(1.00000000000000))*(sj6));
IkReal x4914=((cj1)*(r00));
IkReal x4915=((cj1)*(r01));
IkReal x4916=((IkReal(1.00000000000000))*(cj6));
IkReal x4917=((cj1)*(r02));
IkReal x4918=((sj1)*(x4907));
IkReal x4919=((sj1)*(x4908));
IkReal x4920=((r21)*(x4908));
IkReal x4921=((sj6)*(x4908));
IkReal x4922=((cj6)*(x4908));
IkReal x4923=((r21)*(x4907));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj4)))+(((x4907)*(x4917)))+(((r12)*(x4918)))+(((r22)*(x4908))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj3)*(x4910)))+(((IkReal(-1.00000000000000))*(x4908)*(x4917)))+(((IkReal(-1.00000000000000))*(r12)*(x4919)))+(((r22)*(x4907))));
evalcond[2]=((((r10)*(sj6)*(x4919)))+(((x4911)*(x4919)))+(((IkReal(-1.00000000000000))*(x4916)*(x4923)))+(((IkReal(-1.00000000000000))*(r20)*(x4907)*(x4913)))+(((x4915)*(x4922)))+(((x4914)*(x4921)))+(((cj3)*(sj4))));
evalcond[3]=((((cj6)*(r10)*(x4918)))+(((x4908)*(x4912)))+(((IkReal(-1.00000000000000))*(x4913)*(x4920)))+(((IkReal(-1.00000000000000))*(x4907)*(x4913)*(x4915)))+(((cj6)*(x4907)*(x4914)))+(((IkReal(-1.00000000000000))*(x4909)*(x4918))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x4911)*(x4918)))+(((IkReal(-1.00000000000000))*(r10)*(x4913)*(x4918)))+(((IkReal(-1.00000000000000))*(x4910)))+(((IkReal(-1.00000000000000))*(x4916)*(x4920)))+(((IkReal(-1.00000000000000))*(r20)*(x4908)*(x4913)))+(((IkReal(-1.00000000000000))*(x4907)*(x4915)*(x4916)))+(((IkReal(-1.00000000000000))*(x4907)*(x4913)*(x4914))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x4908)*(x4914)*(x4916)))+(sj3)+(((IkReal(-1.00000000000000))*(r10)*(x4916)*(x4919)))+(((x4907)*(x4912)))+(((x4909)*(x4919)))+(((IkReal(-1.00000000000000))*(x4913)*(x4923)))+(((x4915)*(x4921))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4924=((cj3)*(cj4));
IkReal x4925=((r12)*(sj1));
IkReal x4926=((cj1)*(r02));
if( IKabs(((gconst7)*(((((sj4)*(x4926)))+(((sj4)*(x4925)))+(((r22)*(x4924))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(x4924)*(x4925)))+(((IkReal(-1.00000000000000))*(x4924)*(x4926)))+(((r22)*(sj4))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst7)*(((((sj4)*(x4926)))+(((sj4)*(x4925)))+(((r22)*(x4924)))))), ((gconst7)*(((((IkReal(-1.00000000000000))*(x4924)*(x4925)))+(((IkReal(-1.00000000000000))*(x4924)*(x4926)))+(((r22)*(sj4)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4927=IKsin(j2);
IkReal x4928=IKcos(j2);
IkReal x4929=((r11)*(sj6));
IkReal x4930=((IkReal(1.00000000000000))*(cj4));
IkReal x4931=((cj6)*(r11));
IkReal x4932=((cj6)*(r20));
IkReal x4933=((IkReal(1.00000000000000))*(sj6));
IkReal x4934=((cj1)*(r00));
IkReal x4935=((cj1)*(r01));
IkReal x4936=((IkReal(1.00000000000000))*(cj6));
IkReal x4937=((cj1)*(r02));
IkReal x4938=((sj1)*(x4927));
IkReal x4939=((sj1)*(x4928));
IkReal x4940=((r21)*(x4928));
IkReal x4941=((sj6)*(x4928));
IkReal x4942=((cj6)*(x4928));
IkReal x4943=((r21)*(x4927));
evalcond[0]=((((r12)*(x4938)))+(((IkReal(-1.00000000000000))*(sj4)))+(((x4927)*(x4937)))+(((r22)*(x4928))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x4939)))+(((IkReal(-1.00000000000000))*(cj3)*(x4930)))+(((IkReal(-1.00000000000000))*(x4928)*(x4937)))+(((r22)*(x4927))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4936)*(x4943)))+(((x4935)*(x4942)))+(((IkReal(-1.00000000000000))*(r20)*(x4927)*(x4933)))+(((x4934)*(x4941)))+(((r10)*(sj6)*(x4939)))+(((x4931)*(x4939)))+(((cj3)*(sj4))));
evalcond[3]=((((cj6)*(x4927)*(x4934)))+(((IkReal(-1.00000000000000))*(x4927)*(x4933)*(x4935)))+(((IkReal(-1.00000000000000))*(x4933)*(x4940)))+(((IkReal(-1.00000000000000))*(x4929)*(x4938)))+(((x4928)*(x4932)))+(((cj6)*(r10)*(x4938))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x4927)*(x4933)*(x4934)))+(((IkReal(-1.00000000000000))*(r20)*(x4928)*(x4933)))+(((IkReal(-1.00000000000000))*(r10)*(x4933)*(x4938)))+(((IkReal(-1.00000000000000))*(x4936)*(x4940)))+(((IkReal(-1.00000000000000))*(x4927)*(x4935)*(x4936)))+(((IkReal(-1.00000000000000))*(x4930)))+(((IkReal(-1.00000000000000))*(x4931)*(x4938))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x4936)*(x4939)))+(sj3)+(((x4927)*(x4932)))+(((x4935)*(x4941)))+(((IkReal(-1.00000000000000))*(x4933)*(x4943)))+(((IkReal(-1.00000000000000))*(x4928)*(x4934)*(x4936)))+(((x4929)*(x4939))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x4944=((IkReal(0.400000000000000))*(cj6));
IkReal x4945=((r00)*(sj1));
IkReal x4946=((IkReal(1.00000000000000))*(cj6));
IkReal x4947=((cj1)*(r11));
IkReal x4948=((IkReal(0.400000000000000))*(sj1));
IkReal x4949=((cj1)*(r10));
IkReal x4950=((IkReal(1.00000000000000))*(sj6));
IkReal x4951=((IkReal(0.400000000000000))*(sj6));
IkReal x4952=((r01)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((((r02)*(x4948)))+(npz)+(((IkReal(-0.400000000000000))*(cj1)*(r12))));
evalcond[2]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(r01)*(sj1)*(x4944)))+(((IkReal(-1.00000000000000))*(npx)*(x4950)))+(((IkReal(-1.00000000000000))*(x4945)*(x4951)))+(((IkReal(-1.00000000000000))*(npy)*(x4946)))+(((x4944)*(x4947)))+(((x4949)*(x4951))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4947)*(x4950)))+(cj3)+(((cj6)*(x4949)))+(((sj1)*(x4952)))+(((IkReal(-1.00000000000000))*(x4945)*(x4946))));
evalcond[4]=((IkReal(0.390000000000000))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x4944)*(x4949)))+(((IkReal(-1.00000000000000))*(npy)*(x4950)))+(((IkReal(-1.00000000000000))*(x4948)*(x4952)))+(((x4947)*(x4951)))+(((x4944)*(x4945))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
IkReal x4953=(sj6)*(sj6);
IkReal x4954=(cj6)*(cj6);
IkReal x4955=(sj1)*(sj1);
IkReal x4956=(cj1)*(cj1);
IkReal x4957=((IkReal(2.00000000000000))*(r11));
IkReal x4958=((IkReal(2.00000000000000))*(r00));
IkReal x4959=((cj1)*(sj1));
IkReal x4960=((cj6)*(sj6));
IkReal x4961=((r01)*(x4959));
IkReal x4962=((IkReal(2.00000000000000))*(r10)*(x4960));
gconst9=IKsign(((((x4953)*((r21)*(r21))))+(((r10)*(x4954)*(x4958)*(x4959)))+(((IkReal(-1.00000000000000))*(r10)*(x4955)*(x4957)*(x4960)))+(((IkReal(-1.00000000000000))*(r01)*(x4956)*(x4958)*(x4960)))+(((x4954)*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(r20)*(r21)*(x4960)))+(((IkReal(-1.00000000000000))*(x4961)*(x4962)))+(((x4953)*(x4956)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r00)*(x4957)*(x4959)*(x4960)))+(((x4953)*(x4957)*(x4961)))+(((x4954)*(x4956)*((r00)*(r00))))+(((x4953)*(x4955)*((r11)*(r11))))+(((x4954)*(x4955)*((r10)*(r10))))));
IkReal x4963=(sj6)*(sj6);
IkReal x4964=(cj6)*(cj6);
IkReal x4965=(sj1)*(sj1);
IkReal x4966=(cj1)*(cj1);
IkReal x4967=((IkReal(2.00000000000000))*(r11));
IkReal x4968=((IkReal(2.00000000000000))*(r00));
IkReal x4969=((cj1)*(sj1));
IkReal x4970=((cj6)*(sj6));
IkReal x4971=((r01)*(x4969));
IkReal x4972=((IkReal(2.00000000000000))*(r10)*(x4970));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r10)*(x4965)*(x4967)*(x4970)))+(((IkReal(-1.00000000000000))*(r00)*(x4967)*(x4969)*(x4970)))+(((x4963)*(x4967)*(x4971)))+(((x4963)*((r21)*(r21))))+(((x4964)*(x4965)*((r10)*(r10))))+(((IkReal(-2.00000000000000))*(r20)*(r21)*(x4970)))+(((x4964)*(x4966)*((r00)*(r00))))+(((x4963)*(x4965)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x4971)*(x4972)))+(((x4964)*((r20)*(r20))))+(((IkReal(-1.00000000000000))*(r01)*(x4966)*(x4968)*(x4970)))+(((r10)*(x4964)*(x4968)*(x4969)))+(((x4963)*(x4966)*((r01)*(r01)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x4973=((IkReal(1.00000000000000))*(sj6));
IkReal x4974=((r02)*(sj1));
IkReal x4975=((IkReal(1.00000000000000))*(cj6));
IkReal x4976=((cj1)*(r11));
IkReal x4977=((IkReal(0.400000000000000))*(sj1));
IkReal x4978=((cj6)*(r01));
IkReal x4979=((r00)*(sj6));
IkReal x4980=((cj1)*(r12));
IkReal x4981=((r01)*(sj6));
IkReal x4982=((cj6)*(r00)*(sj1));
IkReal x4983=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x4984=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((npz)+(((IkReal(-0.400000000000000))*(x4980)))+(((IkReal(0.400000000000000))*(x4974))));
evalcond[2]=((x4980)+(((IkReal(-1.00000000000000))*(x4974))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4975)*(x4976)))+(((sj1)*(x4979)))+(((sj1)*(x4978)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x4973))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(0.400000000000000))*(cj6)*(x4976)))+(((IkReal(-1.00000000000000))*(npx)*(x4973)))+(((r10)*(x4983)))+(((IkReal(-1.00000000000000))*(npy)*(x4975)))+(((IkReal(-1.00000000000000))*(x4977)*(x4979)))+(((IkReal(-1.00000000000000))*(x4977)*(x4978))));
evalcond[5]=((IkReal(1.00000000000000))+(x4984)+(((IkReal(-1.00000000000000))*(x4973)*(x4976)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x4975)))+(((sj1)*(x4981))));
evalcond[6]=((IkReal(0.390000000000000))+(((IkReal(-1.00000000000000))*(x4977)*(x4981)))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(x4973)))+(((IkReal(0.400000000000000))*(sj6)*(x4976)))+(((IkReal(-0.400000000000000))*(x4984)))+(((cj6)*(r00)*(x4977))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
IkReal x4985=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(r21)*(x4985)))+(((cj6)*(r20))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(r10)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x4985)))+(((cj1)*(cj6)*(r00)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x4985))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x4986=IKatan2(((((IkReal(-1.00000000000000))*(r21)*(x4985)))+(((cj6)*(r20)))), ((((cj6)*(r10)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x4985)))+(((cj1)*(cj6)*(r00)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x4985)))));
j2array[0]=((IkReal(-1.00000000000000))*(x4986));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x4986))));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[1];
IkReal x4987=IKcos(j2);
IkReal x4988=IKsin(j2);
IkReal x4989=((IkReal(1.00000000000000))*(cj6));
IkReal x4990=((cj1)*(x4987));
IkReal x4991=((sj1)*(x4987));
evalcond[0]=((((IkReal(-1.00000000000000))*(r10)*(x4989)*(x4991)))+(((IkReal(-1.00000000000000))*(r00)*(x4989)*(x4990)))+(((cj6)*(r20)*(x4988)))+(((r01)*(sj6)*(x4990)))+(((r11)*(sj6)*(x4991)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x4988))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x4992=((r12)*(sj1));
IkReal x4993=((IkReal(1.00000000000000))*(sj2));
IkReal x4994=((cj1)*(r02));
if( IKabs(((((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x4993)*(x4994)))+(((IkReal(-1.00000000000000))*(x4992)*(x4993))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj2)*(x4992)))+(((cj2)*(x4994)))+(((IkReal(-1.00000000000000))*(r22)*(x4993))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x4993)*(x4994)))+(((IkReal(-1.00000000000000))*(x4992)*(x4993)))))+IKsqr(((((cj2)*(x4992)))+(((cj2)*(x4994)))+(((IkReal(-1.00000000000000))*(r22)*(x4993)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x4993)*(x4994)))+(((IkReal(-1.00000000000000))*(x4992)*(x4993)))), ((((cj2)*(x4992)))+(((cj2)*(x4994)))+(((IkReal(-1.00000000000000))*(r22)*(x4993)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x4995=IKsin(j4);
IkReal x4996=IKcos(j4);
IkReal x4997=((cj2)*(sj6));
IkReal x4998=((cj1)*(r00));
IkReal x4999=((sj1)*(sj2));
IkReal x5000=((IkReal(1.00000000000000))*(sj6));
IkReal x5001=((IkReal(1.00000000000000))*(cj1));
IkReal x5002=((cj6)*(r01));
IkReal x5003=((cj2)*(sj1));
IkReal x5004=((cj6)*(r11));
IkReal x5005=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((x4995)+(((r12)*(x4999)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((x4996)+(((IkReal(-1.00000000000000))*(r12)*(x5003)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x5001))));
evalcond[2]=((x4995)+(((x5003)*(x5004)))+(((x4997)*(x4998)))+(((r10)*(sj1)*(x4997)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x5000)))+(((cj1)*(cj2)*(x5002)))+(((IkReal(-1.00000000000000))*(sj2)*(x5005))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x4997)))+(((IkReal(-1.00000000000000))*(sj2)*(x4998)*(x5000)))+(((IkReal(-1.00000000000000))*(r10)*(x4999)*(x5000)))+(((IkReal(-1.00000000000000))*(sj2)*(x5001)*(x5002)))+(((IkReal(-1.00000000000000))*(x4999)*(x5004)))+(((IkReal(-1.00000000000000))*(cj2)*(x5005)))+(((IkReal(-1.00000000000000))*(x4996))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

} else
{
IkReal x5006=((IkReal(1.00000000000000))*(sj6));
IkReal x5007=((r02)*(sj1));
IkReal x5008=((IkReal(1.00000000000000))*(cj6));
IkReal x5009=((cj1)*(r11));
IkReal x5010=((IkReal(0.400000000000000))*(sj1));
IkReal x5011=((cj6)*(r01));
IkReal x5012=((r00)*(sj6));
IkReal x5013=((cj1)*(r12));
IkReal x5014=((r01)*(sj6));
IkReal x5015=((cj6)*(r00)*(sj1));
IkReal x5016=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x5017=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((npz)+(((IkReal(-0.400000000000000))*(x5013)))+(((IkReal(0.400000000000000))*(x5007))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5007)))+(x5013));
evalcond[3]=((((sj1)*(x5012)))+(((sj1)*(x5011)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x5006)))+(((IkReal(-1.00000000000000))*(x5008)*(x5009))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x5006)))+(((IkReal(0.400000000000000))*(cj6)*(x5009)))+(((IkReal(-1.00000000000000))*(npy)*(x5008)))+(((IkReal(-1.00000000000000))*(x5010)*(x5012)))+(((IkReal(-1.00000000000000))*(x5010)*(x5011)))+(((r10)*(x5016))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x5006)*(x5009)))+(x5017)+(((sj1)*(x5014)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x5008))));
evalcond[6]=((IkReal(0.390000000000000))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(x5006)))+(((cj6)*(r00)*(x5010)))+(((IkReal(-1.00000000000000))*(x5010)*(x5014)))+(((IkReal(-0.400000000000000))*(x5017)))+(((IkReal(0.400000000000000))*(sj6)*(x5009))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
IkReal x5018=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(r21)*(x5018)))+(((cj6)*(r20))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(r10)*(sj1)))+(((cj1)*(cj6)*(r00)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x5018)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x5018))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x5019=IKatan2(((((IkReal(-1.00000000000000))*(r21)*(x5018)))+(((cj6)*(r20)))), ((((cj6)*(r10)*(sj1)))+(((cj1)*(cj6)*(r00)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x5018)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x5018)))));
j2array[0]=((IkReal(-1.00000000000000))*(x5019));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x5019))));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[1];
IkReal x5020=IKcos(j2);
IkReal x5021=IKsin(j2);
IkReal x5022=((IkReal(1.00000000000000))*(cj6));
IkReal x5023=((cj1)*(x5020));
IkReal x5024=((sj1)*(x5020));
evalcond[0]=((((cj6)*(r20)*(x5021)))+(((r01)*(sj6)*(x5023)))+(((IkReal(-1.00000000000000))*(r00)*(x5022)*(x5023)))+(((r11)*(sj6)*(x5024)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x5021)))+(((IkReal(-1.00000000000000))*(r10)*(x5022)*(x5024))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5025=((IkReal(1.00000000000000))*(sj2));
IkReal x5026=((r12)*(sj1));
IkReal x5027=((cj1)*(r02));
IkReal x5028=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IkReal(-1.00000000000000))*(x5025)*(x5027)))+(((IkReal(-1.00000000000000))*(x5025)*(x5026)))+(((IkReal(-1.00000000000000))*(r22)*(x5028))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x5026)*(x5028)))+(((IkReal(-1.00000000000000))*(x5027)*(x5028))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x5025)*(x5027)))+(((IkReal(-1.00000000000000))*(x5025)*(x5026)))+(((IkReal(-1.00000000000000))*(r22)*(x5028)))))+IKsqr(((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x5026)*(x5028)))+(((IkReal(-1.00000000000000))*(x5027)*(x5028)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x5025)*(x5027)))+(((IkReal(-1.00000000000000))*(x5025)*(x5026)))+(((IkReal(-1.00000000000000))*(r22)*(x5028)))), ((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x5026)*(x5028)))+(((IkReal(-1.00000000000000))*(x5027)*(x5028)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x5029=IKsin(j4);
IkReal x5030=((cj2)*(sj6));
IkReal x5031=((cj1)*(r00));
IkReal x5032=((sj1)*(sj2));
IkReal x5033=((IkReal(1.00000000000000))*(sj6));
IkReal x5034=((IkReal(1.00000000000000))*(cj1));
IkReal x5035=((cj6)*(r01));
IkReal x5036=((cj2)*(sj1));
IkReal x5037=((cj6)*(r11));
IkReal x5038=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x5039=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((((r12)*(x5032)))+(x5029)+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x5036)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x5034)))+(((IkReal(-1.00000000000000))*(x5038))));
evalcond[2]=((((x5036)*(x5037)))+(((r10)*(sj1)*(x5030)))+(((IkReal(-1.00000000000000))*(x5029)))+(((x5030)*(x5031)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x5033)))+(((cj1)*(cj2)*(x5035)))+(((IkReal(-1.00000000000000))*(sj2)*(x5039))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(x5034)*(x5035)))+(((IkReal(-1.00000000000000))*(r10)*(x5032)*(x5033)))+(((IkReal(-1.00000000000000))*(r20)*(x5030)))+(((IkReal(-1.00000000000000))*(x5032)*(x5037)))+(((IkReal(-1.00000000000000))*(sj2)*(x5031)*(x5033)))+(((IkReal(-1.00000000000000))*(cj2)*(x5039)))+(((IkReal(-1.00000000000000))*(x5038))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5040=((sj3)*(sj6));
IkReal x5041=((IkReal(1.00000000000000))*(cj6)*(sj3));
if( IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(r21)*(x5040)))+(((cj6)*(r20)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((cj1)*(r01)*(x5040)))+(((r11)*(sj1)*(x5040)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x5041)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x5041))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst9)*(((((IkReal(-1.00000000000000))*(r21)*(x5040)))+(((cj6)*(r20)*(sj3)))))), ((gconst9)*(((((cj1)*(r01)*(x5040)))+(((r11)*(sj1)*(x5040)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x5041)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x5041)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x5042=IKsin(j2);
IkReal x5043=IKcos(j2);
IkReal x5044=((cj6)*(r10));
IkReal x5045=((IkReal(1.00000000000000))*(sj6));
IkReal x5046=((cj1)*(r01));
IkReal x5047=((cj1)*(r00));
IkReal x5048=((sj1)*(x5042));
IkReal x5049=((cj6)*(x5043));
IkReal x5050=((sj6)*(x5043));
IkReal x5051=((cj6)*(x5042));
evalcond[0]=((((x5047)*(x5051)))+(((IkReal(-1.00000000000000))*(r11)*(x5045)*(x5048)))+(((IkReal(-1.00000000000000))*(r21)*(x5043)*(x5045)))+(((r20)*(x5049)))+(((IkReal(-1.00000000000000))*(x5042)*(x5045)*(x5046)))+(((x5044)*(x5048))));
evalcond[1]=((((r20)*(x5051)))+(((IkReal(-1.00000000000000))*(sj3)))+(((x5046)*(x5050)))+(((IkReal(-1.00000000000000))*(r21)*(x5042)*(x5045)))+(((IkReal(-1.00000000000000))*(x5047)*(x5049)))+(((IkReal(-1.00000000000000))*(sj1)*(x5043)*(x5044)))+(((r11)*(sj1)*(x5050))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst11;
gconst11=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x5052=((cj2)*(sj6));
IkReal x5053=((cj1)*(r00));
IkReal x5054=((IkReal(1.00000000000000))*(r21));
IkReal x5055=((IkReal(1.00000000000000))*(sj6));
IkReal x5056=((cj6)*(sj2));
IkReal x5057=((r10)*(sj1));
IkReal x5058=((IkReal(0.400000000000000))*(sj6));
IkReal x5059=((cj1)*(r11));
IkReal x5060=((cj6)*(r01));
IkReal x5061=((IkReal(0.400000000000000))*(sj1));
IkReal x5062=((IkReal(1.00000000000000))*(cj6));
IkReal x5063=((cj1)*(cj2));
IkReal x5064=((r11)*(sj1));
IkReal x5065=((cj1)*(r01));
IkReal x5066=((cj2)*(cj6));
IkReal x5067=((r01)*(sj1));
IkReal x5068=((cj6)*(r00)*(sj1));
IkReal x5069=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((npz)+(((r02)*(x5061)))+(((IkReal(-0.400000000000000))*(cj1)*(r12))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x5063)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(sj1))));
evalcond[3]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x5055)))+(((IkReal(-1.00000000000000))*(npy)*(x5062)))+(((cj1)*(r10)*(x5058)))+(((IkReal(0.400000000000000))*(cj6)*(x5059)))+(((IkReal(-1.00000000000000))*(x5060)*(x5061)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x5058))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(sj1)*(x5062)))+(((IkReal(-1.00000000000000))*(x5055)*(x5059)))+(x5069)+(((sj6)*(x5067))));
evalcond[5]=((IkReal(0.390000000000000))+(((x5058)*(x5059)))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x5058)*(x5067)))+(((IkReal(-1.00000000000000))*(npy)*(x5055)))+(((cj6)*(r00)*(x5061)))+(((IkReal(-0.400000000000000))*(x5069))));
evalcond[6]=((((x5060)*(x5063)))+(((IkReal(-1.00000000000000))*(x5054)*(x5056)))+(((x5052)*(x5053)))+(((x5052)*(x5057)))+(((x5064)*(x5066)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x5055))));
evalcond[7]=((((r20)*(x5066)))+(((x5053)*(x5056)))+(((x5056)*(x5057)))+(((IkReal(-1.00000000000000))*(x5052)*(x5054)))+(((IkReal(-1.00000000000000))*(sj2)*(x5055)*(x5065)))+(((IkReal(-1.00000000000000))*(sj2)*(x5055)*(x5064))));
evalcond[8]=((IkReal(-1.00000000000000))+(((r20)*(x5056)))+(((IkReal(-1.00000000000000))*(cj2)*(x5053)*(x5062)))+(((x5052)*(x5064)))+(((x5052)*(x5065)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x5054)))+(((IkReal(-1.00000000000000))*(cj2)*(x5057)*(x5062))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5070=((IkReal(1.00000000000000))*(sj2));
if( IKabs(((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5070)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5070))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5070)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5070)))))+IKsqr(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5070)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5070)))), ((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x5071=IKsin(j4);
IkReal x5072=IKcos(j4);
IkReal x5073=((sj1)*(sj2));
IkReal x5074=((IkReal(1.00000000000000))*(cj6));
IkReal x5075=((IkReal(1.00000000000000))*(sj6));
IkReal x5076=((cj1)*(sj2));
evalcond[0]=((x5071)+(((r02)*(x5076)))+(((cj2)*(r22)))+(((r12)*(x5073))));
evalcond[1]=((((cj1)*(r12)))+(x5072)+(((IkReal(-1.00000000000000))*(r02)*(sj1))));
evalcond[2]=((((cj6)*(r01)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x5074)))+(x5071)+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x5075)))+(((r00)*(sj1)*(sj6))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj2)*(r20)*(x5075)))+(((IkReal(-1.00000000000000))*(r00)*(x5075)*(x5076)))+(((IkReal(-1.00000000000000))*(r01)*(x5074)*(x5076)))+(((IkReal(-1.00000000000000))*(r11)*(x5073)*(x5074)))+(((IkReal(-1.00000000000000))*(x5072)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x5074)))+(((IkReal(-1.00000000000000))*(r10)*(x5073)*(x5075))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x5077=((cj2)*(sj6));
IkReal x5078=((cj1)*(r00));
IkReal x5079=((IkReal(1.00000000000000))*(r21));
IkReal x5080=((IkReal(1.00000000000000))*(sj6));
IkReal x5081=((cj6)*(sj2));
IkReal x5082=((r10)*(sj1));
IkReal x5083=((IkReal(0.400000000000000))*(sj6));
IkReal x5084=((cj1)*(r11));
IkReal x5085=((cj6)*(r01));
IkReal x5086=((IkReal(0.400000000000000))*(sj1));
IkReal x5087=((IkReal(1.00000000000000))*(cj6));
IkReal x5088=((cj1)*(cj2));
IkReal x5089=((r11)*(sj1));
IkReal x5090=((cj1)*(r01));
IkReal x5091=((cj2)*(cj6));
IkReal x5092=((r01)*(sj1));
IkReal x5093=((cj6)*(r00)*(sj1));
IkReal x5094=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((npz)+(((IkReal(-0.400000000000000))*(cj1)*(r12)))+(((r02)*(x5086))));
evalcond[2]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(r02)*(x5088)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(sj1))));
evalcond[3]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(x5085)*(x5086)))+(((IkReal(-1.00000000000000))*(npy)*(x5087)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x5083)))+(((IkReal(-1.00000000000000))*(npx)*(x5080)))+(((IkReal(0.400000000000000))*(cj6)*(x5084)))+(((cj1)*(r10)*(x5083))));
evalcond[4]=((((sj6)*(x5092)))+(((IkReal(-1.00000000000000))*(x5080)*(x5084)))+(x5094)+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x5087))));
evalcond[5]=((IkReal(0.390000000000000))+(((cj6)*(npx)))+(((IkReal(-0.400000000000000))*(x5094)))+(((IkReal(-1.00000000000000))*(x5083)*(x5092)))+(((IkReal(-1.00000000000000))*(npy)*(x5080)))+(((x5083)*(x5084)))+(((cj6)*(r00)*(x5086))));
evalcond[6]=((((x5077)*(x5082)))+(((IkReal(-1.00000000000000))*(x5079)*(x5081)))+(((x5089)*(x5091)))+(((x5085)*(x5088)))+(((x5077)*(x5078)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x5080))));
evalcond[7]=((((IkReal(-1.00000000000000))*(sj2)*(x5080)*(x5090)))+(((IkReal(-1.00000000000000))*(sj2)*(x5080)*(x5089)))+(((x5078)*(x5081)))+(((IkReal(-1.00000000000000))*(x5077)*(x5079)))+(((r20)*(x5091)))+(((x5081)*(x5082))));
evalcond[8]=((IkReal(1.00000000000000))+(((x5077)*(x5089)))+(((IkReal(-1.00000000000000))*(cj2)*(x5078)*(x5087)))+(((IkReal(-1.00000000000000))*(cj2)*(x5082)*(x5087)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x5079)))+(((r20)*(x5081)))+(((x5077)*(x5090))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5095=((IkReal(1.00000000000000))*(sj2));
if( IKabs(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5095)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5095))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5095)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5095)))))+IKsqr(((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5095)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5095)))), ((((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x5096=IKsin(j4);
IkReal x5097=((sj1)*(sj2));
IkReal x5098=((IkReal(1.00000000000000))*(cj6));
IkReal x5099=((IkReal(1.00000000000000))*(sj6));
IkReal x5100=((cj1)*(sj2));
IkReal x5101=((IkReal(1.00000000000000))*(IKcos(j4)));
evalcond[0]=((((r02)*(x5100)))+(x5096)+(((r12)*(x5097)))+(((cj2)*(r22))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x5101)))+(((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5096)))+(((cj6)*(r01)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x5098)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x5099)))+(((r00)*(sj1)*(sj6))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5101)))+(((IkReal(-1.00000000000000))*(r00)*(x5099)*(x5100)))+(((IkReal(-1.00000000000000))*(cj2)*(r20)*(x5099)))+(((IkReal(-1.00000000000000))*(r10)*(x5097)*(x5099)))+(((IkReal(-1.00000000000000))*(r11)*(x5097)*(x5098)))+(((IkReal(-1.00000000000000))*(r01)*(x5098)*(x5100)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x5098))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x5102=((IkReal(1.00000000000000))*(sj6));
IkReal x5103=((r02)*(sj1));
IkReal x5104=((cj1)*(cj6));
IkReal x5105=((cj6)*(sj1));
IkReal x5106=((IkReal(0.400000000000000))*(r01));
IkReal x5107=((IkReal(1.00000000000000))*(cj2));
IkReal x5108=((r11)*(sj1));
IkReal x5109=((cj2)*(sj6));
IkReal x5110=((cj1)*(r01));
IkReal x5111=((cj1)*(r12));
IkReal x5112=((cj6)*(r20));
IkReal x5113=((sj1)*(sj6));
IkReal x5114=((r00)*(x5105));
IkReal x5115=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x5116=((r00)*(x5113));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.400000000000000))*(x5103)))+(npz)+(((IkReal(-0.400000000000000))*(x5111))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5103)))+(x5111));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x5104)))+(((r01)*(x5105)))+(x5116)+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x5102))));
evalcond[4]=((IkReal(0.000500000000000000))+(((r10)*(x5115)))+(((IkReal(0.400000000000000))*(r11)*(x5104)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((IkReal(-1.00000000000000))*(npx)*(x5102)))+(((IkReal(-0.400000000000000))*(x5116)))+(((IkReal(-1.00000000000000))*(x5105)*(x5106))));
evalcond[5]=((IkReal(1.00000000000000))+(((r01)*(x5113)))+(((IkReal(-1.00000000000000))*(x5114)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x5102)))+(((r10)*(x5104))));
evalcond[6]=((IkReal(0.390000000000000))+(((cj6)*(npx)))+(((IkReal(-0.400000000000000))*(r10)*(x5104)))+(((IkReal(0.400000000000000))*(x5114)))+(((IkReal(-1.00000000000000))*(x5106)*(x5113)))+(((IkReal(-1.00000000000000))*(npy)*(x5102)))+(((r11)*(x5115))));
evalcond[7]=((((IkReal(-1.00000000000000))*(sj2)*(x5102)*(x5108)))+(((IkReal(-1.00000000000000))*(sj2)*(x5102)*(x5110)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x5102)))+(((r00)*(sj2)*(x5104)))+(((r10)*(sj2)*(x5105)))+(((cj2)*(x5112))));
evalcond[8]=((((x5108)*(x5109)))+(((x5109)*(x5110)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x5102)))+(((IkReal(-1.00000000000000))*(r00)*(x5104)*(x5107)))+(((sj2)*(x5112)))+(((IkReal(-1.00000000000000))*(r10)*(x5105)*(x5107))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5117=((r12)*(sj1));
IkReal x5118=((IkReal(1.00000000000000))*(sj2));
IkReal x5119=((cj1)*(r02));
if( IKabs(((((IkReal(-1.00000000000000))*(x5117)*(x5118)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x5118)*(x5119))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r22)*(x5118)))+(((cj2)*(x5117)))+(((cj2)*(x5119))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x5117)*(x5118)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x5118)*(x5119)))))+IKsqr(((((IkReal(-1.00000000000000))*(r22)*(x5118)))+(((cj2)*(x5117)))+(((cj2)*(x5119)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x5117)*(x5118)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x5118)*(x5119)))), ((((IkReal(-1.00000000000000))*(r22)*(x5118)))+(((cj2)*(x5117)))+(((cj2)*(x5119)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x5120=IKsin(j4);
IkReal x5121=IKcos(j4);
IkReal x5122=((cj2)*(sj6));
IkReal x5123=((cj1)*(r00));
IkReal x5124=((sj1)*(sj2));
IkReal x5125=((IkReal(1.00000000000000))*(sj6));
IkReal x5126=((IkReal(1.00000000000000))*(cj1));
IkReal x5127=((cj6)*(r01));
IkReal x5128=((cj2)*(sj1));
IkReal x5129=((cj6)*(r11));
IkReal x5130=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((((r12)*(x5124)))+(x5120)+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((r22)*(sj2)))+(x5121)+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x5126)))+(((IkReal(-1.00000000000000))*(r12)*(x5128))));
evalcond[2]=((((x5122)*(x5123)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x5125)))+(x5120)+(((x5128)*(x5129)))+(((r10)*(sj1)*(x5122)))+(((IkReal(-1.00000000000000))*(sj2)*(x5130)))+(((cj1)*(cj2)*(x5127))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(x5126)*(x5127)))+(((IkReal(-1.00000000000000))*(r10)*(x5124)*(x5125)))+(((IkReal(-1.00000000000000))*(sj2)*(x5123)*(x5125)))+(((IkReal(-1.00000000000000))*(x5121)))+(((IkReal(-1.00000000000000))*(cj2)*(x5130)))+(((IkReal(-1.00000000000000))*(x5124)*(x5129)))+(((IkReal(-1.00000000000000))*(r20)*(x5122))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x5131=((IkReal(1.00000000000000))*(sj6));
IkReal x5132=((r02)*(sj1));
IkReal x5133=((cj1)*(cj6));
IkReal x5134=((cj6)*(sj1));
IkReal x5135=((IkReal(0.400000000000000))*(r01));
IkReal x5136=((IkReal(1.00000000000000))*(cj2));
IkReal x5137=((r11)*(sj1));
IkReal x5138=((cj2)*(sj6));
IkReal x5139=((cj1)*(r01));
IkReal x5140=((cj1)*(r12));
IkReal x5141=((cj6)*(r20));
IkReal x5142=((sj1)*(sj6));
IkReal x5143=((r00)*(x5134));
IkReal x5144=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x5145=((r00)*(x5142));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((npz)+(((IkReal(-0.400000000000000))*(x5140)))+(((IkReal(0.400000000000000))*(x5132))));
evalcond[2]=((x5140)+(((IkReal(-1.00000000000000))*(x5132))));
evalcond[3]=((((r01)*(x5134)))+(x5145)+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x5131)))+(((IkReal(-1.00000000000000))*(r11)*(x5133))));
evalcond[4]=((IkReal(0.000500000000000000))+(((r10)*(x5144)))+(((IkReal(-1.00000000000000))*(npx)*(x5131)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((IkReal(-0.400000000000000))*(x5145)))+(((IkReal(0.400000000000000))*(r11)*(x5133)))+(((IkReal(-1.00000000000000))*(x5134)*(x5135))));
evalcond[5]=((IkReal(-1.00000000000000))+(((r01)*(x5142)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x5131)))+(((r10)*(x5133)))+(((IkReal(-1.00000000000000))*(x5143))));
evalcond[6]=((IkReal(0.390000000000000))+(((IkReal(-0.400000000000000))*(r10)*(x5133)))+(((IkReal(0.400000000000000))*(x5143)))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(x5131)))+(((IkReal(-1.00000000000000))*(x5135)*(x5142)))+(((r11)*(x5144))));
evalcond[7]=((((cj2)*(x5141)))+(((r10)*(sj2)*(x5134)))+(((r00)*(sj2)*(x5133)))+(((IkReal(-1.00000000000000))*(sj2)*(x5131)*(x5137)))+(((IkReal(-1.00000000000000))*(sj2)*(x5131)*(x5139)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x5131))));
evalcond[8]=((((IkReal(-1.00000000000000))*(r00)*(x5133)*(x5136)))+(((sj2)*(x5141)))+(((x5137)*(x5138)))+(((x5138)*(x5139)))+(((IkReal(-1.00000000000000))*(r10)*(x5134)*(x5136)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x5131))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5146=((IkReal(1.00000000000000))*(sj2));
IkReal x5147=((r12)*(sj1));
IkReal x5148=((cj1)*(r02));
IkReal x5149=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IkReal(-1.00000000000000))*(x5146)*(x5148)))+(((IkReal(-1.00000000000000))*(x5146)*(x5147)))+(((IkReal(-1.00000000000000))*(r22)*(x5149))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x5148)*(x5149)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x5147)*(x5149))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x5146)*(x5148)))+(((IkReal(-1.00000000000000))*(x5146)*(x5147)))+(((IkReal(-1.00000000000000))*(r22)*(x5149)))))+IKsqr(((((IkReal(-1.00000000000000))*(x5148)*(x5149)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x5147)*(x5149)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x5146)*(x5148)))+(((IkReal(-1.00000000000000))*(x5146)*(x5147)))+(((IkReal(-1.00000000000000))*(r22)*(x5149)))), ((((IkReal(-1.00000000000000))*(x5148)*(x5149)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x5147)*(x5149)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x5150=IKsin(j4);
IkReal x5151=((cj2)*(sj6));
IkReal x5152=((cj1)*(r00));
IkReal x5153=((sj1)*(sj2));
IkReal x5154=((IkReal(1.00000000000000))*(sj6));
IkReal x5155=((IkReal(1.00000000000000))*(cj1));
IkReal x5156=((cj6)*(r01));
IkReal x5157=((cj2)*(sj1));
IkReal x5158=((cj6)*(r11));
IkReal x5159=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x5160=((IkReal(1.00000000000000))*(cj6)*(r21));
evalcond[0]=((((r12)*(x5153)))+(x5150)+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x5157)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(x5155)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x5159))));
evalcond[2]=((((r10)*(sj1)*(x5151)))+(((x5157)*(x5158)))+(((IkReal(-1.00000000000000))*(sj2)*(x5160)))+(((IkReal(-1.00000000000000))*(x5150)))+(((x5151)*(x5152)))+(((cj1)*(cj2)*(x5156)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x5154))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(x5155)*(x5156)))+(((IkReal(-1.00000000000000))*(sj2)*(x5152)*(x5154)))+(((IkReal(-1.00000000000000))*(r10)*(x5153)*(x5154)))+(((IkReal(-1.00000000000000))*(x5159)))+(((IkReal(-1.00000000000000))*(x5153)*(x5158)))+(((IkReal(-1.00000000000000))*(r20)*(x5151)))+(((IkReal(-1.00000000000000))*(cj2)*(x5160))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5161=((r12)*(sj1));
IkReal x5162=((IkReal(1.00000000000000))*(sj2));
IkReal x5163=((cj1)*(r02));
if( IKabs(((((IkReal(-1.00000000000000))*(x5161)*(x5162)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x5162)*(x5163))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r22)*(x5162)))+(((cj2)*(x5161)))+(((cj2)*(x5163))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x5161)*(x5162)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x5162)*(x5163)))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r22)*(x5162)))+(((cj2)*(x5161)))+(((cj2)*(x5163)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x5161)*(x5162)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(x5162)*(x5163)))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r22)*(x5162)))+(((cj2)*(x5161)))+(((cj2)*(x5163)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x5164=IKcos(j4);
IkReal x5165=IKsin(j4);
IkReal x5166=((cj1)*(cj2));
IkReal x5167=((r00)*(sj6));
IkReal x5168=((IkReal(1.00000000000000))*(cj6));
IkReal x5169=((cj1)*(sj2));
IkReal x5170=((IkReal(1.00000000000000))*(sj1));
IkReal x5171=((sj2)*(sj6));
IkReal x5172=((IkReal(1.00000000000000))*(r20));
IkReal x5173=((cj6)*(r01));
IkReal x5174=((cj2)*(sj6));
IkReal x5175=((r11)*(sj1));
evalcond[0]=((x5165)+(((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((r02)*(x5169))));
evalcond[1]=((((sj3)*(x5164)))+(((IkReal(-1.00000000000000))*(r02)*(x5170)))+(((cj1)*(r12))));
evalcond[2]=((((cj3)*(x5164)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(x5170)))+(((IkReal(-1.00000000000000))*(r02)*(x5166))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(sj6)))+(((sj3)*(x5165)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x5168)))+(((sj1)*(x5167)))+(((sj1)*(x5173))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r21)*(sj2)*(x5168)))+(((cj3)*(x5165)))+(((x5166)*(x5167)))+(((x5166)*(x5173)))+(((cj2)*(cj6)*(x5175)))+(((r10)*(sj1)*(x5174)))+(((IkReal(-1.00000000000000))*(x5171)*(x5172))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj2)*(x5168)*(x5175)))+(((IkReal(-1.00000000000000))*(x5172)*(x5174)))+(((IkReal(-1.00000000000000))*(x5167)*(x5169)))+(((IkReal(-1.00000000000000))*(r10)*(x5170)*(x5171)))+(((IkReal(-1.00000000000000))*(x5164)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x5168)))+(((IkReal(-1.00000000000000))*(r01)*(x5168)*(x5169))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5176=((IkReal(1.00000000000000))*(sj2));
if( IKabs(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5176)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5176))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5176)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5176)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5176)))+(((IkReal(-1.00000000000000))*(cj2)*(r22)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5176)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x5177=IKcos(j4);
IkReal x5178=IKsin(j4);
IkReal x5179=((cj1)*(cj2));
IkReal x5180=((r00)*(sj6));
IkReal x5181=((IkReal(1.00000000000000))*(cj6));
IkReal x5182=((cj1)*(sj2));
IkReal x5183=((IkReal(1.00000000000000))*(sj1));
IkReal x5184=((sj2)*(sj6));
IkReal x5185=((IkReal(1.00000000000000))*(r20));
IkReal x5186=((cj6)*(r01));
IkReal x5187=((cj2)*(sj6));
IkReal x5188=((r11)*(sj1));
evalcond[0]=((x5178)+(((r12)*(sj1)*(sj2)))+(((cj2)*(r22)))+(((r02)*(x5182))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(x5183)))+(((sj3)*(x5177)))+(((cj1)*(r12))));
evalcond[2]=((((cj3)*(x5177)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(r12)*(x5183)))+(((IkReal(-1.00000000000000))*(r02)*(x5179))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(sj6)))+(((sj3)*(x5178)))+(((sj1)*(x5186)))+(((sj1)*(x5180)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x5181))));
evalcond[4]=((((r10)*(sj1)*(x5187)))+(((cj2)*(cj6)*(x5188)))+(((cj3)*(x5178)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x5181)))+(((IkReal(-1.00000000000000))*(x5184)*(x5185)))+(((x5179)*(x5186)))+(((x5179)*(x5180))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj2)*(r21)*(x5181)))+(((IkReal(-1.00000000000000))*(x5180)*(x5182)))+(((IkReal(-1.00000000000000))*(r10)*(x5183)*(x5184)))+(((IkReal(-1.00000000000000))*(x5177)))+(((IkReal(-1.00000000000000))*(r01)*(x5181)*(x5182)))+(((IkReal(-1.00000000000000))*(x5185)*(x5187)))+(((IkReal(-1.00000000000000))*(sj2)*(x5181)*(x5188))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5189=((IkReal(1.00000000000000))*(sj1));
if( IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x5189)))+(((cj1)*(cj6)*(r11)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x5189)))+(((cj1)*(r10)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst11)*(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x5189)))+(((cj1)*(cj6)*(r11)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x5189)))+(((cj1)*(r10)*(sj6)))))), ((gconst11)*(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x5190=IKcos(j4);
IkReal x5191=IKsin(j4);
IkReal x5192=((cj1)*(cj2));
IkReal x5193=((r00)*(sj6));
IkReal x5194=((IkReal(1.00000000000000))*(cj6));
IkReal x5195=((cj1)*(sj2));
IkReal x5196=((IkReal(1.00000000000000))*(sj1));
IkReal x5197=((sj2)*(sj6));
IkReal x5198=((IkReal(1.00000000000000))*(r20));
IkReal x5199=((cj6)*(r01));
IkReal x5200=((cj2)*(sj6));
IkReal x5201=((r11)*(sj1));
evalcond[0]=((((r02)*(x5195)))+(x5191)+(((r12)*(sj1)*(sj2)))+(((cj2)*(r22))));
evalcond[1]=((((cj1)*(r12)))+(((sj3)*(x5190)))+(((IkReal(-1.00000000000000))*(r02)*(x5196))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj2)*(r12)*(x5196)))+(((cj3)*(x5190)))+(((IkReal(-1.00000000000000))*(r02)*(x5192)))+(((r22)*(sj2))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(sj6)))+(((sj1)*(x5193)))+(((sj1)*(x5199)))+(((IkReal(-1.00000000000000))*(cj1)*(r11)*(x5194)))+(((sj3)*(x5191))));
evalcond[4]=((((cj3)*(x5191)))+(((r10)*(sj1)*(x5200)))+(((cj2)*(cj6)*(x5201)))+(((IkReal(-1.00000000000000))*(x5197)*(x5198)))+(((x5192)*(x5193)))+(((x5192)*(x5199)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x5194))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x5193)*(x5195)))+(((IkReal(-1.00000000000000))*(x5190)))+(((IkReal(-1.00000000000000))*(x5198)*(x5200)))+(((IkReal(-1.00000000000000))*(sj2)*(x5194)*(x5201)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x5194)))+(((IkReal(-1.00000000000000))*(r01)*(x5194)*(x5195)))+(((IkReal(-1.00000000000000))*(r10)*(x5196)*(x5197))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5202=((IkReal(1.00000000000000))*(sj1));
if( IKabs(((gconst10)*(((((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x5202)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x5202))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst10)*(((((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x5202)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x5202)))))), ((gconst10)*(((((r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(r12)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x5203=((IkReal(1.00000000000000))*(cj1));
evalcond[0]=((((sj3)*(IKcos(j4))))+(((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(r02)*(sj1))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(sj6)*(x5203)))+(((cj6)*(r01)*(sj1)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x5203)))+(((sj3)*(IKsin(j4))))+(((r00)*(sj1)*(sj6))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign((((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1))))));
dummyeval[0]=(((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst13;
IkReal x5204=((cj1)*(cj6));
IkReal x5205=((IkReal(1.00000000000000))*(r20));
IkReal x5206=((r21)*(sj6));
IkReal x5207=((r12)*(sj1));
IkReal x5208=((IkReal(1.00000000000000))*(r22)*(sj6));
gconst13=IKsign(((((IkReal(-1.00000000000000))*(r02)*(x5204)*(x5205)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x5208)))+(((IkReal(-1.00000000000000))*(cj6)*(x5205)*(x5207)))+(((x5206)*(x5207)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x5208)))+(((r00)*(r22)*(x5204)))+(((cj6)*(r10)*(r22)*(sj1)))+(((cj1)*(r02)*(x5206)))));
IkReal x5209=((cj1)*(cj6));
IkReal x5210=((IkReal(1.00000000000000))*(r20));
IkReal x5211=((r21)*(sj6));
IkReal x5212=((r12)*(sj1));
IkReal x5213=((IkReal(1.00000000000000))*(r22)*(sj6));
dummyeval[0]=((((cj1)*(r02)*(x5211)))+(((IkReal(-1.00000000000000))*(r11)*(sj1)*(x5213)))+(((r00)*(r22)*(x5209)))+(((x5211)*(x5212)))+(((cj6)*(r10)*(r22)*(sj1)))+(((IkReal(-1.00000000000000))*(cj6)*(x5210)*(x5212)))+(((IkReal(-1.00000000000000))*(r02)*(x5209)*(x5210)))+(((IkReal(-1.00000000000000))*(cj1)*(r01)*(x5213))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5214=((sj4)*(sj6));
IkReal x5215=((IkReal(1.00000000000000))*(cj6)*(sj4));
if( IKabs(((gconst13)*(((((IkReal(-1.00000000000000))*(r21)*(x5214)))+(((cj6)*(r20)*(sj4))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*(((((r11)*(sj1)*(x5214)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x5215)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x5215)))+(((cj1)*(r01)*(x5214))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst13)*(((((IkReal(-1.00000000000000))*(r21)*(x5214)))+(((cj6)*(r20)*(sj4)))))), ((gconst13)*(((((r11)*(sj1)*(x5214)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x5215)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(x5215)))+(((cj1)*(r01)*(x5214)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x5216=IKsin(j2);
IkReal x5217=IKcos(j2);
IkReal x5218=((r11)*(sj6));
IkReal x5219=((cj6)*(r11));
IkReal x5220=((cj6)*(r20));
IkReal x5221=((IkReal(1.00000000000000))*(sj6));
IkReal x5222=((cj1)*(r00));
IkReal x5223=((cj1)*(r01));
IkReal x5224=((IkReal(1.00000000000000))*(cj6));
IkReal x5225=((cj1)*(r02));
IkReal x5226=((sj1)*(x5216));
IkReal x5227=((sj1)*(x5217));
IkReal x5228=((r21)*(x5217));
IkReal x5229=((sj6)*(x5217));
IkReal x5230=((cj6)*(x5217));
IkReal x5231=((r21)*(x5216));
evalcond[0]=((sj4)+(((x5216)*(x5225)))+(((r22)*(x5217)))+(((r12)*(x5226))));
evalcond[1]=((((cj3)*(cj4)))+(((IkReal(-1.00000000000000))*(x5217)*(x5225)))+(((IkReal(-1.00000000000000))*(r12)*(x5227)))+(((r22)*(x5216))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x5216)*(x5221)))+(((x5219)*(x5227)))+(((x5222)*(x5229)))+(((x5223)*(x5230)))+(((r10)*(sj6)*(x5227)))+(((IkReal(-1.00000000000000))*(x5224)*(x5231)))+(((cj3)*(sj4))));
evalcond[3]=((((x5217)*(x5220)))+(((IkReal(-1.00000000000000))*(x5221)*(x5228)))+(((cj6)*(r10)*(x5226)))+(((cj6)*(x5216)*(x5222)))+(((IkReal(-1.00000000000000))*(x5216)*(x5221)*(x5223)))+(((IkReal(-1.00000000000000))*(x5218)*(x5226))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(x5217)*(x5221)))+(((IkReal(-1.00000000000000))*(x5216)*(x5223)*(x5224)))+(((IkReal(-1.00000000000000))*(x5219)*(x5226)))+(((IkReal(-1.00000000000000))*(x5224)*(x5228)))+(((IkReal(-1.00000000000000))*(r10)*(x5221)*(x5226)))+(((IkReal(-1.00000000000000))*(x5216)*(x5221)*(x5222)))+(((IkReal(-1.00000000000000))*(cj4))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj3)))+(((IkReal(-1.00000000000000))*(x5217)*(x5222)*(x5224)))+(((x5223)*(x5229)))+(((x5216)*(x5220)))+(((x5218)*(x5227)))+(((IkReal(-1.00000000000000))*(r10)*(x5224)*(x5227)))+(((IkReal(-1.00000000000000))*(x5221)*(x5231))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5232=((cj1)*(r02));
IkReal x5233=((cj3)*(cj4));
IkReal x5234=((IkReal(1.00000000000000))*(sj4));
IkReal x5235=((r12)*(sj1));
if( IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(x5234)*(x5235)))+(((IkReal(-1.00000000000000))*(r22)*(x5233)))+(((IkReal(-1.00000000000000))*(x5232)*(x5234))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(r22)*(x5234)))+(((x5233)*(x5235)))+(((x5232)*(x5233))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst12)*(((((IkReal(-1.00000000000000))*(x5234)*(x5235)))+(((IkReal(-1.00000000000000))*(r22)*(x5233)))+(((IkReal(-1.00000000000000))*(x5232)*(x5234)))))), ((gconst12)*(((((IkReal(-1.00000000000000))*(r22)*(x5234)))+(((x5233)*(x5235)))+(((x5232)*(x5233)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x5236=IKsin(j2);
IkReal x5237=IKcos(j2);
IkReal x5238=((r11)*(sj6));
IkReal x5239=((cj6)*(r11));
IkReal x5240=((cj6)*(r20));
IkReal x5241=((IkReal(1.00000000000000))*(sj6));
IkReal x5242=((cj1)*(r00));
IkReal x5243=((cj1)*(r01));
IkReal x5244=((IkReal(1.00000000000000))*(cj6));
IkReal x5245=((cj1)*(r02));
IkReal x5246=((sj1)*(x5236));
IkReal x5247=((sj1)*(x5237));
IkReal x5248=((r21)*(x5237));
IkReal x5249=((sj6)*(x5237));
IkReal x5250=((cj6)*(x5237));
IkReal x5251=((r21)*(x5236));
evalcond[0]=((sj4)+(((x5236)*(x5245)))+(((r12)*(x5246)))+(((r22)*(x5237))));
evalcond[1]=((((cj3)*(cj4)))+(((IkReal(-1.00000000000000))*(x5237)*(x5245)))+(((IkReal(-1.00000000000000))*(r12)*(x5247)))+(((r22)*(x5236))));
evalcond[2]=((((x5239)*(x5247)))+(((r10)*(sj6)*(x5247)))+(((IkReal(-1.00000000000000))*(r20)*(x5236)*(x5241)))+(((x5242)*(x5249)))+(((x5243)*(x5250)))+(((IkReal(-1.00000000000000))*(x5244)*(x5251)))+(((cj3)*(sj4))));
evalcond[3]=((((x5237)*(x5240)))+(((cj6)*(r10)*(x5246)))+(((cj6)*(x5236)*(x5242)))+(((IkReal(-1.00000000000000))*(x5236)*(x5241)*(x5243)))+(((IkReal(-1.00000000000000))*(x5241)*(x5248)))+(((IkReal(-1.00000000000000))*(x5238)*(x5246))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x5239)*(x5246)))+(((IkReal(-1.00000000000000))*(x5236)*(x5243)*(x5244)))+(((IkReal(-1.00000000000000))*(x5236)*(x5241)*(x5242)))+(((IkReal(-1.00000000000000))*(r20)*(x5237)*(x5241)))+(((IkReal(-1.00000000000000))*(r10)*(x5241)*(x5246)))+(((IkReal(-1.00000000000000))*(cj4)))+(((IkReal(-1.00000000000000))*(x5244)*(x5248))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj3)))+(((x5238)*(x5247)))+(((x5236)*(x5240)))+(((x5243)*(x5249)))+(((IkReal(-1.00000000000000))*(x5237)*(x5242)*(x5244)))+(((IkReal(-1.00000000000000))*(x5241)*(x5251)))+(((IkReal(-1.00000000000000))*(r10)*(x5244)*(x5247))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x5252=((IkReal(1.00000000000000))*(sj6));
IkReal x5253=((IkReal(0.400000000000000))*(cj6));
IkReal x5254=((r00)*(sj1));
IkReal x5255=((cj1)*(r11));
IkReal x5256=((r02)*(sj1));
IkReal x5257=((cj1)*(r10));
IkReal x5258=((IkReal(0.400000000000000))*(sj6));
IkReal x5259=((cj1)*(r12));
IkReal x5260=((r01)*(sj1));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(((IkReal(-0.400000000000000))*(x5259)))+(((IkReal(0.400000000000000))*(x5256)))+(npz));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5256)))+(x5259)+(((IkReal(-1.00000000000000))*(cj3))));
evalcond[3]=((IkReal(0.000500000000000000))+(((x5253)*(x5255)))+(((IkReal(-1.00000000000000))*(x5254)*(x5258)))+(((IkReal(-1.00000000000000))*(npx)*(x5252)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((x5257)*(x5258)))+(((IkReal(-1.00000000000000))*(x5253)*(x5260))));
evalcond[4]=((((x5255)*(x5258)))+(((IkReal(-1.00000000000000))*(x5258)*(x5260)))+(((x5253)*(x5254)))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(x5252)))+(((IkReal(-1.00000000000000))*(x5253)*(x5257))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign(((((IkReal(-1.00000000000000))*((cj1)*(cj1))*((r02)*(r02))))+(((IkReal(-1.00000000000000))*((r12)*(r12))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj1)*(cj1))*((r02)*(r02))))+(((IkReal(-1.00000000000000))*((r12)*(r12))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-2.00000000000000))*(cj1)*(r02)*(r12)*(sj1))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x5261=((IkReal(1.00000000000000))*(sj6));
IkReal x5262=((r02)*(sj1));
IkReal x5263=((IkReal(1.00000000000000))*(cj6));
IkReal x5264=((cj1)*(r11));
IkReal x5265=((IkReal(0.400000000000000))*(sj1));
IkReal x5266=((cj6)*(r01));
IkReal x5267=((r00)*(sj6));
IkReal x5268=((cj1)*(r12));
IkReal x5269=((r01)*(sj6));
IkReal x5270=((cj6)*(r00)*(sj1));
IkReal x5271=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x5272=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(((IkReal(-0.400000000000000))*(x5268)))+(npz)+(((IkReal(0.400000000000000))*(x5262))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x5262)))+(x5268));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5263)*(x5264)))+(((sj1)*(x5266)))+(((sj1)*(x5267)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x5261))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x5261)))+(((IkReal(-1.00000000000000))*(npy)*(x5263)))+(((r10)*(x5271)))+(((IkReal(0.400000000000000))*(cj6)*(x5264)))+(((IkReal(-1.00000000000000))*(x5265)*(x5266)))+(((IkReal(-1.00000000000000))*(x5265)*(x5267))));
evalcond[5]=((((sj1)*(x5269)))+(x5272)+(((IkReal(-1.00000000000000))*(x5261)*(x5264)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x5263))));
evalcond[6]=((((cj6)*(npx)))+(((cj6)*(r00)*(x5265)))+(((IkReal(-1.00000000000000))*(npy)*(x5261)))+(((IkReal(0.400000000000000))*(sj6)*(x5264)))+(((IkReal(-0.400000000000000))*(x5272)))+(((IkReal(-1.00000000000000))*(x5265)*(x5269))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
if( IKabs(r22) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(r02)))+(((r12)*(sj1))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x5273=IKatan2(r22, ((((cj1)*(r02)))+(((r12)*(sj1)))));
j2array[0]=((IkReal(-1.00000000000000))*(x5273));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x5273))));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[1];
IkReal x5274=IKcos(j2);
IkReal x5275=((IkReal(1.00000000000000))*(x5274));
evalcond[0]=((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5275)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5275)))+(((r22)*(IKsin(j2)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5276=((sj2)*(sj6));
IkReal x5277=((r11)*(sj1));
IkReal x5278=((cj2)*(sj6));
IkReal x5279=((cj2)*(cj6));
IkReal x5280=((r10)*(sj1));
IkReal x5281=((IkReal(1.00000000000000))*(r20));
IkReal x5282=((cj6)*(sj2));
IkReal x5283=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((IkReal(-1.00000000000000))*(x5279)*(x5281)))+(((r21)*(x5278)))+(((x5276)*(x5277)))+(((IkReal(-1.00000000000000))*(r00)*(x5282)*(x5283)))+(((cj1)*(r01)*(x5276)))+(((IkReal(-1.00000000000000))*(x5280)*(x5282))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x5281)*(x5282)))+(((IkReal(-1.00000000000000))*(x5277)*(x5278)))+(((x5279)*(x5280)))+(((IkReal(-1.00000000000000))*(r01)*(x5278)*(x5283)))+(((r21)*(x5276)))+(((cj1)*(r00)*(x5279))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x5279)*(x5281)))+(((r21)*(x5278)))+(((x5276)*(x5277)))+(((IkReal(-1.00000000000000))*(r00)*(x5282)*(x5283)))+(((cj1)*(r01)*(x5276)))+(((IkReal(-1.00000000000000))*(x5280)*(x5282)))))+IKsqr(((((IkReal(-1.00000000000000))*(x5281)*(x5282)))+(((IkReal(-1.00000000000000))*(x5277)*(x5278)))+(((x5279)*(x5280)))+(((IkReal(-1.00000000000000))*(r01)*(x5278)*(x5283)))+(((r21)*(x5276)))+(((cj1)*(r00)*(x5279)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x5279)*(x5281)))+(((r21)*(x5278)))+(((x5276)*(x5277)))+(((IkReal(-1.00000000000000))*(r00)*(x5282)*(x5283)))+(((cj1)*(r01)*(x5276)))+(((IkReal(-1.00000000000000))*(x5280)*(x5282)))), ((((IkReal(-1.00000000000000))*(x5281)*(x5282)))+(((IkReal(-1.00000000000000))*(x5277)*(x5278)))+(((x5279)*(x5280)))+(((IkReal(-1.00000000000000))*(r01)*(x5278)*(x5283)))+(((r21)*(x5276)))+(((cj1)*(r00)*(x5279)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x5284=IKsin(j4);
IkReal x5285=IKcos(j4);
IkReal x5286=((cj2)*(sj6));
IkReal x5287=((cj1)*(r00));
IkReal x5288=((IkReal(1.00000000000000))*(r21));
IkReal x5289=((cj6)*(sj2));
IkReal x5290=((r10)*(sj1));
IkReal x5291=((cj2)*(cj6));
IkReal x5292=((cj1)*(r01));
IkReal x5293=((r11)*(sj1));
IkReal x5294=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((x5291)*(x5293)))+(((x5291)*(x5292)))+(((x5286)*(x5287)))+(((IkReal(-1.00000000000000))*(x5288)*(x5289)))+(((x5286)*(x5290)))+(x5284)+(((IkReal(-1.00000000000000))*(r20)*(x5294))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x5286)*(x5288)))+(((x5289)*(x5290)))+(x5284)+(((IkReal(-1.00000000000000))*(x5292)*(x5294)))+(((r20)*(x5291)))+(((IkReal(-1.00000000000000))*(x5293)*(x5294)))+(((x5287)*(x5289))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5287)*(x5294)))+(((IkReal(-1.00000000000000))*(x5288)*(x5291)))+(((IkReal(-1.00000000000000))*(x5289)*(x5292)))+(((IkReal(-1.00000000000000))*(x5289)*(x5293)))+(((IkReal(-1.00000000000000))*(x5285)))+(((IkReal(-1.00000000000000))*(r20)*(x5286)))+(((IkReal(-1.00000000000000))*(x5290)*(x5294))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5287)*(x5291)))+(((x5286)*(x5293)))+(((x5286)*(x5292)))+(x5285)+(((IkReal(-1.00000000000000))*(x5290)*(x5291)))+(((r20)*(x5289)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x5288))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

} else
{
IkReal x5295=((IkReal(1.00000000000000))*(sj6));
IkReal x5296=((r02)*(sj1));
IkReal x5297=((IkReal(1.00000000000000))*(cj6));
IkReal x5298=((cj1)*(r11));
IkReal x5299=((IkReal(0.400000000000000))*(sj1));
IkReal x5300=((cj6)*(r01));
IkReal x5301=((r00)*(sj6));
IkReal x5302=((cj1)*(r12));
IkReal x5303=((r01)*(sj6));
IkReal x5304=((cj6)*(r00)*(sj1));
IkReal x5305=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x5306=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(npz)+(((IkReal(-0.400000000000000))*(x5302)))+(((IkReal(0.400000000000000))*(x5296))));
evalcond[2]=((IkReal(1.00000000000000))+(x5302)+(((IkReal(-1.00000000000000))*(x5296))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x5295)))+(((sj1)*(x5301)))+(((sj1)*(x5300)))+(((IkReal(-1.00000000000000))*(x5297)*(x5298))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x5295)))+(((IkReal(-1.00000000000000))*(npy)*(x5297)))+(((IkReal(0.400000000000000))*(cj6)*(x5298)))+(((r10)*(x5305)))+(((IkReal(-1.00000000000000))*(x5299)*(x5300)))+(((IkReal(-1.00000000000000))*(x5299)*(x5301))));
evalcond[5]=((x5306)+(((sj1)*(x5303)))+(((IkReal(-1.00000000000000))*(x5295)*(x5298)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x5297))));
evalcond[6]=((((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(x5295)))+(((cj6)*(r00)*(x5299)))+(((IkReal(0.400000000000000))*(sj6)*(x5298)))+(((IkReal(-0.400000000000000))*(x5306)))+(((IkReal(-1.00000000000000))*(x5299)*(x5303))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
if( IKabs(r22) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(r02)))+(((r12)*(sj1))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x5307=IKatan2(r22, ((((cj1)*(r02)))+(((r12)*(sj1)))));
j2array[0]=((IkReal(-1.00000000000000))*(x5307));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x5307))));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[1];
IkReal x5308=IKcos(j2);
IkReal x5309=((IkReal(1.00000000000000))*(x5308));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5309)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5309)))+(((r22)*(IKsin(j2)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5310=((cj1)*(cj2));
IkReal x5311=((IkReal(1.00000000000000))*(cj6));
IkReal x5312=((r21)*(sj2));
IkReal x5313=((IkReal(1.00000000000000))*(sj6));
IkReal x5314=((r20)*(sj2));
IkReal x5315=((cj2)*(sj1));
IkReal x5316=((sj6)*(x5315));
if( IKabs(((((IkReal(-1.00000000000000))*(x5313)*(x5314)))+(((cj6)*(r01)*(x5310)))+(((r00)*(sj6)*(x5310)))+(((r10)*(x5316)))+(((cj6)*(r11)*(x5315)))+(((IkReal(-1.00000000000000))*(x5311)*(x5312))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x5312)*(x5313)))+(((cj6)*(x5314)))+(((r11)*(x5316)))+(((IkReal(-1.00000000000000))*(r10)*(x5311)*(x5315)))+(((IkReal(-1.00000000000000))*(r00)*(x5310)*(x5311)))+(((r01)*(sj6)*(x5310))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x5313)*(x5314)))+(((cj6)*(r01)*(x5310)))+(((r00)*(sj6)*(x5310)))+(((r10)*(x5316)))+(((cj6)*(r11)*(x5315)))+(((IkReal(-1.00000000000000))*(x5311)*(x5312)))))+IKsqr(((((IkReal(-1.00000000000000))*(x5312)*(x5313)))+(((cj6)*(x5314)))+(((r11)*(x5316)))+(((IkReal(-1.00000000000000))*(r10)*(x5311)*(x5315)))+(((IkReal(-1.00000000000000))*(r00)*(x5310)*(x5311)))+(((r01)*(sj6)*(x5310)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x5313)*(x5314)))+(((cj6)*(r01)*(x5310)))+(((r00)*(sj6)*(x5310)))+(((r10)*(x5316)))+(((cj6)*(r11)*(x5315)))+(((IkReal(-1.00000000000000))*(x5311)*(x5312)))), ((((IkReal(-1.00000000000000))*(x5312)*(x5313)))+(((cj6)*(x5314)))+(((r11)*(x5316)))+(((IkReal(-1.00000000000000))*(r10)*(x5311)*(x5315)))+(((IkReal(-1.00000000000000))*(r00)*(x5310)*(x5311)))+(((r01)*(sj6)*(x5310)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x5317=IKsin(j4);
IkReal x5318=((cj2)*(sj6));
IkReal x5319=((cj1)*(r00));
IkReal x5320=((IkReal(1.00000000000000))*(r21));
IkReal x5321=((cj6)*(sj2));
IkReal x5322=((r10)*(sj1));
IkReal x5323=((cj2)*(cj6));
IkReal x5324=((cj1)*(r01));
IkReal x5325=((r11)*(sj1));
IkReal x5326=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x5327=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((x5318)*(x5322)))+(((IkReal(-1.00000000000000))*(r20)*(x5327)))+(((x5323)*(x5325)))+(((x5323)*(x5324)))+(((x5318)*(x5319)))+(((IkReal(-1.00000000000000))*(x5317)))+(((IkReal(-1.00000000000000))*(x5320)*(x5321))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x5318)*(x5320)))+(((IkReal(-1.00000000000000))*(x5325)*(x5327)))+(x5317)+(((r20)*(x5323)))+(((x5321)*(x5322)))+(((x5319)*(x5321)))+(((IkReal(-1.00000000000000))*(x5324)*(x5327))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5322)*(x5327)))+(((IkReal(-1.00000000000000))*(x5326)))+(((IkReal(-1.00000000000000))*(x5321)*(x5325)))+(((IkReal(-1.00000000000000))*(x5321)*(x5324)))+(((IkReal(-1.00000000000000))*(r20)*(x5318)))+(((IkReal(-1.00000000000000))*(x5319)*(x5327)))+(((IkReal(-1.00000000000000))*(x5320)*(x5323))));
evalcond[3]=((((x5318)*(x5324)))+(((x5318)*(x5325)))+(((r20)*(x5321)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x5320)))+(((IkReal(-1.00000000000000))*(x5319)*(x5323)))+(((IkReal(-1.00000000000000))*(x5326)))+(((IkReal(-1.00000000000000))*(x5322)*(x5323))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5328=((IkReal(1.00000000000000))*(sj3));
if( IKabs(((gconst14)*(r22)*(sj3))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5328)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5328))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst14)*(r22)*(sj3)), ((gconst14)*(((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5328)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5328)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x5329=IKsin(j2);
IkReal x5330=IKcos(j2);
IkReal x5331=((r12)*(sj1));
IkReal x5332=((cj1)*(r02));
IkReal x5333=((IkReal(1.00000000000000))*(x5330));
evalcond[0]=((((r22)*(x5330)))+(((x5329)*(x5332)))+(((x5329)*(x5331))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x5331)*(x5333)))+(sj3)+(((IkReal(-1.00000000000000))*(x5332)*(x5333)))+(((r22)*(x5329))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst16;
gconst16=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj3;
dummyeval[1]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x5334=((IkReal(1.00000000000000))*(sj6));
IkReal x5335=((IkReal(1.00000000000000))*(r02));
IkReal x5336=((cj1)*(r11));
IkReal x5337=((IkReal(1.00000000000000))*(cj6));
IkReal x5338=((IkReal(0.400000000000000))*(sj6));
IkReal x5339=((r00)*(sj1));
IkReal x5340=((cj1)*(r12));
IkReal x5341=((r12)*(sj1));
IkReal x5342=((r01)*(sj1));
IkReal x5343=((cj1)*(r10));
IkReal x5344=((cj6)*(x5339));
IkReal x5345=((cj6)*(x5342));
IkReal x5346=((cj6)*(x5343));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1)))+(((IkReal(-0.400000000000000))*(x5340))));
evalcond[2]=((((sj2)*(x5341)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((IkReal(-1.00000000000000))+(x5340)+(((IkReal(-1.00000000000000))*(sj1)*(x5335))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj2)*(x5341)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(x5335))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x5334)*(x5343)))+(x5345)+(((IkReal(-1.00000000000000))*(x5336)*(x5337)))+(((sj6)*(x5339))));
evalcond[6]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x5337)))+(((IkReal(-1.00000000000000))*(x5338)*(x5339)))+(((IkReal(-1.00000000000000))*(npx)*(x5334)))+(((x5338)*(x5343)))+(((IkReal(-0.400000000000000))*(x5345)))+(((IkReal(0.400000000000000))*(cj6)*(x5336))));
evalcond[7]=((x5346)+(((sj6)*(x5342)))+(((IkReal(-1.00000000000000))*(x5337)*(x5339)))+(((IkReal(-1.00000000000000))*(x5334)*(x5336))));
evalcond[8]=((((x5336)*(x5338)))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x5338)*(x5342)))+(((IkReal(-1.00000000000000))*(npy)*(x5334)))+(((IkReal(0.400000000000000))*(x5344)))+(((IkReal(-0.400000000000000))*(x5346))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5347=((sj2)*(sj6));
IkReal x5348=((r11)*(sj1));
IkReal x5349=((cj2)*(sj6));
IkReal x5350=((cj2)*(cj6));
IkReal x5351=((r10)*(sj1));
IkReal x5352=((IkReal(1.00000000000000))*(r20));
IkReal x5353=((cj6)*(sj2));
IkReal x5354=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((cj1)*(r01)*(x5347)))+(((x5347)*(x5348)))+(((IkReal(-1.00000000000000))*(x5351)*(x5353)))+(((IkReal(-1.00000000000000))*(x5350)*(x5352)))+(((IkReal(-1.00000000000000))*(r00)*(x5353)*(x5354)))+(((r21)*(x5349))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x5352)*(x5353)))+(((x5350)*(x5351)))+(((IkReal(-1.00000000000000))*(r01)*(x5349)*(x5354)))+(((r21)*(x5347)))+(((IkReal(-1.00000000000000))*(x5348)*(x5349)))+(((cj1)*(r00)*(x5350))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj1)*(r01)*(x5347)))+(((x5347)*(x5348)))+(((IkReal(-1.00000000000000))*(x5351)*(x5353)))+(((IkReal(-1.00000000000000))*(x5350)*(x5352)))+(((IkReal(-1.00000000000000))*(r00)*(x5353)*(x5354)))+(((r21)*(x5349)))))+IKsqr(((((IkReal(-1.00000000000000))*(x5352)*(x5353)))+(((x5350)*(x5351)))+(((IkReal(-1.00000000000000))*(r01)*(x5349)*(x5354)))+(((r21)*(x5347)))+(((IkReal(-1.00000000000000))*(x5348)*(x5349)))+(((cj1)*(r00)*(x5350)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((cj1)*(r01)*(x5347)))+(((x5347)*(x5348)))+(((IkReal(-1.00000000000000))*(x5351)*(x5353)))+(((IkReal(-1.00000000000000))*(x5350)*(x5352)))+(((IkReal(-1.00000000000000))*(r00)*(x5353)*(x5354)))+(((r21)*(x5349)))), ((((IkReal(-1.00000000000000))*(x5352)*(x5353)))+(((x5350)*(x5351)))+(((IkReal(-1.00000000000000))*(r01)*(x5349)*(x5354)))+(((r21)*(x5347)))+(((IkReal(-1.00000000000000))*(x5348)*(x5349)))+(((cj1)*(r00)*(x5350)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x5355=IKsin(j4);
IkReal x5356=IKcos(j4);
IkReal x5357=((cj2)*(sj6));
IkReal x5358=((cj1)*(r00));
IkReal x5359=((IkReal(1.00000000000000))*(r21));
IkReal x5360=((cj6)*(sj2));
IkReal x5361=((r10)*(sj1));
IkReal x5362=((cj2)*(cj6));
IkReal x5363=((cj1)*(r01));
IkReal x5364=((r11)*(sj1));
IkReal x5365=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((x5357)*(x5358)))+(x5355)+(((x5362)*(x5363)))+(((x5362)*(x5364)))+(((IkReal(-1.00000000000000))*(r20)*(x5365)))+(((x5357)*(x5361)))+(((IkReal(-1.00000000000000))*(x5359)*(x5360))));
evalcond[1]=((x5355)+(((IkReal(-1.00000000000000))*(x5357)*(x5359)))+(((x5360)*(x5361)))+(((IkReal(-1.00000000000000))*(x5364)*(x5365)))+(((IkReal(-1.00000000000000))*(x5363)*(x5365)))+(((r20)*(x5362)))+(((x5358)*(x5360))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5358)*(x5365)))+(((IkReal(-1.00000000000000))*(r20)*(x5357)))+(((IkReal(-1.00000000000000))*(x5359)*(x5362)))+(((IkReal(-1.00000000000000))*(x5361)*(x5365)))+(((IkReal(-1.00000000000000))*(x5356)))+(((IkReal(-1.00000000000000))*(x5360)*(x5363)))+(((IkReal(-1.00000000000000))*(x5360)*(x5364))));
evalcond[3]=((x5356)+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x5359)))+(((IkReal(-1.00000000000000))*(x5358)*(x5362)))+(((IkReal(-1.00000000000000))*(x5361)*(x5362)))+(((x5357)*(x5363)))+(((x5357)*(x5364)))+(((r20)*(x5360))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x5366=((IkReal(1.00000000000000))*(sj6));
IkReal x5367=((IkReal(1.00000000000000))*(r02));
IkReal x5368=((cj1)*(r11));
IkReal x5369=((IkReal(1.00000000000000))*(cj6));
IkReal x5370=((IkReal(0.400000000000000))*(sj6));
IkReal x5371=((r00)*(sj1));
IkReal x5372=((cj1)*(r12));
IkReal x5373=((r12)*(sj1));
IkReal x5374=((r01)*(sj1));
IkReal x5375=((cj1)*(r10));
IkReal x5376=((cj6)*(x5371));
IkReal x5377=((cj6)*(x5374));
IkReal x5378=((cj6)*(x5375));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1)))+(((IkReal(-0.400000000000000))*(x5372))));
evalcond[2]=((((sj2)*(x5373)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((IkReal(1.00000000000000))+(x5372)+(((IkReal(-1.00000000000000))*(sj1)*(x5367))));
evalcond[4]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(x5367)))+(((IkReal(-1.00000000000000))*(cj2)*(x5373))));
evalcond[5]=((x5377)+(((IkReal(-1.00000000000000))*(x5368)*(x5369)))+(((IkReal(-1.00000000000000))*(x5366)*(x5375)))+(((sj6)*(x5371))));
evalcond[6]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x5369)))+(((IkReal(-1.00000000000000))*(npx)*(x5366)))+(((IkReal(-1.00000000000000))*(x5370)*(x5371)))+(((IkReal(0.400000000000000))*(cj6)*(x5368)))+(((x5370)*(x5375)))+(((IkReal(-0.400000000000000))*(x5377))));
evalcond[7]=((x5378)+(((IkReal(-1.00000000000000))*(x5366)*(x5368)))+(((sj6)*(x5374)))+(((IkReal(-1.00000000000000))*(x5369)*(x5371))));
evalcond[8]=((((IkReal(0.400000000000000))*(x5376)))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(x5366)))+(((x5368)*(x5370)))+(((IkReal(-1.00000000000000))*(x5370)*(x5374)))+(((IkReal(-0.400000000000000))*(x5378))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5379=((cj1)*(cj2));
IkReal x5380=((IkReal(1.00000000000000))*(cj6));
IkReal x5381=((r21)*(sj2));
IkReal x5382=((IkReal(1.00000000000000))*(sj6));
IkReal x5383=((r20)*(sj2));
IkReal x5384=((cj2)*(sj1));
IkReal x5385=((sj6)*(x5384));
if( IKabs(((((r10)*(x5385)))+(((IkReal(-1.00000000000000))*(x5382)*(x5383)))+(((cj6)*(r11)*(x5384)))+(((IkReal(-1.00000000000000))*(x5380)*(x5381)))+(((r00)*(sj6)*(x5379)))+(((cj6)*(r01)*(x5379))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r00)*(x5379)*(x5380)))+(((r11)*(x5385)))+(((cj6)*(x5383)))+(((IkReal(-1.00000000000000))*(r10)*(x5380)*(x5384)))+(((r01)*(sj6)*(x5379)))+(((IkReal(-1.00000000000000))*(x5381)*(x5382))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r10)*(x5385)))+(((IkReal(-1.00000000000000))*(x5382)*(x5383)))+(((cj6)*(r11)*(x5384)))+(((IkReal(-1.00000000000000))*(x5380)*(x5381)))+(((r00)*(sj6)*(x5379)))+(((cj6)*(r01)*(x5379)))))+IKsqr(((((IkReal(-1.00000000000000))*(r00)*(x5379)*(x5380)))+(((r11)*(x5385)))+(((cj6)*(x5383)))+(((IkReal(-1.00000000000000))*(r10)*(x5380)*(x5384)))+(((r01)*(sj6)*(x5379)))+(((IkReal(-1.00000000000000))*(x5381)*(x5382)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((r10)*(x5385)))+(((IkReal(-1.00000000000000))*(x5382)*(x5383)))+(((cj6)*(r11)*(x5384)))+(((IkReal(-1.00000000000000))*(x5380)*(x5381)))+(((r00)*(sj6)*(x5379)))+(((cj6)*(r01)*(x5379)))), ((((IkReal(-1.00000000000000))*(r00)*(x5379)*(x5380)))+(((r11)*(x5385)))+(((cj6)*(x5383)))+(((IkReal(-1.00000000000000))*(r10)*(x5380)*(x5384)))+(((r01)*(sj6)*(x5379)))+(((IkReal(-1.00000000000000))*(x5381)*(x5382)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x5386=IKsin(j4);
IkReal x5387=((cj2)*(sj6));
IkReal x5388=((cj1)*(r00));
IkReal x5389=((IkReal(1.00000000000000))*(r21));
IkReal x5390=((cj6)*(sj2));
IkReal x5391=((r10)*(sj1));
IkReal x5392=((cj2)*(cj6));
IkReal x5393=((cj1)*(r01));
IkReal x5394=((r11)*(sj1));
IkReal x5395=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x5396=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((x5387)*(x5388)))+(((x5392)*(x5394)))+(((x5392)*(x5393)))+(((IkReal(-1.00000000000000))*(x5389)*(x5390)))+(((IkReal(-1.00000000000000))*(r20)*(x5396)))+(((IkReal(-1.00000000000000))*(x5386)))+(((x5387)*(x5391))));
evalcond[1]=((x5386)+(((x5388)*(x5390)))+(((IkReal(-1.00000000000000))*(x5393)*(x5396)))+(((IkReal(-1.00000000000000))*(x5394)*(x5396)))+(((r20)*(x5392)))+(((IkReal(-1.00000000000000))*(x5387)*(x5389)))+(((x5390)*(x5391))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x5387)))+(((IkReal(-1.00000000000000))*(x5388)*(x5396)))+(((IkReal(-1.00000000000000))*(x5390)*(x5394)))+(((IkReal(-1.00000000000000))*(x5390)*(x5393)))+(((IkReal(-1.00000000000000))*(x5391)*(x5396)))+(((IkReal(-1.00000000000000))*(x5389)*(x5392)))+(((IkReal(-1.00000000000000))*(x5395))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x5389)))+(((IkReal(-1.00000000000000))*(x5391)*(x5392)))+(((r20)*(x5390)))+(((IkReal(-1.00000000000000))*(x5395)))+(((IkReal(-1.00000000000000))*(x5388)*(x5392)))+(((x5387)*(x5393)))+(((x5387)*(x5394))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x5397=((cj1)*(sj6));
IkReal x5398=((cj2)*(r00));
IkReal x5399=((IkReal(1.00000000000000))*(sj6));
IkReal x5400=((IkReal(0.400000000000000))*(r10));
IkReal x5401=((IkReal(1.00000000000000))*(r02));
IkReal x5402=((IkReal(0.400000000000000))*(r11));
IkReal x5403=((r20)*(sj2));
IkReal x5404=((IkReal(1.00000000000000))*(cj6));
IkReal x5405=((sj1)*(sj6));
IkReal x5406=((cj1)*(cj2));
IkReal x5407=((r21)*(sj2));
IkReal x5408=((cj1)*(r12));
IkReal x5409=((cj2)*(r11));
IkReal x5410=((r12)*(sj1));
IkReal x5411=((cj1)*(cj6));
IkReal x5412=((cj2)*(r10));
IkReal x5413=((IkReal(0.400000000000000))*(cj6)*(sj1));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(((IkReal(-0.400000000000000))*(x5408)))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1))));
evalcond[2]=((((cj2)*(r22)))+(((sj2)*(x5410)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((x5408)+(((IkReal(-1.00000000000000))*(sj1)*(x5401))));
evalcond[4]=((IkReal(1.00000000000000))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x5410)))+(((IkReal(-1.00000000000000))*(x5401)*(x5406))));
evalcond[5]=((IkReal(0.000500000000000000))+(((x5402)*(x5411)))+(((IkReal(-1.00000000000000))*(npx)*(x5399)))+(((IkReal(-1.00000000000000))*(npy)*(x5404)))+(((IkReal(-0.400000000000000))*(r00)*(x5405)))+(((IkReal(-1.00000000000000))*(r01)*(x5413)))+(((x5397)*(x5400))));
evalcond[6]=((((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(x5399)))+(((r00)*(x5413)))+(((IkReal(-1.00000000000000))*(x5400)*(x5411)))+(((IkReal(-0.400000000000000))*(r01)*(x5405)))+(((x5397)*(x5402))));
evalcond[7]=((((cj6)*(r01)*(x5406)))+(((cj6)*(sj1)*(x5409)))+(((IkReal(-1.00000000000000))*(x5404)*(x5407)))+(((IkReal(-1.00000000000000))*(x5399)*(x5403)))+(((x5405)*(x5412)))+(((x5397)*(x5398))));
evalcond[8]=((((cj6)*(x5403)))+(((IkReal(-1.00000000000000))*(cj1)*(x5398)*(x5404)))+(((cj2)*(r01)*(x5397)))+(((IkReal(-1.00000000000000))*(x5399)*(x5407)))+(((IkReal(-1.00000000000000))*(sj1)*(x5404)*(x5412)))+(((x5405)*(x5409))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5414=((IkReal(1.00000000000000))*(cj6));
IkReal x5415=((cj1)*(r10));
IkReal x5416=((r01)*(sj1));
IkReal x5417=((r00)*(sj1));
IkReal x5418=((cj1)*(r11));
IkReal x5419=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((((sj6)*(x5415)))+(((IkReal(-1.00000000000000))*(x5414)*(x5416)))+(((IkReal(-1.00000000000000))*(x5417)*(x5419)))+(((cj6)*(x5418))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x5416)*(x5419)))+(((sj6)*(x5418)))+(((IkReal(-1.00000000000000))*(x5414)*(x5415)))+(((cj6)*(x5417))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj6)*(x5415)))+(((IkReal(-1.00000000000000))*(x5414)*(x5416)))+(((IkReal(-1.00000000000000))*(x5417)*(x5419)))+(((cj6)*(x5418)))))+IKsqr(((((IkReal(-1.00000000000000))*(x5416)*(x5419)))+(((sj6)*(x5418)))+(((IkReal(-1.00000000000000))*(x5414)*(x5415)))+(((cj6)*(x5417)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((sj6)*(x5415)))+(((IkReal(-1.00000000000000))*(x5414)*(x5416)))+(((IkReal(-1.00000000000000))*(x5417)*(x5419)))+(((cj6)*(x5418)))), ((((IkReal(-1.00000000000000))*(x5416)*(x5419)))+(((sj6)*(x5418)))+(((IkReal(-1.00000000000000))*(x5414)*(x5415)))+(((cj6)*(x5417)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x5420=IKsin(j4);
IkReal x5421=IKcos(j4);
IkReal x5422=((IkReal(1.00000000000000))*(sj2));
IkReal x5423=((cj6)*(sj1));
IkReal x5424=((cj1)*(sj6));
IkReal x5425=((IkReal(1.00000000000000))*(r11));
IkReal x5426=((cj1)*(cj6));
IkReal x5427=((sj1)*(sj6));
IkReal x5428=((cj2)*(cj6));
IkReal x5429=((IkReal(1.00000000000000))*(cj2)*(sj6));
evalcond[0]=((x5420)+(((r00)*(x5427)))+(((IkReal(-1.00000000000000))*(r10)*(x5424)))+(((r01)*(x5423)))+(((IkReal(-1.00000000000000))*(x5425)*(x5426))));
evalcond[1]=((((r10)*(x5426)))+(x5421)+(((r01)*(x5427)))+(((IkReal(-1.00000000000000))*(x5424)*(x5425)))+(((IkReal(-1.00000000000000))*(r00)*(x5423))));
evalcond[2]=((x5420)+(((IkReal(-1.00000000000000))*(r01)*(x5422)*(x5424)))+(((r10)*(sj2)*(x5423)))+(((r00)*(sj2)*(x5426)))+(((IkReal(-1.00000000000000))*(r21)*(x5429)))+(((IkReal(-1.00000000000000))*(r11)*(x5422)*(x5427)))+(((r20)*(x5428))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x5422)*(x5424)))+(((IkReal(-1.00000000000000))*(r21)*(x5428)))+(((IkReal(-1.00000000000000))*(r01)*(x5422)*(x5426)))+(((IkReal(-1.00000000000000))*(r10)*(x5422)*(x5427)))+(((IkReal(-1.00000000000000))*(r20)*(x5429)))+(((IkReal(-1.00000000000000))*(r11)*(x5422)*(x5423)))+(((IkReal(-1.00000000000000))*(x5421))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x5430=((cj1)*(sj6));
IkReal x5431=((cj2)*(r00));
IkReal x5432=((IkReal(1.00000000000000))*(sj6));
IkReal x5433=((IkReal(0.400000000000000))*(r10));
IkReal x5434=((IkReal(1.00000000000000))*(r02));
IkReal x5435=((IkReal(0.400000000000000))*(r11));
IkReal x5436=((r20)*(sj2));
IkReal x5437=((IkReal(1.00000000000000))*(cj6));
IkReal x5438=((sj1)*(sj6));
IkReal x5439=((cj1)*(cj2));
IkReal x5440=((r21)*(sj2));
IkReal x5441=((cj1)*(r12));
IkReal x5442=((cj2)*(r11));
IkReal x5443=((r12)*(sj1));
IkReal x5444=((cj1)*(cj6));
IkReal x5445=((cj2)*(r10));
IkReal x5446=((IkReal(0.400000000000000))*(cj6)*(sj1));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.390000000000000))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1)))+(((IkReal(-0.400000000000000))*(x5441))));
evalcond[2]=((((cj2)*(r22)))+(((sj2)*(x5443)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((x5441)+(((IkReal(-1.00000000000000))*(sj1)*(x5434))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj2)*(x5443)))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x5434)*(x5439))));
evalcond[5]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x5437)))+(((IkReal(-1.00000000000000))*(r01)*(x5446)))+(((IkReal(-1.00000000000000))*(npx)*(x5432)))+(((x5430)*(x5433)))+(((IkReal(-0.400000000000000))*(r00)*(x5438)))+(((x5435)*(x5444))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x5433)*(x5444)))+(((cj6)*(npx)))+(((r00)*(x5446)))+(((IkReal(-1.00000000000000))*(npy)*(x5432)))+(((x5430)*(x5435)))+(((IkReal(-0.400000000000000))*(r01)*(x5438))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x5437)*(x5440)))+(((cj6)*(r01)*(x5439)))+(((cj6)*(sj1)*(x5442)))+(((x5438)*(x5445)))+(((x5430)*(x5431)))+(((IkReal(-1.00000000000000))*(x5432)*(x5436))));
evalcond[8]=((((cj6)*(x5436)))+(((IkReal(-1.00000000000000))*(cj1)*(x5431)*(x5437)))+(((cj2)*(r01)*(x5430)))+(((x5438)*(x5442)))+(((IkReal(-1.00000000000000))*(x5432)*(x5440)))+(((IkReal(-1.00000000000000))*(sj1)*(x5437)*(x5445))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5447=((cj1)*(r10));
IkReal x5448=((r00)*(sj1));
IkReal x5449=((r01)*(sj1));
IkReal x5450=((IkReal(1.00000000000000))*(cj1)*(r11));
if( IKabs(((((IkReal(-1.00000000000000))*(cj6)*(x5450)))+(((sj6)*(x5448)))+(((cj6)*(x5449)))+(((IkReal(-1.00000000000000))*(sj6)*(x5447))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(sj6)*(x5450)))+(((IkReal(-1.00000000000000))*(cj6)*(x5448)))+(((sj6)*(x5449)))+(((cj6)*(x5447))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj6)*(x5450)))+(((sj6)*(x5448)))+(((cj6)*(x5449)))+(((IkReal(-1.00000000000000))*(sj6)*(x5447)))))+IKsqr(((((IkReal(-1.00000000000000))*(sj6)*(x5450)))+(((IkReal(-1.00000000000000))*(cj6)*(x5448)))+(((sj6)*(x5449)))+(((cj6)*(x5447)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj6)*(x5450)))+(((sj6)*(x5448)))+(((cj6)*(x5449)))+(((IkReal(-1.00000000000000))*(sj6)*(x5447)))), ((((IkReal(-1.00000000000000))*(sj6)*(x5450)))+(((IkReal(-1.00000000000000))*(cj6)*(x5448)))+(((sj6)*(x5449)))+(((cj6)*(x5447)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x5451=IKsin(j4);
IkReal x5452=((IkReal(1.00000000000000))*(sj6));
IkReal x5453=((cj2)*(r21));
IkReal x5454=((IkReal(1.00000000000000))*(cj6));
IkReal x5455=((cj1)*(r11));
IkReal x5456=((r00)*(sj1));
IkReal x5457=((cj6)*(sj2));
IkReal x5458=((r10)*(sj1));
IkReal x5459=((cj1)*(r00));
IkReal x5460=((cj1)*(r10));
IkReal x5461=((cj2)*(r20));
IkReal x5462=((r01)*(sj1));
IkReal x5463=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x5464=((cj1)*(r01)*(sj2));
IkReal x5465=((r11)*(sj1)*(sj2));
evalcond[0]=((((cj6)*(x5462)))+(((IkReal(-1.00000000000000))*(x5454)*(x5455)))+(((sj6)*(x5456)))+(((IkReal(-1.00000000000000))*(x5451)))+(((IkReal(-1.00000000000000))*(x5452)*(x5460))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x5452)*(x5455)))+(((cj6)*(x5460)))+(((IkReal(-1.00000000000000))*(x5454)*(x5456)))+(((IkReal(-1.00000000000000))*(x5463)))+(((sj6)*(x5462))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5452)*(x5453)))+(((cj6)*(x5461)))+(x5451)+(((IkReal(-1.00000000000000))*(x5452)*(x5465)))+(((IkReal(-1.00000000000000))*(x5452)*(x5464)))+(((x5457)*(x5459)))+(((x5457)*(x5458))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(x5452)*(x5458)))+(((IkReal(-1.00000000000000))*(sj2)*(x5452)*(x5459)))+(((IkReal(-1.00000000000000))*(x5454)*(x5464)))+(((IkReal(-1.00000000000000))*(x5454)*(x5465)))+(((IkReal(-1.00000000000000))*(x5463)))+(((IkReal(-1.00000000000000))*(x5452)*(x5461)))+(((IkReal(-1.00000000000000))*(x5453)*(x5454))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5466=((IkReal(1.00000000000000))*(cj6));
IkReal x5467=((cj2)*(cj6));
IkReal x5468=((cj1)*(sj6));
IkReal x5469=((IkReal(1.00000000000000))*(cj2));
IkReal x5470=((sj1)*(sj6));
if( IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r01)*(sj1)*(x5466)))+(((cj1)*(cj6)*(r11)))+(((IkReal(-1.00000000000000))*(r00)*(x5470)))+(((r10)*(x5468))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r01)*(x5468)*(x5469)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x5466)))+(((r10)*(sj1)*(x5467)))+(((cj1)*(r00)*(x5467)))+(((r21)*(sj2)*(sj6)))+(((IkReal(-1.00000000000000))*(r11)*(x5469)*(x5470))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r01)*(sj1)*(x5466)))+(((cj1)*(cj6)*(r11)))+(((IkReal(-1.00000000000000))*(r00)*(x5470)))+(((r10)*(x5468)))))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r01)*(x5468)*(x5469)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x5466)))+(((r10)*(sj1)*(x5467)))+(((cj1)*(r00)*(x5467)))+(((r21)*(sj2)*(sj6)))+(((IkReal(-1.00000000000000))*(r11)*(x5469)*(x5470)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r01)*(sj1)*(x5466)))+(((cj1)*(cj6)*(r11)))+(((IkReal(-1.00000000000000))*(r00)*(x5470)))+(((r10)*(x5468)))))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r01)*(x5468)*(x5469)))+(((IkReal(-1.00000000000000))*(r20)*(sj2)*(x5466)))+(((r10)*(sj1)*(x5467)))+(((cj1)*(r00)*(x5467)))+(((r21)*(sj2)*(sj6)))+(((IkReal(-1.00000000000000))*(r11)*(x5469)*(x5470)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x5471=IKsin(j4);
IkReal x5472=IKcos(j4);
IkReal x5473=((cj2)*(sj6));
IkReal x5474=((cj1)*(r00));
IkReal x5475=((IkReal(1.00000000000000))*(r21));
IkReal x5476=((cj6)*(sj2));
IkReal x5477=((IkReal(1.00000000000000))*(cj6));
IkReal x5478=((cj1)*(r11));
IkReal x5479=((r00)*(sj1));
IkReal x5480=((r10)*(sj1));
IkReal x5481=((sj2)*(sj6));
IkReal x5482=((IkReal(1.00000000000000))*(r20));
IkReal x5483=((cj2)*(cj6));
IkReal x5484=((cj1)*(r01));
IkReal x5485=((cj1)*(r10));
IkReal x5486=((r11)*(sj1));
IkReal x5487=((IkReal(1.00000000000000))*(sj6));
IkReal x5488=((r01)*(sj1));
evalcond[0]=((((IkReal(-1.00000000000000))*(x5477)*(x5478)))+(((IkReal(-1.00000000000000))*(x5485)*(x5487)))+(((sj6)*(x5479)))+(((cj6)*(x5488)))+(((sj3)*(x5471))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x5477)*(x5479)))+(((cj6)*(x5485)))+(((sj6)*(x5488)))+(((IkReal(-1.00000000000000))*(x5478)*(x5487)))+(((sj3)*(x5472))));
evalcond[2]=((((x5473)*(x5480)))+(((IkReal(-1.00000000000000))*(x5481)*(x5482)))+(((x5483)*(x5484)))+(((x5483)*(x5486)))+(((x5473)*(x5474)))+(((IkReal(-1.00000000000000))*(x5475)*(x5476)))+(((cj3)*(x5471))));
evalcond[3]=((((r20)*(x5483)))+(((IkReal(-1.00000000000000))*(x5481)*(x5484)))+(((IkReal(-1.00000000000000))*(x5481)*(x5486)))+(x5471)+(((x5476)*(x5480)))+(((IkReal(-1.00000000000000))*(x5473)*(x5475)))+(((x5474)*(x5476))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x5472)))+(((IkReal(-1.00000000000000))*(x5473)*(x5482)))+(((IkReal(-1.00000000000000))*(x5474)*(x5481)))+(((IkReal(-1.00000000000000))*(x5475)*(x5483)))+(((IkReal(-1.00000000000000))*(x5476)*(x5484)))+(((IkReal(-1.00000000000000))*(x5476)*(x5486)))+(((IkReal(-1.00000000000000))*(x5480)*(x5481))));
evalcond[5]=((((x5473)*(x5486)))+(((x5473)*(x5484)))+(((IkReal(-1.00000000000000))*(cj2)*(x5474)*(x5477)))+(((IkReal(-1.00000000000000))*(cj2)*(x5477)*(x5480)))+(((r20)*(x5476)))+(((IkReal(-1.00000000000000))*(x5475)*(x5481)))+(((cj3)*(x5472))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5489=((sj1)*(sj6));
IkReal x5490=((cj6)*(r00));
IkReal x5491=((cj1)*(sj6));
IkReal x5492=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x5490)))+(((r01)*(sj2)*(x5491)))+(((IkReal(-1.00000000000000))*(cj2)*(r20)*(x5492)))+(((r11)*(sj2)*(x5489)))+(((cj2)*(r21)*(sj6)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(sj2)*(x5492))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r11)*(x5491)))+(((IkReal(-1.00000000000000))*(r01)*(x5489)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x5492)))+(((sj1)*(x5490))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x5490)))+(((r01)*(sj2)*(x5491)))+(((IkReal(-1.00000000000000))*(cj2)*(r20)*(x5492)))+(((r11)*(sj2)*(x5489)))+(((cj2)*(r21)*(sj6)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(sj2)*(x5492)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r11)*(x5491)))+(((IkReal(-1.00000000000000))*(r01)*(x5489)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x5492)))+(((sj1)*(x5490)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x5490)))+(((r01)*(sj2)*(x5491)))+(((IkReal(-1.00000000000000))*(cj2)*(r20)*(x5492)))+(((r11)*(sj2)*(x5489)))+(((cj2)*(r21)*(sj6)))+(((IkReal(-1.00000000000000))*(r10)*(sj1)*(sj2)*(x5492)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((r11)*(x5491)))+(((IkReal(-1.00000000000000))*(r01)*(x5489)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x5492)))+(((sj1)*(x5490)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x5493=IKsin(j4);
IkReal x5494=IKcos(j4);
IkReal x5495=((cj2)*(sj6));
IkReal x5496=((cj1)*(r00));
IkReal x5497=((IkReal(1.00000000000000))*(r21));
IkReal x5498=((cj6)*(sj2));
IkReal x5499=((IkReal(1.00000000000000))*(cj6));
IkReal x5500=((cj1)*(r11));
IkReal x5501=((r00)*(sj1));
IkReal x5502=((r10)*(sj1));
IkReal x5503=((sj2)*(sj6));
IkReal x5504=((IkReal(1.00000000000000))*(r20));
IkReal x5505=((cj2)*(cj6));
IkReal x5506=((cj1)*(r01));
IkReal x5507=((cj1)*(r10));
IkReal x5508=((r11)*(sj1));
IkReal x5509=((IkReal(1.00000000000000))*(sj6));
IkReal x5510=((r01)*(sj1));
evalcond[0]=((((cj6)*(x5510)))+(((sj6)*(x5501)))+(((IkReal(-1.00000000000000))*(x5507)*(x5509)))+(((sj3)*(x5493)))+(((IkReal(-1.00000000000000))*(x5499)*(x5500))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x5500)*(x5509)))+(((cj6)*(x5507)))+(((sj6)*(x5510)))+(((sj3)*(x5494)))+(((IkReal(-1.00000000000000))*(x5499)*(x5501))));
evalcond[2]=((((x5495)*(x5496)))+(((IkReal(-1.00000000000000))*(x5503)*(x5504)))+(((x5495)*(x5502)))+(((IkReal(-1.00000000000000))*(x5497)*(x5498)))+(((cj3)*(x5493)))+(((x5505)*(x5508)))+(((x5505)*(x5506))));
evalcond[3]=((x5493)+(((r20)*(x5505)))+(((IkReal(-1.00000000000000))*(x5495)*(x5497)))+(((x5498)*(x5502)))+(((x5496)*(x5498)))+(((IkReal(-1.00000000000000))*(x5503)*(x5506)))+(((IkReal(-1.00000000000000))*(x5503)*(x5508))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x5498)*(x5506)))+(((IkReal(-1.00000000000000))*(x5498)*(x5508)))+(((IkReal(-1.00000000000000))*(x5497)*(x5505)))+(((IkReal(-1.00000000000000))*(x5494)))+(((IkReal(-1.00000000000000))*(x5502)*(x5503)))+(((IkReal(-1.00000000000000))*(x5495)*(x5504)))+(((IkReal(-1.00000000000000))*(x5496)*(x5503))));
evalcond[5]=((((r20)*(x5498)))+(((x5495)*(x5508)))+(((x5495)*(x5506)))+(((IkReal(-1.00000000000000))*(cj2)*(x5499)*(x5502)))+(((IkReal(-1.00000000000000))*(x5497)*(x5503)))+(((cj3)*(x5494)))+(((IkReal(-1.00000000000000))*(cj2)*(x5496)*(x5499))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5511=((IkReal(1.00000000000000))*(cj6));
IkReal x5512=((cj1)*(r10));
IkReal x5513=((r01)*(sj1));
IkReal x5514=((r00)*(sj1));
IkReal x5515=((cj1)*(r11));
IkReal x5516=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(x5511)*(x5513)))+(((sj6)*(x5512)))+(((cj6)*(x5515)))+(((IkReal(-1.00000000000000))*(x5514)*(x5516))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(x5513)*(x5516)))+(((IkReal(-1.00000000000000))*(x5511)*(x5512)))+(((sj6)*(x5515)))+(((cj6)*(x5514))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst16)*(((((IkReal(-1.00000000000000))*(x5511)*(x5513)))+(((sj6)*(x5512)))+(((cj6)*(x5515)))+(((IkReal(-1.00000000000000))*(x5514)*(x5516)))))), ((gconst16)*(((((IkReal(-1.00000000000000))*(x5513)*(x5516)))+(((IkReal(-1.00000000000000))*(x5511)*(x5512)))+(((sj6)*(x5515)))+(((cj6)*(x5514)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x5517=IKsin(j4);
IkReal x5518=IKcos(j4);
IkReal x5519=((cj2)*(sj6));
IkReal x5520=((cj1)*(r00));
IkReal x5521=((IkReal(1.00000000000000))*(r21));
IkReal x5522=((cj6)*(sj2));
IkReal x5523=((IkReal(1.00000000000000))*(cj6));
IkReal x5524=((cj1)*(r11));
IkReal x5525=((r00)*(sj1));
IkReal x5526=((r10)*(sj1));
IkReal x5527=((sj2)*(sj6));
IkReal x5528=((IkReal(1.00000000000000))*(r20));
IkReal x5529=((cj2)*(cj6));
IkReal x5530=((cj1)*(r01));
IkReal x5531=((cj1)*(r10));
IkReal x5532=((r11)*(sj1));
IkReal x5533=((IkReal(1.00000000000000))*(sj6));
IkReal x5534=((r01)*(sj1));
evalcond[0]=((((IkReal(-1.00000000000000))*(x5523)*(x5524)))+(((sj3)*(x5517)))+(((cj6)*(x5534)))+(((sj6)*(x5525)))+(((IkReal(-1.00000000000000))*(x5531)*(x5533))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x5523)*(x5525)))+(((sj3)*(x5518)))+(((sj6)*(x5534)))+(((cj6)*(x5531)))+(((IkReal(-1.00000000000000))*(x5524)*(x5533))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5527)*(x5528)))+(((cj3)*(x5517)))+(((x5519)*(x5526)))+(((x5519)*(x5520)))+(((IkReal(-1.00000000000000))*(x5521)*(x5522)))+(((x5529)*(x5532)))+(((x5529)*(x5530))));
evalcond[3]=((x5517)+(((x5522)*(x5526)))+(((x5520)*(x5522)))+(((IkReal(-1.00000000000000))*(x5527)*(x5530)))+(((IkReal(-1.00000000000000))*(x5527)*(x5532)))+(((r20)*(x5529)))+(((IkReal(-1.00000000000000))*(x5519)*(x5521))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x5520)*(x5527)))+(((IkReal(-1.00000000000000))*(x5522)*(x5530)))+(((IkReal(-1.00000000000000))*(x5522)*(x5532)))+(((IkReal(-1.00000000000000))*(x5518)))+(((IkReal(-1.00000000000000))*(x5526)*(x5527)))+(((IkReal(-1.00000000000000))*(x5521)*(x5529)))+(((IkReal(-1.00000000000000))*(x5519)*(x5528))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj2)*(x5523)*(x5526)))+(((IkReal(-1.00000000000000))*(cj2)*(x5520)*(x5523)))+(((cj3)*(x5518)))+(((x5519)*(x5530)))+(((x5519)*(x5532)))+(((r20)*(x5522)))+(((IkReal(-1.00000000000000))*(x5521)*(x5527))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5535=((IkReal(1.00000000000000))*(cj6));
IkReal x5536=((cj1)*(r10));
IkReal x5537=((r01)*(sj1));
IkReal x5538=((cj1)*(r11));
IkReal x5539=((IkReal(1.00000000000000))*(sj6));
IkReal x5540=((r00)*(sj1));
if( IKabs(((gconst15)*(((((IkReal(-1.00000000000000))*(x5539)*(x5540)))+(((IkReal(-1.00000000000000))*(x5535)*(x5537)))+(((sj6)*(x5536)))+(((cj6)*(x5538))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((cj6)*(x5540)))+(((IkReal(-1.00000000000000))*(x5535)*(x5536)))+(((IkReal(-1.00000000000000))*(x5537)*(x5539)))+(((sj6)*(x5538))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst15)*(((((IkReal(-1.00000000000000))*(x5539)*(x5540)))+(((IkReal(-1.00000000000000))*(x5535)*(x5537)))+(((sj6)*(x5536)))+(((cj6)*(x5538)))))), ((gconst15)*(((((cj6)*(x5540)))+(((IkReal(-1.00000000000000))*(x5535)*(x5536)))+(((IkReal(-1.00000000000000))*(x5537)*(x5539)))+(((sj6)*(x5538)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x5541=((cj1)*(r10));
IkReal x5542=((r00)*(sj1));
IkReal x5543=((r01)*(sj1));
IkReal x5544=((IkReal(1.00000000000000))*(cj1)*(r11));
evalcond[0]=((((cj6)*(x5543)))+(((sj6)*(x5542)))+(((IkReal(-1.00000000000000))*(cj6)*(x5544)))+(((IkReal(-1.00000000000000))*(sj6)*(x5541)))+(((sj3)*(IKsin(j4)))));
evalcond[1]=((((cj6)*(x5541)))+(((sj6)*(x5543)))+(((sj3)*(IKcos(j4))))+(((IkReal(-1.00000000000000))*(sj6)*(x5544)))+(((IkReal(-1.00000000000000))*(cj6)*(x5542))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst17;
gconst17=IKsign(((((IkReal(-1.00000000000000))*((cj1)*(cj1))*((r02)*(r02))))+(((IkReal(-1.00000000000000))*((r12)*(r12))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj1)*(cj1))*((r02)*(r02))))+(((IkReal(-1.00000000000000))*((r12)*(r12))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((r22)*(r22))))+(((IkReal(-2.00000000000000))*(cj1)*(r02)*(r12)*(sj1))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst18;
IkReal x5545=((cj1)*(cj6));
IkReal x5546=((IkReal(1.00000000000000))*(r22));
IkReal x5547=((cj6)*(sj1));
IkReal x5548=((r22)*(sj6));
IkReal x5549=((IkReal(1.00000000000000))*(r21)*(sj6));
gconst18=IKsign(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5549)))+(((cj1)*(r01)*(x5548)))+(((IkReal(-1.00000000000000))*(r10)*(x5546)*(x5547)))+(((IkReal(-1.00000000000000))*(r00)*(x5545)*(x5546)))+(((r12)*(r20)*(x5547)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5549)))+(((r11)*(sj1)*(x5548)))+(((r02)*(r20)*(x5545)))));
IkReal x5550=((cj1)*(cj6));
IkReal x5551=((IkReal(1.00000000000000))*(r22));
IkReal x5552=((cj6)*(sj1));
IkReal x5553=((r22)*(sj6));
IkReal x5554=((IkReal(1.00000000000000))*(r21)*(sj6));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5554)))+(((IkReal(-1.00000000000000))*(r00)*(x5550)*(x5551)))+(((cj1)*(r01)*(x5553)))+(((r11)*(sj1)*(x5553)))+(((r02)*(r20)*(x5550)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5554)))+(((r12)*(r20)*(x5552)))+(((IkReal(-1.00000000000000))*(r10)*(x5551)*(x5552))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5555=((IkReal(1.00000000000000))*(sj4));
if( IKabs(((gconst18)*(r22)*(sj4))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst18)*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5555)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5555))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst18)*(r22)*(sj4)), ((gconst18)*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5555)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5555)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x5556=IKsin(j2);
IkReal x5557=IKcos(j2);
IkReal x5558=((r11)*(sj6));
IkReal x5559=((cj6)*(r11));
IkReal x5560=((cj6)*(r20));
IkReal x5561=((IkReal(1.00000000000000))*(sj6));
IkReal x5562=((cj1)*(r00));
IkReal x5563=((cj1)*(r01));
IkReal x5564=((IkReal(1.00000000000000))*(cj6));
IkReal x5565=((cj1)*(r02));
IkReal x5566=((sj1)*(x5556));
IkReal x5567=((sj1)*(x5557));
IkReal x5568=((r21)*(x5557));
IkReal x5569=((sj6)*(x5557));
IkReal x5570=((cj6)*(x5557));
IkReal x5571=((r21)*(x5556));
evalcond[0]=((((x5556)*(x5565)))+(((r22)*(x5557)))+(((r12)*(x5566))));
evalcond[1]=((sj3)+(((IkReal(-1.00000000000000))*(r12)*(x5567)))+(((r22)*(x5556)))+(((IkReal(-1.00000000000000))*(x5557)*(x5565))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5564)*(x5571)))+(((x5562)*(x5569)))+(((x5563)*(x5570)))+(((IkReal(-1.00000000000000))*(r20)*(x5556)*(x5561)))+(((r10)*(sj6)*(x5567)))+(((x5559)*(x5567)))+(((cj3)*(sj4))));
evalcond[3]=((sj4)+(((IkReal(-1.00000000000000))*(x5558)*(x5566)))+(((IkReal(-1.00000000000000))*(x5561)*(x5568)))+(((cj6)*(r10)*(x5566)))+(((cj6)*(x5556)*(x5562)))+(((IkReal(-1.00000000000000))*(x5556)*(x5561)*(x5563)))+(((x5557)*(x5560))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x5564)*(x5568)))+(((IkReal(-1.00000000000000))*(x5559)*(x5566)))+(((IkReal(-1.00000000000000))*(x5556)*(x5563)*(x5564)))+(((IkReal(-1.00000000000000))*(r20)*(x5557)*(x5561)))+(((IkReal(-1.00000000000000))*(cj4)))+(((IkReal(-1.00000000000000))*(r10)*(x5561)*(x5566)))+(((IkReal(-1.00000000000000))*(x5556)*(x5561)*(x5562))));
evalcond[5]=((((x5556)*(x5560)))+(((cj3)*(cj4)))+(((x5563)*(x5569)))+(((IkReal(-1.00000000000000))*(x5557)*(x5562)*(x5564)))+(((IkReal(-1.00000000000000))*(x5561)*(x5571)))+(((x5558)*(x5567)))+(((IkReal(-1.00000000000000))*(r10)*(x5564)*(x5567))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5572=((IkReal(1.00000000000000))*(sj3));
if( IKabs(((gconst17)*(r22)*(sj3))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5572)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5572))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst17)*(r22)*(sj3)), ((gconst17)*(((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5572)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5572)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x5573=IKsin(j2);
IkReal x5574=IKcos(j2);
IkReal x5575=((r11)*(sj6));
IkReal x5576=((cj6)*(r11));
IkReal x5577=((cj6)*(r20));
IkReal x5578=((IkReal(1.00000000000000))*(sj6));
IkReal x5579=((cj1)*(r00));
IkReal x5580=((cj1)*(r01));
IkReal x5581=((IkReal(1.00000000000000))*(cj6));
IkReal x5582=((cj1)*(r02));
IkReal x5583=((sj1)*(x5573));
IkReal x5584=((sj1)*(x5574));
IkReal x5585=((r21)*(x5574));
IkReal x5586=((sj6)*(x5574));
IkReal x5587=((cj6)*(x5574));
IkReal x5588=((r21)*(x5573));
evalcond[0]=((((r22)*(x5574)))+(((r12)*(x5583)))+(((x5573)*(x5582))));
evalcond[1]=((sj3)+(((IkReal(-1.00000000000000))*(r12)*(x5584)))+(((r22)*(x5573)))+(((IkReal(-1.00000000000000))*(x5574)*(x5582))));
evalcond[2]=((((x5576)*(x5584)))+(((x5579)*(x5586)))+(((r10)*(sj6)*(x5584)))+(((x5580)*(x5587)))+(((IkReal(-1.00000000000000))*(r20)*(x5573)*(x5578)))+(((IkReal(-1.00000000000000))*(x5581)*(x5588)))+(((cj3)*(sj4))));
evalcond[3]=((((x5574)*(x5577)))+(sj4)+(((cj6)*(r10)*(x5583)))+(((IkReal(-1.00000000000000))*(x5578)*(x5585)))+(((cj6)*(x5573)*(x5579)))+(((IkReal(-1.00000000000000))*(x5575)*(x5583)))+(((IkReal(-1.00000000000000))*(x5573)*(x5578)*(x5580))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x5573)*(x5578)*(x5579)))+(((IkReal(-1.00000000000000))*(r20)*(x5574)*(x5578)))+(((IkReal(-1.00000000000000))*(x5573)*(x5580)*(x5581)))+(((IkReal(-1.00000000000000))*(r10)*(x5578)*(x5583)))+(((IkReal(-1.00000000000000))*(x5576)*(x5583)))+(((IkReal(-1.00000000000000))*(x5581)*(x5585)))+(((IkReal(-1.00000000000000))*(cj4))));
evalcond[5]=((((x5575)*(x5584)))+(((IkReal(-1.00000000000000))*(x5574)*(x5579)*(x5581)))+(((cj3)*(cj4)))+(((IkReal(-1.00000000000000))*(r10)*(x5581)*(x5584)))+(((IkReal(-1.00000000000000))*(x5578)*(x5588)))+(((x5573)*(x5577)))+(((x5580)*(x5586))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x5589=((IkReal(1.00000000000000))*(sj6));
IkReal x5590=((IkReal(0.400000000000000))*(cj6));
IkReal x5591=((r00)*(sj1));
IkReal x5592=((cj1)*(r11));
IkReal x5593=((r02)*(sj1));
IkReal x5594=((cj1)*(r10));
IkReal x5595=((IkReal(0.400000000000000))*(sj6));
IkReal x5596=((cj1)*(r12));
IkReal x5597=((r01)*(sj1));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j5)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(npz)+(((IkReal(-0.400000000000000))*(x5596)))+(((IkReal(0.400000000000000))*(x5593))));
evalcond[2]=((x5596)+(cj3)+(((IkReal(-1.00000000000000))*(x5593))));
evalcond[3]=((IkReal(0.000500000000000000))+(((x5590)*(x5592)))+(((IkReal(-1.00000000000000))*(x5590)*(x5597)))+(((IkReal(-1.00000000000000))*(cj6)*(npy)))+(((IkReal(-1.00000000000000))*(x5591)*(x5595)))+(((IkReal(-1.00000000000000))*(npx)*(x5589)))+(((x5594)*(x5595))));
evalcond[4]=((((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x5595)*(x5597)))+(((x5592)*(x5595)))+(((x5590)*(x5591)))+(((IkReal(-1.00000000000000))*(x5590)*(x5594)))+(((IkReal(-1.00000000000000))*(npy)*(x5589))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst19;
gconst19=IKsign((((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1))))));
dummyeval[0]=(((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst20;
gconst20=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x5598=((IkReal(1.00000000000000))*(sj6));
IkReal x5599=((r02)*(sj1));
IkReal x5600=((IkReal(1.00000000000000))*(cj6));
IkReal x5601=((cj1)*(r11));
IkReal x5602=((IkReal(0.400000000000000))*(sj1));
IkReal x5603=((cj6)*(r01));
IkReal x5604=((r00)*(sj6));
IkReal x5605=((cj1)*(r12));
IkReal x5606=((r01)*(sj6));
IkReal x5607=((cj6)*(r00)*(sj1));
IkReal x5608=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x5609=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(npz)+(((IkReal(-0.400000000000000))*(x5605)))+(((IkReal(0.400000000000000))*(x5599))));
evalcond[2]=((IkReal(1.00000000000000))+(x5605)+(((IkReal(-1.00000000000000))*(x5599))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj1)*(r10)*(x5598)))+(((sj1)*(x5603)))+(((sj1)*(x5604)))+(((IkReal(-1.00000000000000))*(x5600)*(x5601))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x5598)))+(((IkReal(0.400000000000000))*(cj6)*(x5601)))+(((IkReal(-1.00000000000000))*(x5602)*(x5603)))+(((IkReal(-1.00000000000000))*(x5602)*(x5604)))+(((IkReal(-1.00000000000000))*(npy)*(x5600)))+(((r10)*(x5608))));
evalcond[5]=((x5609)+(((sj1)*(x5606)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x5600)))+(((IkReal(-1.00000000000000))*(x5598)*(x5601))));
evalcond[6]=((((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x5602)*(x5606)))+(((IkReal(0.400000000000000))*(sj6)*(x5601)))+(((cj6)*(r00)*(x5602)))+(((IkReal(-0.400000000000000))*(x5609)))+(((IkReal(-1.00000000000000))*(npy)*(x5598))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
if( IKabs(r22) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(r02)))+(((r12)*(sj1))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x5610=IKatan2(r22, ((((cj1)*(r02)))+(((r12)*(sj1)))));
j2array[0]=((IkReal(-1.00000000000000))*(x5610));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x5610))));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[1];
IkReal x5611=IKcos(j2);
IkReal x5612=((IkReal(1.00000000000000))*(x5611));
evalcond[0]=((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5612)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5612)))+(((r22)*(IKsin(j2)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5613=((cj2)*(sj6));
IkReal x5614=((IkReal(1.00000000000000))*(sj1));
IkReal x5615=((r20)*(sj2));
IkReal x5616=((cj1)*(r01));
IkReal x5617=((cj2)*(cj6));
IkReal x5618=((r21)*(sj2));
IkReal x5619=((IkReal(1.00000000000000))*(cj1)*(r00));
if( IKabs(((((IkReal(-1.00000000000000))*(x5613)*(x5619)))+(((sj6)*(x5615)))+(((cj6)*(x5618)))+(((IkReal(-1.00000000000000))*(r11)*(x5614)*(x5617)))+(((IkReal(-1.00000000000000))*(x5616)*(x5617)))+(((IkReal(-1.00000000000000))*(r10)*(x5613)*(x5614))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x5613)*(x5616)))+(((IkReal(-1.00000000000000))*(sj6)*(x5618)))+(((cj6)*(x5615)))+(((IkReal(-1.00000000000000))*(x5617)*(x5619)))+(((IkReal(-1.00000000000000))*(r10)*(x5614)*(x5617)))+(((r11)*(sj1)*(x5613))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x5613)*(x5619)))+(((sj6)*(x5615)))+(((cj6)*(x5618)))+(((IkReal(-1.00000000000000))*(r11)*(x5614)*(x5617)))+(((IkReal(-1.00000000000000))*(x5616)*(x5617)))+(((IkReal(-1.00000000000000))*(r10)*(x5613)*(x5614)))))+IKsqr(((((x5613)*(x5616)))+(((IkReal(-1.00000000000000))*(sj6)*(x5618)))+(((cj6)*(x5615)))+(((IkReal(-1.00000000000000))*(x5617)*(x5619)))+(((IkReal(-1.00000000000000))*(r10)*(x5614)*(x5617)))+(((r11)*(sj1)*(x5613)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x5613)*(x5619)))+(((sj6)*(x5615)))+(((cj6)*(x5618)))+(((IkReal(-1.00000000000000))*(r11)*(x5614)*(x5617)))+(((IkReal(-1.00000000000000))*(x5616)*(x5617)))+(((IkReal(-1.00000000000000))*(r10)*(x5613)*(x5614)))), ((((x5613)*(x5616)))+(((IkReal(-1.00000000000000))*(sj6)*(x5618)))+(((cj6)*(x5615)))+(((IkReal(-1.00000000000000))*(x5617)*(x5619)))+(((IkReal(-1.00000000000000))*(r10)*(x5614)*(x5617)))+(((r11)*(sj1)*(x5613)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x5620=IKsin(j4);
IkReal x5621=((cj2)*(sj6));
IkReal x5622=((cj1)*(r00));
IkReal x5623=((IkReal(1.00000000000000))*(r21));
IkReal x5624=((cj6)*(sj2));
IkReal x5625=((r10)*(sj1));
IkReal x5626=((cj2)*(cj6));
IkReal x5627=((cj1)*(r01));
IkReal x5628=((r11)*(sj1));
IkReal x5629=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x5630=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((x5620)+(((IkReal(-1.00000000000000))*(r20)*(x5630)))+(((x5621)*(x5622)))+(((x5621)*(x5625)))+(((IkReal(-1.00000000000000))*(x5623)*(x5624)))+(((x5626)*(x5628)))+(((x5626)*(x5627))));
evalcond[1]=((((x5624)*(x5625)))+(((IkReal(-1.00000000000000))*(x5628)*(x5630)))+(((r20)*(x5626)))+(((x5622)*(x5624)))+(((IkReal(-1.00000000000000))*(x5621)*(x5623)))+(((IkReal(-1.00000000000000))*(x5627)*(x5630)))+(((IkReal(-1.00000000000000))*(x5620))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5622)*(x5630)))+(((IkReal(-1.00000000000000))*(x5623)*(x5626)))+(((IkReal(-1.00000000000000))*(r20)*(x5621)))+(((IkReal(-1.00000000000000))*(x5624)*(x5627)))+(((IkReal(-1.00000000000000))*(x5624)*(x5628)))+(((IkReal(-1.00000000000000))*(x5625)*(x5630)))+(((IkReal(-1.00000000000000))*(x5629))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x5623)))+(((IkReal(-1.00000000000000))*(x5622)*(x5626)))+(((r20)*(x5624)))+(((x5621)*(x5628)))+(((x5621)*(x5627)))+(((IkReal(-1.00000000000000))*(x5625)*(x5626)))+(((IkReal(-1.00000000000000))*(x5629))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

} else
{
IkReal x5631=((IkReal(1.00000000000000))*(sj6));
IkReal x5632=((r02)*(sj1));
IkReal x5633=((IkReal(1.00000000000000))*(cj6));
IkReal x5634=((cj1)*(r11));
IkReal x5635=((IkReal(0.400000000000000))*(sj1));
IkReal x5636=((cj6)*(r01));
IkReal x5637=((r00)*(sj6));
IkReal x5638=((cj1)*(r12));
IkReal x5639=((r01)*(sj6));
IkReal x5640=((cj6)*(r00)*(sj1));
IkReal x5641=((IkReal(0.400000000000000))*(cj1)*(sj6));
IkReal x5642=((cj1)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(((IkReal(-0.400000000000000))*(x5638)))+(((IkReal(0.400000000000000))*(x5632)))+(npz));
evalcond[2]=((IkReal(-1.00000000000000))+(x5638)+(((IkReal(-1.00000000000000))*(x5632))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5633)*(x5634)))+(((IkReal(-1.00000000000000))*(cj1)*(r10)*(x5631)))+(((sj1)*(x5637)))+(((sj1)*(x5636))));
evalcond[4]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(x5635)*(x5637)))+(((IkReal(-1.00000000000000))*(x5635)*(x5636)))+(((IkReal(-1.00000000000000))*(npx)*(x5631)))+(((IkReal(-1.00000000000000))*(npy)*(x5633)))+(((IkReal(0.400000000000000))*(cj6)*(x5634)))+(((r10)*(x5641))));
evalcond[5]=((x5642)+(((sj1)*(x5639)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x5633)))+(((IkReal(-1.00000000000000))*(x5631)*(x5634))));
evalcond[6]=((((IkReal(0.400000000000000))*(sj6)*(x5634)))+(((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(x5635)*(x5639)))+(((IkReal(-0.400000000000000))*(x5642)))+(((cj6)*(r00)*(x5635)))+(((IkReal(-1.00000000000000))*(npy)*(x5631))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
if( IKabs(r22) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(r02)))+(((r12)*(sj1))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x5643=IKatan2(r22, ((((cj1)*(r02)))+(((r12)*(sj1)))));
j2array[0]=((IkReal(-1.00000000000000))*(x5643));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
j2array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x5643))));
sj2array[1]=IKsin(j2array[1]);
cj2array[1]=IKcos(j2array[1]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
if( j2array[1] > IKPI )
{
    j2array[1]-=IK2PI;
}
else if( j2array[1] < -IKPI )
{    j2array[1]+=IK2PI;
}
j2valid[1] = true;
for(int ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[1];
IkReal x5644=IKcos(j2);
IkReal x5645=((IkReal(1.00000000000000))*(x5644));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5645)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5645)))+(((r22)*(IKsin(j2)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5646=((cj1)*(cj2));
IkReal x5647=((sj2)*(sj6));
IkReal x5648=((IkReal(1.00000000000000))*(sj6));
IkReal x5649=((IkReal(1.00000000000000))*(cj6)*(sj2));
IkReal x5650=((cj2)*(r10)*(sj1));
IkReal x5651=((cj2)*(r11)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r20)*(x5647)))+(((IkReal(-1.00000000000000))*(r21)*(x5649)))+(((cj6)*(r01)*(x5646)))+(((sj6)*(x5650)))+(((r00)*(sj6)*(x5646)))+(((cj6)*(x5651))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r01)*(x5646)*(x5648)))+(((IkReal(-1.00000000000000))*(r20)*(x5649)))+(((cj6)*(r00)*(x5646)))+(((IkReal(-1.00000000000000))*(x5648)*(x5651)))+(((r21)*(x5647)))+(((cj6)*(x5650))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r20)*(x5647)))+(((IkReal(-1.00000000000000))*(r21)*(x5649)))+(((cj6)*(r01)*(x5646)))+(((sj6)*(x5650)))+(((r00)*(sj6)*(x5646)))+(((cj6)*(x5651)))))+IKsqr(((((IkReal(-1.00000000000000))*(r01)*(x5646)*(x5648)))+(((IkReal(-1.00000000000000))*(r20)*(x5649)))+(((cj6)*(r00)*(x5646)))+(((IkReal(-1.00000000000000))*(x5648)*(x5651)))+(((r21)*(x5647)))+(((cj6)*(x5650)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r20)*(x5647)))+(((IkReal(-1.00000000000000))*(r21)*(x5649)))+(((cj6)*(r01)*(x5646)))+(((sj6)*(x5650)))+(((r00)*(sj6)*(x5646)))+(((cj6)*(x5651)))), ((((IkReal(-1.00000000000000))*(r01)*(x5646)*(x5648)))+(((IkReal(-1.00000000000000))*(r20)*(x5649)))+(((cj6)*(r00)*(x5646)))+(((IkReal(-1.00000000000000))*(x5648)*(x5651)))+(((r21)*(x5647)))+(((cj6)*(x5650)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x5652=IKcos(j4);
IkReal x5653=((cj2)*(sj6));
IkReal x5654=((cj1)*(r00));
IkReal x5655=((IkReal(1.00000000000000))*(r21));
IkReal x5656=((cj6)*(sj2));
IkReal x5657=((r10)*(sj1));
IkReal x5658=((cj2)*(cj6));
IkReal x5659=((cj1)*(r01));
IkReal x5660=((r11)*(sj1));
IkReal x5661=((IkReal(1.00000000000000))*(IKsin(j4)));
IkReal x5662=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(x5661)))+(((IkReal(-1.00000000000000))*(r20)*(x5662)))+(((IkReal(-1.00000000000000))*(x5655)*(x5656)))+(((x5653)*(x5654)))+(((x5653)*(x5657)))+(((x5658)*(x5659)))+(((x5658)*(x5660))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x5661)))+(((r20)*(x5658)))+(((x5656)*(x5657)))+(((x5654)*(x5656)))+(((IkReal(-1.00000000000000))*(x5653)*(x5655)))+(((IkReal(-1.00000000000000))*(x5659)*(x5662)))+(((IkReal(-1.00000000000000))*(x5660)*(x5662))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x5653)))+(((IkReal(-1.00000000000000))*(x5656)*(x5660)))+(((IkReal(-1.00000000000000))*(x5656)*(x5659)))+(((IkReal(-1.00000000000000))*(x5657)*(x5662)))+(((IkReal(-1.00000000000000))*(x5655)*(x5658)))+(((IkReal(-1.00000000000000))*(x5654)*(x5662)))+(((IkReal(-1.00000000000000))*(x5652))));
evalcond[3]=((x5652)+(((r20)*(x5656)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x5655)))+(((IkReal(-1.00000000000000))*(x5657)*(x5658)))+(((x5653)*(x5659)))+(((x5653)*(x5660)))+(((IkReal(-1.00000000000000))*(x5654)*(x5658))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5663=((cj1)*(sj6));
IkReal x5664=((cj1)*(cj6));
IkReal x5665=((sj1)*(sj6));
IkReal x5666=((IkReal(1.00000000000000))*(cj6)*(sj1));
if( IKabs(((gconst20)*(((((IkReal(-1.00000000000000))*(r01)*(x5666)))+(((r11)*(x5664)))+(((IkReal(-1.00000000000000))*(r00)*(x5665)))+(((r10)*(x5663))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst20)*(((((r01)*(x5665)))+(((IkReal(-1.00000000000000))*(r00)*(x5666)))+(((r10)*(x5664)))+(((IkReal(-1.00000000000000))*(r11)*(x5663))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst20)*(((((IkReal(-1.00000000000000))*(r01)*(x5666)))+(((r11)*(x5664)))+(((IkReal(-1.00000000000000))*(r00)*(x5665)))+(((r10)*(x5663)))))), ((gconst20)*(((((r01)*(x5665)))+(((IkReal(-1.00000000000000))*(r00)*(x5666)))+(((r10)*(x5664)))+(((IkReal(-1.00000000000000))*(r11)*(x5663)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x5667=((cj1)*(r10));
IkReal x5668=((r00)*(sj1));
IkReal x5669=((r01)*(sj1));
IkReal x5670=((IkReal(1.00000000000000))*(cj1)*(r11));
evalcond[0]=((((cj6)*(x5669)))+(((IkReal(-1.00000000000000))*(cj6)*(x5670)))+(((sj6)*(x5668)))+(((sj3)*(IKsin(j4))))+(((IkReal(-1.00000000000000))*(sj6)*(x5667))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj6)*(x5670)))+(((IkReal(-1.00000000000000))*(sj3)*(IKcos(j4))))+(((cj6)*(x5667)))+(((sj6)*(x5669)))+(((IkReal(-1.00000000000000))*(cj6)*(x5668))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst21;
gconst21=IKsign((((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1))))));
dummyeval[0]=(((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst22;
IkReal x5671=(sj1)*(sj1);
IkReal x5672=(cj1)*(cj1);
IkReal x5673=((r10)*(sj6));
IkReal x5674=((cj1)*(sj1));
IkReal x5675=((r00)*(sj6));
IkReal x5676=((r12)*(x5671));
IkReal x5677=((cj6)*(x5674));
IkReal x5678=((r02)*(x5672));
gconst22=IKsign(((((cj6)*(r21)*(r22)))+(((r20)*(r22)*(sj6)))+(((x5675)*(x5678)))+(((r02)*(x5673)*(x5674)))+(((x5673)*(x5676)))+(((r01)*(r12)*(x5677)))+(((cj6)*(r01)*(x5678)))+(((cj6)*(r11)*(x5676)))+(((r02)*(r11)*(x5677)))+(((r12)*(x5674)*(x5675)))));
IkReal x5679=(sj1)*(sj1);
IkReal x5680=(cj1)*(cj1);
IkReal x5681=((r10)*(sj6));
IkReal x5682=((cj1)*(sj1));
IkReal x5683=((r00)*(sj6));
IkReal x5684=((r12)*(x5679));
IkReal x5685=((cj6)*(x5682));
IkReal x5686=((r02)*(x5680));
dummyeval[0]=((((cj6)*(r01)*(x5686)))+(((x5681)*(x5684)))+(((r12)*(x5682)*(x5683)))+(((cj6)*(r21)*(r22)))+(((x5683)*(x5686)))+(((r20)*(r22)*(sj6)))+(((cj6)*(r11)*(x5684)))+(((r02)*(x5681)*(x5682)))+(((r01)*(r12)*(x5685)))+(((r02)*(r11)*(x5685))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5687=((IkReal(1.00000000000000))*(cj3)*(sj4));
if( IKabs(((cj3)*(gconst22)*(r22)*(sj4))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst22)*(((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5687)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5687))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((cj3)*(gconst22)*(r22)*(sj4)), ((gconst22)*(((((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5687)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5687)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x5688=IKsin(j2);
IkReal x5689=IKcos(j2);
IkReal x5690=((r11)*(sj6));
IkReal x5691=((cj6)*(r11));
IkReal x5692=((IkReal(1.00000000000000))*(cj4));
IkReal x5693=((cj6)*(r20));
IkReal x5694=((IkReal(1.00000000000000))*(sj6));
IkReal x5695=((cj1)*(r00));
IkReal x5696=((cj1)*(r01));
IkReal x5697=((IkReal(1.00000000000000))*(cj6));
IkReal x5698=((cj1)*(r02));
IkReal x5699=((sj1)*(x5688));
IkReal x5700=((sj1)*(x5689));
IkReal x5701=((r21)*(x5689));
IkReal x5702=((sj6)*(x5689));
IkReal x5703=((cj6)*(x5689));
IkReal x5704=((r21)*(x5688));
evalcond[0]=((((r22)*(x5689)))+(((r12)*(x5699)))+(((x5688)*(x5698))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj3)))+(((r22)*(x5688)))+(((IkReal(-1.00000000000000))*(x5689)*(x5698)))+(((IkReal(-1.00000000000000))*(r12)*(x5700))));
evalcond[2]=((((r10)*(sj6)*(x5700)))+(((IkReal(-1.00000000000000))*(x5697)*(x5704)))+(((x5696)*(x5703)))+(((x5695)*(x5702)))+(((IkReal(-1.00000000000000))*(r20)*(x5688)*(x5694)))+(((cj3)*(sj4)))+(((x5691)*(x5700))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5694)*(x5701)))+(((cj6)*(x5688)*(x5695)))+(((IkReal(-1.00000000000000))*(sj4)))+(((IkReal(-1.00000000000000))*(x5690)*(x5699)))+(((IkReal(-1.00000000000000))*(x5688)*(x5694)*(x5696)))+(((x5689)*(x5693)))+(((cj6)*(r10)*(x5699))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x5688)*(x5696)*(x5697)))+(((IkReal(-1.00000000000000))*(x5697)*(x5701)))+(((IkReal(-1.00000000000000))*(x5692)))+(((IkReal(-1.00000000000000))*(r20)*(x5689)*(x5694)))+(((IkReal(-1.00000000000000))*(x5691)*(x5699)))+(((IkReal(-1.00000000000000))*(r10)*(x5694)*(x5699)))+(((IkReal(-1.00000000000000))*(x5688)*(x5694)*(x5695))));
evalcond[5]=((((x5690)*(x5700)))+(((IkReal(-1.00000000000000))*(x5694)*(x5704)))+(((IkReal(-1.00000000000000))*(r10)*(x5697)*(x5700)))+(((IkReal(-1.00000000000000))*(x5689)*(x5695)*(x5697)))+(((x5696)*(x5702)))+(((x5688)*(x5693)))+(((IkReal(-1.00000000000000))*(cj3)*(x5692))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5705=((IkReal(1.00000000000000))*(sj3));
if( IKabs(((gconst21)*(r22)*(sj3))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5705)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5705))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst21)*(r22)*(sj3)), ((gconst21)*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5705)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5705)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x5706=IKsin(j2);
IkReal x5707=IKcos(j2);
IkReal x5708=((r11)*(sj6));
IkReal x5709=((cj6)*(r11));
IkReal x5710=((IkReal(1.00000000000000))*(cj4));
IkReal x5711=((cj6)*(r20));
IkReal x5712=((IkReal(1.00000000000000))*(sj6));
IkReal x5713=((cj1)*(r00));
IkReal x5714=((cj1)*(r01));
IkReal x5715=((IkReal(1.00000000000000))*(cj6));
IkReal x5716=((cj1)*(r02));
IkReal x5717=((sj1)*(x5706));
IkReal x5718=((sj1)*(x5707));
IkReal x5719=((r21)*(x5707));
IkReal x5720=((sj6)*(x5707));
IkReal x5721=((cj6)*(x5707));
IkReal x5722=((r21)*(x5706));
evalcond[0]=((((r22)*(x5707)))+(((r12)*(x5717)))+(((x5706)*(x5716))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj3)))+(((r22)*(x5706)))+(((IkReal(-1.00000000000000))*(r12)*(x5718)))+(((IkReal(-1.00000000000000))*(x5707)*(x5716))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x5706)*(x5712)))+(((IkReal(-1.00000000000000))*(x5715)*(x5722)))+(((x5714)*(x5721)))+(((x5713)*(x5720)))+(((r10)*(sj6)*(x5718)))+(((cj3)*(sj4)))+(((x5709)*(x5718))));
evalcond[3]=((((cj6)*(x5706)*(x5713)))+(((x5707)*(x5711)))+(((IkReal(-1.00000000000000))*(sj4)))+(((cj6)*(r10)*(x5717)))+(((IkReal(-1.00000000000000))*(x5708)*(x5717)))+(((IkReal(-1.00000000000000))*(x5712)*(x5719)))+(((IkReal(-1.00000000000000))*(x5706)*(x5712)*(x5714))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(x5707)*(x5712)))+(((IkReal(-1.00000000000000))*(x5715)*(x5719)))+(((IkReal(-1.00000000000000))*(x5706)*(x5714)*(x5715)))+(((IkReal(-1.00000000000000))*(r10)*(x5712)*(x5717)))+(((IkReal(-1.00000000000000))*(x5706)*(x5712)*(x5713)))+(((IkReal(-1.00000000000000))*(x5709)*(x5717)))+(((IkReal(-1.00000000000000))*(x5710))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x5712)*(x5722)))+(((IkReal(-1.00000000000000))*(r10)*(x5715)*(x5718)))+(((IkReal(-1.00000000000000))*(x5707)*(x5713)*(x5715)))+(((IkReal(-1.00000000000000))*(cj3)*(x5710)))+(((x5714)*(x5720)))+(((x5706)*(x5711)))+(((x5708)*(x5718))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5723=((IkReal(1.00000000000000))*(sj3));
if( IKabs(((gconst19)*(r22)*(sj3))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst19)*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5723)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5723))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst19)*(r22)*(sj3)), ((gconst19)*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5723)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5723)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x5724=IKsin(j2);
IkReal x5725=IKcos(j2);
IkReal x5726=((r12)*(sj1));
IkReal x5727=((cj1)*(r02));
IkReal x5728=((IkReal(1.00000000000000))*(x5725));
evalcond[0]=((((x5724)*(x5726)))+(((x5724)*(x5727)))+(((r22)*(x5725))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj3)))+(((IkReal(-1.00000000000000))*(x5727)*(x5728)))+(((IkReal(-1.00000000000000))*(x5726)*(x5728)))+(((r22)*(x5724))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst23;
gconst23=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj3;
dummyeval[1]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x5729=((IkReal(1.00000000000000))*(sj6));
IkReal x5730=((IkReal(1.00000000000000))*(r02));
IkReal x5731=((cj1)*(r11));
IkReal x5732=((IkReal(1.00000000000000))*(cj6));
IkReal x5733=((IkReal(0.400000000000000))*(sj6));
IkReal x5734=((r00)*(sj1));
IkReal x5735=((cj1)*(r12));
IkReal x5736=((r12)*(sj1));
IkReal x5737=((r01)*(sj1));
IkReal x5738=((cj1)*(r10));
IkReal x5739=((cj6)*(x5734));
IkReal x5740=((cj6)*(x5737));
IkReal x5741=((cj6)*(x5738));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1)))+(((IkReal(-0.400000000000000))*(x5735))));
evalcond[2]=((((sj2)*(x5736)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(sj1)*(x5730)))+(x5735));
evalcond[4]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(x5730)))+(((IkReal(-1.00000000000000))*(cj2)*(x5736))));
evalcond[5]=((((sj6)*(x5734)))+(((IkReal(-1.00000000000000))*(x5729)*(x5738)))+(((IkReal(-1.00000000000000))*(x5731)*(x5732)))+(x5740));
evalcond[6]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x5732)))+(((IkReal(-1.00000000000000))*(npx)*(x5729)))+(((x5733)*(x5738)))+(((IkReal(-1.00000000000000))*(x5733)*(x5734)))+(((IkReal(0.400000000000000))*(cj6)*(x5731)))+(((IkReal(-0.400000000000000))*(x5740))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x5732)*(x5734)))+(((sj6)*(x5737)))+(((IkReal(-1.00000000000000))*(x5729)*(x5731)))+(x5741));
evalcond[8]=((((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(x5729)))+(((IkReal(-1.00000000000000))*(x5733)*(x5737)))+(((x5731)*(x5733)))+(((IkReal(-0.400000000000000))*(x5741)))+(((IkReal(0.400000000000000))*(x5739))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5742=((cj2)*(sj6));
IkReal x5743=((IkReal(1.00000000000000))*(sj1));
IkReal x5744=((r20)*(sj2));
IkReal x5745=((cj1)*(r01));
IkReal x5746=((cj2)*(cj6));
IkReal x5747=((r21)*(sj2));
IkReal x5748=((IkReal(1.00000000000000))*(cj1)*(r00));
if( IKabs(((((cj6)*(x5747)))+(((IkReal(-1.00000000000000))*(x5745)*(x5746)))+(((IkReal(-1.00000000000000))*(r11)*(x5743)*(x5746)))+(((IkReal(-1.00000000000000))*(x5742)*(x5748)))+(((IkReal(-1.00000000000000))*(r10)*(x5742)*(x5743)))+(((sj6)*(x5744))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(x5744)))+(((x5742)*(x5745)))+(((IkReal(-1.00000000000000))*(r10)*(x5743)*(x5746)))+(((IkReal(-1.00000000000000))*(x5746)*(x5748)))+(((IkReal(-1.00000000000000))*(sj6)*(x5747)))+(((r11)*(sj1)*(x5742))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj6)*(x5747)))+(((IkReal(-1.00000000000000))*(x5745)*(x5746)))+(((IkReal(-1.00000000000000))*(r11)*(x5743)*(x5746)))+(((IkReal(-1.00000000000000))*(x5742)*(x5748)))+(((IkReal(-1.00000000000000))*(r10)*(x5742)*(x5743)))+(((sj6)*(x5744)))))+IKsqr(((((cj6)*(x5744)))+(((x5742)*(x5745)))+(((IkReal(-1.00000000000000))*(r10)*(x5743)*(x5746)))+(((IkReal(-1.00000000000000))*(x5746)*(x5748)))+(((IkReal(-1.00000000000000))*(sj6)*(x5747)))+(((r11)*(sj1)*(x5742)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((cj6)*(x5747)))+(((IkReal(-1.00000000000000))*(x5745)*(x5746)))+(((IkReal(-1.00000000000000))*(r11)*(x5743)*(x5746)))+(((IkReal(-1.00000000000000))*(x5742)*(x5748)))+(((IkReal(-1.00000000000000))*(r10)*(x5742)*(x5743)))+(((sj6)*(x5744)))), ((((cj6)*(x5744)))+(((x5742)*(x5745)))+(((IkReal(-1.00000000000000))*(r10)*(x5743)*(x5746)))+(((IkReal(-1.00000000000000))*(x5746)*(x5748)))+(((IkReal(-1.00000000000000))*(sj6)*(x5747)))+(((r11)*(sj1)*(x5742)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x5749=IKsin(j4);
IkReal x5750=((cj2)*(sj6));
IkReal x5751=((cj1)*(r00));
IkReal x5752=((IkReal(1.00000000000000))*(r21));
IkReal x5753=((cj6)*(sj2));
IkReal x5754=((r10)*(sj1));
IkReal x5755=((cj2)*(cj6));
IkReal x5756=((cj1)*(r01));
IkReal x5757=((r11)*(sj1));
IkReal x5758=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x5759=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((x5750)*(x5754)))+(((x5750)*(x5751)))+(((IkReal(-1.00000000000000))*(x5752)*(x5753)))+(((x5755)*(x5757)))+(((x5755)*(x5756)))+(((IkReal(-1.00000000000000))*(r20)*(x5759)))+(x5749));
evalcond[1]=((((x5751)*(x5753)))+(((r20)*(x5755)))+(((x5753)*(x5754)))+(((IkReal(-1.00000000000000))*(x5749)))+(((IkReal(-1.00000000000000))*(x5757)*(x5759)))+(((IkReal(-1.00000000000000))*(x5756)*(x5759)))+(((IkReal(-1.00000000000000))*(x5750)*(x5752))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5752)*(x5755)))+(((IkReal(-1.00000000000000))*(x5751)*(x5759)))+(((IkReal(-1.00000000000000))*(r20)*(x5750)))+(((IkReal(-1.00000000000000))*(x5753)*(x5757)))+(((IkReal(-1.00000000000000))*(x5753)*(x5756)))+(((IkReal(-1.00000000000000))*(x5758)))+(((IkReal(-1.00000000000000))*(x5754)*(x5759))));
evalcond[3]=((((x5750)*(x5756)))+(((x5750)*(x5757)))+(((IkReal(-1.00000000000000))*(x5751)*(x5755)))+(((IkReal(-1.00000000000000))*(x5754)*(x5755)))+(((IkReal(-1.00000000000000))*(x5758)))+(((r20)*(x5753)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x5752))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x5760=((IkReal(1.00000000000000))*(sj6));
IkReal x5761=((IkReal(1.00000000000000))*(r02));
IkReal x5762=((cj1)*(r11));
IkReal x5763=((IkReal(1.00000000000000))*(cj6));
IkReal x5764=((IkReal(0.400000000000000))*(sj6));
IkReal x5765=((r00)*(sj1));
IkReal x5766=((cj1)*(r12));
IkReal x5767=((r12)*(sj1));
IkReal x5768=((r01)*(sj1));
IkReal x5769=((cj1)*(r10));
IkReal x5770=((cj6)*(x5765));
IkReal x5771=((cj6)*(x5768));
IkReal x5772=((cj6)*(x5769));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1)))+(((IkReal(-0.400000000000000))*(x5766))));
evalcond[2]=((((sj2)*(x5767)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(sj1)*(x5761)))+(x5766));
evalcond[4]=((((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x5767)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(x5761))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x5760)*(x5769)))+(((sj6)*(x5765)))+(((IkReal(-1.00000000000000))*(x5762)*(x5763)))+(x5771));
evalcond[6]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npy)*(x5763)))+(((x5764)*(x5769)))+(((IkReal(-0.400000000000000))*(x5771)))+(((IkReal(0.400000000000000))*(cj6)*(x5762)))+(((IkReal(-1.00000000000000))*(x5764)*(x5765)))+(((IkReal(-1.00000000000000))*(npx)*(x5760))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x5760)*(x5762)))+(((sj6)*(x5768)))+(((IkReal(-1.00000000000000))*(x5763)*(x5765)))+(x5772));
evalcond[8]=((((IkReal(-1.00000000000000))*(npy)*(x5760)))+(((cj6)*(npx)))+(((IkReal(-0.400000000000000))*(x5772)))+(((IkReal(-1.00000000000000))*(x5764)*(x5768)))+(((x5762)*(x5764)))+(((IkReal(0.400000000000000))*(x5770))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5773=((cj1)*(cj2));
IkReal x5774=((sj2)*(sj6));
IkReal x5775=((IkReal(1.00000000000000))*(sj6));
IkReal x5776=((IkReal(1.00000000000000))*(cj6)*(sj2));
IkReal x5777=((cj2)*(r10)*(sj1));
IkReal x5778=((cj2)*(r11)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r21)*(x5776)))+(((r00)*(sj6)*(x5773)))+(((cj6)*(r01)*(x5773)))+(((cj6)*(x5778)))+(((IkReal(-1.00000000000000))*(r20)*(x5774)))+(((sj6)*(x5777))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r01)*(x5773)*(x5775)))+(((IkReal(-1.00000000000000))*(r20)*(x5776)))+(((cj6)*(r00)*(x5773)))+(((cj6)*(x5777)))+(((r21)*(x5774)))+(((IkReal(-1.00000000000000))*(x5775)*(x5778))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r21)*(x5776)))+(((r00)*(sj6)*(x5773)))+(((cj6)*(r01)*(x5773)))+(((cj6)*(x5778)))+(((IkReal(-1.00000000000000))*(r20)*(x5774)))+(((sj6)*(x5777)))))+IKsqr(((((IkReal(-1.00000000000000))*(r01)*(x5773)*(x5775)))+(((IkReal(-1.00000000000000))*(r20)*(x5776)))+(((cj6)*(r00)*(x5773)))+(((cj6)*(x5777)))+(((r21)*(x5774)))+(((IkReal(-1.00000000000000))*(x5775)*(x5778)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r21)*(x5776)))+(((r00)*(sj6)*(x5773)))+(((cj6)*(r01)*(x5773)))+(((cj6)*(x5778)))+(((IkReal(-1.00000000000000))*(r20)*(x5774)))+(((sj6)*(x5777)))), ((((IkReal(-1.00000000000000))*(r01)*(x5773)*(x5775)))+(((IkReal(-1.00000000000000))*(r20)*(x5776)))+(((cj6)*(r00)*(x5773)))+(((cj6)*(x5777)))+(((r21)*(x5774)))+(((IkReal(-1.00000000000000))*(x5775)*(x5778)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x5779=IKcos(j4);
IkReal x5780=((cj2)*(sj6));
IkReal x5781=((cj1)*(r00));
IkReal x5782=((IkReal(1.00000000000000))*(r21));
IkReal x5783=((cj6)*(sj2));
IkReal x5784=((r10)*(sj1));
IkReal x5785=((cj2)*(cj6));
IkReal x5786=((cj1)*(r01));
IkReal x5787=((r11)*(sj1));
IkReal x5788=((IkReal(1.00000000000000))*(IKsin(j4)));
IkReal x5789=((IkReal(1.00000000000000))*(sj2)*(sj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(x5782)*(x5783)))+(((IkReal(-1.00000000000000))*(r20)*(x5789)))+(((IkReal(-1.00000000000000))*(x5788)))+(((x5785)*(x5786)))+(((x5785)*(x5787)))+(((x5780)*(x5781)))+(((x5780)*(x5784))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x5788)))+(((r20)*(x5785)))+(((IkReal(-1.00000000000000))*(x5786)*(x5789)))+(((x5783)*(x5784)))+(((IkReal(-1.00000000000000))*(x5780)*(x5782)))+(((IkReal(-1.00000000000000))*(x5787)*(x5789)))+(((x5781)*(x5783))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x5780)))+(((IkReal(-1.00000000000000))*(x5784)*(x5789)))+(((IkReal(-1.00000000000000))*(x5782)*(x5785)))+(((IkReal(-1.00000000000000))*(x5783)*(x5787)))+(((IkReal(-1.00000000000000))*(x5783)*(x5786)))+(((IkReal(-1.00000000000000))*(x5781)*(x5789)))+(((IkReal(-1.00000000000000))*(x5779))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5781)*(x5785)))+(((IkReal(-1.00000000000000))*(x5784)*(x5785)))+(((r20)*(x5783)))+(((IkReal(-1.00000000000000))*(sj2)*(sj6)*(x5782)))+(((x5780)*(x5786)))+(((x5780)*(x5787)))+(x5779));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x5790=((cj1)*(sj6));
IkReal x5791=((cj2)*(r00));
IkReal x5792=((IkReal(1.00000000000000))*(sj6));
IkReal x5793=((IkReal(0.400000000000000))*(r10));
IkReal x5794=((IkReal(1.00000000000000))*(r02));
IkReal x5795=((IkReal(0.400000000000000))*(r11));
IkReal x5796=((r20)*(sj2));
IkReal x5797=((IkReal(1.00000000000000))*(cj6));
IkReal x5798=((sj1)*(sj6));
IkReal x5799=((cj1)*(cj2));
IkReal x5800=((r21)*(sj2));
IkReal x5801=((cj1)*(r12));
IkReal x5802=((cj2)*(r11));
IkReal x5803=((r12)*(sj1));
IkReal x5804=((cj1)*(cj6));
IkReal x5805=((cj2)*(r10));
IkReal x5806=((IkReal(0.400000000000000))*(cj6)*(sj1));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(((IkReal(-0.400000000000000))*(x5801)))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1))));
evalcond[2]=((((sj2)*(x5803)))+(((cj2)*(r22)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj1)*(x5794)))+(x5801));
evalcond[4]=((IkReal(-1.00000000000000))+(((r22)*(sj2)))+(((IkReal(-1.00000000000000))*(x5794)*(x5799)))+(((IkReal(-1.00000000000000))*(cj2)*(x5803))));
evalcond[5]=((IkReal(0.000500000000000000))+(((x5795)*(x5804)))+(((IkReal(-0.400000000000000))*(r00)*(x5798)))+(((IkReal(-1.00000000000000))*(npy)*(x5797)))+(((IkReal(-1.00000000000000))*(npx)*(x5792)))+(((IkReal(-1.00000000000000))*(r01)*(x5806)))+(((x5790)*(x5793))));
evalcond[6]=((((cj6)*(npx)))+(((IkReal(-0.400000000000000))*(r01)*(x5798)))+(((r00)*(x5806)))+(((IkReal(-1.00000000000000))*(npy)*(x5792)))+(((IkReal(-1.00000000000000))*(x5793)*(x5804)))+(((x5790)*(x5795))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x5797)*(x5800)))+(((IkReal(-1.00000000000000))*(x5792)*(x5796)))+(((cj6)*(sj1)*(x5802)))+(((x5798)*(x5805)))+(((cj6)*(r01)*(x5799)))+(((x5790)*(x5791))));
evalcond[8]=((((IkReal(-1.00000000000000))*(sj1)*(x5797)*(x5805)))+(((cj6)*(x5796)))+(((IkReal(-1.00000000000000))*(cj1)*(x5791)*(x5797)))+(((cj2)*(r01)*(x5790)))+(((x5798)*(x5802)))+(((IkReal(-1.00000000000000))*(x5792)*(x5800))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5807=((cj1)*(sj6));
IkReal x5808=((cj1)*(cj6));
IkReal x5809=((sj1)*(sj6));
IkReal x5810=((IkReal(1.00000000000000))*(cj6)*(sj1));
if( IKabs(((((r11)*(x5808)))+(((r10)*(x5807)))+(((IkReal(-1.00000000000000))*(r01)*(x5810)))+(((IkReal(-1.00000000000000))*(r00)*(x5809))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r01)*(x5809)))+(((IkReal(-1.00000000000000))*(r11)*(x5807)))+(((r10)*(x5808)))+(((IkReal(-1.00000000000000))*(r00)*(x5810))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r11)*(x5808)))+(((r10)*(x5807)))+(((IkReal(-1.00000000000000))*(r01)*(x5810)))+(((IkReal(-1.00000000000000))*(r00)*(x5809)))))+IKsqr(((((r01)*(x5809)))+(((IkReal(-1.00000000000000))*(r11)*(x5807)))+(((r10)*(x5808)))+(((IkReal(-1.00000000000000))*(r00)*(x5810)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((r11)*(x5808)))+(((r10)*(x5807)))+(((IkReal(-1.00000000000000))*(r01)*(x5810)))+(((IkReal(-1.00000000000000))*(r00)*(x5809)))), ((((r01)*(x5809)))+(((IkReal(-1.00000000000000))*(r11)*(x5807)))+(((r10)*(x5808)))+(((IkReal(-1.00000000000000))*(r00)*(x5810)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x5811=IKsin(j4);
IkReal x5812=((IkReal(1.00000000000000))*(sj6));
IkReal x5813=((cj2)*(r21));
IkReal x5814=((IkReal(1.00000000000000))*(cj6));
IkReal x5815=((cj1)*(r11));
IkReal x5816=((r00)*(sj1));
IkReal x5817=((cj6)*(sj2));
IkReal x5818=((r10)*(sj1));
IkReal x5819=((cj1)*(r00));
IkReal x5820=((cj1)*(r10));
IkReal x5821=((cj2)*(r20));
IkReal x5822=((r01)*(sj1));
IkReal x5823=((IkReal(1.00000000000000))*(IKcos(j4)));
IkReal x5824=((cj1)*(r01)*(sj2));
IkReal x5825=((r11)*(sj1)*(sj2));
evalcond[0]=((((sj6)*(x5816)))+(((cj6)*(x5822)))+(((IkReal(-1.00000000000000))*(x5814)*(x5815)))+(((IkReal(-1.00000000000000))*(x5812)*(x5820)))+(x5811));
evalcond[1]=((((IkReal(-1.00000000000000))*(x5823)))+(((cj6)*(x5820)))+(((IkReal(-1.00000000000000))*(x5814)*(x5816)))+(((sj6)*(x5822)))+(((IkReal(-1.00000000000000))*(x5812)*(x5815))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5811)))+(((cj6)*(x5821)))+(((IkReal(-1.00000000000000))*(x5812)*(x5813)))+(((IkReal(-1.00000000000000))*(x5812)*(x5824)))+(((IkReal(-1.00000000000000))*(x5812)*(x5825)))+(((x5817)*(x5819)))+(((x5817)*(x5818))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5823)))+(((IkReal(-1.00000000000000))*(x5813)*(x5814)))+(((IkReal(-1.00000000000000))*(x5814)*(x5825)))+(((IkReal(-1.00000000000000))*(x5814)*(x5824)))+(((IkReal(-1.00000000000000))*(sj2)*(x5812)*(x5819)))+(((IkReal(-1.00000000000000))*(sj2)*(x5812)*(x5818)))+(((IkReal(-1.00000000000000))*(x5812)*(x5821))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x5826=((cj1)*(sj6));
IkReal x5827=((cj2)*(r00));
IkReal x5828=((IkReal(1.00000000000000))*(sj6));
IkReal x5829=((IkReal(0.400000000000000))*(r10));
IkReal x5830=((IkReal(1.00000000000000))*(r02));
IkReal x5831=((IkReal(0.400000000000000))*(r11));
IkReal x5832=((r20)*(sj2));
IkReal x5833=((IkReal(1.00000000000000))*(cj6));
IkReal x5834=((sj1)*(sj6));
IkReal x5835=((cj1)*(cj2));
IkReal x5836=((r21)*(sj2));
IkReal x5837=((cj1)*(r12));
IkReal x5838=((cj2)*(r11));
IkReal x5839=((r12)*(sj1));
IkReal x5840=((cj1)*(cj6));
IkReal x5841=((cj2)*(r10));
IkReal x5842=((IkReal(0.400000000000000))*(cj6)*(sj1));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.390000000000000))+(((IkReal(-0.400000000000000))*(x5837)))+(npz)+(((IkReal(0.400000000000000))*(r02)*(sj1))));
evalcond[2]=((((cj2)*(r22)))+(((sj2)*(x5839)))+(((cj1)*(r02)*(sj2))));
evalcond[3]=((x5837)+(((IkReal(-1.00000000000000))*(sj1)*(x5830))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(cj2)*(x5839)))+(((IkReal(-1.00000000000000))*(x5830)*(x5835)))+(((r22)*(sj2))));
evalcond[5]=((IkReal(0.000500000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x5828)))+(((IkReal(-1.00000000000000))*(npy)*(x5833)))+(((IkReal(-1.00000000000000))*(r01)*(x5842)))+(((x5831)*(x5840)))+(((x5826)*(x5829)))+(((IkReal(-0.400000000000000))*(r00)*(x5834))));
evalcond[6]=((((cj6)*(npx)))+(((IkReal(-1.00000000000000))*(npy)*(x5828)))+(((r00)*(x5842)))+(((IkReal(-1.00000000000000))*(x5829)*(x5840)))+(((x5826)*(x5831)))+(((IkReal(-0.400000000000000))*(r01)*(x5834))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x5833)*(x5836)))+(((x5834)*(x5841)))+(((IkReal(-1.00000000000000))*(x5828)*(x5832)))+(((cj6)*(r01)*(x5835)))+(((x5826)*(x5827)))+(((cj6)*(sj1)*(x5838))));
evalcond[8]=((((x5834)*(x5838)))+(((cj2)*(r01)*(x5826)))+(((IkReal(-1.00000000000000))*(sj1)*(x5833)*(x5841)))+(((cj6)*(x5832)))+(((IkReal(-1.00000000000000))*(x5828)*(x5836)))+(((IkReal(-1.00000000000000))*(cj1)*(x5827)*(x5833))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5843=((r00)*(sj1));
IkReal x5844=((cj1)*(r11));
IkReal x5845=((r01)*(sj1));
IkReal x5846=((IkReal(1.00000000000000))*(sj6));
IkReal x5847=((IkReal(1.00000000000000))*(cj6));
IkReal x5848=((cj1)*(r10));
if( IKabs(((((IkReal(-1.00000000000000))*(x5844)*(x5847)))+(((cj6)*(x5845)))+(((sj6)*(x5843)))+(((IkReal(-1.00000000000000))*(x5846)*(x5848))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x5847)*(x5848)))+(((cj6)*(x5843)))+(((sj6)*(x5844)))+(((IkReal(-1.00000000000000))*(x5845)*(x5846))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x5844)*(x5847)))+(((cj6)*(x5845)))+(((sj6)*(x5843)))+(((IkReal(-1.00000000000000))*(x5846)*(x5848)))))+IKsqr(((((IkReal(-1.00000000000000))*(x5847)*(x5848)))+(((cj6)*(x5843)))+(((sj6)*(x5844)))+(((IkReal(-1.00000000000000))*(x5845)*(x5846)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x5844)*(x5847)))+(((cj6)*(x5845)))+(((sj6)*(x5843)))+(((IkReal(-1.00000000000000))*(x5846)*(x5848)))), ((((IkReal(-1.00000000000000))*(x5847)*(x5848)))+(((cj6)*(x5843)))+(((sj6)*(x5844)))+(((IkReal(-1.00000000000000))*(x5845)*(x5846)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x5849=IKcos(j4);
IkReal x5850=((IkReal(1.00000000000000))*(sj6));
IkReal x5851=((cj2)*(r21));
IkReal x5852=((IkReal(1.00000000000000))*(cj6));
IkReal x5853=((cj1)*(r11));
IkReal x5854=((r00)*(sj1));
IkReal x5855=((cj6)*(sj2));
IkReal x5856=((r10)*(sj1));
IkReal x5857=((cj1)*(r00));
IkReal x5858=((cj1)*(r10));
IkReal x5859=((cj2)*(r20));
IkReal x5860=((r01)*(sj1));
IkReal x5861=((IkReal(1.00000000000000))*(IKsin(j4)));
IkReal x5862=((cj1)*(r01)*(sj2));
IkReal x5863=((r11)*(sj1)*(sj2));
evalcond[0]=((((IkReal(-1.00000000000000))*(x5861)))+(((IkReal(-1.00000000000000))*(x5852)*(x5853)))+(((IkReal(-1.00000000000000))*(x5850)*(x5858)))+(((sj6)*(x5854)))+(((cj6)*(x5860))));
evalcond[1]=((((sj6)*(x5860)))+(((cj6)*(x5858)))+(((IkReal(-1.00000000000000))*(x5852)*(x5854)))+(((IkReal(-1.00000000000000))*(x5850)*(x5853)))+(x5849));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5850)*(x5863)))+(((IkReal(-1.00000000000000))*(x5850)*(x5862)))+(((x5855)*(x5857)))+(((x5855)*(x5856)))+(((IkReal(-1.00000000000000))*(x5861)))+(((cj6)*(x5859)))+(((IkReal(-1.00000000000000))*(x5850)*(x5851))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5849)))+(((IkReal(-1.00000000000000))*(x5852)*(x5863)))+(((IkReal(-1.00000000000000))*(x5852)*(x5862)))+(((IkReal(-1.00000000000000))*(sj2)*(x5850)*(x5857)))+(((IkReal(-1.00000000000000))*(sj2)*(x5850)*(x5856)))+(((IkReal(-1.00000000000000))*(x5851)*(x5852)))+(((IkReal(-1.00000000000000))*(x5850)*(x5859))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5864=((cj2)*(sj6));
IkReal x5865=((IkReal(1.00000000000000))*(cj6));
IkReal x5866=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r01)*(sj1)*(x5865)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x5866))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(r10)*(sj1)*(x5865)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x5866)))+(((cj1)*(r01)*(x5864)))+(((cj6)*(r20)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r00)*(x5865)))+(((r11)*(sj1)*(x5864))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r01)*(sj1)*(x5865)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x5866)))))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(r10)*(sj1)*(x5865)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x5866)))+(((cj1)*(r01)*(x5864)))+(((cj6)*(r20)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r00)*(x5865)))+(((r11)*(sj1)*(x5864)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r01)*(sj1)*(x5865)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(r00)*(sj1)*(x5866)))))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(r10)*(sj1)*(x5865)))+(((IkReal(-1.00000000000000))*(r21)*(sj2)*(x5866)))+(((cj1)*(r01)*(x5864)))+(((cj6)*(r20)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r00)*(x5865)))+(((r11)*(sj1)*(x5864)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x5867=IKsin(j4);
IkReal x5868=IKcos(j4);
IkReal x5869=((cj2)*(sj6));
IkReal x5870=((cj1)*(r00));
IkReal x5871=((IkReal(1.00000000000000))*(r21));
IkReal x5872=((cj6)*(sj2));
IkReal x5873=((IkReal(1.00000000000000))*(cj6));
IkReal x5874=((cj1)*(r11));
IkReal x5875=((r00)*(sj1));
IkReal x5876=((r10)*(sj1));
IkReal x5877=((sj2)*(sj6));
IkReal x5878=((IkReal(1.00000000000000))*(r20));
IkReal x5879=((cj2)*(cj6));
IkReal x5880=((cj1)*(r01));
IkReal x5881=((cj1)*(r10));
IkReal x5882=((r11)*(sj1));
IkReal x5883=((IkReal(1.00000000000000))*(sj6));
IkReal x5884=((r01)*(sj1));
IkReal x5885=((IkReal(1.00000000000000))*(x5868));
evalcond[0]=((((sj6)*(x5875)))+(((IkReal(-1.00000000000000))*(x5873)*(x5874)))+(((cj6)*(x5884)))+(((IkReal(-1.00000000000000))*(x5881)*(x5883)))+(((sj3)*(x5867))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj3)*(x5885)))+(((sj6)*(x5884)))+(((IkReal(-1.00000000000000))*(x5873)*(x5875)))+(((cj6)*(x5881)))+(((IkReal(-1.00000000000000))*(x5874)*(x5883))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x5877)*(x5878)))+(((x5879)*(x5880)))+(((x5879)*(x5882)))+(((x5869)*(x5870)))+(((x5869)*(x5876)))+(((IkReal(-1.00000000000000))*(x5871)*(x5872)))+(((cj3)*(x5867))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5867)))+(((x5872)*(x5876)))+(((IkReal(-1.00000000000000))*(x5877)*(x5882)))+(((IkReal(-1.00000000000000))*(x5877)*(x5880)))+(((x5870)*(x5872)))+(((IkReal(-1.00000000000000))*(x5869)*(x5871)))+(((r20)*(x5879))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x5870)*(x5877)))+(((IkReal(-1.00000000000000))*(x5876)*(x5877)))+(((IkReal(-1.00000000000000))*(x5871)*(x5879)))+(((IkReal(-1.00000000000000))*(x5872)*(x5880)))+(((IkReal(-1.00000000000000))*(x5872)*(x5882)))+(((IkReal(-1.00000000000000))*(x5885)))+(((IkReal(-1.00000000000000))*(x5869)*(x5878))));
evalcond[5]=((((x5869)*(x5882)))+(((x5869)*(x5880)))+(((IkReal(-1.00000000000000))*(cj3)*(x5885)))+(((IkReal(-1.00000000000000))*(cj2)*(x5870)*(x5873)))+(((IkReal(-1.00000000000000))*(x5871)*(x5877)))+(((r20)*(x5872)))+(((IkReal(-1.00000000000000))*(cj2)*(x5873)*(x5876))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5886=((IkReal(1.00000000000000))*(sj6));
IkReal x5887=((cj6)*(r10));
IkReal x5888=((cj6)*(r00));
IkReal x5889=((sj1)*(sj2));
IkReal x5890=((cj1)*(x5886));
if( IKabs(((((cj2)*(cj6)*(r20)))+(((x5887)*(x5889)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x5886)))+(((IkReal(-1.00000000000000))*(r01)*(sj2)*(x5890)))+(((cj1)*(sj2)*(x5888)))+(((IkReal(-1.00000000000000))*(r11)*(x5886)*(x5889))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x5888)))+(((IkReal(-1.00000000000000))*(r11)*(x5890)))+(((cj1)*(x5887)))+(((r01)*(sj1)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj2)*(cj6)*(r20)))+(((x5887)*(x5889)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x5886)))+(((IkReal(-1.00000000000000))*(r01)*(sj2)*(x5890)))+(((cj1)*(sj2)*(x5888)))+(((IkReal(-1.00000000000000))*(r11)*(x5886)*(x5889)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x5888)))+(((IkReal(-1.00000000000000))*(r11)*(x5890)))+(((cj1)*(x5887)))+(((r01)*(sj1)*(sj6)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((cj2)*(cj6)*(r20)))+(((x5887)*(x5889)))+(((IkReal(-1.00000000000000))*(cj2)*(r21)*(x5886)))+(((IkReal(-1.00000000000000))*(r01)*(sj2)*(x5890)))+(((cj1)*(sj2)*(x5888)))+(((IkReal(-1.00000000000000))*(r11)*(x5886)*(x5889)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x5888)))+(((IkReal(-1.00000000000000))*(r11)*(x5890)))+(((cj1)*(x5887)))+(((r01)*(sj1)*(sj6)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x5891=IKsin(j4);
IkReal x5892=IKcos(j4);
IkReal x5893=((cj2)*(sj6));
IkReal x5894=((cj1)*(r00));
IkReal x5895=((IkReal(1.00000000000000))*(r21));
IkReal x5896=((cj6)*(sj2));
IkReal x5897=((IkReal(1.00000000000000))*(cj6));
IkReal x5898=((cj1)*(r11));
IkReal x5899=((r00)*(sj1));
IkReal x5900=((r10)*(sj1));
IkReal x5901=((sj2)*(sj6));
IkReal x5902=((IkReal(1.00000000000000))*(r20));
IkReal x5903=((cj2)*(cj6));
IkReal x5904=((cj1)*(r01));
IkReal x5905=((cj1)*(r10));
IkReal x5906=((r11)*(sj1));
IkReal x5907=((IkReal(1.00000000000000))*(sj6));
IkReal x5908=((r01)*(sj1));
IkReal x5909=((IkReal(1.00000000000000))*(x5892));
evalcond[0]=((((IkReal(-1.00000000000000))*(x5897)*(x5898)))+(((cj6)*(x5908)))+(((sj6)*(x5899)))+(((IkReal(-1.00000000000000))*(x5905)*(x5907)))+(((sj3)*(x5891))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x5897)*(x5899)))+(((IkReal(-1.00000000000000))*(x5898)*(x5907)))+(((cj6)*(x5905)))+(((IkReal(-1.00000000000000))*(sj3)*(x5909)))+(((sj6)*(x5908))));
evalcond[2]=((((x5903)*(x5904)))+(((x5903)*(x5906)))+(((x5893)*(x5900)))+(((x5893)*(x5894)))+(((IkReal(-1.00000000000000))*(x5895)*(x5896)))+(((IkReal(-1.00000000000000))*(x5901)*(x5902)))+(((cj3)*(x5891))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5893)*(x5895)))+(((IkReal(-1.00000000000000))*(x5891)))+(((IkReal(-1.00000000000000))*(x5901)*(x5904)))+(((IkReal(-1.00000000000000))*(x5901)*(x5906)))+(((x5896)*(x5900)))+(((r20)*(x5903)))+(((x5894)*(x5896))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x5895)*(x5903)))+(((IkReal(-1.00000000000000))*(x5896)*(x5906)))+(((IkReal(-1.00000000000000))*(x5896)*(x5904)))+(((IkReal(-1.00000000000000))*(x5894)*(x5901)))+(((IkReal(-1.00000000000000))*(x5900)*(x5901)))+(((IkReal(-1.00000000000000))*(x5893)*(x5902)))+(((IkReal(-1.00000000000000))*(x5909))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x5895)*(x5901)))+(((IkReal(-1.00000000000000))*(cj3)*(x5909)))+(((IkReal(-1.00000000000000))*(cj2)*(x5894)*(x5897)))+(((r20)*(x5896)))+(((x5893)*(x5904)))+(((x5893)*(x5906)))+(((IkReal(-1.00000000000000))*(cj2)*(x5897)*(x5900))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5910=((cj1)*(sj6));
IkReal x5911=((cj1)*(cj6));
IkReal x5912=((sj1)*(sj6));
IkReal x5913=((IkReal(1.00000000000000))*(cj6)*(sj1));
if( IKabs(((gconst23)*(((((r10)*(x5910)))+(((IkReal(-1.00000000000000))*(r00)*(x5912)))+(((r11)*(x5911)))+(((IkReal(-1.00000000000000))*(r01)*(x5913))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst23)*(((((r01)*(x5912)))+(((IkReal(-1.00000000000000))*(r00)*(x5913)))+(((IkReal(-1.00000000000000))*(r11)*(x5910)))+(((r10)*(x5911))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst23)*(((((r10)*(x5910)))+(((IkReal(-1.00000000000000))*(r00)*(x5912)))+(((r11)*(x5911)))+(((IkReal(-1.00000000000000))*(r01)*(x5913)))))), ((gconst23)*(((((r01)*(x5912)))+(((IkReal(-1.00000000000000))*(r00)*(x5913)))+(((IkReal(-1.00000000000000))*(r11)*(x5910)))+(((r10)*(x5911)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x5914=IKsin(j4);
IkReal x5915=IKcos(j4);
IkReal x5916=((cj2)*(sj6));
IkReal x5917=((cj1)*(r00));
IkReal x5918=((IkReal(1.00000000000000))*(r21));
IkReal x5919=((cj6)*(sj2));
IkReal x5920=((IkReal(1.00000000000000))*(cj6));
IkReal x5921=((cj1)*(r11));
IkReal x5922=((r00)*(sj1));
IkReal x5923=((r10)*(sj1));
IkReal x5924=((sj2)*(sj6));
IkReal x5925=((IkReal(1.00000000000000))*(r20));
IkReal x5926=((cj2)*(cj6));
IkReal x5927=((cj1)*(r01));
IkReal x5928=((cj1)*(r10));
IkReal x5929=((r11)*(sj1));
IkReal x5930=((IkReal(1.00000000000000))*(sj6));
IkReal x5931=((r01)*(sj1));
IkReal x5932=((IkReal(1.00000000000000))*(x5915));
evalcond[0]=((((sj6)*(x5922)))+(((IkReal(-1.00000000000000))*(x5928)*(x5930)))+(((IkReal(-1.00000000000000))*(x5920)*(x5921)))+(((sj3)*(x5914)))+(((cj6)*(x5931))));
evalcond[1]=((((sj6)*(x5931)))+(((IkReal(-1.00000000000000))*(x5920)*(x5922)))+(((IkReal(-1.00000000000000))*(sj3)*(x5932)))+(((IkReal(-1.00000000000000))*(x5921)*(x5930)))+(((cj6)*(x5928))));
evalcond[2]=((((cj3)*(x5914)))+(((x5916)*(x5917)))+(((x5926)*(x5929)))+(((x5926)*(x5927)))+(((x5916)*(x5923)))+(((IkReal(-1.00000000000000))*(x5924)*(x5925)))+(((IkReal(-1.00000000000000))*(x5918)*(x5919))));
evalcond[3]=((((r20)*(x5926)))+(((x5919)*(x5923)))+(((x5917)*(x5919)))+(((IkReal(-1.00000000000000))*(x5924)*(x5927)))+(((IkReal(-1.00000000000000))*(x5924)*(x5929)))+(((IkReal(-1.00000000000000))*(x5916)*(x5918)))+(((IkReal(-1.00000000000000))*(x5914))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x5918)*(x5926)))+(((IkReal(-1.00000000000000))*(x5923)*(x5924)))+(((IkReal(-1.00000000000000))*(x5916)*(x5925)))+(((IkReal(-1.00000000000000))*(x5932)))+(((IkReal(-1.00000000000000))*(x5917)*(x5924)))+(((IkReal(-1.00000000000000))*(x5919)*(x5927)))+(((IkReal(-1.00000000000000))*(x5919)*(x5929))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x5918)*(x5924)))+(((r20)*(x5919)))+(((IkReal(-1.00000000000000))*(cj2)*(x5920)*(x5923)))+(((x5916)*(x5927)))+(((x5916)*(x5929)))+(((IkReal(-1.00000000000000))*(cj2)*(x5917)*(x5920)))+(((IkReal(-1.00000000000000))*(cj3)*(x5932))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x5933=((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30);
IkReal x5934=((IkReal(1.00000000000000))*(cj6));
IkReal x5935=((cj1)*(r10));
IkReal x5936=((r01)*(sj1));
IkReal x5937=((r00)*(sj1));
IkReal x5938=((cj1)*(r11));
IkReal x5939=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((x5933)*(((((IkReal(-1.00000000000000))*(x5934)*(x5936)))+(((sj6)*(x5935)))+(((IkReal(-1.00000000000000))*(x5937)*(x5939)))+(((cj6)*(x5938))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x5933)*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x5934)*(x5935)))+(((sj6)*(x5938)))+(((IkReal(-1.00000000000000))*(x5936)*(x5939)))+(((cj6)*(x5937)))+(((cj3)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x5933)*(((((IkReal(-1.00000000000000))*(x5934)*(x5936)))+(((sj6)*(x5935)))+(((IkReal(-1.00000000000000))*(x5937)*(x5939)))+(((cj6)*(x5938)))))))+IKsqr(((x5933)*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x5934)*(x5935)))+(((sj6)*(x5938)))+(((IkReal(-1.00000000000000))*(x5936)*(x5939)))+(((cj6)*(x5937)))+(((cj3)*(sj5)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x5933)*(((((IkReal(-1.00000000000000))*(x5934)*(x5936)))+(((sj6)*(x5935)))+(((IkReal(-1.00000000000000))*(x5937)*(x5939)))+(((cj6)*(x5938)))))), ((x5933)*(((IKabs(cj5) != 0)?((IkReal)1/(cj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x5934)*(x5935)))+(((sj6)*(x5938)))+(((IkReal(-1.00000000000000))*(x5936)*(x5939)))+(((cj6)*(x5937)))+(((cj3)*(sj5)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x5940=IKcos(j4);
IkReal x5941=((cj1)*(cj6));
IkReal x5942=((IkReal(1.00000000000000))*(cj3));
IkReal x5943=((IkReal(1.00000000000000))*(r11));
IkReal x5944=((cj1)*(sj6));
IkReal x5945=((IkReal(1.00000000000000))*(sj1));
IkReal x5946=((r01)*(sj1));
IkReal x5947=((sj3)*(x5940));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj5)*(x5942)))+(((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(sj5)*(x5947)))+(((IkReal(-1.00000000000000))*(r02)*(x5945))));
evalcond[1]=((((cj6)*(x5946)))+(((IkReal(-1.00000000000000))*(x5941)*(x5943)))+(((sj3)*(IKsin(j4))))+(((r00)*(sj1)*(sj6)))+(((IkReal(-1.00000000000000))*(r10)*(x5944))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj6)*(r00)*(x5945)))+(((cj5)*(x5947)))+(((sj6)*(x5946)))+(((IkReal(-1.00000000000000))*(sj5)*(x5942)))+(((r10)*(x5941)))+(((IkReal(-1.00000000000000))*(x5943)*(x5944))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign((((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1))))));
dummyeval[0]=(((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x5948=(sj1)*(sj1);
IkReal x5949=(cj1)*(cj1);
IkReal x5950=((r10)*(sj6));
IkReal x5951=((cj1)*(sj1));
IkReal x5952=((r00)*(sj6));
IkReal x5953=((r12)*(x5948));
IkReal x5954=((cj6)*(x5951));
IkReal x5955=((r02)*(x5949));
gconst1=IKsign(((((r02)*(x5950)*(x5951)))+(((x5952)*(x5955)))+(((r12)*(x5951)*(x5952)))+(((cj6)*(r21)*(r22)))+(((x5950)*(x5953)))+(((cj6)*(r11)*(x5953)))+(((r20)*(r22)*(sj6)))+(((r02)*(r11)*(x5954)))+(((r01)*(r12)*(x5954)))+(((cj6)*(r01)*(x5955)))));
IkReal x5956=(sj1)*(sj1);
IkReal x5957=(cj1)*(cj1);
IkReal x5958=((r10)*(sj6));
IkReal x5959=((cj1)*(sj1));
IkReal x5960=((r00)*(sj6));
IkReal x5961=((r12)*(x5956));
IkReal x5962=((cj6)*(x5959));
IkReal x5963=((r02)*(x5957));
dummyeval[0]=((((r01)*(r12)*(x5962)))+(((x5960)*(x5963)))+(((cj6)*(r21)*(r22)))+(((r20)*(r22)*(sj6)))+(((cj6)*(r01)*(x5963)))+(((r02)*(r11)*(x5962)))+(((r12)*(x5959)*(x5960)))+(((cj6)*(r11)*(x5961)))+(((x5958)*(x5961)))+(((r02)*(x5958)*(x5959))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5964=((IkReal(1.00000000000000))*(cj3)*(sj4));
IkReal x5965=((sj4)*(sj5)*(sj6));
IkReal x5966=((cj6)*(sj4)*(sj5));
if( IKabs(((gconst1)*(((((r10)*(sj1)*(x5965)))+(((cj3)*(r22)*(sj4)))+(((cj1)*(r01)*(x5966)))+(((cj1)*(r00)*(x5965)))+(((r11)*(sj1)*(x5966))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5964)))+(((r21)*(x5966)))+(((r20)*(x5965)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5964))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst1)*(((((r10)*(sj1)*(x5965)))+(((cj3)*(r22)*(sj4)))+(((cj1)*(r01)*(x5966)))+(((cj1)*(r00)*(x5965)))+(((r11)*(sj1)*(x5966)))))), ((gconst1)*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x5964)))+(((r21)*(x5966)))+(((r20)*(x5965)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x5964)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x5967=IKsin(j2);
IkReal x5968=IKcos(j2);
IkReal x5969=((r11)*(sj6));
IkReal x5970=((cj6)*(r11));
IkReal x5971=((cj6)*(r20));
IkReal x5972=((cj3)*(cj4));
IkReal x5973=((IkReal(1.00000000000000))*(sj5));
IkReal x5974=((IkReal(1.00000000000000))*(sj6));
IkReal x5975=((cj1)*(r00));
IkReal x5976=((cj1)*(r01));
IkReal x5977=((IkReal(1.00000000000000))*(cj6));
IkReal x5978=((cj1)*(r02));
IkReal x5979=((sj1)*(x5967));
IkReal x5980=((sj1)*(x5968));
IkReal x5981=((r21)*(x5968));
IkReal x5982=((sj6)*(x5968));
IkReal x5983=((cj6)*(x5968));
IkReal x5984=((r21)*(x5967));
evalcond[0]=((((r22)*(x5968)))+(((IkReal(-1.00000000000000))*(sj4)*(x5973)))+(((x5967)*(x5978)))+(((r12)*(x5979))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x5968)*(x5978)))+(((cj5)*(sj3)))+(((r22)*(x5967)))+(((IkReal(-1.00000000000000))*(x5972)*(x5973)))+(((IkReal(-1.00000000000000))*(r12)*(x5980))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x5967)*(x5974)))+(((IkReal(-1.00000000000000))*(x5977)*(x5984)))+(((x5975)*(x5982)))+(((r10)*(sj6)*(x5980)))+(((x5976)*(x5983)))+(((x5970)*(x5980)))+(((cj3)*(sj4))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5969)*(x5979)))+(((x5968)*(x5971)))+(((cj5)*(sj4)))+(((cj6)*(r10)*(x5979)))+(((IkReal(-1.00000000000000))*(x5967)*(x5974)*(x5976)))+(((IkReal(-1.00000000000000))*(x5974)*(x5981)))+(((cj6)*(x5967)*(x5975))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(x5968)*(x5974)))+(((IkReal(-1.00000000000000))*(x5977)*(x5981)))+(((IkReal(-1.00000000000000))*(r10)*(x5974)*(x5979)))+(((IkReal(-1.00000000000000))*(x5967)*(x5976)*(x5977)))+(((IkReal(-1.00000000000000))*(x5967)*(x5974)*(x5975)))+(((IkReal(-1.00000000000000))*(x5970)*(x5979)))+(((IkReal(-1.00000000000000))*(cj4))));
evalcond[5]=((((sj3)*(sj5)))+(((IkReal(-1.00000000000000))*(r10)*(x5977)*(x5980)))+(((cj5)*(x5972)))+(((x5969)*(x5980)))+(((x5976)*(x5982)))+(((x5967)*(x5971)))+(((IkReal(-1.00000000000000))*(x5968)*(x5975)*(x5977)))+(((IkReal(-1.00000000000000))*(x5974)*(x5984))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x5985=((cj1)*(r02));
IkReal x5986=((r22)*(sj5));
IkReal x5987=((cj5)*(sj3));
IkReal x5988=((r12)*(sj1));
IkReal x5989=((sj4)*(sj5));
IkReal x5990=((IkReal(1.00000000000000))*(cj3)*(cj4)*(sj5));
if( IKabs(((gconst0)*(((((x5985)*(x5989)))+(((x5988)*(x5989)))+(((IkReal(-1.00000000000000))*(r22)*(x5987)))+(((cj3)*(cj4)*(x5986))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((x5985)*(x5987)))+(((sj4)*(x5986)))+(((IkReal(-1.00000000000000))*(x5985)*(x5990)))+(((x5987)*(x5988)))+(((IkReal(-1.00000000000000))*(x5988)*(x5990))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst0)*(((((x5985)*(x5989)))+(((x5988)*(x5989)))+(((IkReal(-1.00000000000000))*(r22)*(x5987)))+(((cj3)*(cj4)*(x5986)))))), ((gconst0)*(((((x5985)*(x5987)))+(((sj4)*(x5986)))+(((IkReal(-1.00000000000000))*(x5985)*(x5990)))+(((x5987)*(x5988)))+(((IkReal(-1.00000000000000))*(x5988)*(x5990)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x5991=IKsin(j2);
IkReal x5992=IKcos(j2);
IkReal x5993=((r11)*(sj6));
IkReal x5994=((cj6)*(r11));
IkReal x5995=((cj6)*(r20));
IkReal x5996=((cj3)*(cj4));
IkReal x5997=((IkReal(1.00000000000000))*(sj5));
IkReal x5998=((IkReal(1.00000000000000))*(sj6));
IkReal x5999=((cj1)*(r00));
IkReal x6000=((cj1)*(r01));
IkReal x6001=((IkReal(1.00000000000000))*(cj6));
IkReal x6002=((cj1)*(r02));
IkReal x6003=((sj1)*(x5991));
IkReal x6004=((sj1)*(x5992));
IkReal x6005=((r21)*(x5992));
IkReal x6006=((sj6)*(x5992));
IkReal x6007=((cj6)*(x5992));
IkReal x6008=((r21)*(x5991));
evalcond[0]=((((r12)*(x6003)))+(((IkReal(-1.00000000000000))*(sj4)*(x5997)))+(((x5991)*(x6002)))+(((r22)*(x5992))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x6004)))+(((IkReal(-1.00000000000000))*(x5992)*(x6002)))+(((IkReal(-1.00000000000000))*(x5996)*(x5997)))+(((cj5)*(sj3)))+(((r22)*(x5991))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x5991)*(x5998)))+(((x5994)*(x6004)))+(((r10)*(sj6)*(x6004)))+(((x6000)*(x6007)))+(((x5999)*(x6006)))+(((cj3)*(sj4)))+(((IkReal(-1.00000000000000))*(x6001)*(x6008))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x5998)*(x6005)))+(((IkReal(-1.00000000000000))*(x5991)*(x5998)*(x6000)))+(((x5992)*(x5995)))+(((cj5)*(sj4)))+(((cj6)*(x5991)*(x5999)))+(((IkReal(-1.00000000000000))*(x5993)*(x6003)))+(((cj6)*(r10)*(x6003))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(x5992)*(x5998)))+(((IkReal(-1.00000000000000))*(r10)*(x5998)*(x6003)))+(((IkReal(-1.00000000000000))*(x5991)*(x6000)*(x6001)))+(((IkReal(-1.00000000000000))*(x5991)*(x5998)*(x5999)))+(((IkReal(-1.00000000000000))*(x5994)*(x6003)))+(((IkReal(-1.00000000000000))*(cj4)))+(((IkReal(-1.00000000000000))*(x6001)*(x6005))));
evalcond[5]=((((sj3)*(sj5)))+(((IkReal(-1.00000000000000))*(x5998)*(x6008)))+(((IkReal(-1.00000000000000))*(x5992)*(x5999)*(x6001)))+(((IkReal(-1.00000000000000))*(r10)*(x6001)*(x6004)))+(((x6000)*(x6006)))+(((x5991)*(x5995)))+(((x5993)*(x6004)))+(((cj5)*(x5996))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x6009=((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30);
IkReal x6010=((IkReal(1.00000000000000))*(sj1));
if( IKabs(((x6009)*(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x6010)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x6010))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x6009)*(((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(x6010)))+(((IkReal(-1.00000000000000))*(cj3)*(cj5)))+(((cj1)*(r12))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x6009)*(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x6010)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x6010)))))))+IKsqr(((x6009)*(((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(x6010)))+(((IkReal(-1.00000000000000))*(cj3)*(cj5)))+(((cj1)*(r12)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((x6009)*(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x6010)))+(((cj1)*(cj6)*(r11)))+(((cj1)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x6010)))))), ((x6009)*(((IKabs(sj5) != 0)?((IkReal)1/(sj5)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(x6010)))+(((IkReal(-1.00000000000000))*(cj3)*(cj5)))+(((cj1)*(r12)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x6011=IKcos(j4);
IkReal x6012=((cj1)*(cj6));
IkReal x6013=((IkReal(1.00000000000000))*(cj3));
IkReal x6014=((IkReal(1.00000000000000))*(r11));
IkReal x6015=((cj1)*(sj6));
IkReal x6016=((IkReal(1.00000000000000))*(sj1));
IkReal x6017=((r01)*(sj1));
IkReal x6018=((sj3)*(x6011));
evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x6016)))+(((cj1)*(r12)))+(((IkReal(-1.00000000000000))*(cj5)*(x6013)))+(((IkReal(-1.00000000000000))*(sj5)*(x6018))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x6012)*(x6014)))+(((IkReal(-1.00000000000000))*(r10)*(x6015)))+(((sj3)*(IKsin(j4))))+(((cj6)*(x6017)))+(((r00)*(sj1)*(sj6))));
evalcond[2]=((((cj5)*(x6018)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x6016)))+(((r10)*(x6012)))+(((IkReal(-1.00000000000000))*(sj5)*(x6013)))+(((sj6)*(x6017)))+(((IkReal(-1.00000000000000))*(x6014)*(x6015))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign((((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1))))));
dummyeval[0]=(((((cj1)*(cj1))*((r02)*(r02))))+((r22)*(r22))+(((IkReal(2.00000000000000))*(cj1)*(r02)*(r12)*(sj1)))+((((r12)*(r12))*((sj1)*(sj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x6019=(sj1)*(sj1);
IkReal x6020=(cj1)*(cj1);
IkReal x6021=((r10)*(sj6));
IkReal x6022=((cj1)*(sj1));
IkReal x6023=((r00)*(sj6));
IkReal x6024=((r12)*(x6019));
IkReal x6025=((cj6)*(x6022));
IkReal x6026=((r02)*(x6020));
gconst1=IKsign(((((r12)*(x6022)*(x6023)))+(((cj6)*(r21)*(r22)))+(((r20)*(r22)*(sj6)))+(((x6023)*(x6026)))+(((x6021)*(x6024)))+(((cj6)*(r11)*(x6024)))+(((r02)*(r11)*(x6025)))+(((r01)*(r12)*(x6025)))+(((r02)*(x6021)*(x6022)))+(((cj6)*(r01)*(x6026)))));
IkReal x6027=(sj1)*(sj1);
IkReal x6028=(cj1)*(cj1);
IkReal x6029=((r10)*(sj6));
IkReal x6030=((cj1)*(sj1));
IkReal x6031=((r00)*(sj6));
IkReal x6032=((r12)*(x6027));
IkReal x6033=((cj6)*(x6030));
IkReal x6034=((r02)*(x6028));
dummyeval[0]=((((r02)*(r11)*(x6033)))+(((cj6)*(r11)*(x6032)))+(((x6029)*(x6032)))+(((r12)*(x6030)*(x6031)))+(((cj6)*(r21)*(r22)))+(((cj6)*(r01)*(x6034)))+(((r20)*(r22)*(sj6)))+(((r01)*(r12)*(x6033)))+(((x6031)*(x6034)))+(((r02)*(x6029)*(x6030))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x6035=((IkReal(1.00000000000000))*(cj3)*(sj4));
IkReal x6036=((sj4)*(sj5)*(sj6));
IkReal x6037=((cj6)*(sj4)*(sj5));
if( IKabs(((gconst1)*(((((cj3)*(r22)*(sj4)))+(((cj1)*(r01)*(x6037)))+(((r10)*(sj1)*(x6036)))+(((cj1)*(r00)*(x6036)))+(((r11)*(sj1)*(x6037))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((r21)*(x6037)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x6035)))+(((r20)*(x6036)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x6035))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst1)*(((((cj3)*(r22)*(sj4)))+(((cj1)*(r01)*(x6037)))+(((r10)*(sj1)*(x6036)))+(((cj1)*(r00)*(x6036)))+(((r11)*(sj1)*(x6037)))))), ((gconst1)*(((((r21)*(x6037)))+(((IkReal(-1.00000000000000))*(r12)*(sj1)*(x6035)))+(((r20)*(x6036)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x6035)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x6038=IKsin(j2);
IkReal x6039=IKcos(j2);
IkReal x6040=((r11)*(sj6));
IkReal x6041=((cj6)*(r11));
IkReal x6042=((cj6)*(r20));
IkReal x6043=((cj3)*(cj4));
IkReal x6044=((IkReal(1.00000000000000))*(sj5));
IkReal x6045=((IkReal(1.00000000000000))*(sj6));
IkReal x6046=((cj1)*(r00));
IkReal x6047=((cj1)*(r01));
IkReal x6048=((IkReal(1.00000000000000))*(cj6));
IkReal x6049=((cj1)*(r02));
IkReal x6050=((sj1)*(x6038));
IkReal x6051=((sj1)*(x6039));
IkReal x6052=((r21)*(x6039));
IkReal x6053=((sj6)*(x6039));
IkReal x6054=((cj6)*(x6039));
IkReal x6055=((r21)*(x6038));
evalcond[0]=((((r22)*(x6039)))+(((r12)*(x6050)))+(((x6038)*(x6049)))+(((IkReal(-1.00000000000000))*(sj4)*(x6044))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x6051)))+(((r22)*(x6038)))+(((cj5)*(sj3)))+(((IkReal(-1.00000000000000))*(x6043)*(x6044)))+(((IkReal(-1.00000000000000))*(x6039)*(x6049))));
evalcond[2]=((((r10)*(sj6)*(x6051)))+(((x6047)*(x6054)))+(((IkReal(-1.00000000000000))*(x6048)*(x6055)))+(((IkReal(-1.00000000000000))*(r20)*(x6038)*(x6045)))+(((x6041)*(x6051)))+(((cj3)*(sj4)))+(((x6046)*(x6053))));
evalcond[3]=((((cj6)*(r10)*(x6050)))+(((IkReal(-1.00000000000000))*(x6038)*(x6045)*(x6047)))+(((cj5)*(sj4)))+(((IkReal(-1.00000000000000))*(x6040)*(x6050)))+(((IkReal(-1.00000000000000))*(x6045)*(x6052)))+(((cj6)*(x6038)*(x6046)))+(((x6039)*(x6042))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x6038)*(x6045)*(x6046)))+(((IkReal(-1.00000000000000))*(r20)*(x6039)*(x6045)))+(((IkReal(-1.00000000000000))*(x6038)*(x6047)*(x6048)))+(((IkReal(-1.00000000000000))*(x6048)*(x6052)))+(((IkReal(-1.00000000000000))*(x6041)*(x6050)))+(((IkReal(-1.00000000000000))*(r10)*(x6045)*(x6050)))+(((IkReal(-1.00000000000000))*(cj4))));
evalcond[5]=((((sj3)*(sj5)))+(((x6040)*(x6051)))+(((cj5)*(x6043)))+(((x6047)*(x6053)))+(((x6038)*(x6042)))+(((IkReal(-1.00000000000000))*(r10)*(x6048)*(x6051)))+(((IkReal(-1.00000000000000))*(x6045)*(x6055)))+(((IkReal(-1.00000000000000))*(x6039)*(x6046)*(x6048))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x6056=((cj1)*(r02));
IkReal x6057=((r22)*(sj5));
IkReal x6058=((cj5)*(sj3));
IkReal x6059=((r12)*(sj1));
IkReal x6060=((sj4)*(sj5));
IkReal x6061=((IkReal(1.00000000000000))*(cj3)*(cj4)*(sj5));
if( IKabs(((gconst0)*(((((x6056)*(x6060)))+(((x6059)*(x6060)))+(((IkReal(-1.00000000000000))*(r22)*(x6058)))+(((cj3)*(cj4)*(x6057))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((IkReal(-1.00000000000000))*(x6059)*(x6061)))+(((x6056)*(x6058)))+(((sj4)*(x6057)))+(((x6058)*(x6059)))+(((IkReal(-1.00000000000000))*(x6056)*(x6061))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst0)*(((((x6056)*(x6060)))+(((x6059)*(x6060)))+(((IkReal(-1.00000000000000))*(r22)*(x6058)))+(((cj3)*(cj4)*(x6057)))))), ((gconst0)*(((((IkReal(-1.00000000000000))*(x6059)*(x6061)))+(((x6056)*(x6058)))+(((sj4)*(x6057)))+(((x6058)*(x6059)))+(((IkReal(-1.00000000000000))*(x6056)*(x6061)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x6062=IKsin(j2);
IkReal x6063=IKcos(j2);
IkReal x6064=((r11)*(sj6));
IkReal x6065=((cj6)*(r11));
IkReal x6066=((cj6)*(r20));
IkReal x6067=((cj3)*(cj4));
IkReal x6068=((IkReal(1.00000000000000))*(sj5));
IkReal x6069=((IkReal(1.00000000000000))*(sj6));
IkReal x6070=((cj1)*(r00));
IkReal x6071=((cj1)*(r01));
IkReal x6072=((IkReal(1.00000000000000))*(cj6));
IkReal x6073=((cj1)*(r02));
IkReal x6074=((sj1)*(x6062));
IkReal x6075=((sj1)*(x6063));
IkReal x6076=((r21)*(x6063));
IkReal x6077=((sj6)*(x6063));
IkReal x6078=((cj6)*(x6063));
IkReal x6079=((r21)*(x6062));
evalcond[0]=((((x6062)*(x6073)))+(((r22)*(x6063)))+(((IkReal(-1.00000000000000))*(sj4)*(x6068)))+(((r12)*(x6074))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x6063)*(x6073)))+(((cj5)*(sj3)))+(((r22)*(x6062)))+(((IkReal(-1.00000000000000))*(x6067)*(x6068)))+(((IkReal(-1.00000000000000))*(r12)*(x6075))));
evalcond[2]=((((x6071)*(x6078)))+(((x6070)*(x6077)))+(((IkReal(-1.00000000000000))*(x6072)*(x6079)))+(((r10)*(sj6)*(x6075)))+(((x6065)*(x6075)))+(((cj3)*(sj4)))+(((IkReal(-1.00000000000000))*(r20)*(x6062)*(x6069))));
evalcond[3]=((((cj6)*(x6062)*(x6070)))+(((cj6)*(r10)*(x6074)))+(((cj5)*(sj4)))+(((x6063)*(x6066)))+(((IkReal(-1.00000000000000))*(x6062)*(x6069)*(x6071)))+(((IkReal(-1.00000000000000))*(x6064)*(x6074)))+(((IkReal(-1.00000000000000))*(x6069)*(x6076))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x6062)*(x6071)*(x6072)))+(((IkReal(-1.00000000000000))*(x6072)*(x6076)))+(((IkReal(-1.00000000000000))*(x6062)*(x6069)*(x6070)))+(((IkReal(-1.00000000000000))*(r20)*(x6063)*(x6069)))+(((IkReal(-1.00000000000000))*(r10)*(x6069)*(x6074)))+(((IkReal(-1.00000000000000))*(cj4)))+(((IkReal(-1.00000000000000))*(x6065)*(x6074))));
evalcond[5]=((((sj3)*(sj5)))+(((x6071)*(x6077)))+(((IkReal(-1.00000000000000))*(x6063)*(x6070)*(x6072)))+(((IkReal(-1.00000000000000))*(r10)*(x6072)*(x6075)))+(((x6062)*(x6066)))+(((x6064)*(x6075)))+(((IkReal(-1.00000000000000))*(x6069)*(x6079)))+(((cj5)*(x6067))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}
}
}

}

}
}
}

}

}
    }
}
return solutions.GetNumSolutions()>0;
}
static inline void polyroots6(IkReal rawcoeffs[6+1], IkReal rawroots[6], int& numroots)
{
    using std::complex;
    IKFAST_ASSERT(rawcoeffs[0] != 0);
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    const IkReal tolsqrt = sqrt(std::numeric_limits<IkReal>::epsilon());
    complex<IkReal> coeffs[6];
    const int maxsteps = 110;
    for(int i = 0; i < 6; ++i) {
        coeffs[i] = complex<IkReal>(rawcoeffs[i+1]/rawcoeffs[0]);
    }
    complex<IkReal> roots[6];
    IkReal err[6];
    roots[0] = complex<IkReal>(1,0);
    roots[1] = complex<IkReal>(0.4,0.9); // any complex number not a root of unity works
    err[0] = 1.0;
    err[1] = 1.0;
    for(int i = 2; i < 6; ++i) {
        roots[i] = roots[i-1]*roots[1];
        err[i] = 1.0;
    }
    for(int step = 0; step < maxsteps; ++step) {
        bool changed = false;
        for(int i = 0; i < 6; ++i) {
            if ( err[i] >= tol ) {
                changed = true;
                // evaluate
                complex<IkReal> x = roots[i] + coeffs[0];
                for(int j = 1; j < 6; ++j) {
                    x = roots[i] * x + coeffs[j];
                }
                for(int j = 0; j < 6; ++j) {
                    if( i != j ) {
                        if( roots[i] != roots[j] ) {
                            x /= (roots[i] - roots[j]);
                        }
                    }
                }
                roots[i] -= x;
                err[i] = abs(x);
            }
        }
        if( !changed ) {
            break;
        }
    }

    numroots = 0;
    bool visited[6] = {false};
    for(int i = 0; i < 6; ++i) {
        if( !visited[i] ) {
            // might be a multiple root, in which case it will have more error than the other roots
            // find any neighboring roots, and take the average
            complex<IkReal> newroot=roots[i];
            int n = 1;
            for(int j = i+1; j < 6; ++j) {
                if( abs(roots[i]-roots[j]) < 8*tolsqrt ) {
                    newroot += roots[j];
                    n += 1;
                    visited[j] = true;
                }
            }
            if( n > 1 ) {
                newroot /= n;
            }
            // there are still cases where even the mean is not accurate enough, until a better multi-root algorithm is used, need to use the sqrt
            if( IKabs(imag(newroot)) < tolsqrt ) {
                rawroots[numroots++] = real(newroot);
            }
        }
    }
}
};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:genericrobot - cob3_1 (7c582e16629d891e65b3b4c213575eae)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
