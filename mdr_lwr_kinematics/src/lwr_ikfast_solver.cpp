/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2013-11-19 13:59:00.971032
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64;
x0=IKcos(j[1]);
x1=IKsin(j[1]);
x2=IKsin(j[3]);
x3=IKcos(j[2]);
x4=IKcos(j[3]);
x5=IKcos(j[4]);
x6=IKsin(j[2]);
x7=IKsin(j[4]);
x8=IKsin(j[6]);
x9=IKcos(j[6]);
x10=IKcos(j[5]);
x11=IKsin(j[5]);
x12=IKcos(j[0]);
x13=IKsin(j[0]);
x14=((IkReal(0.955073215884961))*(x12));
x15=((IkReal(0.296369958496401))*(x13));
x16=((IkReal(1.00000000000000))*(x7));
x17=((IkReal(1.00000000000000))*(x10));
x18=((IkReal(1.00000000000000))*(x5));
x19=((IkReal(0.000500000000000000))*(x5));
x20=((IkReal(0.0570000000000000))*(x7));
x21=((IkReal(0.0570000000000000))*(x5));
x22=((IkReal(1.00000000000000))*(x11));
x23=((IkReal(0.390000000000000))*(x3));
x24=((IkReal(1.00000000000000))*(x3));
x25=((IkReal(0.000500000000000000))*(x3));
x26=((x2)*(x6));
x27=((x1)*(x6));
x28=((x0)*(x6));
x29=((x0)*(x4));
x30=((x0)*(x2));
x31=((x1)*(x4));
x32=((x1)*(x2));
x33=((x4)*(x6));
x34=((((IkReal(-1.00000000000000))*(x14)))+(x15));
x35=((((IkReal(-1.00000000000000))*(x15)))+(x14));
x36=((IkReal(1.00000000000000))*(x30));
x37=((IkReal(0.0570000000000000))*(x2)*(x3));
x38=((((IkReal(-0.296369958496401))*(x12)))+(((IkReal(-0.955073215884961))*(x13))));
x39=((x22)*(x26));
x40=((x16)*(x28));
x41=((x16)*(x27));
x42=((((IkReal(-1.00000000000000))*(x18)*(x3)))+(((x33)*(x7))));
x43=((((IkReal(-1.00000000000000))*(x31)))+(((x3)*(x30))));
x44=((((x29)*(x3)))+(x32));
x45=((((x3)*(x32)))+(x29));
x46=((((IkReal(-1.00000000000000))*(x36)))+(((x3)*(x31))));
x47=((((IkReal(-1.00000000000000))*(x18)*(x33)))+(((IkReal(-1.00000000000000))*(x16)*(x3))));
x48=((((x18)*(x33)))+(((x16)*(x3))));
x49=((x11)*(x43));
x50=((x11)*(x45));
x51=((x46)*(x5));
x52=((((IkReal(-1.00000000000000))*(x40)))+(((x44)*(x5))));
x53=((((IkReal(-1.00000000000000))*(x41)))+(x51));
x54=((((x7)*(((x36)+(((IkReal(-1.00000000000000))*(x24)*(x31)))))))+(((IkReal(-1.00000000000000))*(x18)*(x27))));
x55=((((x7)*(((((IkReal(-1.00000000000000))*(x32)))+(((IkReal(-1.00000000000000))*(x24)*(x29)))))))+(((IkReal(-1.00000000000000))*(x18)*(x28))));
x56=((((x11)*(x48)))+(((IkReal(-1.00000000000000))*(x17)*(x26))));
x57=((x10)*(x53));
x58=((((x10)*(x43)))+(((x11)*(((((IkReal(-1.00000000000000))*(x18)*(x44)))+(x40))))));
x59=((((x42)*(x8)))+(((x9)*(((((IkReal(-1.00000000000000))*(x39)))+(((x10)*(x47))))))));
x60=((((x42)*(x9)))+(((x8)*(((((IkReal(-1.00000000000000))*(x17)*(x47)))+(x39))))));
x61=((((IkReal(-0.0570000000000000))*(x10)*(x26)))+(((IkReal(0.000500000000000000))*(x33)*(x7)))+(((x11)*(((((x21)*(x33)))+(((x20)*(x3)))))))+(((x3)*(((IkReal(-0.00200000000000000))+(((IkReal(-1.00000000000000))*(x19)))))))+(((IkReal(-0.390000000000000))*(x26))));
x62=((((x9)*(((((x10)*(x52)))+(x49)))))+(((x55)*(x8))));
x63=((((x8)*(((((IkReal(-1.00000000000000))*(x22)*(x43)))+(((IkReal(-1.00000000000000))*(x17)*(x52)))))))+(((x55)*(x9))));
x64=((((x11)*(((((IkReal(-1.00000000000000))*(x21)*(x44)))+(((x20)*(x28)))))))+(((x23)*(x30)))+(((x10)*(((((IkReal(0.0570000000000000))*(x3)*(x30)))+(((IkReal(-0.0570000000000000))*(x31)))))))+(((IkReal(-1.00000000000000))*(x19)*(x28)))+(((IkReal(-0.00200000000000000))*(x28)))+(((IkReal(-0.390000000000000))*(x31)))+(((x7)*(((((IkReal(-1.00000000000000))*(x25)*(x29)))+(((IkReal(-0.000500000000000000))*(x32)))))))+(((IkReal(-0.400000000000000))*(x1))));
eerot[0]=((((x38)*(x59)))+(((x34)*(x62))));
eerot[1]=((((x38)*(x60)))+(((x34)*(x63))));
eerot[2]=((((x38)*(x56)))+(((x34)*(x58))));
eetrans[0]=((((IkReal(-0.000592739916992803))*(x12)))+(((x38)*(x61)))+(((x34)*(x64)))+(((IkReal(-0.00191014643176992))*(x13))));
eerot[3]=((((x38)*(x62)))+(((x35)*(x59))));
eerot[4]=((((x38)*(x63)))+(((x35)*(x60))));
eerot[5]=((((x38)*(x58)))+(((x35)*(x56))));
eetrans[1]=((((IkReal(-0.000592739916992803))*(x13)))+(((IkReal(0.00191014643176992))*(x12)))+(((x38)*(x64)))+(((x35)*(x61))));
eerot[6]=((((x9)*(((x57)+(x50)))))+(((x54)*(x8))));
eerot[7]=((((x8)*(((((IkReal(-1.00000000000000))*(x22)*(x45)))+(((IkReal(-1.00000000000000))*(x17)*(x53)))))))+(((x54)*(x9))));
eerot[8]=((((x11)*(((((IkReal(-1.00000000000000))*(x18)*(x46)))+(x41)))))+(((x10)*(x45))));
eetrans[2]=((IkReal(0.191500000000000))+(((x11)*(((((IkReal(-1.00000000000000))*(x21)*(x46)))+(((x20)*(x27)))))))+(((x23)*(x32)))+(((IkReal(-1.00000000000000))*(x19)*(x27)))+(((IkReal(-0.00200000000000000))*(x27)))+(((IkReal(0.400000000000000))*(x0)))+(((x7)*(((((IkReal(-1.00000000000000))*(x25)*(x31)))+(((IkReal(0.000500000000000000))*(x30)))))))+(((x10)*(((((IkReal(0.0570000000000000))*(x29)))+(((IkReal(0.0570000000000000))*(x3)*(x32)))))))+(((IkReal(0.390000000000000))*(x29))));
}

IKFAST_API int GetNumFreeParameters() { return 1; }
IKFAST_API int* GetFreeParameters() { static int freeparams[] = {0}; return freeparams; }
IKFAST_API int GetNumJoints() { return 7; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j1,cj1,sj1,htj1,j2,cj2,sj2,htj2,j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,j6,cj6,sj6,htj6,j0,cj0,sj0,htj0,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij1[2], _nj1,_ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5,_ij6[2], _nj6,_ij0[2], _nj0;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j1=numeric_limits<IkReal>::quiet_NaN(); _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j2=numeric_limits<IkReal>::quiet_NaN(); _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; j6=numeric_limits<IkReal>::quiet_NaN(); _ij6[0] = -1; _ij6[1] = -1; _nj6 = -1;  _ij0[0] = -1; _ij0[1] = -1; _nj0 = 0; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
j0=pfree[0]; cj0=cos(pfree[0]); sj0=sin(pfree[0]);
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

IkReal x65=IKsin(j0);
IkReal x66=IKcos(j0);
new_r00=((((IkReal(-0.955073215884961))*(r00)*(x66)))+(((IkReal(-0.955073215884961))*(r10)*(x65)))+(((IkReal(0.296369958496401))*(r00)*(x65)))+(((IkReal(-0.296369958496401))*(r10)*(x66))));
IkReal x67=IKsin(j0);
IkReal x68=IKcos(j0);
new_r01=((((IkReal(0.296369958496401))*(r01)*(x67)))+(((IkReal(-0.955073215884961))*(r01)*(x68)))+(((IkReal(-0.296369958496401))*(r11)*(x68)))+(((IkReal(-0.955073215884961))*(r11)*(x67))));
IkReal x69=IKsin(j0);
IkReal x70=IKcos(j0);
new_r02=((((IkReal(-0.955073215884961))*(r02)*(x70)))+(((IkReal(-0.955073215884961))*(r12)*(x69)))+(((IkReal(-0.296369958496401))*(r12)*(x70)))+(((IkReal(0.296369958496401))*(r02)*(x69))));
IkReal x71=IKsin(j0);
IkReal x72=IKcos(j0);
new_px=((((IkReal(0.0544391733054428))*(r12)*(x71)))+(((IkReal(0.0168930876342949))*(r12)*(x72)))+(((IkReal(-0.955073215884961))*(px)*(x72)))+(((IkReal(0.296369958496401))*(px)*(x71)))+(((IkReal(0.0544391733054428))*(r02)*(x72)))+(((IkReal(-0.296369958496401))*(py)*(x72)))+(((IkReal(-0.955073215884961))*(py)*(x71)))+(((IkReal(-0.0168930876342949))*(r02)*(x71))));
new_r10=r20;
new_r11=r21;
new_r12=r22;
new_py=((IkReal(-0.191500000000000))+(pz)+(((IkReal(-0.0570000000000000))*(r22))));
IkReal x73=IKsin(j0);
IkReal x74=IKcos(j0);
new_r20=((((IkReal(-0.296369958496401))*(r00)*(x74)))+(((IkReal(0.955073215884961))*(r10)*(x74)))+(((IkReal(-0.296369958496401))*(r10)*(x73)))+(((IkReal(-0.955073215884961))*(r00)*(x73))));
IkReal x75=IKsin(j0);
IkReal x76=IKcos(j0);
new_r21=((((IkReal(0.955073215884961))*(r11)*(x76)))+(((IkReal(-0.296369958496401))*(r11)*(x75)))+(((IkReal(-0.296369958496401))*(r01)*(x76)))+(((IkReal(-0.955073215884961))*(r01)*(x75))));
IkReal x77=IKsin(j0);
IkReal x78=IKcos(j0);
new_r22=((((IkReal(-0.955073215884961))*(r02)*(x77)))+(((IkReal(-0.296369958496401))*(r12)*(x77)))+(((IkReal(0.955073215884961))*(r12)*(x78)))+(((IkReal(-0.296369958496401))*(r02)*(x78))));
IkReal x79=IKsin(j0);
IkReal x80=IKcos(j0);
new_pz=((IkReal(-0.00200000000000000))+(((IkReal(-0.296369958496401))*(px)*(x80)))+(((IkReal(0.0168930876342949))*(r02)*(x80)))+(((IkReal(0.0168930876342949))*(r12)*(x79)))+(((IkReal(-0.955073215884961))*(px)*(x79)))+(((IkReal(-0.0544391733054428))*(r12)*(x80)))+(((IkReal(0.0544391733054428))*(r02)*(x79)))+(((IkReal(-0.296369958496401))*(py)*(x79)))+(((IkReal(0.955073215884961))*(py)*(x80))));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
npx=((((px)*(r00)))+(((py)*(r10)))+(((pz)*(r20))));
npy=((((px)*(r01)))+(((py)*(r11)))+(((pz)*(r21))));
npz=((((px)*(r02)))+(((py)*(r12)))+(((pz)*(r22))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((IkReal(-1.00000000000000))*(px)*(r10)))+(((py)*(r00))));
rxp1_0=((((IkReal(-1.00000000000000))*(py)*(r21)))+(((pz)*(r11))));
rxp1_1=((((px)*(r21)))+(((IkReal(-1.00000000000000))*(pz)*(r01))));
rxp1_2=((((IkReal(-1.00000000000000))*(px)*(r11)))+(((py)*(r01))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((IkReal(-1.00000000000000))*(px)*(r12)))+(((py)*(r02))));
IkReal op[72], zeror[48];
int numroots;
IkReal x81=((IkReal(0.00100000000000000))*(npy));
IkReal x82=((IkReal(0.780000000000000))*(npz));
IkReal x83=((IkReal(0.00100000000000000))*(rxp0_0));
IkReal x84=((IkReal(0.780000000000000))*(px));
IkReal x85=((pp)*(r02));
IkReal x86=((IkReal(0.00789625000000000))*(r02));
IkReal x87=((IkReal(0.000400000000000000))*(r20));
IkReal x88=((IkReal(0.000390000000000000))*(r01));
IkReal x89=((IkReal(0.800000000000000))*(rxp2_2));
IkReal x90=((IkReal(0.00100000000000000))*(rxp0_1));
IkReal x91=((IkReal(0.780000000000000))*(py));
IkReal x92=((IkReal(0.00789625000000000))*(r12));
IkReal x93=((pp)*(r12));
IkReal x94=((IkReal(0.000390000000000000))*(r11));
IkReal x95=((IkReal(0.000780000000000000))*(r00));
IkReal x96=((IkReal(0.000800000000000000))*(r21));
IkReal x97=((IkReal(0.00200000000000000))*(rxp1_0));
IkReal x98=((IkReal(3.12000000000000))*(npy));
IkReal x99=((IkReal(1.56000000000000))*(npx));
IkReal x100=((IkReal(1.60000000000000))*(rxp0_2));
IkReal x101=((IkReal(0.00200000000000000))*(rxp2_0));
IkReal x102=((IkReal(0.000800000000000000))*(r22));
IkReal x103=((IkReal(0.0157925000000000))*(r00));
IkReal x104=((IkReal(0.00200000000000000))*(rxp2_1));
IkReal x105=((IkReal(0.0157925000000000))*(r10));
IkReal x106=((IkReal(0.0315850000000000))*(r01));
IkReal x107=((IkReal(3.20000000000000))*(rxp1_2));
IkReal x108=((IkReal(0.000780000000000000))*(r10));
IkReal x109=((IkReal(0.00200000000000000))*(rxp1_1));
IkReal x110=((IkReal(-0.00790375000000000))+(pp));
IkReal x111=((IkReal(8.00000000000000))*(npy));
IkReal x112=((IkReal(2.00000000000000))*(pp));
IkReal x113=((IkReal(4.00000000000000))*(npx));
IkReal x114=((IkReal(4.00000000000000))*(pp));
IkReal x115=((IkReal(2.00000000000000))*(npz));
IkReal x116=((IkReal(-0.00200000000000000))*(npx));
IkReal x117=((px)*(x115));
IkReal x118=((py)*(x115));
IkReal x119=((((IkReal(-1.00000000000000))*(x108)))+(x109));
IkReal x120=((IkReal(1.00000000000000))*(x85));
IkReal x121=((IkReal(-1.56000000000000))*(npx));
IkReal x122=((px)*(x113));
IkReal x123=((r00)*(x112));
IkReal x124=((py)*(x113));
IkReal x125=((r10)*(x112));
IkReal x126=((r01)*(x114));
IkReal x127=((px)*(x111));
IkReal x128=((IkReal(1.00000000000000))*(x93));
IkReal x129=((((IkReal(-1.00000000000000))*(x109)))+(((IkReal(-1.00000000000000))*(x108))));
IkReal x130=((x95)+(x97));
IkReal x131=((x89)+(x87));
IkReal x132=((x90)+(x94));
IkReal x133=((x83)+(x87));
IkReal x134=((x82)+(x81));
IkReal x135=((x89)+(x84));
IkReal x136=((x100)+(x101));
IkReal x137=((x86)+(x85));
IkReal x138=((x110)+(((IkReal(-1.00000000000000))*(x134))));
IkReal x139=((x110)+(x81)+(((IkReal(-1.00000000000000))*(x82))));
IkReal x140=((x110)+(x82)+(((IkReal(-1.00000000000000))*(x81))));
IkReal x141=((x117)+(x88));
IkReal x142=((x120)+(x86));
IkReal x143=((x122)+(x102));
IkReal x144=((x123)+(x103));
IkReal x145=((x125)+(x105));
IkReal x146=((x126)+(x106));
IkReal x147=((x128)+(x92));
IkReal x148=((x118)+(x91));
IkReal x149=((x134)+(x110));
IkReal x150=((x91)+(x93)+(x92));
IkReal x151=((((IkReal(-1.00000000000000))*(r11)*(x114)))+(((py)*(x111)))+(((IkReal(-0.0315850000000000))*(r11))));
IkReal x152=((x117)+(x83)+(x84));
IkReal x153=((((IkReal(-1.00000000000000))*(x124)))+(x145)+(x104));
IkReal x154=((((IkReal(-1.00000000000000))*(x145)))+(x124)+(x104));
IkReal x155=((((IkReal(-1.00000000000000))*(x118)))+(x150)+(((IkReal(-1.00000000000000))*(x132))));
IkReal x156=((((IkReal(-1.00000000000000))*(x118)))+(x150)+(x132));
IkReal x157=((((IkReal(-1.00000000000000))*(x147)))+(x148)+(x90)+(((IkReal(-1.00000000000000))*(x94))));
IkReal x158=((((IkReal(-1.00000000000000))*(x147)))+(x148)+(x94)+(((IkReal(-1.00000000000000))*(x90))));
op[0]=x138;
op[1]=IkReal(0);
op[2]=x116;
op[3]=IkReal(0);
op[4]=x139;
op[5]=IkReal(0);
op[6]=IkReal(0);
op[7]=x138;
op[8]=IkReal(0);
op[9]=x116;
op[10]=IkReal(0);
op[11]=x139;
op[12]=((((IkReal(-1.00000000000000))*(x141)))+(x137)+(((IkReal(-1.00000000000000))*(x131)))+(x84)+(((IkReal(-1.00000000000000))*(x83))));
op[13]=x155;
op[14]=((x97)+(x96)+(((IkReal(-1.00000000000000))*(x95))));
op[15]=x119;
op[16]=((((IkReal(-1.00000000000000))*(x117)))+(x137)+(x133)+(x88)+(x84)+(((IkReal(-1.00000000000000))*(x89))));
op[17]=x156;
op[18]=x155;
op[19]=((((IkReal(-1.00000000000000))*(x142)))+(x141)+(((IkReal(-1.00000000000000))*(x131)))+(x83)+(((IkReal(-1.00000000000000))*(x84))));
op[20]=x119;
op[21]=((x95)+(x96)+(((IkReal(-1.00000000000000))*(x97))));
op[22]=x156;
op[23]=((((IkReal(-1.00000000000000))*(x142)))+(x117)+(((IkReal(-1.00000000000000))*(x135)))+(x87)+(((IkReal(-1.00000000000000))*(x88)))+(((IkReal(-1.00000000000000))*(x83))));
op[24]=x121;
op[25]=IkReal(0);
op[26]=x98;
op[27]=IkReal(0);
op[28]=x99;
op[29]=IkReal(0);
op[30]=IkReal(0);
op[31]=x121;
op[32]=IkReal(0);
op[33]=x98;
op[34]=IkReal(0);
op[35]=x99;
op[36]=((((IkReal(-1.00000000000000))*(x100)))+(((IkReal(-1.00000000000000))*(x122)))+(x144)+(x101)+(x102));
op[37]=x153;
op[38]=((((IkReal(-1.00000000000000))*(x146)))+(x127)+(x107));
op[39]=x151;
op[40]=((((IkReal(-1.00000000000000))*(x144)))+(x143)+(x136));
op[41]=x154;
op[42]=x153;
op[43]=((((IkReal(-1.00000000000000))*(x144)))+(x143)+(((IkReal(-1.00000000000000))*(x136))));
op[44]=x151;
op[45]=((((IkReal(-1.00000000000000))*(x127)))+(x146)+(x107));
op[46]=x154;
op[47]=((((IkReal(-1.00000000000000))*(x101)))+(((IkReal(-1.00000000000000))*(x122)))+(x144)+(x100)+(x102));
op[48]=x140;
op[49]=IkReal(0);
op[50]=x116;
op[51]=IkReal(0);
op[52]=x149;
op[53]=IkReal(0);
op[54]=IkReal(0);
op[55]=x140;
op[56]=IkReal(0);
op[57]=x116;
op[58]=IkReal(0);
op[59]=x149;
op[60]=((((IkReal(-1.00000000000000))*(x142)))+(x152)+(x131)+(((IkReal(-1.00000000000000))*(x88))));
op[61]=x157;
op[62]=((((IkReal(-1.00000000000000))*(x130)))+(((IkReal(-1.00000000000000))*(x96))));
op[63]=x129;
op[64]=((((IkReal(-1.00000000000000))*(x142)))+(x141)+(x135)+(((IkReal(-1.00000000000000))*(x133))));
op[65]=x158;
op[66]=x157;
op[67]=((((IkReal(-1.00000000000000))*(x152)))+(x137)+(x131)+(x88));
op[68]=x129;
op[69]=((x130)+(((IkReal(-1.00000000000000))*(x96))));
op[70]=x158;
op[71]=((((IkReal(-1.00000000000000))*(x141)))+(x137)+(x89)+(x83)+(((IkReal(-1.00000000000000))*(x84)))+(((IkReal(-1.00000000000000))*(x87))));
solvedialyticpoly8qep(op,zeror,numroots);
IkReal j5array[16], cj5array[16], sj5array[16], j6array[16], cj6array[16], sj6array[16], j1array[16], cj1array[16], sj1array[16];
int numsolutions = 0;
for(int ij5 = 0; ij5 < numroots; ij5 += 3)
{
IkReal htj5 = zeror[ij5+0], htj6 = zeror[ij5+1], htj1 = zeror[ij5+2];
j5array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj5)));
j6array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj6)));
j1array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj1)));
IkReal x159=(htj5)*(htj5);
IkReal x160=(htj6)*(htj6);
IkReal x161=(htj1)*(htj1);
cj5array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x159))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x159)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x159))))));
cj6array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x160))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x160)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x160))))));
cj1array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x161))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x161)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x161))))));
sj5array[numsolutions]=((IkReal(2.00000000000000))*(htj5)*(((IKabs(((IkReal(1.00000000000000))+((htj5)*(htj5)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj5)*(htj5))))):(IkReal)1.0e30)));
sj6array[numsolutions]=((IkReal(2.00000000000000))*(htj6)*(((IKabs(((IkReal(1.00000000000000))+((htj6)*(htj6)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj6)*(htj6))))):(IkReal)1.0e30)));
sj1array[numsolutions]=((IkReal(2.00000000000000))*(htj1)*(((IKabs(((IkReal(1.00000000000000))+((htj1)*(htj1)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj1)*(htj1))))):(IkReal)1.0e30)));
if( j5array[numsolutions] > IKPI )
{
    j5array[numsolutions]-=IK2PI;
}
else if( j5array[numsolutions] < -IKPI )
{
    j5array[numsolutions]+=IK2PI;
}
if( j6array[numsolutions] > IKPI )
{
    j6array[numsolutions]-=IK2PI;
}
else if( j6array[numsolutions] < -IKPI )
{
    j6array[numsolutions]+=IK2PI;
}
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j5valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj5 = 16;
_nj6 = 1;
_nj1 = 1;
for(int ij5 = 0; ij5 < numsolutions; ++ij5)
    {
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
_ij6[0] = 0; _ij6[1] = -1;
_ij1[0] = 0; _ij1[1] = -1;
for(int iij5 = ij5+1; iij5 < numsolutions; ++iij5)
{
if( !j5valid[iij5] ) { continue; }
if( IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(cj6array[ij5]-cj6array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij5]-sj6array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(cj1array[ij5]-cj1array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij5]-sj1array[iij5]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j5valid[iij5]=false; _ij5[1] = iij5; _ij6[1] = 0; _ij1[1] = 0;  break; 
}
}
    j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];

    j6 = j6array[ij5]; cj6 = cj6array[ij5]; sj6 = sj6array[ij5];

    j1 = j1array[ij5]; cj1 = cj1array[ij5]; sj1 = sj1array[ij5];

{
IkReal dummyeval[1];
dummyeval[0]=cj1;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj1;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[2];
IkReal x162=((IkReal(0.390000000000000))*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.400000000000000))+(((IkReal(0.000500000000000000))*(cj6)*(r11)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.000500000000000000))*(r10)*(sj6)))+(((cj6)*(r10)*(x162)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x162)))+(((IkReal(0.390000000000000))*(cj5)*(r12))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x163=((IkReal(0.250000000000000))*(cj6));
IkReal x164=((IkReal(195.000000000000))*(cj5));
IkReal x165=((IkReal(0.250000000000000))*(sj6));
IkReal x166=((IkReal(195.000000000000))*(sj5));
if( IKabs(((((r01)*(x163)))+(((r00)*(x165)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x166)))+(((IkReal(-500.000000000000))*(px)))+(((r02)*(x164)))+(((cj6)*(r00)*(x166))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r22)*(x164)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x166)))+(((r20)*(x165)))+(((IkReal(-500.000000000000))*(pz)))+(((r21)*(x163)))+(((cj6)*(r20)*(x166))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(x163)))+(((r00)*(x165)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x166)))+(((IkReal(-500.000000000000))*(px)))+(((r02)*(x164)))+(((cj6)*(r00)*(x166)))))+IKsqr(((((r22)*(x164)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x166)))+(((r20)*(x165)))+(((IkReal(-500.000000000000))*(pz)))+(((r21)*(x163)))+(((cj6)*(r20)*(x166)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((r01)*(x163)))+(((r00)*(x165)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x166)))+(((IkReal(-500.000000000000))*(px)))+(((r02)*(x164)))+(((cj6)*(r00)*(x166)))), ((((r22)*(x164)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x166)))+(((r20)*(x165)))+(((IkReal(-500.000000000000))*(pz)))+(((r21)*(x163)))+(((cj6)*(r20)*(x166)))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x167=((IkReal(0.000500000000000000))*(cj6));
IkReal x168=((IkReal(0.390000000000000))*(sj5));
IkReal x169=((IkReal(0.390000000000000))*(cj5));
IkReal x170=((IkReal(0.000500000000000000))*(sj6));
evalcond[0]=((((r22)*(x169)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x168)))+(((IkReal(-0.00200000000000000))*(IKcos(j2))))+(((r20)*(x170)))+(((r21)*(x167)))+(((IkReal(-1.00000000000000))*(pz)))+(((cj6)*(r20)*(x168))));
evalcond[1]=((((r01)*(x167)))+(((r00)*(x170)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x168)))+(((IkReal(-0.00200000000000000))*(IKsin(j2))))+(((IkReal(-1.00000000000000))*(px)))+(((r02)*(x169)))+(((cj6)*(r00)*(x168))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst33;
IkReal x171=(cj6)*(cj6);
IkReal x172=(sj6)*(sj6);
IkReal x173=((r11)*(r20));
IkReal x174=((r12)*(sj5));
IkReal x175=((IkReal(1.00000000000000))*(r10));
IkReal x176=((r22)*(sj5));
IkReal x177=((cj5)*(x172));
IkReal x178=((cj5)*(x171));
gconst33=IKsign(((((r20)*(sj6)*(x174)))+(((x173)*(x177)))+(((x173)*(x178)))+(((cj6)*(r21)*(x174)))+(((IkReal(-1.00000000000000))*(r21)*(x175)*(x177)))+(((IkReal(-1.00000000000000))*(r21)*(x175)*(x178)))+(((IkReal(-1.00000000000000))*(sj6)*(x175)*(x176)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x176)))));
IkReal x179=(cj6)*(cj6);
IkReal x180=(sj6)*(sj6);
IkReal x181=((r11)*(r20));
IkReal x182=((r12)*(sj5));
IkReal x183=((IkReal(1.00000000000000))*(r10));
IkReal x184=((r22)*(sj5));
IkReal x185=((cj5)*(x180));
IkReal x186=((cj5)*(x179));
dummyeval[0]=((((r20)*(sj6)*(x182)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x184)))+(((cj6)*(r21)*(x182)))+(((IkReal(-1.00000000000000))*(r21)*(x183)*(x185)))+(((IkReal(-1.00000000000000))*(r21)*(x183)*(x186)))+(((IkReal(-1.00000000000000))*(sj6)*(x183)*(x184)))+(((x181)*(x186)))+(((x181)*(x185))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst34;
IkReal x187=(sj6)*(sj6);
IkReal x188=(cj6)*(cj6);
IkReal x189=((cj6)*(sj5));
IkReal x190=((r00)*(r11));
IkReal x191=((IkReal(1.00000000000000))*(r02));
IkReal x192=((sj5)*(sj6));
IkReal x193=((cj5)*(x187));
IkReal x194=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x195=((cj5)*(x188));
gconst34=IKsign(((((IkReal(-1.00000000000000))*(x194)*(x195)))+(((IkReal(-1.00000000000000))*(r11)*(x189)*(x191)))+(((r00)*(r12)*(x192)))+(((r01)*(r12)*(x189)))+(((IkReal(-1.00000000000000))*(r10)*(x191)*(x192)))+(((x190)*(x193)))+(((x190)*(x195)))+(((IkReal(-1.00000000000000))*(x193)*(x194)))));
IkReal x196=(sj6)*(sj6);
IkReal x197=(cj6)*(cj6);
IkReal x198=((cj6)*(sj5));
IkReal x199=((r00)*(r11));
IkReal x200=((IkReal(1.00000000000000))*(r02));
IkReal x201=((sj5)*(sj6));
IkReal x202=((cj5)*(x196));
IkReal x203=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x204=((cj5)*(x197));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r11)*(x198)*(x200)))+(((IkReal(-1.00000000000000))*(x203)*(x204)))+(((r01)*(r12)*(x198)))+(((IkReal(-1.00000000000000))*(x202)*(x203)))+(((r00)*(r12)*(x201)))+(((IkReal(-1.00000000000000))*(r10)*(x200)*(x201)))+(((x199)*(x204)))+(((x199)*(x202))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x205=((IkReal(0.000500000000000000))*(cj6));
IkReal x206=((IkReal(0.000500000000000000))*(sj6));
IkReal x207=((sj5)*(sj6));
IkReal x208=((cj5)*(r02));
IkReal x209=((IkReal(0.390000000000000))*(cj5));
IkReal x210=((IkReal(0.390000000000000))*(cj6)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((cj6)*(r00)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x207)))+(x208));
evalcond[2]=((((r22)*(x209)))+(((IkReal(-0.390000000000000))*(r21)*(x207)))+(((IkReal(-1.00000000000000))*(pz)))+(((r20)*(x206)))+(((r21)*(x205)))+(((r20)*(x210))));
evalcond[3]=((IkReal(-0.00200000000000000))+(((IkReal(-0.390000000000000))*(r01)*(x207)))+(((IkReal(-1.00000000000000))*(px)))+(((r01)*(x205)))+(((r00)*(x206)))+(((IkReal(0.390000000000000))*(x208)))+(((r00)*(x210))));
evalcond[4]=((IkReal(0.400000000000000))+(((r11)*(x205)))+(((IkReal(-1.00000000000000))*(py)))+(((r10)*(x206)))+(((r10)*(x210)))+(((r12)*(x209)))+(((IkReal(-0.390000000000000))*(r11)*(x207))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x211=((IkReal(1.00000000000000))*(sj5));
if( IKabs(((((IkReal(-1.00000000000000))*(cj6)*(r20)*(x211)))+(((r21)*(sj5)*(sj6)))+(((IkReal(-1.00000000000000))*(cj5)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj5)*(r12)))+(((cj6)*(r10)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x211))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj6)*(r20)*(x211)))+(((r21)*(sj5)*(sj6)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))))+IKsqr(((((cj5)*(r12)))+(((cj6)*(r10)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x211)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj6)*(r20)*(x211)))+(((r21)*(sj5)*(sj6)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))), ((((cj5)*(r12)))+(((cj6)*(r10)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x211)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[2];
IkReal x212=((cj6)*(sj5));
IkReal x213=((IkReal(1.00000000000000))*(sj5)*(sj6));
evalcond[0]=((((cj5)*(r22)))+(IKsin(j3))+(((r20)*(x212)))+(((IkReal(-1.00000000000000))*(r21)*(x213))));
evalcond[1]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(r11)*(x213)))+(((IkReal(-1.00000000000000))*(IKcos(j3))))+(((r10)*(x212))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst39;
IkReal x214=(cj6)*(cj6);
IkReal x215=(sj6)*(sj6);
IkReal x216=((r01)*(r20));
IkReal x217=((r02)*(sj5));
IkReal x218=((cj5)*(x215));
IkReal x219=((IkReal(1.00000000000000))*(r22)*(sj5));
IkReal x220=((IkReal(1.00000000000000))*(r00)*(r21));
IkReal x221=((cj5)*(x214));
gconst39=IKsign(((((x216)*(x221)))+(((x216)*(x218)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x219)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x219)))+(((IkReal(-1.00000000000000))*(x220)*(x221)))+(((IkReal(-1.00000000000000))*(x218)*(x220)))+(((r20)*(sj6)*(x217)))+(((cj6)*(r21)*(x217)))));
IkReal x222=(cj6)*(cj6);
IkReal x223=(sj6)*(sj6);
IkReal x224=((r01)*(r20));
IkReal x225=((r02)*(sj5));
IkReal x226=((cj5)*(x223));
IkReal x227=((IkReal(1.00000000000000))*(r22)*(sj5));
IkReal x228=((IkReal(1.00000000000000))*(r00)*(r21));
IkReal x229=((cj5)*(x222));
dummyeval[0]=((((x224)*(x226)))+(((x224)*(x229)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x227)))+(((r20)*(sj6)*(x225)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x227)))+(((cj6)*(r21)*(x225)))+(((IkReal(-1.00000000000000))*(x228)*(x229)))+(((IkReal(-1.00000000000000))*(x226)*(x228))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst40;
IkReal x230=(cj6)*(cj6);
IkReal x231=(cj5)*(cj5);
IkReal x232=(r01)*(r01);
IkReal x233=(r00)*(r00);
IkReal x234=(sj6)*(sj6);
IkReal x235=((cj6)*(r00));
IkReal x236=((IkReal(2.00000000000000))*(r01)*(sj6));
IkReal x237=((cj5)*(r02)*(sj5));
gconst40=IKsign(((((x231)*(x232)*(x234)))+((((r02)*(r02))*((sj5)*(sj5))))+(((x233)*(x234)))+(((x230)*(x232)))+(((IkReal(-1.00000000000000))*(x231)*(x235)*(x236)))+(((x235)*(x236)))+(((IkReal(-2.00000000000000))*(x235)*(x237)))+(((x236)*(x237)))+(((x230)*(x231)*(x233)))));
IkReal x238=(cj6)*(cj6);
IkReal x239=(cj5)*(cj5);
IkReal x240=(r01)*(r01);
IkReal x241=(r00)*(r00);
IkReal x242=(sj6)*(sj6);
IkReal x243=((cj6)*(r00));
IkReal x244=((IkReal(2.00000000000000))*(r01)*(sj6));
IkReal x245=((cj5)*(r02)*(sj5));
dummyeval[0]=((((x239)*(x240)*(x242)))+(((x238)*(x239)*(x241)))+((((r02)*(r02))*((sj5)*(sj5))))+(((x238)*(x240)))+(((x244)*(x245)))+(((x241)*(x242)))+(((IkReal(-2.00000000000000))*(x243)*(x245)))+(((IkReal(-1.00000000000000))*(x239)*(x243)*(x244)))+(((x243)*(x244))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x246=((IkReal(1.00000000000000))*(r00));
if( IKabs(((gconst40)*(((((IkReal(-1.00000000000000))*(cj5)*(cj6)*(x246)))+(((cj5)*(r01)*(sj6)))+(((r02)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst40)*(((((IkReal(-1.00000000000000))*(sj6)*(x246)))+(((IkReal(-1.00000000000000))*(cj6)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst40)*(((((IkReal(-1.00000000000000))*(cj5)*(cj6)*(x246)))+(((cj5)*(r01)*(sj6)))+(((r02)*(sj5)))))), ((gconst40)*(((((IkReal(-1.00000000000000))*(sj6)*(x246)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x247=IKsin(j4);
IkReal x248=IKcos(j4);
IkReal x249=((IkReal(1.00000000000000))*(r00));
IkReal x250=((cj5)*(r01));
IkReal x251=((cj5)*(r11));
IkReal x252=((IkReal(1.00000000000000))*(cj5));
IkReal x253=((cj5)*(r21));
IkReal x254=((sj5)*(x247));
IkReal x255=((cj6)*(x247));
IkReal x256=((sj6)*(x248));
IkReal x257=((sj6)*(x247));
IkReal x258=((sj5)*(x248));
IkReal x259=((cj6)*(x248));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(x259)))+(((x253)*(x257)))+(((IkReal(-1.00000000000000))*(r20)*(x256)))+(((IkReal(-1.00000000000000))*(r20)*(x252)*(x255)))+(((r22)*(x254))));
evalcond[1]=((((r21)*(x255)))+(((r20)*(x257)))+(((x253)*(x256)))+(((IkReal(-1.00000000000000))*(r20)*(x252)*(x259)))+(((r22)*(x258)))+(((IkReal(-1.00000000000000))*(cj3))));
evalcond[2]=((IkReal(-1.00000000000000))+(((x250)*(x257)))+(((IkReal(-1.00000000000000))*(cj5)*(x249)*(x255)))+(((IkReal(-1.00000000000000))*(x249)*(x256)))+(((IkReal(-1.00000000000000))*(r01)*(x259)))+(((r02)*(x254))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x252)*(x255)))+(((x251)*(x257)))+(((r12)*(x254)))+(((IkReal(-1.00000000000000))*(r10)*(x256)))+(((IkReal(-1.00000000000000))*(r11)*(x259))));
evalcond[4]=((((r00)*(x257)))+(((r01)*(x255)))+(((x250)*(x256)))+(((IkReal(-1.00000000000000))*(cj5)*(x249)*(x259)))+(((r02)*(x258))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x252)*(x259)))+(((IkReal(-1.00000000000000))*(sj3)))+(((r11)*(x255)))+(((r10)*(x257)))+(((x251)*(x256)))+(((r12)*(x258))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x260=((cj3)*(sj6));
IkReal x261=((IkReal(1.00000000000000))*(r00));
IkReal x262=((cj3)*(cj6));
if( IKabs(((gconst39)*(((((IkReal(-1.00000000000000))*(cj5)*(x261)*(x262)))+(((cj5)*(r01)*(x260)))+(((cj3)*(r02)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst39)*(((((IkReal(-1.00000000000000))*(r01)*(x262)))+(((IkReal(-1.00000000000000))*(x260)*(x261))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst39)*(((((IkReal(-1.00000000000000))*(cj5)*(x261)*(x262)))+(((cj5)*(r01)*(x260)))+(((cj3)*(r02)*(sj5)))))), ((gconst39)*(((((IkReal(-1.00000000000000))*(r01)*(x262)))+(((IkReal(-1.00000000000000))*(x260)*(x261)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x263=IKsin(j4);
IkReal x264=IKcos(j4);
IkReal x265=((IkReal(1.00000000000000))*(r00));
IkReal x266=((cj5)*(r01));
IkReal x267=((cj5)*(r11));
IkReal x268=((IkReal(1.00000000000000))*(cj5));
IkReal x269=((cj5)*(r21));
IkReal x270=((sj5)*(x263));
IkReal x271=((cj6)*(x263));
IkReal x272=((sj6)*(x264));
IkReal x273=((sj6)*(x263));
IkReal x274=((sj5)*(x264));
IkReal x275=((cj6)*(x264));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x272)))+(((r22)*(x270)))+(((IkReal(-1.00000000000000))*(r21)*(x275)))+(((x269)*(x273)))+(((IkReal(-1.00000000000000))*(r20)*(x268)*(x271))));
evalcond[1]=((((r22)*(x274)))+(((r21)*(x271)))+(((x269)*(x272)))+(((IkReal(-1.00000000000000))*(r20)*(x268)*(x275)))+(((r20)*(x273)))+(((IkReal(-1.00000000000000))*(cj3))));
evalcond[2]=((IkReal(-1.00000000000000))+(((x266)*(x273)))+(((r02)*(x270)))+(((IkReal(-1.00000000000000))*(x265)*(x272)))+(((IkReal(-1.00000000000000))*(r01)*(x275)))+(((IkReal(-1.00000000000000))*(cj5)*(x265)*(x271))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x275)))+(((r12)*(x270)))+(((IkReal(-1.00000000000000))*(r10)*(x272)))+(((x267)*(x273)))+(((IkReal(-1.00000000000000))*(r10)*(x268)*(x271))));
evalcond[4]=((((x266)*(x272)))+(((r02)*(x274)))+(((r01)*(x271)))+(((r00)*(x273)))+(((IkReal(-1.00000000000000))*(cj5)*(x265)*(x275))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj3)))+(((r12)*(x274)))+(((r11)*(x271)))+(((r10)*(x273)))+(((x267)*(x272)))+(((IkReal(-1.00000000000000))*(r10)*(x268)*(x275))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x276=((IkReal(0.000500000000000000))*(cj6));
IkReal x277=((IkReal(0.000500000000000000))*(sj6));
IkReal x278=((sj5)*(sj6));
IkReal x279=((cj5)*(r02));
IkReal x280=((IkReal(0.390000000000000))*(cj5));
IkReal x281=((IkReal(0.390000000000000))*(cj6)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((cj6)*(r00)*(sj5)))+(x279)+(((IkReal(-1.00000000000000))*(r01)*(x278))));
evalcond[2]=((((r22)*(x280)))+(((r21)*(x276)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-0.390000000000000))*(r21)*(x278)))+(((r20)*(x277)))+(((r20)*(x281))));
evalcond[3]=((IkReal(0.00200000000000000))+(((r00)*(x281)))+(((IkReal(0.390000000000000))*(x279)))+(((IkReal(-1.00000000000000))*(px)))+(((r01)*(x276)))+(((IkReal(-0.390000000000000))*(r01)*(x278)))+(((r00)*(x277))));
evalcond[4]=((IkReal(0.400000000000000))+(((r10)*(x281)))+(((r12)*(x280)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.390000000000000))*(r11)*(x278)))+(((r11)*(x276)))+(((r10)*(x277))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x282=((cj6)*(sj5));
IkReal x283=((IkReal(1.00000000000000))*(sj5)*(sj6));
if( IKabs(((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(x283)))+(((r20)*(x282))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj5)*(r12)))+(((r10)*(x282)))+(((IkReal(-1.00000000000000))*(r11)*(x283))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(x283)))+(((r20)*(x282)))))+IKsqr(((((cj5)*(r12)))+(((r10)*(x282)))+(((IkReal(-1.00000000000000))*(r11)*(x283)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(x283)))+(((r20)*(x282)))), ((((cj5)*(r12)))+(((r10)*(x282)))+(((IkReal(-1.00000000000000))*(r11)*(x283)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[2];
IkReal x284=((cj6)*(sj5));
IkReal x285=((IkReal(1.00000000000000))*(sj5)*(sj6));
evalcond[0]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(x285)))+(((IkReal(-1.00000000000000))*(IKsin(j3))))+(((r20)*(x284))));
evalcond[1]=((((cj5)*(r12)))+(((r10)*(x284)))+(((IkReal(-1.00000000000000))*(r11)*(x285)))+(((IkReal(-1.00000000000000))*(IKcos(j3)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst43;
IkReal x286=(sj6)*(sj6);
IkReal x287=(cj6)*(cj6);
IkReal x288=((IkReal(1.00000000000000))*(r20));
IkReal x289=((r00)*(r21));
IkReal x290=((r22)*(sj5));
IkReal x291=((r02)*(sj5));
IkReal x292=((cj5)*(x286));
IkReal x293=((cj5)*(x287));
gconst43=IKsign(((((x289)*(x293)))+(((x289)*(x292)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x291)))+(((IkReal(-1.00000000000000))*(r01)*(x288)*(x292)))+(((IkReal(-1.00000000000000))*(r01)*(x288)*(x293)))+(((IkReal(-1.00000000000000))*(sj6)*(x288)*(x291)))+(((cj6)*(r01)*(x290)))+(((r00)*(sj6)*(x290)))));
IkReal x294=(sj6)*(sj6);
IkReal x295=(cj6)*(cj6);
IkReal x296=((IkReal(1.00000000000000))*(r20));
IkReal x297=((r00)*(r21));
IkReal x298=((r22)*(sj5));
IkReal x299=((r02)*(sj5));
IkReal x300=((cj5)*(x294));
IkReal x301=((cj5)*(x295));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x299)))+(((IkReal(-1.00000000000000))*(r01)*(x296)*(x300)))+(((IkReal(-1.00000000000000))*(r01)*(x296)*(x301)))+(((IkReal(-1.00000000000000))*(sj6)*(x296)*(x299)))+(((x297)*(x301)))+(((x297)*(x300)))+(((cj6)*(r01)*(x298)))+(((r00)*(sj6)*(x298))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst44;
IkReal x302=(r20)*(r20);
IkReal x303=(cj5)*(cj5);
IkReal x304=(sj6)*(sj6);
IkReal x305=(cj6)*(cj6);
IkReal x306=(r21)*(r21);
IkReal x307=((cj6)*(r20));
IkReal x308=((IkReal(2.00000000000000))*(r21)*(sj6));
IkReal x309=((cj5)*(r22)*(sj5));
gconst44=IKsign(((((x308)*(x309)))+(((x302)*(x304)))+(((x305)*(x306)))+(((x302)*(x303)*(x305)))+(((IkReal(-2.00000000000000))*(x307)*(x309)))+(((IkReal(-1.00000000000000))*(x303)*(x307)*(x308)))+(((x307)*(x308)))+((((r22)*(r22))*((sj5)*(sj5))))+(((x303)*(x304)*(x306)))));
IkReal x310=(r20)*(r20);
IkReal x311=(cj5)*(cj5);
IkReal x312=(sj6)*(sj6);
IkReal x313=(cj6)*(cj6);
IkReal x314=(r21)*(r21);
IkReal x315=((cj6)*(r20));
IkReal x316=((IkReal(2.00000000000000))*(r21)*(sj6));
IkReal x317=((cj5)*(r22)*(sj5));
dummyeval[0]=((((x310)*(x312)))+(((x310)*(x311)*(x313)))+(((x315)*(x316)))+(((x311)*(x312)*(x314)))+(((IkReal(-2.00000000000000))*(x315)*(x317)))+(((IkReal(-1.00000000000000))*(x311)*(x315)*(x316)))+((((r22)*(r22))*((sj5)*(sj5))))+(((x316)*(x317)))+(((x313)*(x314))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x318=((cj3)*(cj6));
IkReal x319=((IkReal(1.00000000000000))*(r21));
IkReal x320=((cj3)*(sj6));
if( IKabs(((gconst44)*(((((IkReal(-1.00000000000000))*(x318)*(x319)))+(((IkReal(-1.00000000000000))*(r20)*(x320))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst44)*(((((cj5)*(r20)*(x318)))+(((IkReal(-1.00000000000000))*(cj5)*(x319)*(x320)))+(((IkReal(-1.00000000000000))*(cj3)*(r22)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst44)*(((((IkReal(-1.00000000000000))*(x318)*(x319)))+(((IkReal(-1.00000000000000))*(r20)*(x320)))))), ((gconst44)*(((((cj5)*(r20)*(x318)))+(((IkReal(-1.00000000000000))*(cj5)*(x319)*(x320)))+(((IkReal(-1.00000000000000))*(cj3)*(r22)*(sj5)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x321=IKsin(j4);
IkReal x322=IKcos(j4);
IkReal x323=((IkReal(1.00000000000000))*(r00));
IkReal x324=((cj5)*(r01));
IkReal x325=((cj5)*(r11));
IkReal x326=((IkReal(1.00000000000000))*(cj5));
IkReal x327=((cj5)*(r21));
IkReal x328=((sj5)*(x321));
IkReal x329=((cj6)*(x321));
IkReal x330=((sj6)*(x322));
IkReal x331=((sj6)*(x321));
IkReal x332=((sj5)*(x322));
IkReal x333=((cj6)*(x322));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x330)))+(((IkReal(-1.00000000000000))*(r20)*(x326)*(x329)))+(((IkReal(-1.00000000000000))*(r21)*(x333)))+(((r22)*(x328)))+(((x327)*(x331))));
evalcond[1]=((((r22)*(x332)))+(cj3)+(((r21)*(x329)))+(((IkReal(-1.00000000000000))*(r20)*(x326)*(x333)))+(((r20)*(x331)))+(((x327)*(x330))));
evalcond[2]=((IkReal(1.00000000000000))+(((r02)*(x328)))+(((x324)*(x331)))+(((IkReal(-1.00000000000000))*(r01)*(x333)))+(((IkReal(-1.00000000000000))*(cj5)*(x323)*(x329)))+(((IkReal(-1.00000000000000))*(x323)*(x330))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x326)*(x329)))+(((r12)*(x328)))+(((IkReal(-1.00000000000000))*(r11)*(x333)))+(((IkReal(-1.00000000000000))*(r10)*(x330)))+(((x325)*(x331))));
evalcond[4]=((((r00)*(x331)))+(((x324)*(x330)))+(((r02)*(x332)))+(((r01)*(x329)))+(((IkReal(-1.00000000000000))*(cj5)*(x323)*(x333))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj3)))+(((r12)*(x332)))+(((r11)*(x329)))+(((IkReal(-1.00000000000000))*(r10)*(x326)*(x333)))+(((r10)*(x331)))+(((x325)*(x330))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x334=((cj3)*(sj6));
IkReal x335=((IkReal(1.00000000000000))*(r00));
IkReal x336=((cj3)*(cj6));
if( IKabs(((gconst43)*(((((cj5)*(r01)*(x334)))+(((cj3)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x335)*(x336))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst43)*(((((IkReal(-1.00000000000000))*(r01)*(x336)))+(((IkReal(-1.00000000000000))*(x334)*(x335))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst43)*(((((cj5)*(r01)*(x334)))+(((cj3)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x335)*(x336)))))), ((gconst43)*(((((IkReal(-1.00000000000000))*(r01)*(x336)))+(((IkReal(-1.00000000000000))*(x334)*(x335)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x337=IKsin(j4);
IkReal x338=IKcos(j4);
IkReal x339=((IkReal(1.00000000000000))*(r00));
IkReal x340=((cj5)*(r01));
IkReal x341=((cj5)*(r11));
IkReal x342=((IkReal(1.00000000000000))*(cj5));
IkReal x343=((cj5)*(r21));
IkReal x344=((sj5)*(x337));
IkReal x345=((cj6)*(x337));
IkReal x346=((sj6)*(x338));
IkReal x347=((sj6)*(x337));
IkReal x348=((sj5)*(x338));
IkReal x349=((cj6)*(x338));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(x349)))+(((r22)*(x344)))+(((IkReal(-1.00000000000000))*(r20)*(x346)))+(((IkReal(-1.00000000000000))*(r20)*(x342)*(x345)))+(((x343)*(x347))));
evalcond[1]=((((r21)*(x345)))+(cj3)+(((r22)*(x348)))+(((r20)*(x347)))+(((IkReal(-1.00000000000000))*(r20)*(x342)*(x349)))+(((x343)*(x346))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(cj5)*(x339)*(x345)))+(((r02)*(x344)))+(((x340)*(x347)))+(((IkReal(-1.00000000000000))*(x339)*(x346)))+(((IkReal(-1.00000000000000))*(r01)*(x349))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x346)))+(((IkReal(-1.00000000000000))*(r11)*(x349)))+(((IkReal(-1.00000000000000))*(r10)*(x342)*(x345)))+(((x341)*(x347)))+(((r12)*(x344))));
evalcond[4]=((((r01)*(x345)))+(((IkReal(-1.00000000000000))*(cj5)*(x339)*(x349)))+(((r00)*(x347)))+(((r02)*(x348)))+(((x340)*(x346))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj3)))+(((IkReal(-1.00000000000000))*(r10)*(x342)*(x349)))+(((x341)*(x346)))+(((r11)*(x345)))+(((r10)*(x347)))+(((r12)*(x348))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x350=((cj6)*(sj5));
IkReal x351=((IkReal(1.00000000000000))*(sj5)*(sj6));
if( IKabs(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((r00)*(x350)))+(((IkReal(-1.00000000000000))*(r01)*(x351)))+(((cj5)*(r02))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r11)*(x351)))+(((cj5)*(r12)))+(((r10)*(x350))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((r00)*(x350)))+(((IkReal(-1.00000000000000))*(r01)*(x351)))+(((cj5)*(r02)))))))+IKsqr(((((IkReal(-1.00000000000000))*(r11)*(x351)))+(((cj5)*(r12)))+(((r10)*(x350)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((r00)*(x350)))+(((IkReal(-1.00000000000000))*(r01)*(x351)))+(((cj5)*(r02)))))), ((((IkReal(-1.00000000000000))*(r11)*(x351)))+(((cj5)*(r12)))+(((r10)*(x350)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x352=IKsin(j3);
IkReal x353=((cj6)*(sj5));
IkReal x354=((IkReal(1.00000000000000))*(sj5)*(sj6));
evalcond[0]=((((cj5)*(r22)))+(((sj2)*(x352)))+(((IkReal(-1.00000000000000))*(r21)*(x354)))+(((r20)*(x353))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj2)*(x352)))+(((r00)*(x353)))+(((IkReal(-1.00000000000000))*(r01)*(x354)))+(((cj5)*(r02))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r11)*(x354)))+(((cj5)*(r12)))+(((r10)*(x353)))+(((IkReal(-1.00000000000000))*(IKcos(j3)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst36;
IkReal x355=(cj5)*(cj5);
IkReal x356=(r11)*(r11);
IkReal x357=(sj6)*(sj6);
IkReal x358=(cj6)*(cj6);
IkReal x359=(r10)*(r10);
IkReal x360=((r11)*(sj6));
IkReal x361=((IkReal(1.00000000000000))*(x357));
IkReal x362=((IkReal(1.00000000000000))*(x358));
IkReal x363=((IkReal(2.00000000000000))*(cj6)*(r10));
IkReal x364=((cj5)*(r12)*(sj5));
gconst36=IKsign(((((IkReal(-1.00000000000000))*(x360)*(x363)))+(((IkReal(-1.00000000000000))*(x355)*(x359)*(x362)))+(((IkReal(-1.00000000000000))*((r12)*(r12))*((sj5)*(sj5))))+(((IkReal(-1.00000000000000))*(x356)*(x362)))+(((x355)*(x360)*(x363)))+(((IkReal(-1.00000000000000))*(x359)*(x361)))+(((IkReal(-1.00000000000000))*(x355)*(x356)*(x361)))+(((IkReal(-2.00000000000000))*(x360)*(x364)))+(((x363)*(x364)))));
IkReal x365=(cj5)*(cj5);
IkReal x366=(r11)*(r11);
IkReal x367=(sj6)*(sj6);
IkReal x368=(cj6)*(cj6);
IkReal x369=(r10)*(r10);
IkReal x370=((r11)*(sj6));
IkReal x371=((IkReal(1.00000000000000))*(x367));
IkReal x372=((IkReal(1.00000000000000))*(x368));
IkReal x373=((IkReal(2.00000000000000))*(cj6)*(r10));
IkReal x374=((cj5)*(r12)*(sj5));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x365)*(x366)*(x371)))+(((IkReal(-1.00000000000000))*(x370)*(x373)))+(((IkReal(-1.00000000000000))*((r12)*(r12))*((sj5)*(sj5))))+(((IkReal(-1.00000000000000))*(x366)*(x372)))+(((IkReal(-1.00000000000000))*(x369)*(x371)))+(((x365)*(x370)*(x373)))+(((x373)*(x374)))+(((IkReal(-2.00000000000000))*(x370)*(x374)))+(((IkReal(-1.00000000000000))*(x365)*(x369)*(x372))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst35;
IkReal x375=(sj6)*(sj6);
IkReal x376=(cj5)*(cj5);
IkReal x377=(cj6)*(cj6);
IkReal x378=((cj5)*(sj5));
IkReal x379=((cj6)*(r00));
IkReal x380=((r11)*(sj6));
IkReal x381=((r01)*(r11));
IkReal x382=((r01)*(sj6));
IkReal x383=((r00)*(r10));
IkReal x384=((IkReal(1.00000000000000))*(cj6)*(r10));
gconst35=IKsign(((((x377)*(x381)))+(((cj6)*(r10)*(x382)))+(((IkReal(-1.00000000000000))*(x376)*(x382)*(x384)))+(((IkReal(-1.00000000000000))*(r12)*(x378)*(x379)))+(((r02)*(r12)*((sj5)*(sj5))))+(((r12)*(x378)*(x382)))+(((r02)*(x378)*(x380)))+(((IkReal(-1.00000000000000))*(x376)*(x379)*(x380)))+(((x376)*(x377)*(x383)))+(((x375)*(x376)*(x381)))+(((x379)*(x380)))+(((x375)*(x383)))+(((IkReal(-1.00000000000000))*(r02)*(x378)*(x384)))));
IkReal x385=(sj6)*(sj6);
IkReal x386=(cj5)*(cj5);
IkReal x387=(cj6)*(cj6);
IkReal x388=((cj5)*(sj5));
IkReal x389=((cj6)*(r00));
IkReal x390=((r11)*(sj6));
IkReal x391=((r01)*(r11));
IkReal x392=((r01)*(sj6));
IkReal x393=((r00)*(r10));
IkReal x394=((IkReal(1.00000000000000))*(cj6)*(r10));
dummyeval[0]=((((x386)*(x387)*(x393)))+(((x385)*(x393)))+(((IkReal(-1.00000000000000))*(x386)*(x392)*(x394)))+(((IkReal(-1.00000000000000))*(r12)*(x388)*(x389)))+(((IkReal(-1.00000000000000))*(r02)*(x388)*(x394)))+(((r02)*(r12)*((sj5)*(sj5))))+(((IkReal(-1.00000000000000))*(x386)*(x389)*(x390)))+(((cj6)*(r10)*(x392)))+(((x387)*(x391)))+(((r02)*(x388)*(x390)))+(((x385)*(x386)*(x391)))+(((r12)*(x388)*(x392)))+(((x389)*(x390))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x395=((IkReal(1.00000000000000))*(r11));
IkReal x396=((cj2)*(cj3)*(cj6));
IkReal x397=((cj2)*(cj3)*(sj6));
if( IKabs(((gconst35)*(((((IkReal(-1.00000000000000))*(x395)*(x396)))+(((IkReal(-1.00000000000000))*(r10)*(x397))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst35)*(((((IkReal(-1.00000000000000))*(cj2)*(cj3)*(r12)*(sj5)))+(((cj5)*(r10)*(x396)))+(((IkReal(-1.00000000000000))*(cj5)*(x395)*(x397))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst35)*(((((IkReal(-1.00000000000000))*(x395)*(x396)))+(((IkReal(-1.00000000000000))*(r10)*(x397)))))), ((gconst35)*(((((IkReal(-1.00000000000000))*(cj2)*(cj3)*(r12)*(sj5)))+(((cj5)*(r10)*(x396)))+(((IkReal(-1.00000000000000))*(cj5)*(x395)*(x397)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x398=IKsin(j4);
IkReal x399=IKcos(j4);
IkReal x400=((IkReal(1.00000000000000))*(r00));
IkReal x401=((cj5)*(r01));
IkReal x402=((cj5)*(r11));
IkReal x403=((IkReal(1.00000000000000))*(sj2));
IkReal x404=((IkReal(1.00000000000000))*(cj5));
IkReal x405=((cj5)*(r21));
IkReal x406=((sj5)*(x398));
IkReal x407=((cj6)*(x398));
IkReal x408=((sj6)*(x399));
IkReal x409=((sj6)*(x398));
IkReal x410=((sj5)*(x399));
IkReal x411=((cj6)*(x399));
evalcond[0]=((((x405)*(x409)))+(((r22)*(x406)))+(((IkReal(-1.00000000000000))*(r20)*(x408)))+(((IkReal(-1.00000000000000))*(r21)*(x411)))+(((IkReal(-1.00000000000000))*(r20)*(x404)*(x407)))+(((IkReal(-1.00000000000000))*(cj2))));
evalcond[1]=((((x405)*(x408)))+(((IkReal(-1.00000000000000))*(cj3)*(x403)))+(((r22)*(x410)))+(((r21)*(x407)))+(((IkReal(-1.00000000000000))*(r20)*(x404)*(x411)))+(((r20)*(x409))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(x400)*(x407)))+(((IkReal(-1.00000000000000))*(r01)*(x411)))+(((IkReal(-1.00000000000000))*(x400)*(x408)))+(((IkReal(-1.00000000000000))*(x403)))+(((r02)*(x406)))+(((x401)*(x409))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x404)*(x407)))+(((r12)*(x406)))+(((IkReal(-1.00000000000000))*(r11)*(x411)))+(((x402)*(x409)))+(((IkReal(-1.00000000000000))*(r10)*(x408))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj5)*(x400)*(x411)))+(((cj2)*(cj3)))+(((r00)*(x409)))+(((r01)*(x407)))+(((r02)*(x410)))+(((x401)*(x408))));
evalcond[5]=((((r11)*(x407)))+(((IkReal(-1.00000000000000))*(sj3)))+(((r12)*(x410)))+(((IkReal(-1.00000000000000))*(r10)*(x404)*(x411)))+(((r10)*(x409)))+(((x402)*(x408))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x412=((IkReal(1.00000000000000))*(sj3));
if( IKabs(((gconst36)*(((((IkReal(-1.00000000000000))*(cj6)*(r11)*(x412)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x412))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst36)*(((((IkReal(-1.00000000000000))*(r12)*(sj5)*(x412)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(sj6)*(x412)))+(((cj5)*(cj6)*(r10)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst36)*(((((IkReal(-1.00000000000000))*(cj6)*(r11)*(x412)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x412)))))), ((gconst36)*(((((IkReal(-1.00000000000000))*(r12)*(sj5)*(x412)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(sj6)*(x412)))+(((cj5)*(cj6)*(r10)*(sj3)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x413=IKsin(j4);
IkReal x414=IKcos(j4);
IkReal x415=((IkReal(1.00000000000000))*(r00));
IkReal x416=((cj5)*(r01));
IkReal x417=((cj5)*(r11));
IkReal x418=((IkReal(1.00000000000000))*(sj2));
IkReal x419=((IkReal(1.00000000000000))*(cj5));
IkReal x420=((cj5)*(r21));
IkReal x421=((sj5)*(x413));
IkReal x422=((cj6)*(x413));
IkReal x423=((sj6)*(x414));
IkReal x424=((sj6)*(x413));
IkReal x425=((sj5)*(x414));
IkReal x426=((cj6)*(x414));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(x426)))+(((x420)*(x424)))+(((IkReal(-1.00000000000000))*(r20)*(x423)))+(((IkReal(-1.00000000000000))*(r20)*(x419)*(x422)))+(((r22)*(x421)))+(((IkReal(-1.00000000000000))*(cj2))));
evalcond[1]=((((r20)*(x424)))+(((x420)*(x423)))+(((r21)*(x422)))+(((IkReal(-1.00000000000000))*(cj3)*(x418)))+(((IkReal(-1.00000000000000))*(r20)*(x419)*(x426)))+(((r22)*(x425))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(x415)*(x422)))+(((r02)*(x421)))+(((IkReal(-1.00000000000000))*(r01)*(x426)))+(((x416)*(x424)))+(((IkReal(-1.00000000000000))*(x418)))+(((IkReal(-1.00000000000000))*(x415)*(x423))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x426)))+(((IkReal(-1.00000000000000))*(r10)*(x419)*(x422)))+(((IkReal(-1.00000000000000))*(r10)*(x423)))+(((r12)*(x421)))+(((x417)*(x424))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj5)*(x415)*(x426)))+(((cj2)*(cj3)))+(((r02)*(x425)))+(((x416)*(x423)))+(((r00)*(x424)))+(((r01)*(x422))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj3)))+(((IkReal(-1.00000000000000))*(r10)*(x419)*(x426)))+(((r10)*(x424)))+(((r12)*(x425)))+(((r11)*(x422)))+(((x417)*(x423))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x427=((r10)*(sj2));
IkReal x428=((IkReal(1.00000000000000))*(sj6));
IkReal x429=((IkReal(1.00000000000000))*(sj2));
if( IKabs(((gconst34)*(((((IkReal(-1.00000000000000))*(x427)*(x428)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x429))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst34)*(((((IkReal(-1.00000000000000))*(r12)*(sj5)*(x429)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(sj2)*(x428)))+(((cj5)*(cj6)*(x427))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst34)*(((((IkReal(-1.00000000000000))*(x427)*(x428)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x429)))))), ((gconst34)*(((((IkReal(-1.00000000000000))*(r12)*(sj5)*(x429)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(sj2)*(x428)))+(((cj5)*(cj6)*(x427)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x430=IKsin(j4);
IkReal x431=IKcos(j4);
IkReal x432=((IkReal(1.00000000000000))*(cj6));
IkReal x433=((sj5)*(x430));
IkReal x434=((cj5)*(x430));
IkReal x435=((IkReal(1.00000000000000))*(sj6)*(x431));
evalcond[0]=((((r21)*(sj6)*(x434)))+(((IkReal(-1.00000000000000))*(r21)*(x431)*(x432)))+(((r22)*(x433)))+(((IkReal(-1.00000000000000))*(r20)*(x435)))+(((IkReal(-1.00000000000000))*(r20)*(x432)*(x434)))+(((IkReal(-1.00000000000000))*(cj2))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(r01)*(x431)*(x432)))+(((r02)*(x433)))+(((r01)*(sj6)*(x434)))+(((IkReal(-1.00000000000000))*(r00)*(x432)*(x434)))+(((IkReal(-1.00000000000000))*(r00)*(x435))));
evalcond[2]=((((r12)*(x433)))+(((IkReal(-1.00000000000000))*(r10)*(x435)))+(((IkReal(-1.00000000000000))*(r11)*(x431)*(x432)))+(((IkReal(-1.00000000000000))*(r10)*(x432)*(x434)))+(((r11)*(sj6)*(x434))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x436=((cj4)*(cj5));
IkReal x437=((r11)*(sj6));
IkReal x438=((cj6)*(r10));
if( IKabs(((((x436)*(x437)))+(((IkReal(-1.00000000000000))*(x436)*(x438)))+(((r10)*(sj4)*(sj6)))+(((cj6)*(r11)*(sj4)))+(((cj4)*(r12)*(sj5))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(sj5)*(x437)))+(((cj5)*(r12)))+(((sj5)*(x438))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((x436)*(x437)))+(((IkReal(-1.00000000000000))*(x436)*(x438)))+(((r10)*(sj4)*(sj6)))+(((cj6)*(r11)*(sj4)))+(((cj4)*(r12)*(sj5)))))+IKsqr(((((IkReal(-1.00000000000000))*(sj5)*(x437)))+(((cj5)*(r12)))+(((sj5)*(x438)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((x436)*(x437)))+(((IkReal(-1.00000000000000))*(x436)*(x438)))+(((r10)*(sj4)*(sj6)))+(((cj6)*(r11)*(sj4)))+(((cj4)*(r12)*(sj5)))), ((((IkReal(-1.00000000000000))*(sj5)*(x437)))+(((cj5)*(r12)))+(((sj5)*(x438)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x439=IKsin(j3);
IkReal x440=IKcos(j3);
IkReal x441=((r11)*(sj6));
IkReal x442=((IkReal(1.00000000000000))*(sj5));
IkReal x443=((cj6)*(sj4));
IkReal x444=((sj4)*(sj6));
IkReal x445=((cj4)*(sj5));
IkReal x446=((cj4)*(cj5));
IkReal x447=((r01)*(sj6));
IkReal x448=((r21)*(sj6));
IkReal x449=((cj6)*(sj5));
IkReal x450=((IkReal(1.00000000000000))*(x440));
IkReal x451=((IkReal(1.00000000000000))*(x439));
IkReal x452=((IkReal(1.00000000000000))*(cj6)*(x446));
evalcond[0]=((((cj5)*(r22)))+(((sj2)*(x439)))+(((r20)*(x449)))+(((IkReal(-1.00000000000000))*(x442)*(x448))));
evalcond[1]=((((r00)*(x449)))+(((IkReal(-1.00000000000000))*(cj2)*(x451)))+(((cj5)*(r02)))+(((IkReal(-1.00000000000000))*(x442)*(x447))));
evalcond[2]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x450)))+(((r10)*(x449)))+(((IkReal(-1.00000000000000))*(x441)*(x442))));
evalcond[3]=((((x446)*(x448)))+(((r21)*(x443)))+(((IkReal(-1.00000000000000))*(sj2)*(x450)))+(((r22)*(x445)))+(((IkReal(-1.00000000000000))*(r20)*(x452)))+(((r20)*(x444))));
evalcond[4]=((((x446)*(x447)))+(((r02)*(x445)))+(((IkReal(-1.00000000000000))*(r00)*(x452)))+(((cj2)*(x440)))+(((r01)*(x443)))+(((r00)*(x444))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x451)))+(((x441)*(x446)))+(((IkReal(-1.00000000000000))*(r10)*(x452)))+(((r10)*(x444)))+(((r11)*(x443)))+(((r12)*(x445))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x453=((cj2)*(cj6));
IkReal x454=((IkReal(1.00000000000000))*(r11));
IkReal x455=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((gconst33)*(((((IkReal(-1.00000000000000))*(r10)*(sj6)*(x455)))+(((IkReal(-1.00000000000000))*(x453)*(x454))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst33)*(((((cj5)*(r10)*(x453)))+(((IkReal(-1.00000000000000))*(cj2)*(cj5)*(sj6)*(x454)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)*(x455))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst33)*(((((IkReal(-1.00000000000000))*(r10)*(sj6)*(x455)))+(((IkReal(-1.00000000000000))*(x453)*(x454)))))), ((gconst33)*(((((cj5)*(r10)*(x453)))+(((IkReal(-1.00000000000000))*(cj2)*(cj5)*(sj6)*(x454)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)*(x455)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x456=IKsin(j4);
IkReal x457=IKcos(j4);
IkReal x458=((IkReal(1.00000000000000))*(cj6));
IkReal x459=((sj5)*(x456));
IkReal x460=((cj5)*(x456));
IkReal x461=((IkReal(1.00000000000000))*(sj6)*(x457));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(x457)*(x458)))+(((r21)*(sj6)*(x460)))+(((IkReal(-1.00000000000000))*(r20)*(x461)))+(((IkReal(-1.00000000000000))*(r20)*(x458)*(x460)))+(((IkReal(-1.00000000000000))*(cj2)))+(((r22)*(x459))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x457)*(x458)))+(((IkReal(-1.00000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(r00)*(x461)))+(((r01)*(sj6)*(x460)))+(((IkReal(-1.00000000000000))*(r00)*(x458)*(x460)))+(((r02)*(x459))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r11)*(x457)*(x458)))+(((r11)*(sj6)*(x460)))+(((IkReal(-1.00000000000000))*(r10)*(x461)))+(((r12)*(x459)))+(((IkReal(-1.00000000000000))*(r10)*(x458)*(x460))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x462=((cj4)*(cj5));
IkReal x463=((r11)*(sj6));
IkReal x464=((cj6)*(r10));
if( IKabs(((((IkReal(-1.00000000000000))*(x462)*(x464)))+(((r10)*(sj4)*(sj6)))+(((cj6)*(r11)*(sj4)))+(((x462)*(x463)))+(((cj4)*(r12)*(sj5))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(sj5)*(x463)))+(((sj5)*(x464))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x462)*(x464)))+(((r10)*(sj4)*(sj6)))+(((cj6)*(r11)*(sj4)))+(((x462)*(x463)))+(((cj4)*(r12)*(sj5)))))+IKsqr(((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(sj5)*(x463)))+(((sj5)*(x464)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x462)*(x464)))+(((r10)*(sj4)*(sj6)))+(((cj6)*(r11)*(sj4)))+(((x462)*(x463)))+(((cj4)*(r12)*(sj5)))), ((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(sj5)*(x463)))+(((sj5)*(x464)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x465=IKsin(j3);
IkReal x466=IKcos(j3);
IkReal x467=((r11)*(sj6));
IkReal x468=((IkReal(1.00000000000000))*(sj5));
IkReal x469=((cj6)*(sj4));
IkReal x470=((sj4)*(sj6));
IkReal x471=((cj4)*(sj5));
IkReal x472=((cj4)*(cj5));
IkReal x473=((r01)*(sj6));
IkReal x474=((r21)*(sj6));
IkReal x475=((cj6)*(sj5));
IkReal x476=((IkReal(1.00000000000000))*(x466));
IkReal x477=((IkReal(1.00000000000000))*(x465));
IkReal x478=((IkReal(1.00000000000000))*(cj6)*(x472));
evalcond[0]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(x468)*(x474)))+(((r20)*(x475)))+(((sj2)*(x465))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x468)*(x473)))+(((IkReal(-1.00000000000000))*(cj2)*(x477)))+(((r00)*(x475)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((r10)*(x475)))+(((IkReal(-1.00000000000000))*(x476)))+(((IkReal(-1.00000000000000))*(x467)*(x468))));
evalcond[3]=((((x472)*(x474)))+(((r20)*(x470)))+(((IkReal(-1.00000000000000))*(sj2)*(x476)))+(((r22)*(x471)))+(((r21)*(x469)))+(((IkReal(-1.00000000000000))*(r20)*(x478))));
evalcond[4]=((((x472)*(x473)))+(((IkReal(-1.00000000000000))*(r00)*(x478)))+(((cj2)*(x466)))+(((r02)*(x471)))+(((r01)*(x469)))+(((r00)*(x470))));
evalcond[5]=((((r10)*(x470)))+(((IkReal(-1.00000000000000))*(x477)))+(((x467)*(x472)))+(((r12)*(x471)))+(((IkReal(-1.00000000000000))*(r10)*(x478)))+(((r11)*(x469))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}
}
}

} else
{
IkReal x479=((IkReal(0.390000000000000))*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.400000000000000))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x479)))+(((IkReal(0.000500000000000000))*(cj6)*(r11)))+(((IkReal(-1.00000000000000))*(py)))+(((cj6)*(r10)*(x479)))+(((IkReal(0.000500000000000000))*(r10)*(sj6)))+(((IkReal(0.390000000000000))*(cj5)*(r12))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x480=((IkReal(0.250000000000000))*(cj6));
IkReal x481=((IkReal(195.000000000000))*(cj5));
IkReal x482=((IkReal(0.250000000000000))*(sj6));
IkReal x483=((IkReal(195.000000000000))*(sj5));
if( IKabs(((((r01)*(sj6)*(x483)))+(((IkReal(500.000000000000))*(px)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x483)))+(((IkReal(-1.00000000000000))*(r01)*(x480)))+(((IkReal(-1.00000000000000))*(r02)*(x481)))+(((IkReal(-1.00000000000000))*(r00)*(x482))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(r20)*(x483)))+(((r20)*(x482)))+(((IkReal(-500.000000000000))*(pz)))+(((r22)*(x481)))+(((r21)*(x480)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x483))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj6)*(x483)))+(((IkReal(500.000000000000))*(px)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x483)))+(((IkReal(-1.00000000000000))*(r01)*(x480)))+(((IkReal(-1.00000000000000))*(r02)*(x481)))+(((IkReal(-1.00000000000000))*(r00)*(x482)))))+IKsqr(((((cj6)*(r20)*(x483)))+(((r20)*(x482)))+(((IkReal(-500.000000000000))*(pz)))+(((r22)*(x481)))+(((r21)*(x480)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x483)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((r01)*(sj6)*(x483)))+(((IkReal(500.000000000000))*(px)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x483)))+(((IkReal(-1.00000000000000))*(r01)*(x480)))+(((IkReal(-1.00000000000000))*(r02)*(x481)))+(((IkReal(-1.00000000000000))*(r00)*(x482)))), ((((cj6)*(r20)*(x483)))+(((r20)*(x482)))+(((IkReal(-500.000000000000))*(pz)))+(((r22)*(x481)))+(((r21)*(x480)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x483)))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x484=((IkReal(0.000500000000000000))*(cj6));
IkReal x485=((IkReal(0.390000000000000))*(sj5));
IkReal x486=((IkReal(0.390000000000000))*(cj5));
IkReal x487=((IkReal(0.000500000000000000))*(sj6));
evalcond[0]=((((cj6)*(r20)*(x485)))+(((r20)*(x487)))+(((IkReal(-0.00200000000000000))*(IKcos(j2))))+(((IkReal(-1.00000000000000))*(pz)))+(((r22)*(x486)))+(((r21)*(x484)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x485))));
evalcond[1]=((((r02)*(x486)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.00200000000000000))*(IKsin(j2))))+(((r01)*(x484)))+(((r00)*(x487)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x485)))+(((cj6)*(r00)*(x485))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst45;
IkReal x488=(sj6)*(sj6);
IkReal x489=(cj6)*(cj6);
IkReal x490=((r01)*(r10));
IkReal x491=((IkReal(1.00000000000000))*(r00));
IkReal x492=((r02)*(sj5));
IkReal x493=((r12)*(sj5));
IkReal x494=((cj5)*(x488));
IkReal x495=((cj5)*(x489));
gconst45=IKsign(((((IkReal(-1.00000000000000))*(r11)*(x491)*(x495)))+(((IkReal(-1.00000000000000))*(r11)*(x491)*(x494)))+(((r10)*(sj6)*(x492)))+(((x490)*(x495)))+(((x490)*(x494)))+(((IkReal(-1.00000000000000))*(sj6)*(x491)*(x493)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x493)))+(((cj6)*(r11)*(x492)))));
IkReal x496=(sj6)*(sj6);
IkReal x497=(cj6)*(cj6);
IkReal x498=((r01)*(r10));
IkReal x499=((IkReal(1.00000000000000))*(r00));
IkReal x500=((r02)*(sj5));
IkReal x501=((r12)*(sj5));
IkReal x502=((cj5)*(x496));
IkReal x503=((cj5)*(x497));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r11)*(x499)*(x503)))+(((IkReal(-1.00000000000000))*(r11)*(x499)*(x502)))+(((IkReal(-1.00000000000000))*(sj6)*(x499)*(x501)))+(((r10)*(sj6)*(x500)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x501)))+(((cj6)*(r11)*(x500)))+(((x498)*(x503)))+(((x498)*(x502))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst46;
IkReal x504=(cj6)*(cj6);
IkReal x505=(sj6)*(sj6);
IkReal x506=((r11)*(r20));
IkReal x507=((r12)*(sj5));
IkReal x508=((IkReal(1.00000000000000))*(r10));
IkReal x509=((r22)*(sj5));
IkReal x510=((cj5)*(x505));
IkReal x511=((cj5)*(x504));
gconst46=IKsign(((((IkReal(-1.00000000000000))*(r21)*(x508)*(x511)))+(((IkReal(-1.00000000000000))*(r21)*(x508)*(x510)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x509)))+(((cj6)*(r21)*(x507)))+(((x506)*(x510)))+(((x506)*(x511)))+(((r20)*(sj6)*(x507)))+(((IkReal(-1.00000000000000))*(sj6)*(x508)*(x509)))));
IkReal x512=(cj6)*(cj6);
IkReal x513=(sj6)*(sj6);
IkReal x514=((r11)*(r20));
IkReal x515=((r12)*(sj5));
IkReal x516=((IkReal(1.00000000000000))*(r10));
IkReal x517=((r22)*(sj5));
IkReal x518=((cj5)*(x513));
IkReal x519=((cj5)*(x512));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r21)*(x516)*(x518)))+(((IkReal(-1.00000000000000))*(r21)*(x516)*(x519)))+(((x514)*(x519)))+(((x514)*(x518)))+(((r20)*(sj6)*(x515)))+(((cj6)*(r21)*(x515)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x517)))+(((IkReal(-1.00000000000000))*(sj6)*(x516)*(x517))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x520=((IkReal(0.000500000000000000))*(cj6));
IkReal x521=((IkReal(0.390000000000000))*(sj5));
IkReal x522=((cj6)*(r20));
IkReal x523=((IkReal(0.000500000000000000))*(sj6));
IkReal x524=((cj5)*(r22));
IkReal x525=((r21)*(sj6));
IkReal x526=((IkReal(0.390000000000000))*(cj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj5)*(x525)))+(((sj5)*(x522)))+(x524));
evalcond[2]=((IkReal(-0.00200000000000000))+(((r21)*(x520)))+(((r20)*(x523)))+(((IkReal(-1.00000000000000))*(x521)*(x525)))+(((IkReal(-1.00000000000000))*(pz)))+(((x521)*(x522)))+(((IkReal(0.390000000000000))*(x524))));
evalcond[3]=((((r02)*(x526)))+(((cj6)*(r00)*(x521)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x521)))+(((IkReal(-1.00000000000000))*(px)))+(((r01)*(x520)))+(((r00)*(x523))));
evalcond[4]=((IkReal(-0.400000000000000))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x521)))+(((r11)*(x520)))+(((r12)*(x526)))+(((IkReal(-1.00000000000000))*(py)))+(((r10)*(x523)))+(((cj6)*(r10)*(x521))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x527=((IkReal(1.00000000000000))*(cj5));
IkReal x528=((sj5)*(sj6));
IkReal x529=((IkReal(1.00000000000000))*(cj6)*(sj5));
if( IKabs(((((IkReal(-1.00000000000000))*(r00)*(x529)))+(((IkReal(-1.00000000000000))*(r02)*(x527)))+(((r01)*(x528))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r11)*(x528)))+(((IkReal(-1.00000000000000))*(r10)*(x529)))+(((IkReal(-1.00000000000000))*(r12)*(x527))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r00)*(x529)))+(((IkReal(-1.00000000000000))*(r02)*(x527)))+(((r01)*(x528)))))+IKsqr(((((r11)*(x528)))+(((IkReal(-1.00000000000000))*(r10)*(x529)))+(((IkReal(-1.00000000000000))*(r12)*(x527)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r00)*(x529)))+(((IkReal(-1.00000000000000))*(r02)*(x527)))+(((r01)*(x528)))), ((((r11)*(x528)))+(((IkReal(-1.00000000000000))*(r10)*(x529)))+(((IkReal(-1.00000000000000))*(r12)*(x527)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[2];
IkReal x530=((cj6)*(sj5));
IkReal x531=((IkReal(1.00000000000000))*(sj5)*(sj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(r01)*(x531)))+(IKsin(j3))+(((r00)*(x530)))+(((cj5)*(r02))));
evalcond[1]=((((cj5)*(r12)))+(IKcos(j3))+(((r10)*(x530)))+(((IkReal(-1.00000000000000))*(r11)*(x531))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst51;
IkReal x532=(cj6)*(cj6);
IkReal x533=(sj6)*(sj6);
IkReal x534=((r11)*(r20));
IkReal x535=((r12)*(sj5));
IkReal x536=((IkReal(1.00000000000000))*(r10));
IkReal x537=((r22)*(sj5));
IkReal x538=((cj5)*(x533));
IkReal x539=((cj5)*(x532));
gconst51=IKsign(((((r20)*(sj6)*(x535)))+(((IkReal(-1.00000000000000))*(sj6)*(x536)*(x537)))+(((x534)*(x539)))+(((x534)*(x538)))+(((IkReal(-1.00000000000000))*(r21)*(x536)*(x538)))+(((IkReal(-1.00000000000000))*(r21)*(x536)*(x539)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x537)))+(((cj6)*(r21)*(x535)))));
IkReal x540=(cj6)*(cj6);
IkReal x541=(sj6)*(sj6);
IkReal x542=((r11)*(r20));
IkReal x543=((r12)*(sj5));
IkReal x544=((IkReal(1.00000000000000))*(r10));
IkReal x545=((r22)*(sj5));
IkReal x546=((cj5)*(x541));
IkReal x547=((cj5)*(x540));
dummyeval[0]=((((x542)*(x547)))+(((x542)*(x546)))+(((r20)*(sj6)*(x543)))+(((IkReal(-1.00000000000000))*(r21)*(x544)*(x547)))+(((IkReal(-1.00000000000000))*(r21)*(x544)*(x546)))+(((IkReal(-1.00000000000000))*(sj6)*(x544)*(x545)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x545)))+(((cj6)*(r21)*(x543))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst52;
IkReal x548=(r20)*(r20);
IkReal x549=(cj5)*(cj5);
IkReal x550=(sj6)*(sj6);
IkReal x551=(cj6)*(cj6);
IkReal x552=(r21)*(r21);
IkReal x553=((cj6)*(r20));
IkReal x554=((IkReal(2.00000000000000))*(r21)*(sj6));
IkReal x555=((cj5)*(r22)*(sj5));
gconst52=IKsign(((((x548)*(x550)))+(((x554)*(x555)))+(((x549)*(x550)*(x552)))+(((IkReal(-2.00000000000000))*(x553)*(x555)))+(((x551)*(x552)))+(((x548)*(x549)*(x551)))+(((IkReal(-1.00000000000000))*(x549)*(x553)*(x554)))+(((x553)*(x554)))+((((r22)*(r22))*((sj5)*(sj5))))));
IkReal x556=(r20)*(r20);
IkReal x557=(cj5)*(cj5);
IkReal x558=(sj6)*(sj6);
IkReal x559=(cj6)*(cj6);
IkReal x560=(r21)*(r21);
IkReal x561=((cj6)*(r20));
IkReal x562=((IkReal(2.00000000000000))*(r21)*(sj6));
IkReal x563=((cj5)*(r22)*(sj5));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x557)*(x561)*(x562)))+(((x562)*(x563)))+(((x561)*(x562)))+(((x557)*(x558)*(x560)))+(((IkReal(-2.00000000000000))*(x561)*(x563)))+(((x556)*(x558)))+(((x556)*(x557)*(x559)))+((((r22)*(r22))*((sj5)*(sj5))))+(((x559)*(x560))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x564=((IkReal(1.00000000000000))*(r20));
if( IKabs(((gconst52)*(((((IkReal(-1.00000000000000))*(cj5)*(cj6)*(x564)))+(((cj5)*(r21)*(sj6)))+(((r22)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst52)*(((((IkReal(-1.00000000000000))*(sj6)*(x564)))+(((IkReal(-1.00000000000000))*(cj6)*(r21))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst52)*(((((IkReal(-1.00000000000000))*(cj5)*(cj6)*(x564)))+(((cj5)*(r21)*(sj6)))+(((r22)*(sj5)))))), ((gconst52)*(((((IkReal(-1.00000000000000))*(sj6)*(x564)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x565=IKsin(j4);
IkReal x566=IKcos(j4);
IkReal x567=((IkReal(1.00000000000000))*(r00));
IkReal x568=((cj5)*(r01));
IkReal x569=((cj5)*(r11));
IkReal x570=((IkReal(1.00000000000000))*(cj5));
IkReal x571=((cj5)*(r21));
IkReal x572=((sj5)*(x565));
IkReal x573=((cj6)*(x565));
IkReal x574=((sj6)*(x566));
IkReal x575=((sj6)*(x565));
IkReal x576=((sj5)*(x566));
IkReal x577=((cj6)*(x566));
evalcond[0]=((IkReal(-1.00000000000000))+(((x571)*(x575)))+(((IkReal(-1.00000000000000))*(r20)*(x574)))+(((IkReal(-1.00000000000000))*(r21)*(x577)))+(((IkReal(-1.00000000000000))*(r20)*(x570)*(x573)))+(((r22)*(x572))));
evalcond[1]=((((x571)*(x574)))+(((r20)*(x575)))+(((r21)*(x573)))+(((IkReal(-1.00000000000000))*(r20)*(x570)*(x577)))+(((r22)*(x576))));
evalcond[2]=((((r02)*(x572)))+(((IkReal(-1.00000000000000))*(x567)*(x574)))+(((x568)*(x575)))+(((IkReal(-1.00000000000000))*(cj5)*(x567)*(x573)))+(((IkReal(-1.00000000000000))*(r01)*(x577))));
evalcond[3]=((((r12)*(x572)))+(((IkReal(-1.00000000000000))*(r11)*(x577)))+(((IkReal(-1.00000000000000))*(r10)*(x570)*(x573)))+(((x569)*(x575)))+(((IkReal(-1.00000000000000))*(r10)*(x574))));
evalcond[4]=((((r01)*(x573)))+(((r00)*(x575)))+(((r02)*(x576)))+(((x568)*(x574)))+(((IkReal(-1.00000000000000))*(cj5)*(x567)*(x577)))+(((IkReal(-1.00000000000000))*(cj3))));
evalcond[5]=((((r12)*(x576)))+(sj3)+(((IkReal(-1.00000000000000))*(r10)*(x570)*(x577)))+(((x569)*(x574)))+(((r10)*(x575)))+(((r11)*(x573))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x578=((IkReal(1.00000000000000))*(sj3));
if( IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(cj5)*(cj6)*(r20)*(x578)))+(((cj5)*(r21)*(sj3)*(sj6)))+(((r22)*(sj3)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst51)*(((((IkReal(-1.00000000000000))*(r20)*(sj6)*(x578)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x578))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst51)*(((((IkReal(-1.00000000000000))*(cj5)*(cj6)*(r20)*(x578)))+(((cj5)*(r21)*(sj3)*(sj6)))+(((r22)*(sj3)*(sj5)))))), ((gconst51)*(((((IkReal(-1.00000000000000))*(r20)*(sj6)*(x578)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x578)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x579=IKsin(j4);
IkReal x580=IKcos(j4);
IkReal x581=((IkReal(1.00000000000000))*(r00));
IkReal x582=((cj5)*(r01));
IkReal x583=((cj5)*(r11));
IkReal x584=((IkReal(1.00000000000000))*(cj5));
IkReal x585=((cj5)*(r21));
IkReal x586=((sj5)*(x579));
IkReal x587=((cj6)*(x579));
IkReal x588=((sj6)*(x580));
IkReal x589=((sj6)*(x579));
IkReal x590=((sj5)*(x580));
IkReal x591=((cj6)*(x580));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r20)*(x584)*(x587)))+(((IkReal(-1.00000000000000))*(r20)*(x588)))+(((x585)*(x589)))+(((IkReal(-1.00000000000000))*(r21)*(x591)))+(((r22)*(x586))));
evalcond[1]=((((r20)*(x589)))+(((r22)*(x590)))+(((x585)*(x588)))+(((r21)*(x587)))+(((IkReal(-1.00000000000000))*(r20)*(x584)*(x591))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(x581)*(x587)))+(((x582)*(x589)))+(((r02)*(x586)))+(((IkReal(-1.00000000000000))*(r01)*(x591)))+(((IkReal(-1.00000000000000))*(x581)*(x588))));
evalcond[3]=((((x583)*(x589)))+(((r12)*(x586)))+(((IkReal(-1.00000000000000))*(r10)*(x584)*(x587)))+(((IkReal(-1.00000000000000))*(r11)*(x591)))+(((IkReal(-1.00000000000000))*(r10)*(x588))));
evalcond[4]=((((x582)*(x588)))+(((IkReal(-1.00000000000000))*(cj5)*(x581)*(x591)))+(((r02)*(x590)))+(((r01)*(x587)))+(((r00)*(x589)))+(((IkReal(-1.00000000000000))*(cj3))));
evalcond[5]=((((x583)*(x588)))+(sj3)+(((r11)*(x587)))+(((r10)*(x589)))+(((IkReal(-1.00000000000000))*(r10)*(x584)*(x591)))+(((r12)*(x590))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x592=((IkReal(0.000500000000000000))*(cj6));
IkReal x593=((IkReal(0.390000000000000))*(sj5));
IkReal x594=((cj6)*(r20));
IkReal x595=((IkReal(0.000500000000000000))*(sj6));
IkReal x596=((cj5)*(r22));
IkReal x597=((r21)*(sj6));
IkReal x598=((IkReal(0.390000000000000))*(cj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj5)*(x597)))+(x596)+(((sj5)*(x594))));
evalcond[2]=((IkReal(0.00200000000000000))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(x593)*(x597)))+(((r21)*(x592)))+(((r20)*(x595)))+(((x593)*(x594)))+(((IkReal(0.390000000000000))*(x596))));
evalcond[3]=((((r01)*(x592)))+(((cj6)*(r00)*(x593)))+(((r00)*(x595)))+(((IkReal(-1.00000000000000))*(px)))+(((r02)*(x598)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x593))));
evalcond[4]=((IkReal(-0.400000000000000))+(((cj6)*(r10)*(x593)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x593)))+(((IkReal(-1.00000000000000))*(py)))+(((r11)*(x592)))+(((r12)*(x598)))+(((r10)*(x595))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x599=((IkReal(1.00000000000000))*(sj5));
if( IKabs(((((cj6)*(r00)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x599)))+(((cj5)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj5)*(r12)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x599)))+(((r11)*(sj5)*(sj6))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj6)*(r00)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x599)))+(((cj5)*(r02)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj5)*(r12)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x599)))+(((r11)*(sj5)*(sj6)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((cj6)*(r00)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x599)))+(((cj5)*(r02)))), ((((IkReal(-1.00000000000000))*(cj5)*(r12)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x599)))+(((r11)*(sj5)*(sj6)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[2];
IkReal x600=((cj6)*(sj5));
IkReal x601=((IkReal(1.00000000000000))*(sj5)*(sj6));
evalcond[0]=((((r00)*(x600)))+(((IkReal(-1.00000000000000))*(r01)*(x601)))+(((IkReal(-1.00000000000000))*(IKsin(j3))))+(((cj5)*(r02))));
evalcond[1]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(r11)*(x601)))+(IKcos(j3))+(((r10)*(x600))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst55;
IkReal x602=(cj6)*(cj6);
IkReal x603=(sj6)*(sj6);
IkReal x604=((r01)*(r20));
IkReal x605=((r02)*(sj5));
IkReal x606=((cj5)*(x603));
IkReal x607=((IkReal(1.00000000000000))*(r22)*(sj5));
IkReal x608=((IkReal(1.00000000000000))*(r00)*(r21));
IkReal x609=((cj5)*(x602));
gconst55=IKsign(((((IkReal(-1.00000000000000))*(x608)*(x609)))+(((r20)*(sj6)*(x605)))+(((x604)*(x609)))+(((x604)*(x606)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x607)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x607)))+(((IkReal(-1.00000000000000))*(x606)*(x608)))+(((cj6)*(r21)*(x605)))));
IkReal x610=(cj6)*(cj6);
IkReal x611=(sj6)*(sj6);
IkReal x612=((r01)*(r20));
IkReal x613=((r02)*(sj5));
IkReal x614=((cj5)*(x611));
IkReal x615=((IkReal(1.00000000000000))*(r22)*(sj5));
IkReal x616=((IkReal(1.00000000000000))*(r00)*(r21));
IkReal x617=((cj5)*(x610));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x614)*(x616)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x615)))+(((r20)*(sj6)*(x613)))+(((x612)*(x614)))+(((x612)*(x617)))+(((cj6)*(r21)*(x613)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x615)))+(((IkReal(-1.00000000000000))*(x616)*(x617))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst56;
IkReal x618=(cj6)*(cj6);
IkReal x619=(sj6)*(sj6);
IkReal x620=((r11)*(r20));
IkReal x621=((r12)*(sj5));
IkReal x622=((IkReal(1.00000000000000))*(r10));
IkReal x623=((r22)*(sj5));
IkReal x624=((cj5)*(x619));
IkReal x625=((cj5)*(x618));
gconst56=IKsign(((((cj6)*(r21)*(x621)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x623)))+(((IkReal(-1.00000000000000))*(sj6)*(x622)*(x623)))+(((r20)*(sj6)*(x621)))+(((IkReal(-1.00000000000000))*(r21)*(x622)*(x625)))+(((IkReal(-1.00000000000000))*(r21)*(x622)*(x624)))+(((x620)*(x624)))+(((x620)*(x625)))));
IkReal x626=(cj6)*(cj6);
IkReal x627=(sj6)*(sj6);
IkReal x628=((r11)*(r20));
IkReal x629=((r12)*(sj5));
IkReal x630=((IkReal(1.00000000000000))*(r10));
IkReal x631=((r22)*(sj5));
IkReal x632=((cj5)*(x627));
IkReal x633=((cj5)*(x626));
dummyeval[0]=((((x628)*(x633)))+(((x628)*(x632)))+(((cj6)*(r21)*(x629)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x631)))+(((IkReal(-1.00000000000000))*(sj6)*(x630)*(x631)))+(((IkReal(-1.00000000000000))*(r21)*(x630)*(x632)))+(((IkReal(-1.00000000000000))*(r21)*(x630)*(x633)))+(((r20)*(sj6)*(x629))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x634=((IkReal(1.00000000000000))*(sj3));
if( IKabs(((gconst56)*(((((cj5)*(r21)*(sj3)*(sj6)))+(((r22)*(sj3)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(cj6)*(r20)*(x634))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst56)*(((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x634)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x634))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst56)*(((((cj5)*(r21)*(sj3)*(sj6)))+(((r22)*(sj3)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(cj6)*(r20)*(x634)))))), ((gconst56)*(((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x634)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x634)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x635=IKsin(j4);
IkReal x636=IKcos(j4);
IkReal x637=((IkReal(1.00000000000000))*(r00));
IkReal x638=((cj5)*(r01));
IkReal x639=((cj5)*(r11));
IkReal x640=((IkReal(1.00000000000000))*(cj5));
IkReal x641=((cj5)*(r21));
IkReal x642=((sj5)*(x635));
IkReal x643=((cj6)*(x635));
IkReal x644=((sj6)*(x636));
IkReal x645=((sj6)*(x635));
IkReal x646=((sj5)*(x636));
IkReal x647=((cj6)*(x636));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r20)*(x640)*(x643)))+(((x641)*(x645)))+(((IkReal(-1.00000000000000))*(r20)*(x644)))+(((r22)*(x642)))+(((IkReal(-1.00000000000000))*(r21)*(x647))));
evalcond[1]=((((r20)*(x645)))+(((IkReal(-1.00000000000000))*(r20)*(x640)*(x647)))+(((x641)*(x644)))+(((r21)*(x643)))+(((r22)*(x646))));
evalcond[2]=((((x638)*(x645)))+(((r02)*(x642)))+(((IkReal(-1.00000000000000))*(x637)*(x644)))+(((IkReal(-1.00000000000000))*(cj5)*(x637)*(x643)))+(((IkReal(-1.00000000000000))*(r01)*(x647))));
evalcond[3]=((((x639)*(x645)))+(((IkReal(-1.00000000000000))*(r10)*(x644)))+(((IkReal(-1.00000000000000))*(r10)*(x640)*(x643)))+(((r12)*(x642)))+(((IkReal(-1.00000000000000))*(r11)*(x647))));
evalcond[4]=((((x638)*(x644)))+(cj3)+(((r02)*(x646)))+(((r01)*(x643)))+(((r00)*(x645)))+(((IkReal(-1.00000000000000))*(cj5)*(x637)*(x647))));
evalcond[5]=((sj3)+(((x639)*(x644)))+(((IkReal(-1.00000000000000))*(r10)*(x640)*(x647)))+(((r10)*(x645)))+(((r12)*(x646)))+(((r11)*(x643))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x648=((cj3)*(r21));
IkReal x649=((IkReal(1.00000000000000))*(cj6));
IkReal x650=((cj3)*(r20));
if( IKabs(((gconst55)*(((((cj3)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x649)*(x650)))+(((cj5)*(sj6)*(x648))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst55)*(((((IkReal(-1.00000000000000))*(sj6)*(x650)))+(((IkReal(-1.00000000000000))*(x648)*(x649))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst55)*(((((cj3)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x649)*(x650)))+(((cj5)*(sj6)*(x648)))))), ((gconst55)*(((((IkReal(-1.00000000000000))*(sj6)*(x650)))+(((IkReal(-1.00000000000000))*(x648)*(x649)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x651=IKsin(j4);
IkReal x652=IKcos(j4);
IkReal x653=((IkReal(1.00000000000000))*(r00));
IkReal x654=((cj5)*(r01));
IkReal x655=((cj5)*(r11));
IkReal x656=((IkReal(1.00000000000000))*(cj5));
IkReal x657=((cj5)*(r21));
IkReal x658=((sj5)*(x651));
IkReal x659=((cj6)*(x651));
IkReal x660=((sj6)*(x652));
IkReal x661=((sj6)*(x651));
IkReal x662=((sj5)*(x652));
IkReal x663=((cj6)*(x652));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r21)*(x663)))+(((IkReal(-1.00000000000000))*(r20)*(x656)*(x659)))+(((x657)*(x661)))+(((IkReal(-1.00000000000000))*(r20)*(x660)))+(((r22)*(x658))));
evalcond[1]=((((r20)*(x661)))+(((x657)*(x660)))+(((r22)*(x662)))+(((r21)*(x659)))+(((IkReal(-1.00000000000000))*(r20)*(x656)*(x663))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(x653)*(x659)))+(((r02)*(x658)))+(((x654)*(x661)))+(((IkReal(-1.00000000000000))*(x653)*(x660)))+(((IkReal(-1.00000000000000))*(r01)*(x663))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x656)*(x659)))+(((IkReal(-1.00000000000000))*(r10)*(x660)))+(((IkReal(-1.00000000000000))*(r11)*(x663)))+(((r12)*(x658)))+(((x655)*(x661))));
evalcond[4]=((((r00)*(x661)))+(cj3)+(((IkReal(-1.00000000000000))*(cj5)*(x653)*(x663)))+(((r02)*(x662)))+(((x654)*(x660)))+(((r01)*(x659))));
evalcond[5]=((sj3)+(((IkReal(-1.00000000000000))*(r10)*(x656)*(x663)))+(((r12)*(x662)))+(((r11)*(x659)))+(((x655)*(x660)))+(((r10)*(x661))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x664=((IkReal(1.00000000000000))*(cj5));
IkReal x665=((sj5)*(sj6));
IkReal x666=((IkReal(1.00000000000000))*(cj6)*(sj5));
if( IKabs(((((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r20)*(x666)))+(((IkReal(-1.00000000000000))*(r22)*(x664)))+(((r21)*(x665))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r10)*(x666)))+(((r11)*(x665)))+(((IkReal(-1.00000000000000))*(r12)*(x664))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r20)*(x666)))+(((IkReal(-1.00000000000000))*(r22)*(x664)))+(((r21)*(x665)))))))+IKsqr(((((IkReal(-1.00000000000000))*(r10)*(x666)))+(((r11)*(x665)))+(((IkReal(-1.00000000000000))*(r12)*(x664)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r20)*(x666)))+(((IkReal(-1.00000000000000))*(r22)*(x664)))+(((r21)*(x665)))))), ((((IkReal(-1.00000000000000))*(r10)*(x666)))+(((r11)*(x665)))+(((IkReal(-1.00000000000000))*(r12)*(x664)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x667=IKsin(j3);
IkReal x668=((cj6)*(sj5));
IkReal x669=((IkReal(1.00000000000000))*(sj5)*(sj6));
evalcond[0]=((((cj5)*(r22)))+(((r20)*(x668)))+(((IkReal(-1.00000000000000))*(r21)*(x669)))+(((sj2)*(x667))));
evalcond[1]=((((r00)*(x668)))+(((cj2)*(x667)))+(((IkReal(-1.00000000000000))*(r01)*(x669)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(r11)*(x669)))+(IKcos(j3))+(((r10)*(x668))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst47;
IkReal x670=(r11)*(r11);
IkReal x671=(cj5)*(cj5);
IkReal x672=(cj6)*(cj6);
IkReal x673=(r10)*(r10);
IkReal x674=(sj6)*(sj6);
IkReal x675=((IkReal(2.00000000000000))*(cj5)*(r12)*(sj5));
IkReal x676=((IkReal(2.00000000000000))*(cj6)*(r10)*(r11)*(sj6));
gconst47=IKsign(((((x673)*(x674)))+(((x671)*(x672)*(x673)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x675)))+(((r11)*(sj6)*(x675)))+(((x670)*(x672)))+(((x670)*(x671)*(x674)))+((((r12)*(r12))*((sj5)*(sj5))))+(x676)+(((IkReal(-1.00000000000000))*(x671)*(x676)))));
IkReal x677=(r11)*(r11);
IkReal x678=(cj5)*(cj5);
IkReal x679=(cj6)*(cj6);
IkReal x680=(r10)*(r10);
IkReal x681=(sj6)*(sj6);
IkReal x682=x675;
IkReal x683=x676;
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj6)*(r10)*(x682)))+(((x677)*(x679)))+(((IkReal(-1.00000000000000))*(x678)*(x683)))+((((r12)*(r12))*((sj5)*(sj5))))+(((r11)*(sj6)*(x682)))+(((x678)*(x679)*(x680)))+(((x680)*(x681)))+(x683)+(((x677)*(x678)*(x681))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst48;
IkReal x684=(cj5)*(cj5);
IkReal x685=(sj6)*(sj6);
IkReal x686=(cj6)*(cj6);
IkReal x687=((IkReal(1.00000000000000))*(r00));
IkReal x688=((IkReal(1.00000000000000))*(r12));
IkReal x689=((cj6)*(sj6));
IkReal x690=((IkReal(1.00000000000000))*(r01));
IkReal x691=((cj5)*(sj5));
IkReal x692=((r10)*(x684));
IkReal x693=((r11)*(x684));
gconst48=IKsign(((((IkReal(-1.00000000000000))*(r10)*(x685)*(x687)))+(((cj6)*(r00)*(r12)*(x691)))+(((IkReal(-1.00000000000000))*(r10)*(x689)*(x690)))+(((IkReal(-1.00000000000000))*(x686)*(x687)*(x692)))+(((IkReal(-1.00000000000000))*(r11)*(x687)*(x689)))+(((r00)*(x689)*(x693)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(sj6)*(x691)))+(((IkReal(-1.00000000000000))*(x685)*(x690)*(x693)))+(((cj6)*(r02)*(r10)*(x691)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x688)*(x691)))+(((r01)*(x689)*(x692)))+(((IkReal(-1.00000000000000))*(r02)*(x688)*((sj5)*(sj5))))+(((IkReal(-1.00000000000000))*(r11)*(x686)*(x690)))));
IkReal x694=(cj5)*(cj5);
IkReal x695=(sj6)*(sj6);
IkReal x696=(cj6)*(cj6);
IkReal x697=((IkReal(1.00000000000000))*(r00));
IkReal x698=((IkReal(1.00000000000000))*(r12));
IkReal x699=((cj6)*(sj6));
IkReal x700=((IkReal(1.00000000000000))*(r01));
IkReal x701=((cj5)*(sj5));
IkReal x702=((r10)*(x694));
IkReal x703=((r11)*(x694));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r02)*(x698)*((sj5)*(sj5))))+(((IkReal(-1.00000000000000))*(x695)*(x700)*(x703)))+(((cj6)*(r00)*(r12)*(x701)))+(((IkReal(-1.00000000000000))*(x696)*(x697)*(x702)))+(((IkReal(-1.00000000000000))*(r11)*(x696)*(x700)))+(((IkReal(-1.00000000000000))*(r02)*(r11)*(sj6)*(x701)))+(((r00)*(x699)*(x703)))+(((cj6)*(r02)*(r10)*(x701)))+(((IkReal(-1.00000000000000))*(r11)*(x697)*(x699)))+(((r01)*(x699)*(x702)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x698)*(x701)))+(((IkReal(-1.00000000000000))*(r10)*(x699)*(x700)))+(((IkReal(-1.00000000000000))*(r10)*(x695)*(x697))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x704=((r00)*(sj3));
IkReal x705=((cj5)*(cj6));
IkReal x706=((r01)*(sj3));
IkReal x707=((cj5)*(sj6));
IkReal x708=((r11)*(sj2));
IkReal x709=((IkReal(1.00000000000000))*(r10)*(sj2));
if( IKabs(((gconst48)*(((((x707)*(x708)))+(((r12)*(sj2)*(sj5)))+(((IkReal(-1.00000000000000))*(x705)*(x709)))+(((cj6)*(x706)))+(((sj6)*(x704))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst48)*(((((x706)*(x707)))+(((IkReal(-1.00000000000000))*(x704)*(x705)))+(((r02)*(sj3)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(x708)))+(((IkReal(-1.00000000000000))*(sj6)*(x709))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst48)*(((((x707)*(x708)))+(((r12)*(sj2)*(sj5)))+(((IkReal(-1.00000000000000))*(x705)*(x709)))+(((cj6)*(x706)))+(((sj6)*(x704)))))), ((gconst48)*(((((x706)*(x707)))+(((IkReal(-1.00000000000000))*(x704)*(x705)))+(((r02)*(sj3)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(x708)))+(((IkReal(-1.00000000000000))*(sj6)*(x709)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x710=IKsin(j4);
IkReal x711=IKcos(j4);
IkReal x712=((IkReal(1.00000000000000))*(r00));
IkReal x713=((cj5)*(r01));
IkReal x714=((cj5)*(r11));
IkReal x715=((IkReal(1.00000000000000))*(cj3));
IkReal x716=((IkReal(1.00000000000000))*(cj5));
IkReal x717=((cj5)*(r21));
IkReal x718=((sj5)*(x710));
IkReal x719=((cj6)*(x710));
IkReal x720=((sj6)*(x711));
IkReal x721=((sj6)*(x710));
IkReal x722=((sj5)*(x711));
IkReal x723=((cj6)*(x711));
evalcond[0]=((((r22)*(x718)))+(((IkReal(-1.00000000000000))*(r21)*(x723)))+(((IkReal(-1.00000000000000))*(r20)*(x720)))+(((x717)*(x721)))+(((IkReal(-1.00000000000000))*(r20)*(x716)*(x719)))+(((IkReal(-1.00000000000000))*(cj2))));
evalcond[1]=((((r20)*(x721)))+(((x717)*(x720)))+(((r21)*(x719)))+(((r22)*(x722)))+(((IkReal(-1.00000000000000))*(sj2)*(x715)))+(((IkReal(-1.00000000000000))*(r20)*(x716)*(x723))));
evalcond[2]=((((x713)*(x721)))+(sj2)+(((IkReal(-1.00000000000000))*(cj5)*(x712)*(x719)))+(((IkReal(-1.00000000000000))*(r01)*(x723)))+(((r02)*(x718)))+(((IkReal(-1.00000000000000))*(x712)*(x720))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x716)*(x719)))+(((IkReal(-1.00000000000000))*(r11)*(x723)))+(((r12)*(x718)))+(((IkReal(-1.00000000000000))*(r10)*(x720)))+(((x714)*(x721))));
evalcond[4]=((((x713)*(x720)))+(((r01)*(x719)))+(((IkReal(-1.00000000000000))*(cj5)*(x712)*(x723)))+(((IkReal(-1.00000000000000))*(cj2)*(x715)))+(((r00)*(x721)))+(((r02)*(x722))));
evalcond[5]=((((r11)*(x719)))+(((r10)*(x721)))+(sj3)+(((IkReal(-1.00000000000000))*(r10)*(x716)*(x723)))+(((r12)*(x722)))+(((x714)*(x720))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x724=((IkReal(1.00000000000000))*(sj3));
if( IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(cj6)*(r11)*(x724)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x724))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst47)*(((((IkReal(-1.00000000000000))*(cj5)*(r11)*(sj6)*(x724)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)*(x724)))+(((cj5)*(cj6)*(r10)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst47)*(((((IkReal(-1.00000000000000))*(cj6)*(r11)*(x724)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x724)))))), ((gconst47)*(((((IkReal(-1.00000000000000))*(cj5)*(r11)*(sj6)*(x724)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)*(x724)))+(((cj5)*(cj6)*(r10)*(sj3)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x725=IKsin(j4);
IkReal x726=IKcos(j4);
IkReal x727=((IkReal(1.00000000000000))*(r00));
IkReal x728=((cj5)*(r01));
IkReal x729=((cj5)*(r11));
IkReal x730=((IkReal(1.00000000000000))*(cj3));
IkReal x731=((IkReal(1.00000000000000))*(cj5));
IkReal x732=((cj5)*(r21));
IkReal x733=((sj5)*(x725));
IkReal x734=((cj6)*(x725));
IkReal x735=((sj6)*(x726));
IkReal x736=((sj6)*(x725));
IkReal x737=((sj5)*(x726));
IkReal x738=((cj6)*(x726));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x735)))+(((IkReal(-1.00000000000000))*(r20)*(x731)*(x734)))+(((r22)*(x733)))+(((x732)*(x736)))+(((IkReal(-1.00000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(r21)*(x738))));
evalcond[1]=((((r20)*(x736)))+(((IkReal(-1.00000000000000))*(r20)*(x731)*(x738)))+(((IkReal(-1.00000000000000))*(sj2)*(x730)))+(((r22)*(x737)))+(((r21)*(x734)))+(((x732)*(x735))));
evalcond[2]=((sj2)+(((IkReal(-1.00000000000000))*(x727)*(x735)))+(((x728)*(x736)))+(((IkReal(-1.00000000000000))*(cj5)*(x727)*(x734)))+(((IkReal(-1.00000000000000))*(r01)*(x738)))+(((r02)*(x733))));
evalcond[3]=((((r12)*(x733)))+(((IkReal(-1.00000000000000))*(r11)*(x738)))+(((x729)*(x736)))+(((IkReal(-1.00000000000000))*(r10)*(x731)*(x734)))+(((IkReal(-1.00000000000000))*(r10)*(x735))));
evalcond[4]=((((x728)*(x735)))+(((IkReal(-1.00000000000000))*(cj5)*(x727)*(x738)))+(((IkReal(-1.00000000000000))*(cj2)*(x730)))+(((r00)*(x736)))+(((r01)*(x734)))+(((r02)*(x737))));
evalcond[5]=((((r12)*(x737)))+(((r10)*(x736)))+(sj3)+(((x729)*(x735)))+(((IkReal(-1.00000000000000))*(r10)*(x731)*(x738)))+(((r11)*(x734))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x739=((cj2)*(cj6));
IkReal x740=((IkReal(1.00000000000000))*(r11));
IkReal x741=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((gconst46)*(((((IkReal(-1.00000000000000))*(x739)*(x740)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x741))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst46)*(((((IkReal(-1.00000000000000))*(r12)*(sj5)*(x741)))+(((IkReal(-1.00000000000000))*(cj2)*(cj5)*(sj6)*(x740)))+(((cj5)*(r10)*(x739))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst46)*(((((IkReal(-1.00000000000000))*(x739)*(x740)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x741)))))), ((gconst46)*(((((IkReal(-1.00000000000000))*(r12)*(sj5)*(x741)))+(((IkReal(-1.00000000000000))*(cj2)*(cj5)*(sj6)*(x740)))+(((cj5)*(r10)*(x739)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x742=IKsin(j4);
IkReal x743=IKcos(j4);
IkReal x744=((IkReal(1.00000000000000))*(cj6));
IkReal x745=((sj5)*(x742));
IkReal x746=((cj5)*(x742));
IkReal x747=((IkReal(1.00000000000000))*(sj6)*(x743));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x747)))+(((IkReal(-1.00000000000000))*(r20)*(x744)*(x746)))+(((r22)*(x745)))+(((IkReal(-1.00000000000000))*(r21)*(x743)*(x744)))+(((r21)*(sj6)*(x746)))+(((IkReal(-1.00000000000000))*(cj2))));
evalcond[1]=((((r02)*(x745)))+(sj2)+(((IkReal(-1.00000000000000))*(r00)*(x744)*(x746)))+(((IkReal(-1.00000000000000))*(r00)*(x747)))+(((r01)*(sj6)*(x746)))+(((IkReal(-1.00000000000000))*(r01)*(x743)*(x744))));
evalcond[2]=((((r11)*(sj6)*(x746)))+(((IkReal(-1.00000000000000))*(r10)*(x744)*(x746)))+(((IkReal(-1.00000000000000))*(r11)*(x743)*(x744)))+(((IkReal(-1.00000000000000))*(r10)*(x747)))+(((r12)*(x745))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x748=((r11)*(sj6));
IkReal x749=((IkReal(1.00000000000000))*(r12));
IkReal x750=((IkReal(1.00000000000000))*(sj4));
IkReal x751=((cj6)*(r10));
IkReal x752=((cj4)*(cj5));
if( IKabs(((((x751)*(x752)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x750)))+(((IkReal(-1.00000000000000))*(cj4)*(sj5)*(x749)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x750)))+(((IkReal(-1.00000000000000))*(x748)*(x752))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj5)*(x749)))+(((IkReal(-1.00000000000000))*(sj5)*(x751)))+(((sj5)*(x748))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((x751)*(x752)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x750)))+(((IkReal(-1.00000000000000))*(cj4)*(sj5)*(x749)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x750)))+(((IkReal(-1.00000000000000))*(x748)*(x752)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj5)*(x749)))+(((IkReal(-1.00000000000000))*(sj5)*(x751)))+(((sj5)*(x748)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((x751)*(x752)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x750)))+(((IkReal(-1.00000000000000))*(cj4)*(sj5)*(x749)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x750)))+(((IkReal(-1.00000000000000))*(x748)*(x752)))), ((((IkReal(-1.00000000000000))*(cj5)*(x749)))+(((IkReal(-1.00000000000000))*(sj5)*(x751)))+(((sj5)*(x748)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x753=IKsin(j3);
IkReal x754=IKcos(j3);
IkReal x755=((r11)*(sj6));
IkReal x756=((IkReal(1.00000000000000))*(sj5));
IkReal x757=((sj4)*(sj6));
IkReal x758=((cj4)*(sj5));
IkReal x759=((cj6)*(sj4));
IkReal x760=((cj4)*(cj5));
IkReal x761=((r01)*(sj6));
IkReal x762=((r21)*(sj6));
IkReal x763=((cj6)*(sj5));
IkReal x764=((IkReal(1.00000000000000))*(x754));
IkReal x765=((IkReal(1.00000000000000))*(cj6)*(x760));
evalcond[0]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(x756)*(x762)))+(((r20)*(x763)))+(((sj2)*(x753))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x756)*(x761)))+(((cj2)*(x753)))+(((r00)*(x763)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((r10)*(x763)))+(((IkReal(-1.00000000000000))*(x755)*(x756)))+(x754));
evalcond[3]=((((r22)*(x758)))+(((x760)*(x762)))+(((IkReal(-1.00000000000000))*(r20)*(x765)))+(((r21)*(x759)))+(((r20)*(x757)))+(((IkReal(-1.00000000000000))*(sj2)*(x764))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(x765)))+(((r02)*(x758)))+(((IkReal(-1.00000000000000))*(cj2)*(x764)))+(((x760)*(x761)))+(((r01)*(x759)))+(((r00)*(x757))));
evalcond[5]=((((r10)*(x757)))+(((IkReal(-1.00000000000000))*(r10)*(x765)))+(((r12)*(x758)))+(((r11)*(x759)))+(x753)+(((x755)*(x760))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x766=((r10)*(sj2));
IkReal x767=((IkReal(1.00000000000000))*(sj6));
IkReal x768=((IkReal(1.00000000000000))*(sj2));
if( IKabs(((gconst45)*(((((IkReal(-1.00000000000000))*(cj6)*(r11)*(x768)))+(((IkReal(-1.00000000000000))*(x766)*(x767))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst45)*(((((IkReal(-1.00000000000000))*(cj5)*(r11)*(sj2)*(x767)))+(((cj5)*(cj6)*(x766)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)*(x768))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst45)*(((((IkReal(-1.00000000000000))*(cj6)*(r11)*(x768)))+(((IkReal(-1.00000000000000))*(x766)*(x767)))))), ((gconst45)*(((((IkReal(-1.00000000000000))*(cj5)*(r11)*(sj2)*(x767)))+(((cj5)*(cj6)*(x766)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)*(x768)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x769=IKsin(j4);
IkReal x770=IKcos(j4);
IkReal x771=((IkReal(1.00000000000000))*(cj6));
IkReal x772=((sj5)*(x769));
IkReal x773=((cj5)*(x769));
IkReal x774=((IkReal(1.00000000000000))*(sj6)*(x770));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x774)))+(((r22)*(x772)))+(((IkReal(-1.00000000000000))*(r21)*(x770)*(x771)))+(((r21)*(sj6)*(x773)))+(((IkReal(-1.00000000000000))*(r20)*(x771)*(x773)))+(((IkReal(-1.00000000000000))*(cj2))));
evalcond[1]=((sj2)+(((IkReal(-1.00000000000000))*(r00)*(x771)*(x773)))+(((IkReal(-1.00000000000000))*(r00)*(x774)))+(((r01)*(sj6)*(x773)))+(((IkReal(-1.00000000000000))*(r01)*(x770)*(x771)))+(((r02)*(x772))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r11)*(x770)*(x771)))+(((r11)*(sj6)*(x773)))+(((IkReal(-1.00000000000000))*(r10)*(x774)))+(((r12)*(x772)))+(((IkReal(-1.00000000000000))*(r10)*(x771)*(x773))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x775=((r11)*(sj6));
IkReal x776=((IkReal(1.00000000000000))*(r12));
IkReal x777=((IkReal(1.00000000000000))*(sj4));
IkReal x778=((cj6)*(r10));
IkReal x779=((cj4)*(cj5));
if( IKabs(((((IkReal(-1.00000000000000))*(r10)*(sj6)*(x777)))+(((x778)*(x779)))+(((IkReal(-1.00000000000000))*(cj4)*(sj5)*(x776)))+(((IkReal(-1.00000000000000))*(x775)*(x779)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x777))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj5)*(x776)))+(((IkReal(-1.00000000000000))*(sj5)*(x778)))+(((sj5)*(x775))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r10)*(sj6)*(x777)))+(((x778)*(x779)))+(((IkReal(-1.00000000000000))*(cj4)*(sj5)*(x776)))+(((IkReal(-1.00000000000000))*(x775)*(x779)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x777)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj5)*(x776)))+(((IkReal(-1.00000000000000))*(sj5)*(x778)))+(((sj5)*(x775)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r10)*(sj6)*(x777)))+(((x778)*(x779)))+(((IkReal(-1.00000000000000))*(cj4)*(sj5)*(x776)))+(((IkReal(-1.00000000000000))*(x775)*(x779)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x777)))), ((((IkReal(-1.00000000000000))*(cj5)*(x776)))+(((IkReal(-1.00000000000000))*(sj5)*(x778)))+(((sj5)*(x775)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x780=IKsin(j3);
IkReal x781=IKcos(j3);
IkReal x782=((r11)*(sj6));
IkReal x783=((IkReal(1.00000000000000))*(sj5));
IkReal x784=((sj4)*(sj6));
IkReal x785=((cj4)*(sj5));
IkReal x786=((cj6)*(sj4));
IkReal x787=((cj4)*(cj5));
IkReal x788=((r01)*(sj6));
IkReal x789=((r21)*(sj6));
IkReal x790=((cj6)*(sj5));
IkReal x791=((IkReal(1.00000000000000))*(x781));
IkReal x792=((IkReal(1.00000000000000))*(cj6)*(x787));
evalcond[0]=((((sj2)*(x780)))+(((cj5)*(r22)))+(((r20)*(x790)))+(((IkReal(-1.00000000000000))*(x783)*(x789))));
evalcond[1]=((((r00)*(x790)))+(((cj2)*(x780)))+(((cj5)*(r02)))+(((IkReal(-1.00000000000000))*(x783)*(x788))));
evalcond[2]=((((cj5)*(r12)))+(((r10)*(x790)))+(((IkReal(-1.00000000000000))*(x782)*(x783)))+(x781));
evalcond[3]=((((r20)*(x784)))+(((x787)*(x789)))+(((IkReal(-1.00000000000000))*(r20)*(x792)))+(((r21)*(x786)))+(((r22)*(x785)))+(((IkReal(-1.00000000000000))*(sj2)*(x791))));
evalcond[4]=((((r00)*(x784)))+(((r01)*(x786)))+(((IkReal(-1.00000000000000))*(r00)*(x792)))+(((IkReal(-1.00000000000000))*(cj2)*(x791)))+(((x787)*(x788)))+(((r02)*(x785))));
evalcond[5]=((((r10)*(x784)))+(((x782)*(x787)))+(((IkReal(-1.00000000000000))*(r10)*(x792)))+(((r11)*(x786)))+(x780)+(((r12)*(x785))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}
}
}

} else
{
IkReal x793=((IkReal(0.390000000000000))*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.400000000000000))+(((cj6)*(r00)*(x793)))+(((IkReal(0.000500000000000000))*(cj6)*(r01)))+(((IkReal(0.000500000000000000))*(r00)*(sj6)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x793)))+(((IkReal(0.390000000000000))*(cj5)*(r02))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x794=((IkReal(195.000000000000))*(sj5));
IkReal x795=((IkReal(195.000000000000))*(cj5));
IkReal x796=((IkReal(0.250000000000000))*(sj6));
IkReal x797=((IkReal(0.250000000000000))*(cj6));
if( IKabs(((((r10)*(x796)))+(((IkReal(-500.000000000000))*(py)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x794)))+(((r11)*(x797)))+(((cj6)*(r10)*(x794)))+(((r12)*(x795))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r20)*(x796)))+(((cj6)*(r20)*(x794)))+(((IkReal(-500.000000000000))*(pz)))+(((r21)*(x797)))+(((r22)*(x795)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x794))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r10)*(x796)))+(((IkReal(-500.000000000000))*(py)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x794)))+(((r11)*(x797)))+(((cj6)*(r10)*(x794)))+(((r12)*(x795)))))+IKsqr(((((r20)*(x796)))+(((cj6)*(r20)*(x794)))+(((IkReal(-500.000000000000))*(pz)))+(((r21)*(x797)))+(((r22)*(x795)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x794)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((r10)*(x796)))+(((IkReal(-500.000000000000))*(py)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x794)))+(((r11)*(x797)))+(((cj6)*(r10)*(x794)))+(((r12)*(x795)))), ((((r20)*(x796)))+(((cj6)*(r20)*(x794)))+(((IkReal(-500.000000000000))*(pz)))+(((r21)*(x797)))+(((r22)*(x795)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x794)))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x798=((IkReal(0.000500000000000000))*(cj6));
IkReal x799=((IkReal(0.000500000000000000))*(sj6));
IkReal x800=((IkReal(0.390000000000000))*(cj5));
IkReal x801=((IkReal(0.390000000000000))*(sj5)*(sj6));
IkReal x802=((IkReal(0.390000000000000))*(cj6)*(sj5));
evalcond[0]=((((r20)*(x799)))+(((IkReal(-0.00200000000000000))*(IKcos(j2))))+(((r22)*(x800)))+(((IkReal(-1.00000000000000))*(r21)*(x801)))+(((r21)*(x798)))+(((IkReal(-1.00000000000000))*(pz)))+(((r20)*(x802))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(x801)))+(((r10)*(x799)))+(((r12)*(x800)))+(((IkReal(-0.00200000000000000))*(IKsin(j2))))+(((IkReal(-1.00000000000000))*(py)))+(((r11)*(x798)))+(((r10)*(x802))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst57;
IkReal x803=(cj6)*(cj6);
IkReal x804=(sj6)*(sj6);
IkReal x805=((r01)*(r20));
IkReal x806=((r02)*(sj5));
IkReal x807=((cj5)*(x804));
IkReal x808=((IkReal(1.00000000000000))*(r22)*(sj5));
IkReal x809=((IkReal(1.00000000000000))*(r00)*(r21));
IkReal x810=((cj5)*(x803));
gconst57=IKsign(((((IkReal(-1.00000000000000))*(x807)*(x809)))+(((cj6)*(r21)*(x806)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x808)))+(((IkReal(-1.00000000000000))*(x809)*(x810)))+(((r20)*(sj6)*(x806)))+(((x805)*(x807)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x808)))+(((x805)*(x810)))));
IkReal x811=(cj6)*(cj6);
IkReal x812=(sj6)*(sj6);
IkReal x813=((r01)*(r20));
IkReal x814=((r02)*(sj5));
IkReal x815=((cj5)*(x812));
IkReal x816=((IkReal(1.00000000000000))*(r22)*(sj5));
IkReal x817=((IkReal(1.00000000000000))*(r00)*(r21));
IkReal x818=((cj5)*(x811));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x817)*(x818)))+(((x813)*(x818)))+(((x813)*(x815)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x816)))+(((IkReal(-1.00000000000000))*(x815)*(x817)))+(((cj6)*(r21)*(x814)))+(((r20)*(sj6)*(x814)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x816))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst58;
IkReal x819=(sj6)*(sj6);
IkReal x820=(cj6)*(cj6);
IkReal x821=((r01)*(r10));
IkReal x822=((IkReal(1.00000000000000))*(r00));
IkReal x823=((r02)*(sj5));
IkReal x824=((r12)*(sj5));
IkReal x825=((cj5)*(x819));
IkReal x826=((cj5)*(x820));
gconst58=IKsign(((((x821)*(x826)))+(((x821)*(x825)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x824)))+(((IkReal(-1.00000000000000))*(sj6)*(x822)*(x824)))+(((IkReal(-1.00000000000000))*(r11)*(x822)*(x826)))+(((IkReal(-1.00000000000000))*(r11)*(x822)*(x825)))+(((cj6)*(r11)*(x823)))+(((r10)*(sj6)*(x823)))));
IkReal x827=(sj6)*(sj6);
IkReal x828=(cj6)*(cj6);
IkReal x829=((r01)*(r10));
IkReal x830=((IkReal(1.00000000000000))*(r00));
IkReal x831=((r02)*(sj5));
IkReal x832=((r12)*(sj5));
IkReal x833=((cj5)*(x827));
IkReal x834=((cj5)*(x828));
dummyeval[0]=((((r10)*(sj6)*(x831)))+(((IkReal(-1.00000000000000))*(r11)*(x830)*(x834)))+(((IkReal(-1.00000000000000))*(r11)*(x830)*(x833)))+(((IkReal(-1.00000000000000))*(sj6)*(x830)*(x832)))+(((x829)*(x834)))+(((x829)*(x833)))+(((cj6)*(r11)*(x831)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x832))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x835=((IkReal(0.000500000000000000))*(cj6));
IkReal x836=((IkReal(0.000500000000000000))*(sj6));
IkReal x837=((sj5)*(sj6));
IkReal x838=((cj5)*(r12));
IkReal x839=((IkReal(0.390000000000000))*(cj5));
IkReal x840=((IkReal(0.390000000000000))*(cj6)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((cj6)*(r10)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x837)))+(x838));
evalcond[2]=((((r22)*(x839)))+(((IkReal(-0.390000000000000))*(r21)*(x837)))+(((r20)*(x840)))+(((r20)*(x836)))+(((IkReal(-1.00000000000000))*(pz)))+(((r21)*(x835))));
evalcond[3]=((IkReal(-0.400000000000000))+(((IkReal(-0.390000000000000))*(r01)*(x837)))+(((r02)*(x839)))+(((r00)*(x836)))+(((r00)*(x840)))+(((IkReal(-1.00000000000000))*(px)))+(((r01)*(x835))));
evalcond[4]=((IkReal(-0.00200000000000000))+(((IkReal(0.390000000000000))*(x838)))+(((r10)*(x836)))+(((IkReal(-1.00000000000000))*(py)))+(((r10)*(x840)))+(((r11)*(x835)))+(((IkReal(-0.390000000000000))*(r11)*(x837))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x841=((sj5)*(sj6));
IkReal x842=((IkReal(1.00000000000000))*(cj5));
IkReal x843=((IkReal(1.00000000000000))*(cj6)*(sj5));
if( IKabs(((((IkReal(-1.00000000000000))*(r20)*(x843)))+(((r21)*(x841)))+(((IkReal(-1.00000000000000))*(r22)*(x842))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r02)*(x842)))+(((r01)*(x841)))+(((IkReal(-1.00000000000000))*(r00)*(x843))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r20)*(x843)))+(((r21)*(x841)))+(((IkReal(-1.00000000000000))*(r22)*(x842)))))+IKsqr(((((IkReal(-1.00000000000000))*(r02)*(x842)))+(((r01)*(x841)))+(((IkReal(-1.00000000000000))*(r00)*(x843)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r20)*(x843)))+(((r21)*(x841)))+(((IkReal(-1.00000000000000))*(r22)*(x842)))), ((((IkReal(-1.00000000000000))*(r02)*(x842)))+(((r01)*(x841)))+(((IkReal(-1.00000000000000))*(r00)*(x843)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[2];
IkReal x844=((cj6)*(sj5));
IkReal x845=((IkReal(1.00000000000000))*(sj5)*(sj6));
evalcond[0]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(x845)))+(((r20)*(x844)))+(IKsin(j3)));
evalcond[1]=((((r00)*(x844)))+(IKcos(j3))+(((IkReal(-1.00000000000000))*(r01)*(x845)))+(((cj5)*(r02))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst63;
IkReal x846=(sj6)*(sj6);
IkReal x847=(cj6)*(cj6);
IkReal x848=((r01)*(r10));
IkReal x849=((IkReal(1.00000000000000))*(r00));
IkReal x850=((r02)*(sj5));
IkReal x851=((r12)*(sj5));
IkReal x852=((cj5)*(x846));
IkReal x853=((cj5)*(x847));
gconst63=IKsign(((((x848)*(x853)))+(((x848)*(x852)))+(((cj6)*(r11)*(x850)))+(((IkReal(-1.00000000000000))*(r11)*(x849)*(x852)))+(((IkReal(-1.00000000000000))*(r11)*(x849)*(x853)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x851)))+(((r10)*(sj6)*(x850)))+(((IkReal(-1.00000000000000))*(sj6)*(x849)*(x851)))));
IkReal x854=(sj6)*(sj6);
IkReal x855=(cj6)*(cj6);
IkReal x856=((r01)*(r10));
IkReal x857=((IkReal(1.00000000000000))*(r00));
IkReal x858=((r02)*(sj5));
IkReal x859=((r12)*(sj5));
IkReal x860=((cj5)*(x854));
IkReal x861=((cj5)*(x855));
dummyeval[0]=((((IkReal(-1.00000000000000))*(sj6)*(x857)*(x859)))+(((cj6)*(r11)*(x858)))+(((x856)*(x860)))+(((x856)*(x861)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x859)))+(((IkReal(-1.00000000000000))*(r11)*(x857)*(x861)))+(((IkReal(-1.00000000000000))*(r11)*(x857)*(x860)))+(((r10)*(sj6)*(x858))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst64;
IkReal x862=(cj5)*(cj5);
IkReal x863=(sj6)*(sj6);
IkReal x864=(cj6)*(cj6);
IkReal x865=((r00)*(r20));
IkReal x866=((cj5)*(sj5));
IkReal x867=((r01)*(r21));
IkReal x868=((r21)*(sj6));
IkReal x869=((sj6)*(x866));
IkReal x870=((IkReal(1.00000000000000))*(cj6)*(r00));
IkReal x871=((cj6)*(r01)*(r20)*(sj6));
gconst64=IKsign(((((r01)*(r22)*(x869)))+(((x862)*(x863)*(x867)))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(r20)*(x866)))+(((x863)*(x865)))+(((r02)*(x866)*(x868)))+(((IkReal(-1.00000000000000))*(x862)*(x868)*(x870)))+(((x862)*(x864)*(x865)))+(((r02)*(r22)*((sj5)*(sj5))))+(x871)+(((cj6)*(r00)*(x868)))+(((IkReal(-1.00000000000000))*(x862)*(x871)))+(((x864)*(x867)))+(((IkReal(-1.00000000000000))*(r22)*(x866)*(x870)))));
IkReal x872=(cj5)*(cj5);
IkReal x873=(sj6)*(sj6);
IkReal x874=(cj6)*(cj6);
IkReal x875=((r00)*(r20));
IkReal x876=((cj5)*(sj5));
IkReal x877=((r01)*(r21));
IkReal x878=((r21)*(sj6));
IkReal x879=((sj6)*(x876));
IkReal x880=((IkReal(1.00000000000000))*(cj6)*(r00));
IkReal x881=x871;
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj6)*(r02)*(r20)*(x876)))+(((IkReal(-1.00000000000000))*(x872)*(x878)*(x880)))+(((x874)*(x877)))+(((IkReal(-1.00000000000000))*(r22)*(x876)*(x880)))+(((x873)*(x875)))+(((x872)*(x874)*(x875)))+(((r02)*(r22)*((sj5)*(sj5))))+(((r02)*(x876)*(x878)))+(((cj6)*(r00)*(x878)))+(x881)+(((r01)*(r22)*(x879)))+(((IkReal(-1.00000000000000))*(x872)*(x881)))+(((x872)*(x873)*(x877))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x882=((IkReal(1.00000000000000))*(sj3));
if( IKabs(((gconst64)*(((((IkReal(-1.00000000000000))*(r20)*(sj6)*(x882)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x882))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst64)*(((((IkReal(-1.00000000000000))*(r22)*(sj5)*(x882)))+(((cj5)*(cj6)*(r20)*(sj3)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(sj6)*(x882))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst64)*(((((IkReal(-1.00000000000000))*(r20)*(sj6)*(x882)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x882)))))), ((gconst64)*(((((IkReal(-1.00000000000000))*(r22)*(sj5)*(x882)))+(((cj5)*(cj6)*(r20)*(sj3)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(sj6)*(x882)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x883=IKsin(j4);
IkReal x884=IKcos(j4);
IkReal x885=((IkReal(1.00000000000000))*(r00));
IkReal x886=((cj5)*(r01));
IkReal x887=((cj5)*(r11));
IkReal x888=((IkReal(1.00000000000000))*(cj5));
IkReal x889=((cj5)*(r21));
IkReal x890=((sj5)*(x883));
IkReal x891=((cj6)*(x883));
IkReal x892=((sj6)*(x884));
IkReal x893=((sj6)*(x883));
IkReal x894=((sj5)*(x884));
IkReal x895=((cj6)*(x884));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x892)))+(((IkReal(-1.00000000000000))*(r20)*(x888)*(x891)))+(((IkReal(-1.00000000000000))*(r21)*(x895)))+(((x889)*(x893)))+(((r22)*(x890))));
evalcond[1]=((((r20)*(x893)))+(((IkReal(-1.00000000000000))*(r20)*(x888)*(x895)))+(((x889)*(x892)))+(((r21)*(x891)))+(((r22)*(x894)))+(((IkReal(-1.00000000000000))*(cj3))));
evalcond[2]=((((x886)*(x893)))+(((r02)*(x890)))+(((IkReal(-1.00000000000000))*(cj5)*(x885)*(x891)))+(((IkReal(-1.00000000000000))*(r01)*(x895)))+(((IkReal(-1.00000000000000))*(x885)*(x892))));
evalcond[3]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r11)*(x895)))+(((IkReal(-1.00000000000000))*(r10)*(x888)*(x891)))+(((IkReal(-1.00000000000000))*(r10)*(x892)))+(((r12)*(x890)))+(((x887)*(x893))));
evalcond[4]=((((x886)*(x892)))+(((r02)*(x894)))+(((IkReal(-1.00000000000000))*(cj5)*(x885)*(x895)))+(sj3)+(((r01)*(x891)))+(((r00)*(x893))));
evalcond[5]=((((r11)*(x891)))+(((r10)*(x893)))+(((IkReal(-1.00000000000000))*(r10)*(x888)*(x895)))+(((r12)*(x894)))+(((x887)*(x892))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x896=((sj3)*(sj6));
IkReal x897=((IkReal(1.00000000000000))*(r10));
IkReal x898=((cj6)*(sj3));
if( IKabs(((gconst63)*(((((r12)*(sj3)*(sj5)))+(((cj5)*(r11)*(x896)))+(((IkReal(-1.00000000000000))*(cj5)*(x897)*(x898))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst63)*(((((IkReal(-1.00000000000000))*(r11)*(x898)))+(((IkReal(-1.00000000000000))*(x896)*(x897))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst63)*(((((r12)*(sj3)*(sj5)))+(((cj5)*(r11)*(x896)))+(((IkReal(-1.00000000000000))*(cj5)*(x897)*(x898)))))), ((gconst63)*(((((IkReal(-1.00000000000000))*(r11)*(x898)))+(((IkReal(-1.00000000000000))*(x896)*(x897)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x899=IKsin(j4);
IkReal x900=IKcos(j4);
IkReal x901=((IkReal(1.00000000000000))*(r00));
IkReal x902=((cj5)*(r01));
IkReal x903=((cj5)*(r11));
IkReal x904=((IkReal(1.00000000000000))*(cj5));
IkReal x905=((cj5)*(r21));
IkReal x906=((sj5)*(x899));
IkReal x907=((cj6)*(x899));
IkReal x908=((sj6)*(x900));
IkReal x909=((sj6)*(x899));
IkReal x910=((sj5)*(x900));
IkReal x911=((cj6)*(x900));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x908)))+(((x905)*(x909)))+(((IkReal(-1.00000000000000))*(r20)*(x904)*(x907)))+(((r22)*(x906)))+(((IkReal(-1.00000000000000))*(r21)*(x911))));
evalcond[1]=((((r21)*(x907)))+(((x905)*(x908)))+(((r20)*(x909)))+(((r22)*(x910)))+(((IkReal(-1.00000000000000))*(r20)*(x904)*(x911)))+(((IkReal(-1.00000000000000))*(cj3))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x911)))+(((x902)*(x909)))+(((r02)*(x906)))+(((IkReal(-1.00000000000000))*(cj5)*(x901)*(x907)))+(((IkReal(-1.00000000000000))*(x901)*(x908))));
evalcond[3]=((IkReal(-1.00000000000000))+(((x903)*(x909)))+(((IkReal(-1.00000000000000))*(r10)*(x904)*(x907)))+(((IkReal(-1.00000000000000))*(r11)*(x911)))+(((r12)*(x906)))+(((IkReal(-1.00000000000000))*(r10)*(x908))));
evalcond[4]=((((r00)*(x909)))+(sj3)+(((r01)*(x907)))+(((x902)*(x908)))+(((r02)*(x910)))+(((IkReal(-1.00000000000000))*(cj5)*(x901)*(x911))));
evalcond[5]=((((x903)*(x908)))+(((r11)*(x907)))+(((r12)*(x910)))+(((IkReal(-1.00000000000000))*(r10)*(x904)*(x911)))+(((r10)*(x909))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x912=((IkReal(0.000500000000000000))*(cj6));
IkReal x913=((IkReal(0.000500000000000000))*(sj6));
IkReal x914=((sj5)*(sj6));
IkReal x915=((cj5)*(r12));
IkReal x916=((IkReal(0.390000000000000))*(cj5));
IkReal x917=((IkReal(0.390000000000000))*(cj6)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((cj6)*(r10)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x914)))+(x915));
evalcond[2]=((((r20)*(x913)))+(((r20)*(x917)))+(((IkReal(-1.00000000000000))*(pz)))+(((r22)*(x916)))+(((r21)*(x912)))+(((IkReal(-0.390000000000000))*(r21)*(x914))));
evalcond[3]=((IkReal(-0.400000000000000))+(((IkReal(-0.390000000000000))*(r01)*(x914)))+(((r02)*(x916)))+(((IkReal(-1.00000000000000))*(px)))+(((r01)*(x912)))+(((r00)*(x913)))+(((r00)*(x917))));
evalcond[4]=((IkReal(0.00200000000000000))+(((r10)*(x913)))+(((r10)*(x917)))+(((r11)*(x912)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.390000000000000))*(x915)))+(((IkReal(-0.390000000000000))*(r11)*(x914))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x918=((cj6)*(sj5));
IkReal x919=((sj5)*(sj6));
if( IKabs(((((cj5)*(r22)))+(((r20)*(x918)))+(((IkReal(-1.00000000000000))*(r21)*(x919))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r01)*(x919)))+(((IkReal(-1.00000000000000))*(r00)*(x918)))+(((IkReal(-1.00000000000000))*(cj5)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj5)*(r22)))+(((r20)*(x918)))+(((IkReal(-1.00000000000000))*(r21)*(x919)))))+IKsqr(((((r01)*(x919)))+(((IkReal(-1.00000000000000))*(r00)*(x918)))+(((IkReal(-1.00000000000000))*(cj5)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((cj5)*(r22)))+(((r20)*(x918)))+(((IkReal(-1.00000000000000))*(r21)*(x919)))), ((((r01)*(x919)))+(((IkReal(-1.00000000000000))*(r00)*(x918)))+(((IkReal(-1.00000000000000))*(cj5)*(r02)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[2];
IkReal x920=((cj6)*(sj5));
IkReal x921=((IkReal(1.00000000000000))*(sj5)*(sj6));
evalcond[0]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(x921)))+(((IkReal(-1.00000000000000))*(IKsin(j3))))+(((r20)*(x920))));
evalcond[1]=((IKcos(j3))+(((IkReal(-1.00000000000000))*(r01)*(x921)))+(((r00)*(x920)))+(((cj5)*(r02))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst67;
IkReal x922=(sj6)*(sj6);
IkReal x923=(cj6)*(cj6);
IkReal x924=((cj6)*(sj5));
IkReal x925=((r10)*(r21));
IkReal x926=((IkReal(1.00000000000000))*(r12));
IkReal x927=((sj5)*(sj6));
IkReal x928=((cj5)*(x923));
IkReal x929=((IkReal(1.00000000000000))*(r11)*(r20));
IkReal x930=((cj5)*(x922));
gconst67=IKsign(((((r11)*(r22)*(x924)))+(((IkReal(-1.00000000000000))*(r20)*(x926)*(x927)))+(((r10)*(r22)*(x927)))+(((IkReal(-1.00000000000000))*(r21)*(x924)*(x926)))+(((IkReal(-1.00000000000000))*(x928)*(x929)))+(((IkReal(-1.00000000000000))*(x929)*(x930)))+(((x925)*(x930)))+(((x925)*(x928)))));
IkReal x931=(sj6)*(sj6);
IkReal x932=(cj6)*(cj6);
IkReal x933=((cj6)*(sj5));
IkReal x934=((r10)*(r21));
IkReal x935=((IkReal(1.00000000000000))*(r12));
IkReal x936=((sj5)*(sj6));
IkReal x937=((cj5)*(x932));
IkReal x938=((IkReal(1.00000000000000))*(r11)*(r20));
IkReal x939=((cj5)*(x931));
dummyeval[0]=((((r11)*(r22)*(x933)))+(((IkReal(-1.00000000000000))*(r20)*(x935)*(x936)))+(((r10)*(r22)*(x936)))+(((IkReal(-1.00000000000000))*(x938)*(x939)))+(((IkReal(-1.00000000000000))*(x937)*(x938)))+(((IkReal(-1.00000000000000))*(r21)*(x933)*(x935)))+(((x934)*(x937)))+(((x934)*(x939))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst68;
IkReal x940=(sj6)*(sj6);
IkReal x941=(cj6)*(cj6);
IkReal x942=((r01)*(r10));
IkReal x943=((IkReal(1.00000000000000))*(r00));
IkReal x944=((r02)*(sj5));
IkReal x945=((r12)*(sj5));
IkReal x946=((cj5)*(x940));
IkReal x947=((cj5)*(x941));
gconst68=IKsign(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x945)))+(((IkReal(-1.00000000000000))*(r11)*(x943)*(x946)))+(((IkReal(-1.00000000000000))*(r11)*(x943)*(x947)))+(((r10)*(sj6)*(x944)))+(((cj6)*(r11)*(x944)))+(((x942)*(x947)))+(((x942)*(x946)))+(((IkReal(-1.00000000000000))*(sj6)*(x943)*(x945)))));
IkReal x948=(sj6)*(sj6);
IkReal x949=(cj6)*(cj6);
IkReal x950=((r01)*(r10));
IkReal x951=((IkReal(1.00000000000000))*(r00));
IkReal x952=((r02)*(sj5));
IkReal x953=((r12)*(sj5));
IkReal x954=((cj5)*(x948));
IkReal x955=((cj5)*(x949));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x953)))+(((r10)*(sj6)*(x952)))+(((IkReal(-1.00000000000000))*(sj6)*(x951)*(x953)))+(((IkReal(-1.00000000000000))*(r11)*(x951)*(x954)))+(((IkReal(-1.00000000000000))*(r11)*(x951)*(x955)))+(((cj6)*(r11)*(x952)))+(((x950)*(x955)))+(((x950)*(x954))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x956=((sj3)*(sj6));
IkReal x957=((IkReal(1.00000000000000))*(r10));
IkReal x958=((cj6)*(sj3));
if( IKabs(((gconst68)*(((((r12)*(sj3)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x957)*(x958)))+(((cj5)*(r11)*(x956))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst68)*(((((IkReal(-1.00000000000000))*(x956)*(x957)))+(((IkReal(-1.00000000000000))*(r11)*(x958))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst68)*(((((r12)*(sj3)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x957)*(x958)))+(((cj5)*(r11)*(x956)))))), ((gconst68)*(((((IkReal(-1.00000000000000))*(x956)*(x957)))+(((IkReal(-1.00000000000000))*(r11)*(x958)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x959=IKsin(j4);
IkReal x960=IKcos(j4);
IkReal x961=((IkReal(1.00000000000000))*(r00));
IkReal x962=((cj5)*(r01));
IkReal x963=((cj5)*(r11));
IkReal x964=((IkReal(1.00000000000000))*(cj5));
IkReal x965=((cj5)*(r21));
IkReal x966=((sj5)*(x959));
IkReal x967=((cj6)*(x959));
IkReal x968=((sj6)*(x960));
IkReal x969=((sj6)*(x959));
IkReal x970=((sj5)*(x960));
IkReal x971=((cj6)*(x960));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x968)))+(((x965)*(x969)))+(((IkReal(-1.00000000000000))*(r20)*(x964)*(x967)))+(((IkReal(-1.00000000000000))*(r21)*(x971)))+(((r22)*(x966))));
evalcond[1]=((cj3)+(((r22)*(x970)))+(((IkReal(-1.00000000000000))*(r20)*(x964)*(x971)))+(((x965)*(x968)))+(((r21)*(x967)))+(((r20)*(x969))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x961)*(x968)))+(((x962)*(x969)))+(((IkReal(-1.00000000000000))*(cj5)*(x961)*(x967)))+(((r02)*(x966)))+(((IkReal(-1.00000000000000))*(r01)*(x971))));
evalcond[3]=((IkReal(1.00000000000000))+(((x963)*(x969)))+(((IkReal(-1.00000000000000))*(r11)*(x971)))+(((r12)*(x966)))+(((IkReal(-1.00000000000000))*(r10)*(x964)*(x967)))+(((IkReal(-1.00000000000000))*(r10)*(x968))));
evalcond[4]=((sj3)+(((x962)*(x968)))+(((r00)*(x969)))+(((r01)*(x967)))+(((IkReal(-1.00000000000000))*(cj5)*(x961)*(x971)))+(((r02)*(x970))));
evalcond[5]=((((r11)*(x967)))+(((r12)*(x970)))+(((x963)*(x968)))+(((IkReal(-1.00000000000000))*(r10)*(x964)*(x971)))+(((r10)*(x969))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x972=((cj3)*(sj6));
IkReal x973=((IkReal(1.00000000000000))*(r10));
IkReal x974=((cj3)*(cj6));
if( IKabs(((gconst67)*(((((IkReal(-1.00000000000000))*(cj5)*(x973)*(x974)))+(((cj3)*(r12)*(sj5)))+(((cj5)*(r11)*(x972))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst67)*(((((IkReal(-1.00000000000000))*(x972)*(x973)))+(((IkReal(-1.00000000000000))*(r11)*(x974))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst67)*(((((IkReal(-1.00000000000000))*(cj5)*(x973)*(x974)))+(((cj3)*(r12)*(sj5)))+(((cj5)*(r11)*(x972)))))), ((gconst67)*(((((IkReal(-1.00000000000000))*(x972)*(x973)))+(((IkReal(-1.00000000000000))*(r11)*(x974)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x975=IKsin(j4);
IkReal x976=IKcos(j4);
IkReal x977=((IkReal(1.00000000000000))*(r00));
IkReal x978=((cj5)*(r01));
IkReal x979=((cj5)*(r11));
IkReal x980=((IkReal(1.00000000000000))*(cj5));
IkReal x981=((cj5)*(r21));
IkReal x982=((sj5)*(x975));
IkReal x983=((cj6)*(x975));
IkReal x984=((sj6)*(x976));
IkReal x985=((sj6)*(x975));
IkReal x986=((sj5)*(x976));
IkReal x987=((cj6)*(x976));
evalcond[0]=((((x981)*(x985)))+(((r22)*(x982)))+(((IkReal(-1.00000000000000))*(r20)*(x980)*(x983)))+(((IkReal(-1.00000000000000))*(r20)*(x984)))+(((IkReal(-1.00000000000000))*(r21)*(x987))));
evalcond[1]=((((x981)*(x984)))+(((r22)*(x986)))+(cj3)+(((IkReal(-1.00000000000000))*(r20)*(x980)*(x987)))+(((r21)*(x983)))+(((r20)*(x985))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(x977)*(x983)))+(((IkReal(-1.00000000000000))*(x977)*(x984)))+(((IkReal(-1.00000000000000))*(r01)*(x987)))+(((r02)*(x982)))+(((x978)*(x985))));
evalcond[3]=((IkReal(1.00000000000000))+(((x979)*(x985)))+(((IkReal(-1.00000000000000))*(r10)*(x980)*(x983)))+(((IkReal(-1.00000000000000))*(r11)*(x987)))+(((r12)*(x982)))+(((IkReal(-1.00000000000000))*(r10)*(x984))));
evalcond[4]=((sj3)+(((IkReal(-1.00000000000000))*(cj5)*(x977)*(x987)))+(((r00)*(x985)))+(((r01)*(x983)))+(((r02)*(x986)))+(((x978)*(x984))));
evalcond[5]=((((x979)*(x984)))+(((IkReal(-1.00000000000000))*(r10)*(x980)*(x987)))+(((r12)*(x986)))+(((r11)*(x983)))+(((r10)*(x985))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x988=((IkReal(1.00000000000000))*(sj5));
if( IKabs(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((cj5)*(r12)))+(((cj6)*(r10)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x988))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r01)*(sj5)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x988)))+(((IkReal(-1.00000000000000))*(cj5)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((cj5)*(r12)))+(((cj6)*(r10)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x988)))))))+IKsqr(((((r01)*(sj5)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x988)))+(((IkReal(-1.00000000000000))*(cj5)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((cj5)*(r12)))+(((cj6)*(r10)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x988)))))), ((((r01)*(sj5)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x988)))+(((IkReal(-1.00000000000000))*(cj5)*(r02)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x989=IKsin(j3);
IkReal x990=((cj6)*(sj5));
IkReal x991=((IkReal(1.00000000000000))*(sj5)*(sj6));
evalcond[0]=((((cj5)*(r22)))+(((r20)*(x990)))+(((IkReal(-1.00000000000000))*(r21)*(x991)))+(((sj2)*(x989))));
evalcond[1]=((((r00)*(x990)))+(IKcos(j3))+(((IkReal(-1.00000000000000))*(r01)*(x991)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(cj2)*(x989)))+(((IkReal(-1.00000000000000))*(r11)*(x991)))+(((r10)*(x990))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst59;
IkReal x992=(cj6)*(cj6);
IkReal x993=(cj5)*(cj5);
IkReal x994=(r01)*(r01);
IkReal x995=(r00)*(r00);
IkReal x996=(sj6)*(sj6);
IkReal x997=((cj6)*(r00));
IkReal x998=((IkReal(2.00000000000000))*(r01)*(sj6));
IkReal x999=((cj5)*(r02)*(sj5));
gconst59=IKsign(((((x992)*(x993)*(x995)))+(((x998)*(x999)))+(((x992)*(x994)))+(((x993)*(x994)*(x996)))+((((r02)*(r02))*((sj5)*(sj5))))+(((x997)*(x998)))+(((IkReal(-1.00000000000000))*(x993)*(x997)*(x998)))+(((x995)*(x996)))+(((IkReal(-2.00000000000000))*(x997)*(x999)))));
IkReal x1000=(cj6)*(cj6);
IkReal x1001=(cj5)*(cj5);
IkReal x1002=(r01)*(r01);
IkReal x1003=(r00)*(r00);
IkReal x1004=(sj6)*(sj6);
IkReal x1005=((cj6)*(r00));
IkReal x1006=((IkReal(2.00000000000000))*(r01)*(sj6));
IkReal x1007=((cj5)*(r02)*(sj5));
dummyeval[0]=((((x1000)*(x1002)))+((((r02)*(r02))*((sj5)*(sj5))))+(((x1000)*(x1001)*(x1003)))+(((IkReal(-1.00000000000000))*(x1001)*(x1005)*(x1006)))+(((IkReal(-2.00000000000000))*(x1005)*(x1007)))+(((x1006)*(x1007)))+(((x1001)*(x1002)*(x1004)))+(((x1005)*(x1006)))+(((x1003)*(x1004))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst60;
IkReal x1008=(sj6)*(sj6);
IkReal x1009=(cj6)*(cj6);
IkReal x1010=((r01)*(r10));
IkReal x1011=((IkReal(1.00000000000000))*(r00));
IkReal x1012=((r02)*(sj5));
IkReal x1013=((r12)*(sj5));
IkReal x1014=((cj5)*(x1008));
IkReal x1015=((cj5)*(x1009));
gconst60=IKsign(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1013)))+(((r10)*(sj6)*(x1012)))+(((IkReal(-1.00000000000000))*(sj6)*(x1011)*(x1013)))+(((IkReal(-1.00000000000000))*(r11)*(x1011)*(x1014)))+(((IkReal(-1.00000000000000))*(r11)*(x1011)*(x1015)))+(((x1010)*(x1015)))+(((x1010)*(x1014)))+(((cj6)*(r11)*(x1012)))));
IkReal x1016=(sj6)*(sj6);
IkReal x1017=(cj6)*(cj6);
IkReal x1018=((r01)*(r10));
IkReal x1019=((IkReal(1.00000000000000))*(r00));
IkReal x1020=((r02)*(sj5));
IkReal x1021=((r12)*(sj5));
IkReal x1022=((cj5)*(x1016));
IkReal x1023=((cj5)*(x1017));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1021)))+(((r10)*(sj6)*(x1020)))+(((x1018)*(x1022)))+(((x1018)*(x1023)))+(((cj6)*(r11)*(x1020)))+(((IkReal(-1.00000000000000))*(r11)*(x1019)*(x1023)))+(((IkReal(-1.00000000000000))*(r11)*(x1019)*(x1022)))+(((IkReal(-1.00000000000000))*(sj6)*(x1019)*(x1021))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1024=((cj2)*(cj3));
IkReal x1025=((sj3)*(sj6));
IkReal x1026=((IkReal(1.00000000000000))*(r10));
IkReal x1027=((cj5)*(cj6));
if( IKabs(((gconst60)*(((((r12)*(sj3)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(sj6)*(x1024)))+(((IkReal(-1.00000000000000))*(r02)*(sj5)*(x1024)))+(((r00)*(x1024)*(x1027)))+(((cj5)*(r11)*(x1025)))+(((IkReal(-1.00000000000000))*(sj3)*(x1026)*(x1027))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst60)*(((((r00)*(sj6)*(x1024)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(sj3)))+(((cj6)*(r01)*(x1024)))+(((IkReal(-1.00000000000000))*(x1025)*(x1026))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst60)*(((((r12)*(sj3)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(sj6)*(x1024)))+(((IkReal(-1.00000000000000))*(r02)*(sj5)*(x1024)))+(((r00)*(x1024)*(x1027)))+(((cj5)*(r11)*(x1025)))+(((IkReal(-1.00000000000000))*(sj3)*(x1026)*(x1027)))))), ((gconst60)*(((((r00)*(sj6)*(x1024)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(sj3)))+(((cj6)*(r01)*(x1024)))+(((IkReal(-1.00000000000000))*(x1025)*(x1026)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1028=IKsin(j4);
IkReal x1029=IKcos(j4);
IkReal x1030=((IkReal(1.00000000000000))*(r00));
IkReal x1031=((cj5)*(r01));
IkReal x1032=((cj5)*(r11));
IkReal x1033=((IkReal(1.00000000000000))*(sj2));
IkReal x1034=((IkReal(1.00000000000000))*(cj5));
IkReal x1035=((cj5)*(r21));
IkReal x1036=((sj5)*(x1028));
IkReal x1037=((cj6)*(x1028));
IkReal x1038=((sj6)*(x1029));
IkReal x1039=((sj6)*(x1028));
IkReal x1040=((sj5)*(x1029));
IkReal x1041=((cj6)*(x1029));
evalcond[0]=((((r22)*(x1036)))+(((IkReal(-1.00000000000000))*(r20)*(x1034)*(x1037)))+(((IkReal(-1.00000000000000))*(r20)*(x1038)))+(((IkReal(-1.00000000000000))*(r21)*(x1041)))+(((x1035)*(x1039)))+(((IkReal(-1.00000000000000))*(cj2))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x1034)*(x1041)))+(((r21)*(x1037)))+(((r20)*(x1039)))+(((IkReal(-1.00000000000000))*(cj3)*(x1033)))+(((x1035)*(x1038)))+(((r22)*(x1040))));
evalcond[2]=((((x1031)*(x1039)))+(((IkReal(-1.00000000000000))*(r01)*(x1041)))+(((r02)*(x1036)))+(((IkReal(-1.00000000000000))*(x1030)*(x1038)))+(((IkReal(-1.00000000000000))*(cj5)*(x1030)*(x1037))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1033)))+(((IkReal(-1.00000000000000))*(r10)*(x1038)))+(((IkReal(-1.00000000000000))*(r11)*(x1041)))+(((r12)*(x1036)))+(((x1032)*(x1039)))+(((IkReal(-1.00000000000000))*(r10)*(x1034)*(x1037))));
evalcond[4]=((((x1031)*(x1038)))+(((r02)*(x1040)))+(((r00)*(x1039)))+(sj3)+(((IkReal(-1.00000000000000))*(cj5)*(x1030)*(x1041)))+(((r01)*(x1037))));
evalcond[5]=((((r10)*(x1039)))+(((cj2)*(cj3)))+(((IkReal(-1.00000000000000))*(r10)*(x1034)*(x1041)))+(((r11)*(x1037)))+(((x1032)*(x1038)))+(((r12)*(x1040))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1042=((cj5)*(sj3));
IkReal x1043=((IkReal(1.00000000000000))*(sj3));
if( IKabs(((gconst59)*(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1043)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1043))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst59)*(((((IkReal(-1.00000000000000))*(r02)*(sj5)*(x1043)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1042)))+(((cj6)*(r00)*(x1042))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst59)*(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1043)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1043)))))), ((gconst59)*(((((IkReal(-1.00000000000000))*(r02)*(sj5)*(x1043)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1042)))+(((cj6)*(r00)*(x1042)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1044=IKsin(j4);
IkReal x1045=IKcos(j4);
IkReal x1046=((IkReal(1.00000000000000))*(r00));
IkReal x1047=((cj5)*(r01));
IkReal x1048=((cj5)*(r11));
IkReal x1049=((IkReal(1.00000000000000))*(sj2));
IkReal x1050=((IkReal(1.00000000000000))*(cj5));
IkReal x1051=((cj5)*(r21));
IkReal x1052=((sj5)*(x1044));
IkReal x1053=((cj6)*(x1044));
IkReal x1054=((sj6)*(x1045));
IkReal x1055=((sj6)*(x1044));
IkReal x1056=((sj5)*(x1045));
IkReal x1057=((cj6)*(x1045));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x1050)*(x1053)))+(((x1051)*(x1055)))+(((IkReal(-1.00000000000000))*(r21)*(x1057)))+(((r22)*(x1052)))+(((IkReal(-1.00000000000000))*(r20)*(x1054)))+(((IkReal(-1.00000000000000))*(cj2))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj3)*(x1049)))+(((IkReal(-1.00000000000000))*(r20)*(x1050)*(x1057)))+(((x1051)*(x1054)))+(((r20)*(x1055)))+(((r21)*(x1053)))+(((r22)*(x1056))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x1057)))+(((IkReal(-1.00000000000000))*(x1046)*(x1054)))+(((r02)*(x1052)))+(((IkReal(-1.00000000000000))*(cj5)*(x1046)*(x1053)))+(((x1047)*(x1055))));
evalcond[3]=((((r12)*(x1052)))+(((IkReal(-1.00000000000000))*(r11)*(x1057)))+(((IkReal(-1.00000000000000))*(r10)*(x1054)))+(((x1048)*(x1055)))+(((IkReal(-1.00000000000000))*(r10)*(x1050)*(x1053)))+(((IkReal(-1.00000000000000))*(x1049))));
evalcond[4]=((((r02)*(x1056)))+(sj3)+(((r00)*(x1055)))+(((IkReal(-1.00000000000000))*(cj5)*(x1046)*(x1057)))+(((r01)*(x1053)))+(((x1047)*(x1054))));
evalcond[5]=((((r12)*(x1056)))+(((r11)*(x1053)))+(((cj2)*(cj3)))+(((x1048)*(x1054)))+(((r10)*(x1055)))+(((IkReal(-1.00000000000000))*(r10)*(x1050)*(x1057))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1058=((IkReal(1.00000000000000))*(sj2));
if( IKabs(((gconst58)*(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1058)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1058))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst58)*(((((IkReal(-1.00000000000000))*(r02)*(sj5)*(x1058)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(sj6)*(x1058)))+(((cj5)*(cj6)*(r00)*(sj2))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst58)*(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1058)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1058)))))), ((gconst58)*(((((IkReal(-1.00000000000000))*(r02)*(sj5)*(x1058)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(sj6)*(x1058)))+(((cj5)*(cj6)*(r00)*(sj2)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x1059=IKsin(j4);
IkReal x1060=IKcos(j4);
IkReal x1061=((IkReal(1.00000000000000))*(cj6));
IkReal x1062=((sj5)*(x1059));
IkReal x1063=((cj5)*(x1059));
IkReal x1064=((IkReal(1.00000000000000))*(sj6)*(x1060));
evalcond[0]=((((r21)*(sj6)*(x1063)))+(((IkReal(-1.00000000000000))*(r20)*(x1064)))+(((IkReal(-1.00000000000000))*(r20)*(x1061)*(x1063)))+(((r22)*(x1062)))+(((IkReal(-1.00000000000000))*(r21)*(x1060)*(x1061)))+(((IkReal(-1.00000000000000))*(cj2))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(x1064)))+(((r01)*(sj6)*(x1063)))+(((r02)*(x1062)))+(((IkReal(-1.00000000000000))*(r00)*(x1061)*(x1063)))+(((IkReal(-1.00000000000000))*(r01)*(x1060)*(x1061))));
evalcond[2]=((((r12)*(x1062)))+(((IkReal(-1.00000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(r10)*(x1064)))+(((IkReal(-1.00000000000000))*(r10)*(x1061)*(x1063)))+(((IkReal(-1.00000000000000))*(r11)*(x1060)*(x1061)))+(((r11)*(sj6)*(x1063))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1065=((IkReal(1.00000000000000))*(cj6));
IkReal x1066=((IkReal(1.00000000000000))*(cj5));
IkReal x1067=((r01)*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj4)*(x1065)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj4)*(x1066)*(x1067)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(sj6)))+(((cj4)*(cj5)*(cj6)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r02)*(x1066)))+(((sj5)*(x1067)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x1065))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj4)*(x1065)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj4)*(x1066)*(x1067)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(sj6)))+(((cj4)*(cj5)*(cj6)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(r02)*(x1066)))+(((sj5)*(x1067)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x1065)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj4)*(x1065)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj4)*(x1066)*(x1067)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(sj6)))+(((cj4)*(cj5)*(cj6)*(r00)))), ((((IkReal(-1.00000000000000))*(r02)*(x1066)))+(((sj5)*(x1067)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x1065)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1068=IKsin(j3);
IkReal x1069=IKcos(j3);
IkReal x1070=((r11)*(sj6));
IkReal x1071=((IkReal(1.00000000000000))*(sj5));
IkReal x1072=((sj4)*(sj6));
IkReal x1073=((cj4)*(sj5));
IkReal x1074=((cj6)*(sj4));
IkReal x1075=((cj4)*(cj5));
IkReal x1076=((r01)*(sj6));
IkReal x1077=((r21)*(sj6));
IkReal x1078=((cj6)*(sj5));
IkReal x1079=((IkReal(1.00000000000000))*(cj6)*(x1075));
evalcond[0]=((((cj5)*(r22)))+(((sj2)*(x1068)))+(((IkReal(-1.00000000000000))*(x1071)*(x1077)))+(((r20)*(x1078))));
evalcond[1]=((x1069)+(((IkReal(-1.00000000000000))*(x1071)*(x1076)))+(((r00)*(x1078)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x1070)*(x1071)))+(((IkReal(-1.00000000000000))*(cj2)*(x1068)))+(((r10)*(x1078))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x1079)))+(((IkReal(-1.00000000000000))*(sj2)*(x1069)))+(((x1075)*(x1077)))+(((r20)*(x1072)))+(((r22)*(x1073)))+(((r21)*(x1074))));
evalcond[4]=((x1068)+(((IkReal(-1.00000000000000))*(r00)*(x1079)))+(((x1075)*(x1076)))+(((r00)*(x1072)))+(((r01)*(x1074)))+(((r02)*(x1073))));
evalcond[5]=((((r12)*(x1073)))+(((x1070)*(x1075)))+(((cj2)*(x1069)))+(((IkReal(-1.00000000000000))*(r10)*(x1079)))+(((r10)*(x1072)))+(((r11)*(x1074))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1080=((IkReal(1.00000000000000))*(cj2));
IkReal x1081=((sj6)*(x1080));
if( IKabs(((gconst57)*(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1080)))+(((IkReal(-1.00000000000000))*(r00)*(x1081))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst57)*(((((cj2)*(cj5)*(cj6)*(r00)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1081)))+(((IkReal(-1.00000000000000))*(r02)*(sj5)*(x1080))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst57)*(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1080)))+(((IkReal(-1.00000000000000))*(r00)*(x1081)))))), ((gconst57)*(((((cj2)*(cj5)*(cj6)*(r00)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1081)))+(((IkReal(-1.00000000000000))*(r02)*(sj5)*(x1080)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x1082=IKsin(j4);
IkReal x1083=IKcos(j4);
IkReal x1084=((IkReal(1.00000000000000))*(cj6));
IkReal x1085=((sj5)*(x1082));
IkReal x1086=((cj5)*(x1082));
IkReal x1087=((IkReal(1.00000000000000))*(sj6)*(x1083));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x1084)*(x1086)))+(((r21)*(sj6)*(x1086)))+(((IkReal(-1.00000000000000))*(r21)*(x1083)*(x1084)))+(((r22)*(x1085)))+(((IkReal(-1.00000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(r20)*(x1087))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(x1084)*(x1086)))+(((IkReal(-1.00000000000000))*(r00)*(x1087)))+(((r02)*(x1085)))+(((r01)*(sj6)*(x1086)))+(((IkReal(-1.00000000000000))*(r01)*(x1083)*(x1084))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r11)*(x1083)*(x1084)))+(((IkReal(-1.00000000000000))*(sj2)))+(((r11)*(sj6)*(x1086)))+(((IkReal(-1.00000000000000))*(r10)*(x1087)))+(((r12)*(x1085)))+(((IkReal(-1.00000000000000))*(r10)*(x1084)*(x1086))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1088=((IkReal(1.00000000000000))*(cj6));
IkReal x1089=((IkReal(1.00000000000000))*(cj5));
IkReal x1090=((r01)*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj4)*(x1088)))+(((IkReal(-1.00000000000000))*(cj4)*(x1089)*(x1090)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(sj6)))+(((cj4)*(cj5)*(cj6)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r00)*(sj5)*(x1088)))+(((IkReal(-1.00000000000000))*(r02)*(x1089)))+(((sj5)*(x1090))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj4)*(x1088)))+(((IkReal(-1.00000000000000))*(cj4)*(x1089)*(x1090)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(sj6)))+(((cj4)*(cj5)*(cj6)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(r00)*(sj5)*(x1088)))+(((IkReal(-1.00000000000000))*(r02)*(x1089)))+(((sj5)*(x1090)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj4)*(x1088)))+(((IkReal(-1.00000000000000))*(cj4)*(x1089)*(x1090)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(sj6)))+(((cj4)*(cj5)*(cj6)*(r00)))), ((((IkReal(-1.00000000000000))*(r00)*(sj5)*(x1088)))+(((IkReal(-1.00000000000000))*(r02)*(x1089)))+(((sj5)*(x1090)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1091=IKsin(j3);
IkReal x1092=IKcos(j3);
IkReal x1093=((r11)*(sj6));
IkReal x1094=((IkReal(1.00000000000000))*(sj5));
IkReal x1095=((sj4)*(sj6));
IkReal x1096=((cj4)*(sj5));
IkReal x1097=((cj6)*(sj4));
IkReal x1098=((cj4)*(cj5));
IkReal x1099=((r01)*(sj6));
IkReal x1100=((r21)*(sj6));
IkReal x1101=((cj6)*(sj5));
IkReal x1102=((IkReal(1.00000000000000))*(cj6)*(x1098));
evalcond[0]=((((cj5)*(r22)))+(((r20)*(x1101)))+(((IkReal(-1.00000000000000))*(x1094)*(x1100)))+(((sj2)*(x1091))));
evalcond[1]=((x1092)+(((r00)*(x1101)))+(((IkReal(-1.00000000000000))*(x1094)*(x1099)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(cj2)*(x1091)))+(((IkReal(-1.00000000000000))*(x1093)*(x1094)))+(((r10)*(x1101))));
evalcond[3]=((((x1098)*(x1100)))+(((r21)*(x1097)))+(((r22)*(x1096)))+(((IkReal(-1.00000000000000))*(r20)*(x1102)))+(((IkReal(-1.00000000000000))*(sj2)*(x1092)))+(((r20)*(x1095))));
evalcond[4]=((x1091)+(((r01)*(x1097)))+(((IkReal(-1.00000000000000))*(r00)*(x1102)))+(((r00)*(x1095)))+(((r02)*(x1096)))+(((x1098)*(x1099))));
evalcond[5]=((((r10)*(x1095)))+(((r11)*(x1097)))+(((r12)*(x1096)))+(((x1093)*(x1098)))+(((cj2)*(x1092)))+(((IkReal(-1.00000000000000))*(r10)*(x1102))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}
}
}

} else
{
IkReal x1103=((IkReal(0.390000000000000))*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.400000000000000))+(((cj6)*(r00)*(x1103)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1103)))+(((IkReal(0.000500000000000000))*(cj6)*(r01)))+(((IkReal(0.000500000000000000))*(r00)*(sj6)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.390000000000000))*(cj5)*(r02))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1104=((IkReal(195.000000000000))*(cj5));
IkReal x1105=((IkReal(0.250000000000000))*(cj6));
IkReal x1106=((IkReal(0.250000000000000))*(sj6));
IkReal x1107=((IkReal(195.000000000000))*(cj6)*(sj5));
IkReal x1108=((IkReal(195.000000000000))*(sj5)*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(r11)*(x1105)))+(((IkReal(-1.00000000000000))*(r12)*(x1104)))+(((IkReal(500.000000000000))*(py)))+(((r11)*(x1108)))+(((IkReal(-1.00000000000000))*(r10)*(x1107)))+(((IkReal(-1.00000000000000))*(r10)*(x1106))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r20)*(x1107)))+(((r20)*(x1106)))+(((IkReal(-500.000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(r21)*(x1108)))+(((r22)*(x1104)))+(((r21)*(x1105))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r11)*(x1105)))+(((IkReal(-1.00000000000000))*(r12)*(x1104)))+(((IkReal(500.000000000000))*(py)))+(((r11)*(x1108)))+(((IkReal(-1.00000000000000))*(r10)*(x1107)))+(((IkReal(-1.00000000000000))*(r10)*(x1106)))))+IKsqr(((((r20)*(x1107)))+(((r20)*(x1106)))+(((IkReal(-500.000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(r21)*(x1108)))+(((r22)*(x1104)))+(((r21)*(x1105)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r11)*(x1105)))+(((IkReal(-1.00000000000000))*(r12)*(x1104)))+(((IkReal(500.000000000000))*(py)))+(((r11)*(x1108)))+(((IkReal(-1.00000000000000))*(r10)*(x1107)))+(((IkReal(-1.00000000000000))*(r10)*(x1106)))), ((((r20)*(x1107)))+(((r20)*(x1106)))+(((IkReal(-500.000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(r21)*(x1108)))+(((r22)*(x1104)))+(((r21)*(x1105)))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x1109=((IkReal(0.000500000000000000))*(cj6));
IkReal x1110=((IkReal(0.000500000000000000))*(sj6));
IkReal x1111=((IkReal(0.390000000000000))*(cj5));
IkReal x1112=((IkReal(0.390000000000000))*(sj5)*(sj6));
IkReal x1113=((IkReal(0.390000000000000))*(cj6)*(sj5));
evalcond[0]=((((r20)*(x1110)))+(((r20)*(x1113)))+(((IkReal(-0.00200000000000000))*(IKcos(j2))))+(((IkReal(-1.00000000000000))*(r21)*(x1112)))+(((IkReal(-1.00000000000000))*(pz)))+(((r22)*(x1111)))+(((r21)*(x1109))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(x1112)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.00200000000000000))*(IKsin(j2))))+(((r12)*(x1111)))+(((r11)*(x1109)))+(((r10)*(x1110)))+(((r10)*(x1113))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst69;
IkReal x1114=(sj6)*(sj6);
IkReal x1115=(cj6)*(cj6);
IkReal x1116=((cj6)*(sj5));
IkReal x1117=((r00)*(r11));
IkReal x1118=((IkReal(1.00000000000000))*(r02));
IkReal x1119=((sj5)*(sj6));
IkReal x1120=((cj5)*(x1114));
IkReal x1121=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1122=((cj5)*(x1115));
gconst69=IKsign(((((r01)*(r12)*(x1116)))+(((IkReal(-1.00000000000000))*(r10)*(x1118)*(x1119)))+(((IkReal(-1.00000000000000))*(x1121)*(x1122)))+(((x1117)*(x1122)))+(((x1117)*(x1120)))+(((IkReal(-1.00000000000000))*(x1120)*(x1121)))+(((r00)*(r12)*(x1119)))+(((IkReal(-1.00000000000000))*(r11)*(x1116)*(x1118)))));
IkReal x1123=(sj6)*(sj6);
IkReal x1124=(cj6)*(cj6);
IkReal x1125=((cj6)*(sj5));
IkReal x1126=((r00)*(r11));
IkReal x1127=((IkReal(1.00000000000000))*(r02));
IkReal x1128=((sj5)*(sj6));
IkReal x1129=((cj5)*(x1123));
IkReal x1130=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1131=((cj5)*(x1124));
dummyeval[0]=((((x1126)*(x1131)))+(((r00)*(r12)*(x1128)))+(((IkReal(-1.00000000000000))*(r10)*(x1127)*(x1128)))+(((IkReal(-1.00000000000000))*(x1130)*(x1131)))+(((IkReal(-1.00000000000000))*(r11)*(x1125)*(x1127)))+(((r01)*(r12)*(x1125)))+(((IkReal(-1.00000000000000))*(x1129)*(x1130)))+(((x1126)*(x1129))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst70;
IkReal x1132=(cj6)*(cj6);
IkReal x1133=(sj6)*(sj6);
IkReal x1134=((r01)*(r20));
IkReal x1135=((r02)*(sj5));
IkReal x1136=((cj5)*(x1133));
IkReal x1137=((IkReal(1.00000000000000))*(r22)*(sj5));
IkReal x1138=((IkReal(1.00000000000000))*(r00)*(r21));
IkReal x1139=((cj5)*(x1132));
gconst70=IKsign(((((r20)*(sj6)*(x1135)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1137)))+(((x1134)*(x1136)))+(((x1134)*(x1139)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1137)))+(((cj6)*(r21)*(x1135)))+(((IkReal(-1.00000000000000))*(x1138)*(x1139)))+(((IkReal(-1.00000000000000))*(x1136)*(x1138)))));
IkReal x1140=(cj6)*(cj6);
IkReal x1141=(sj6)*(sj6);
IkReal x1142=((r01)*(r20));
IkReal x1143=((r02)*(sj5));
IkReal x1144=((cj5)*(x1141));
IkReal x1145=((IkReal(1.00000000000000))*(r22)*(sj5));
IkReal x1146=((IkReal(1.00000000000000))*(r00)*(r21));
IkReal x1147=((cj5)*(x1140));
dummyeval[0]=((((x1142)*(x1147)))+(((x1142)*(x1144)))+(((IkReal(-1.00000000000000))*(x1146)*(x1147)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1145)))+(((IkReal(-1.00000000000000))*(x1144)*(x1146)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1145)))+(((cj6)*(r21)*(x1143)))+(((r20)*(sj6)*(x1143))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1148=((IkReal(0.000500000000000000))*(cj6));
IkReal x1149=((IkReal(0.390000000000000))*(sj5));
IkReal x1150=((cj6)*(r20));
IkReal x1151=((IkReal(0.000500000000000000))*(sj6));
IkReal x1152=((cj5)*(r22));
IkReal x1153=((r21)*(sj6));
IkReal x1154=((IkReal(0.390000000000000))*(cj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((x1152)+(((IkReal(-1.00000000000000))*(sj5)*(x1153)))+(((sj5)*(x1150))));
evalcond[2]=((IkReal(-0.00200000000000000))+(((x1149)*(x1150)))+(((IkReal(-1.00000000000000))*(x1149)*(x1153)))+(((r20)*(x1151)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.390000000000000))*(x1152)))+(((r21)*(x1148))));
evalcond[3]=((IkReal(0.400000000000000))+(((r00)*(x1151)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1149)))+(((r02)*(x1154)))+(((IkReal(-1.00000000000000))*(px)))+(((cj6)*(r00)*(x1149)))+(((r01)*(x1148))));
evalcond[4]=((((r12)*(x1154)))+(((r11)*(x1148)))+(((cj6)*(r10)*(x1149)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x1149)))+(((r10)*(x1151))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1155=((IkReal(1.00000000000000))*(sj5));
if( IKabs(((((IkReal(-1.00000000000000))*(cj5)*(r12)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x1155)))+(((r11)*(sj5)*(sj6))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(r00)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1155)))+(((cj5)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj5)*(r12)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x1155)))+(((r11)*(sj5)*(sj6)))))+IKsqr(((((cj6)*(r00)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1155)))+(((cj5)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj5)*(r12)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x1155)))+(((r11)*(sj5)*(sj6)))), ((((cj6)*(r00)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1155)))+(((cj5)*(r02)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[2];
IkReal x1156=((cj6)*(sj5));
IkReal x1157=((IkReal(1.00000000000000))*(sj5)*(sj6));
evalcond[0]=((((r00)*(x1156)))+(((IkReal(-1.00000000000000))*(r01)*(x1157)))+(((IkReal(-1.00000000000000))*(IKcos(j3))))+(((cj5)*(r02))));
evalcond[1]=((((cj5)*(r12)))+(IKsin(j3))+(((IkReal(-1.00000000000000))*(r11)*(x1157)))+(((r10)*(x1156))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst76;
IkReal x1158=(sj6)*(sj6);
IkReal x1159=(cj6)*(cj6);
IkReal x1160=((IkReal(1.00000000000000))*(r20));
IkReal x1161=((r00)*(r21));
IkReal x1162=((r22)*(sj5));
IkReal x1163=((r02)*(sj5));
IkReal x1164=((cj5)*(x1158));
IkReal x1165=((cj5)*(x1159));
gconst76=IKsign(((((IkReal(-1.00000000000000))*(r01)*(x1160)*(x1165)))+(((IkReal(-1.00000000000000))*(r01)*(x1160)*(x1164)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1163)))+(((cj6)*(r01)*(x1162)))+(((IkReal(-1.00000000000000))*(sj6)*(x1160)*(x1163)))+(((r00)*(sj6)*(x1162)))+(((x1161)*(x1164)))+(((x1161)*(x1165)))));
IkReal x1166=(sj6)*(sj6);
IkReal x1167=(cj6)*(cj6);
IkReal x1168=((IkReal(1.00000000000000))*(r20));
IkReal x1169=((r00)*(r21));
IkReal x1170=((r22)*(sj5));
IkReal x1171=((r02)*(sj5));
IkReal x1172=((cj5)*(x1166));
IkReal x1173=((cj5)*(x1167));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1171)))+(((cj6)*(r01)*(x1170)))+(((IkReal(-1.00000000000000))*(sj6)*(x1168)*(x1171)))+(((r00)*(sj6)*(x1170)))+(((IkReal(-1.00000000000000))*(r01)*(x1168)*(x1172)))+(((IkReal(-1.00000000000000))*(r01)*(x1168)*(x1173)))+(((x1169)*(x1172)))+(((x1169)*(x1173))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst75;
IkReal x1174=(r20)*(r20);
IkReal x1175=(cj5)*(cj5);
IkReal x1176=(sj6)*(sj6);
IkReal x1177=(cj6)*(cj6);
IkReal x1178=(r21)*(r21);
IkReal x1179=((cj6)*(r20));
IkReal x1180=((IkReal(2.00000000000000))*(r21)*(sj6));
IkReal x1181=((cj5)*(r22)*(sj5));
gconst75=IKsign(((((x1174)*(x1175)*(x1177)))+(((x1174)*(x1176)))+(((IkReal(-2.00000000000000))*(x1179)*(x1181)))+(((x1180)*(x1181)))+(((x1179)*(x1180)))+(((x1177)*(x1178)))+(((x1175)*(x1176)*(x1178)))+((((r22)*(r22))*((sj5)*(sj5))))+(((IkReal(-1.00000000000000))*(x1175)*(x1179)*(x1180)))));
IkReal x1182=(r20)*(r20);
IkReal x1183=(cj5)*(cj5);
IkReal x1184=(sj6)*(sj6);
IkReal x1185=(cj6)*(cj6);
IkReal x1186=(r21)*(r21);
IkReal x1187=((cj6)*(r20));
IkReal x1188=((IkReal(2.00000000000000))*(r21)*(sj6));
IkReal x1189=((cj5)*(r22)*(sj5));
dummyeval[0]=((((x1182)*(x1183)*(x1185)))+(((x1187)*(x1188)))+(((x1182)*(x1184)))+(((x1183)*(x1184)*(x1186)))+(((x1188)*(x1189)))+(((IkReal(-1.00000000000000))*(x1183)*(x1187)*(x1188)))+(((IkReal(-2.00000000000000))*(x1187)*(x1189)))+(((x1185)*(x1186)))+((((r22)*(r22))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1190=((IkReal(1.00000000000000))*(r20));
if( IKabs(((gconst75)*(((((IkReal(-1.00000000000000))*(cj5)*(cj6)*(x1190)))+(((cj5)*(r21)*(sj6)))+(((r22)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst75)*(((((IkReal(-1.00000000000000))*(sj6)*(x1190)))+(((IkReal(-1.00000000000000))*(cj6)*(r21))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst75)*(((((IkReal(-1.00000000000000))*(cj5)*(cj6)*(x1190)))+(((cj5)*(r21)*(sj6)))+(((r22)*(sj5)))))), ((gconst75)*(((((IkReal(-1.00000000000000))*(sj6)*(x1190)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1191=IKsin(j4);
IkReal x1192=IKcos(j4);
IkReal x1193=((IkReal(1.00000000000000))*(r00));
IkReal x1194=((cj5)*(r01));
IkReal x1195=((cj5)*(r11));
IkReal x1196=((IkReal(1.00000000000000))*(cj5));
IkReal x1197=((cj5)*(r21));
IkReal x1198=((sj5)*(x1191));
IkReal x1199=((cj6)*(x1191));
IkReal x1200=((sj6)*(x1192));
IkReal x1201=((sj6)*(x1191));
IkReal x1202=((sj5)*(x1192));
IkReal x1203=((cj6)*(x1192));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r21)*(x1203)))+(((r22)*(x1198)))+(((x1197)*(x1201)))+(((IkReal(-1.00000000000000))*(r20)*(x1196)*(x1199)))+(((IkReal(-1.00000000000000))*(r20)*(x1200))));
evalcond[1]=((((x1197)*(x1200)))+(((r20)*(x1201)))+(((r21)*(x1199)))+(((IkReal(-1.00000000000000))*(r20)*(x1196)*(x1203)))+(((r22)*(x1202))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(x1193)*(x1199)))+(((x1194)*(x1201)))+(((r02)*(x1198)))+(((IkReal(-1.00000000000000))*(x1193)*(x1200)))+(((IkReal(-1.00000000000000))*(r01)*(x1203))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x1200)))+(((x1195)*(x1201)))+(((IkReal(-1.00000000000000))*(r10)*(x1196)*(x1199)))+(((r12)*(x1198)))+(((IkReal(-1.00000000000000))*(r11)*(x1203))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj3)))+(((r01)*(x1199)))+(((x1194)*(x1200)))+(((r00)*(x1201)))+(((r02)*(x1202)))+(((IkReal(-1.00000000000000))*(cj5)*(x1193)*(x1203))));
evalcond[5]=((((r10)*(x1201)))+(((r12)*(x1202)))+(((x1195)*(x1200)))+(((r11)*(x1199)))+(((IkReal(-1.00000000000000))*(r10)*(x1196)*(x1203)))+(((IkReal(-1.00000000000000))*(cj3))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1204=((IkReal(1.00000000000000))*(sj3));
if( IKabs(((gconst76)*(((((IkReal(-1.00000000000000))*(cj5)*(cj6)*(r20)*(x1204)))+(((cj5)*(r21)*(sj3)*(sj6)))+(((r22)*(sj3)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst76)*(((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1204)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x1204))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst76)*(((((IkReal(-1.00000000000000))*(cj5)*(cj6)*(r20)*(x1204)))+(((cj5)*(r21)*(sj3)*(sj6)))+(((r22)*(sj3)*(sj5)))))), ((gconst76)*(((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1204)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x1204)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1205=IKsin(j4);
IkReal x1206=IKcos(j4);
IkReal x1207=((IkReal(1.00000000000000))*(r00));
IkReal x1208=((cj5)*(r01));
IkReal x1209=((cj5)*(r11));
IkReal x1210=((IkReal(1.00000000000000))*(cj5));
IkReal x1211=((cj5)*(r21));
IkReal x1212=((sj5)*(x1205));
IkReal x1213=((cj6)*(x1205));
IkReal x1214=((sj6)*(x1206));
IkReal x1215=((sj6)*(x1205));
IkReal x1216=((sj5)*(x1206));
IkReal x1217=((cj6)*(x1206));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r20)*(x1214)))+(((r22)*(x1212)))+(((IkReal(-1.00000000000000))*(r20)*(x1210)*(x1213)))+(((IkReal(-1.00000000000000))*(r21)*(x1217)))+(((x1211)*(x1215))));
evalcond[1]=((((r22)*(x1216)))+(((IkReal(-1.00000000000000))*(r20)*(x1210)*(x1217)))+(((r20)*(x1215)))+(((r21)*(x1213)))+(((x1211)*(x1214))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1207)*(x1214)))+(((r02)*(x1212)))+(((x1208)*(x1215)))+(((IkReal(-1.00000000000000))*(r01)*(x1217)))+(((IkReal(-1.00000000000000))*(cj5)*(x1207)*(x1213))));
evalcond[3]=((((r12)*(x1212)))+(((IkReal(-1.00000000000000))*(r10)*(x1210)*(x1213)))+(((IkReal(-1.00000000000000))*(r11)*(x1217)))+(((x1209)*(x1215)))+(((IkReal(-1.00000000000000))*(r10)*(x1214))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj3)))+(((r02)*(x1216)))+(((r00)*(x1215)))+(((r01)*(x1213)))+(((x1208)*(x1214)))+(((IkReal(-1.00000000000000))*(cj5)*(x1207)*(x1217))));
evalcond[5]=((((r12)*(x1216)))+(((r11)*(x1213)))+(((r10)*(x1215)))+(((IkReal(-1.00000000000000))*(r10)*(x1210)*(x1217)))+(((x1209)*(x1214)))+(((IkReal(-1.00000000000000))*(cj3))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x1218=((IkReal(0.000500000000000000))*(cj6));
IkReal x1219=((IkReal(0.390000000000000))*(sj5));
IkReal x1220=((cj6)*(r20));
IkReal x1221=((IkReal(0.000500000000000000))*(sj6));
IkReal x1222=((cj5)*(r22));
IkReal x1223=((r21)*(sj6));
IkReal x1224=((IkReal(0.390000000000000))*(cj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((x1222)+(((sj5)*(x1220)))+(((IkReal(-1.00000000000000))*(sj5)*(x1223))));
evalcond[2]=((IkReal(0.00200000000000000))+(((r20)*(x1221)))+(((x1219)*(x1220)))+(((IkReal(-1.00000000000000))*(pz)))+(((r21)*(x1218)))+(((IkReal(0.390000000000000))*(x1222)))+(((IkReal(-1.00000000000000))*(x1219)*(x1223))));
evalcond[3]=((IkReal(0.400000000000000))+(((r00)*(x1221)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1219)))+(((r02)*(x1224)))+(((r01)*(x1218)))+(((IkReal(-1.00000000000000))*(px)))+(((cj6)*(r00)*(x1219))));
evalcond[4]=((((r11)*(x1218)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x1219)))+(((r10)*(x1221)))+(((r12)*(x1224)))+(((cj6)*(r10)*(x1219))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1225=((cj6)*(sj5));
IkReal x1226=((IkReal(1.00000000000000))*(sj5)*(sj6));
if( IKabs(((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(r11)*(x1226)))+(((r10)*(x1225))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r01)*(x1226)))+(((r00)*(x1225)))+(((cj5)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(r11)*(x1226)))+(((r10)*(x1225)))))+IKsqr(((((IkReal(-1.00000000000000))*(r01)*(x1226)))+(((r00)*(x1225)))+(((cj5)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(r11)*(x1226)))+(((r10)*(x1225)))), ((((IkReal(-1.00000000000000))*(r01)*(x1226)))+(((r00)*(x1225)))+(((cj5)*(r02)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[2];
IkReal x1227=((cj6)*(sj5));
IkReal x1228=((IkReal(1.00000000000000))*(sj5)*(sj6));
evalcond[0]=((((IkReal(-1.00000000000000))*(r01)*(x1228)))+(((r00)*(x1227)))+(((IkReal(-1.00000000000000))*(IKcos(j3))))+(((cj5)*(r02))));
evalcond[1]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(r11)*(x1228)))+(((IkReal(-1.00000000000000))*(IKsin(j3))))+(((r10)*(x1227))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst79;
IkReal x1229=(cj6)*(cj6);
IkReal x1230=(sj6)*(sj6);
IkReal x1231=((r11)*(r20));
IkReal x1232=((r12)*(sj5));
IkReal x1233=((IkReal(1.00000000000000))*(r10));
IkReal x1234=((r22)*(sj5));
IkReal x1235=((cj5)*(x1230));
IkReal x1236=((cj5)*(x1229));
gconst79=IKsign(((((IkReal(-1.00000000000000))*(r21)*(x1233)*(x1236)))+(((IkReal(-1.00000000000000))*(r21)*(x1233)*(x1235)))+(((cj6)*(r21)*(x1232)))+(((IkReal(-1.00000000000000))*(sj6)*(x1233)*(x1234)))+(((r20)*(sj6)*(x1232)))+(((x1231)*(x1235)))+(((x1231)*(x1236)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1234)))));
IkReal x1237=(cj6)*(cj6);
IkReal x1238=(sj6)*(sj6);
IkReal x1239=((r11)*(r20));
IkReal x1240=((r12)*(sj5));
IkReal x1241=((IkReal(1.00000000000000))*(r10));
IkReal x1242=((r22)*(sj5));
IkReal x1243=((cj5)*(x1238));
IkReal x1244=((cj5)*(x1237));
dummyeval[0]=((((IkReal(-1.00000000000000))*(sj6)*(x1241)*(x1242)))+(((x1239)*(x1244)))+(((x1239)*(x1243)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1242)))+(((IkReal(-1.00000000000000))*(r21)*(x1241)*(x1243)))+(((IkReal(-1.00000000000000))*(r21)*(x1241)*(x1244)))+(((cj6)*(r21)*(x1240)))+(((r20)*(sj6)*(x1240))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst80;
IkReal x1245=(cj5)*(cj5);
IkReal x1246=(r21)*(r21);
IkReal x1247=(sj6)*(sj6);
IkReal x1248=(cj6)*(cj6);
IkReal x1249=(r20)*(r20);
IkReal x1250=((cj6)*(r20));
IkReal x1251=((IkReal(1.00000000000000))*(x1248));
IkReal x1252=((IkReal(2.00000000000000))*(r21)*(sj6));
IkReal x1253=((cj5)*(r22)*(sj5));
IkReal x1254=((IkReal(1.00000000000000))*(x1247));
gconst80=IKsign(((((IkReal(-1.00000000000000))*(x1249)*(x1254)))+(((IkReal(-1.00000000000000))*(x1245)*(x1246)*(x1254)))+(((x1245)*(x1250)*(x1252)))+(((IkReal(2.00000000000000))*(x1250)*(x1253)))+(((IkReal(-1.00000000000000))*(x1245)*(x1249)*(x1251)))+(((IkReal(-1.00000000000000))*(x1252)*(x1253)))+(((IkReal(-1.00000000000000))*(x1246)*(x1251)))+(((IkReal(-1.00000000000000))*(x1250)*(x1252)))+(((IkReal(-1.00000000000000))*((r22)*(r22))*((sj5)*(sj5))))));
IkReal x1255=(cj5)*(cj5);
IkReal x1256=(r21)*(r21);
IkReal x1257=(sj6)*(sj6);
IkReal x1258=(cj6)*(cj6);
IkReal x1259=(r20)*(r20);
IkReal x1260=((cj6)*(r20));
IkReal x1261=((IkReal(1.00000000000000))*(x1258));
IkReal x1262=((IkReal(2.00000000000000))*(r21)*(sj6));
IkReal x1263=((cj5)*(r22)*(sj5));
IkReal x1264=((IkReal(1.00000000000000))*(x1257));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1255)*(x1256)*(x1264)))+(((IkReal(-1.00000000000000))*(x1260)*(x1262)))+(((IkReal(-1.00000000000000))*(x1262)*(x1263)))+(((IkReal(-1.00000000000000))*(x1256)*(x1261)))+(((x1255)*(x1260)*(x1262)))+(((IkReal(-1.00000000000000))*(x1255)*(x1259)*(x1261)))+(((IkReal(-1.00000000000000))*(x1259)*(x1264)))+(((IkReal(-1.00000000000000))*((r22)*(r22))*((sj5)*(sj5))))+(((IkReal(2.00000000000000))*(x1260)*(x1263))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1265=((IkReal(1.00000000000000))*(r20));
if( IKabs(((gconst80)*(((((cj5)*(r21)*(sj6)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(cj6)*(x1265))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst80)*(((((IkReal(-1.00000000000000))*(cj6)*(r21)))+(((IkReal(-1.00000000000000))*(sj6)*(x1265))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst80)*(((((cj5)*(r21)*(sj6)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(cj6)*(x1265)))))), ((gconst80)*(((((IkReal(-1.00000000000000))*(cj6)*(r21)))+(((IkReal(-1.00000000000000))*(sj6)*(x1265)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1266=IKsin(j4);
IkReal x1267=IKcos(j4);
IkReal x1268=((IkReal(1.00000000000000))*(r00));
IkReal x1269=((cj5)*(r01));
IkReal x1270=((cj5)*(r11));
IkReal x1271=((IkReal(1.00000000000000))*(cj5));
IkReal x1272=((cj5)*(r21));
IkReal x1273=((sj5)*(x1266));
IkReal x1274=((cj6)*(x1266));
IkReal x1275=((sj6)*(x1267));
IkReal x1276=((sj6)*(x1266));
IkReal x1277=((sj5)*(x1267));
IkReal x1278=((cj6)*(x1267));
evalcond[0]=((IkReal(1.00000000000000))+(((x1272)*(x1276)))+(((r22)*(x1273)))+(((IkReal(-1.00000000000000))*(r21)*(x1278)))+(((IkReal(-1.00000000000000))*(r20)*(x1275)))+(((IkReal(-1.00000000000000))*(r20)*(x1271)*(x1274))));
evalcond[1]=((((r21)*(x1274)))+(((x1272)*(x1275)))+(((r22)*(x1277)))+(((r20)*(x1276)))+(((IkReal(-1.00000000000000))*(r20)*(x1271)*(x1278))));
evalcond[2]=((((x1269)*(x1276)))+(((IkReal(-1.00000000000000))*(x1268)*(x1275)))+(((IkReal(-1.00000000000000))*(cj5)*(x1268)*(x1274)))+(((IkReal(-1.00000000000000))*(r01)*(x1278)))+(((r02)*(x1273))));
evalcond[3]=((((r12)*(x1273)))+(((x1270)*(x1276)))+(((IkReal(-1.00000000000000))*(r11)*(x1278)))+(((IkReal(-1.00000000000000))*(r10)*(x1271)*(x1274)))+(((IkReal(-1.00000000000000))*(r10)*(x1275))));
evalcond[4]=((((x1269)*(x1275)))+(((IkReal(-1.00000000000000))*(sj3)))+(((IkReal(-1.00000000000000))*(cj5)*(x1268)*(x1278)))+(((r02)*(x1277)))+(((r00)*(x1276)))+(((r01)*(x1274))));
evalcond[5]=((((r12)*(x1277)))+(((r10)*(x1276)))+(cj3)+(((r11)*(x1274)))+(((x1270)*(x1275)))+(((IkReal(-1.00000000000000))*(r10)*(x1271)*(x1278))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1279=((cj3)*(sj6));
IkReal x1280=((IkReal(1.00000000000000))*(cj3)*(cj6));
if( IKabs(((gconst79)*(((((cj3)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x1280)))+(((cj5)*(r21)*(x1279))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst79)*(((((IkReal(-1.00000000000000))*(r21)*(x1280)))+(((IkReal(-1.00000000000000))*(r20)*(x1279))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst79)*(((((cj3)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x1280)))+(((cj5)*(r21)*(x1279)))))), ((gconst79)*(((((IkReal(-1.00000000000000))*(r21)*(x1280)))+(((IkReal(-1.00000000000000))*(r20)*(x1279)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1281=IKsin(j4);
IkReal x1282=IKcos(j4);
IkReal x1283=((IkReal(1.00000000000000))*(r00));
IkReal x1284=((cj5)*(r01));
IkReal x1285=((cj5)*(r11));
IkReal x1286=((IkReal(1.00000000000000))*(cj5));
IkReal x1287=((cj5)*(r21));
IkReal x1288=((sj5)*(x1281));
IkReal x1289=((cj6)*(x1281));
IkReal x1290=((sj6)*(x1282));
IkReal x1291=((sj6)*(x1281));
IkReal x1292=((sj5)*(x1282));
IkReal x1293=((cj6)*(x1282));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r20)*(x1286)*(x1289)))+(((x1287)*(x1291)))+(((r22)*(x1288)))+(((IkReal(-1.00000000000000))*(r21)*(x1293)))+(((IkReal(-1.00000000000000))*(r20)*(x1290))));
evalcond[1]=((((r20)*(x1291)))+(((x1287)*(x1290)))+(((r21)*(x1289)))+(((IkReal(-1.00000000000000))*(r20)*(x1286)*(x1293)))+(((r22)*(x1292))));
evalcond[2]=((((r02)*(x1288)))+(((IkReal(-1.00000000000000))*(x1283)*(x1290)))+(((IkReal(-1.00000000000000))*(cj5)*(x1283)*(x1289)))+(((IkReal(-1.00000000000000))*(r01)*(x1293)))+(((x1284)*(x1291))));
evalcond[3]=((((x1285)*(x1291)))+(((IkReal(-1.00000000000000))*(r10)*(x1290)))+(((IkReal(-1.00000000000000))*(r10)*(x1286)*(x1289)))+(((r12)*(x1288)))+(((IkReal(-1.00000000000000))*(r11)*(x1293))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj3)))+(((r01)*(x1289)))+(((r02)*(x1292)))+(((x1284)*(x1290)))+(((r00)*(x1291)))+(((IkReal(-1.00000000000000))*(cj5)*(x1283)*(x1293))));
evalcond[5]=((((r11)*(x1289)))+(cj3)+(((r12)*(x1292)))+(((x1285)*(x1290)))+(((r10)*(x1291)))+(((IkReal(-1.00000000000000))*(r10)*(x1286)*(x1293))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1294=((IkReal(1.00000000000000))*(sj5));
if( IKabs(((((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*(((((r21)*(sj5)*(sj6)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(x1294))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1294)))+(((cj6)*(r00)*(sj5)))+(((cj5)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*(((((r21)*(sj5)*(sj6)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(x1294)))))))+IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1294)))+(((cj6)*(r00)*(sj5)))+(((cj5)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*(((((r21)*(sj5)*(sj6)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(x1294)))))), ((((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1294)))+(((cj6)*(r00)*(sj5)))+(((cj5)*(r02)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x1295=IKsin(j3);
IkReal x1296=((cj6)*(sj5));
IkReal x1297=((IkReal(1.00000000000000))*(sj5)*(sj6));
evalcond[0]=((((r20)*(x1296)))+(((cj5)*(r22)))+(((sj2)*(x1295)))+(((IkReal(-1.00000000000000))*(r21)*(x1297))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x1297)))+(((IkReal(-1.00000000000000))*(IKcos(j3))))+(((r00)*(x1296)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((cj2)*(x1295)))+(((IkReal(-1.00000000000000))*(r11)*(x1297)))+(((r10)*(x1296))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst71;
IkReal x1298=(sj6)*(sj6);
IkReal x1299=(cj6)*(cj6);
IkReal x1300=((cj6)*(sj5));
IkReal x1301=((r00)*(r11));
IkReal x1302=((IkReal(1.00000000000000))*(r02));
IkReal x1303=((sj5)*(sj6));
IkReal x1304=((cj5)*(x1298));
IkReal x1305=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1306=((cj5)*(x1299));
gconst71=IKsign(((((IkReal(-1.00000000000000))*(r10)*(x1302)*(x1303)))+(((IkReal(-1.00000000000000))*(r11)*(x1300)*(x1302)))+(((r01)*(r12)*(x1300)))+(((IkReal(-1.00000000000000))*(x1305)*(x1306)))+(((x1301)*(x1306)))+(((x1301)*(x1304)))+(((r00)*(r12)*(x1303)))+(((IkReal(-1.00000000000000))*(x1304)*(x1305)))));
IkReal x1307=(sj6)*(sj6);
IkReal x1308=(cj6)*(cj6);
IkReal x1309=((cj6)*(sj5));
IkReal x1310=((r00)*(r11));
IkReal x1311=((IkReal(1.00000000000000))*(r02));
IkReal x1312=((sj5)*(sj6));
IkReal x1313=((cj5)*(x1307));
IkReal x1314=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1315=((cj5)*(x1308));
dummyeval[0]=((((x1310)*(x1315)))+(((x1310)*(x1313)))+(((IkReal(-1.00000000000000))*(x1313)*(x1314)))+(((IkReal(-1.00000000000000))*(r10)*(x1311)*(x1312)))+(((IkReal(-1.00000000000000))*(x1314)*(x1315)))+(((r01)*(r12)*(x1309)))+(((IkReal(-1.00000000000000))*(r11)*(x1309)*(x1311)))+(((r00)*(r12)*(x1312))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst72;
IkReal x1316=(cj5)*(cj5);
IkReal x1317=(sj6)*(sj6);
IkReal x1318=(r01)*(r01);
IkReal x1319=(cj6)*(cj6);
IkReal x1320=(r00)*(r00);
IkReal x1321=((cj6)*(r00));
IkReal x1322=((IkReal(2.00000000000000))*(r01)*(sj6));
IkReal x1323=((cj5)*(r02)*(sj5));
IkReal x1324=((IkReal(1.00000000000000))*(x1317));
IkReal x1325=((IkReal(1.00000000000000))*(x1319));
gconst72=IKsign(((((IkReal(-1.00000000000000))*(x1322)*(x1323)))+(((IkReal(-1.00000000000000))*(x1321)*(x1322)))+(((IkReal(-1.00000000000000))*(x1316)*(x1318)*(x1324)))+(((IkReal(-1.00000000000000))*((r02)*(r02))*((sj5)*(sj5))))+(((IkReal(-1.00000000000000))*(x1316)*(x1320)*(x1325)))+(((x1316)*(x1321)*(x1322)))+(((IkReal(-1.00000000000000))*(x1320)*(x1324)))+(((IkReal(-1.00000000000000))*(x1318)*(x1325)))+(((IkReal(2.00000000000000))*(x1321)*(x1323)))));
IkReal x1326=(cj5)*(cj5);
IkReal x1327=(sj6)*(sj6);
IkReal x1328=(r01)*(r01);
IkReal x1329=(cj6)*(cj6);
IkReal x1330=(r00)*(r00);
IkReal x1331=((cj6)*(r00));
IkReal x1332=((IkReal(2.00000000000000))*(r01)*(sj6));
IkReal x1333=((cj5)*(r02)*(sj5));
IkReal x1334=((IkReal(1.00000000000000))*(x1327));
IkReal x1335=((IkReal(1.00000000000000))*(x1329));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1326)*(x1328)*(x1334)))+(((IkReal(-1.00000000000000))*(x1328)*(x1335)))+(((IkReal(2.00000000000000))*(x1331)*(x1333)))+(((IkReal(-1.00000000000000))*(x1330)*(x1334)))+(((IkReal(-1.00000000000000))*(x1326)*(x1330)*(x1335)))+(((IkReal(-1.00000000000000))*(x1331)*(x1332)))+(((IkReal(-1.00000000000000))*(x1332)*(x1333)))+(((IkReal(-1.00000000000000))*((r02)*(r02))*((sj5)*(sj5))))+(((x1326)*(x1331)*(x1332))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1336=((cj5)*(sj3));
IkReal x1337=((IkReal(1.00000000000000))*(sj3));
if( IKabs(((gconst72)*(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1337)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1337))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst72)*(((((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1336)))+(((IkReal(-1.00000000000000))*(r02)*(sj5)*(x1337)))+(((cj6)*(r00)*(x1336))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst72)*(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1337)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1337)))))), ((gconst72)*(((((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1336)))+(((IkReal(-1.00000000000000))*(r02)*(sj5)*(x1337)))+(((cj6)*(r00)*(x1336)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1338=IKsin(j4);
IkReal x1339=IKcos(j4);
IkReal x1340=((IkReal(1.00000000000000))*(r00));
IkReal x1341=((cj5)*(r01));
IkReal x1342=((cj5)*(r11));
IkReal x1343=((IkReal(1.00000000000000))*(cj3));
IkReal x1344=((IkReal(1.00000000000000))*(cj5));
IkReal x1345=((cj5)*(r21));
IkReal x1346=((sj5)*(x1338));
IkReal x1347=((cj6)*(x1338));
IkReal x1348=((sj6)*(x1339));
IkReal x1349=((sj6)*(x1338));
IkReal x1350=((sj5)*(x1339));
IkReal x1351=((cj6)*(x1339));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(x1351)))+(((r22)*(x1346)))+(((IkReal(-1.00000000000000))*(r20)*(x1344)*(x1347)))+(((x1345)*(x1349)))+(((IkReal(-1.00000000000000))*(r20)*(x1348)))+(((IkReal(-1.00000000000000))*(cj2))));
evalcond[1]=((((r22)*(x1350)))+(((IkReal(-1.00000000000000))*(sj2)*(x1343)))+(((x1345)*(x1348)))+(((IkReal(-1.00000000000000))*(r20)*(x1344)*(x1351)))+(((r20)*(x1349)))+(((r21)*(x1347))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1340)*(x1348)))+(((x1341)*(x1349)))+(((IkReal(-1.00000000000000))*(cj5)*(x1340)*(x1347)))+(((r02)*(x1346)))+(((IkReal(-1.00000000000000))*(r01)*(x1351))));
evalcond[3]=((sj2)+(((IkReal(-1.00000000000000))*(r10)*(x1348)))+(((IkReal(-1.00000000000000))*(r11)*(x1351)))+(((x1342)*(x1349)))+(((r12)*(x1346)))+(((IkReal(-1.00000000000000))*(r10)*(x1344)*(x1347))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj3)))+(((r02)*(x1350)))+(((x1341)*(x1348)))+(((IkReal(-1.00000000000000))*(cj5)*(x1340)*(x1351)))+(((r00)*(x1349)))+(((r01)*(x1347))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj2)*(x1343)))+(((x1342)*(x1348)))+(((r11)*(x1347)))+(((r12)*(x1350)))+(((IkReal(-1.00000000000000))*(r10)*(x1344)*(x1351)))+(((r10)*(x1349))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1352=((IkReal(1.00000000000000))*(sj2));
if( IKabs(((gconst71)*(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1352)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1352))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst71)*(((((IkReal(-1.00000000000000))*(r02)*(sj5)*(x1352)))+(((cj5)*(cj6)*(r00)*(sj2)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(sj6)*(x1352))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst71)*(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1352)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1352)))))), ((gconst71)*(((((IkReal(-1.00000000000000))*(r02)*(sj5)*(x1352)))+(((cj5)*(cj6)*(r00)*(sj2)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(sj6)*(x1352)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1353=IKsin(j4);
IkReal x1354=IKcos(j4);
IkReal x1355=((IkReal(1.00000000000000))*(r00));
IkReal x1356=((cj5)*(r01));
IkReal x1357=((cj5)*(r11));
IkReal x1358=((IkReal(1.00000000000000))*(cj3));
IkReal x1359=((IkReal(1.00000000000000))*(cj5));
IkReal x1360=((cj5)*(r21));
IkReal x1361=((sj5)*(x1353));
IkReal x1362=((cj6)*(x1353));
IkReal x1363=((sj6)*(x1354));
IkReal x1364=((sj6)*(x1353));
IkReal x1365=((sj5)*(x1354));
IkReal x1366=((cj6)*(x1354));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(x1366)))+(((r22)*(x1361)))+(((x1360)*(x1364)))+(((IkReal(-1.00000000000000))*(r20)*(x1363)))+(((IkReal(-1.00000000000000))*(r20)*(x1359)*(x1362)))+(((IkReal(-1.00000000000000))*(cj2))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj2)*(x1358)))+(((r22)*(x1365)))+(((x1360)*(x1363)))+(((r20)*(x1364)))+(((IkReal(-1.00000000000000))*(r20)*(x1359)*(x1366)))+(((r21)*(x1362))));
evalcond[2]=((((x1356)*(x1364)))+(((r02)*(x1361)))+(((IkReal(-1.00000000000000))*(x1355)*(x1363)))+(((IkReal(-1.00000000000000))*(cj5)*(x1355)*(x1362)))+(((IkReal(-1.00000000000000))*(r01)*(x1366))));
evalcond[3]=((((x1357)*(x1364)))+(((IkReal(-1.00000000000000))*(r10)*(x1359)*(x1362)))+(sj2)+(((IkReal(-1.00000000000000))*(r10)*(x1363)))+(((IkReal(-1.00000000000000))*(r11)*(x1366)))+(((r12)*(x1361))));
evalcond[4]=((((x1356)*(x1363)))+(((IkReal(-1.00000000000000))*(sj3)))+(((r02)*(x1365)))+(((IkReal(-1.00000000000000))*(cj5)*(x1355)*(x1366)))+(((r01)*(x1362)))+(((r00)*(x1364))));
evalcond[5]=((((x1357)*(x1363)))+(((IkReal(-1.00000000000000))*(r10)*(x1359)*(x1366)))+(((r10)*(x1364)))+(((IkReal(-1.00000000000000))*(cj2)*(x1358)))+(((r11)*(x1362)))+(((r12)*(x1365))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1367=((IkReal(1.00000000000000))*(cj2));
IkReal x1368=((sj6)*(x1367));
if( IKabs(((gconst70)*(((((IkReal(-1.00000000000000))*(r00)*(x1368)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1367))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst70)*(((((IkReal(-1.00000000000000))*(r02)*(sj5)*(x1367)))+(((cj2)*(cj5)*(cj6)*(r00)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1368))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst70)*(((((IkReal(-1.00000000000000))*(r00)*(x1368)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1367)))))), ((gconst70)*(((((IkReal(-1.00000000000000))*(r02)*(sj5)*(x1367)))+(((cj2)*(cj5)*(cj6)*(r00)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1368)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x1369=IKsin(j4);
IkReal x1370=IKcos(j4);
IkReal x1371=((IkReal(1.00000000000000))*(cj6));
IkReal x1372=((sj5)*(x1369));
IkReal x1373=((cj5)*(x1369));
IkReal x1374=((IkReal(1.00000000000000))*(sj6)*(x1370));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x1374)))+(((IkReal(-1.00000000000000))*(r20)*(x1371)*(x1373)))+(((r22)*(x1372)))+(((r21)*(sj6)*(x1373)))+(((IkReal(-1.00000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(r21)*(x1370)*(x1371))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(x1371)*(x1373)))+(((IkReal(-1.00000000000000))*(r00)*(x1374)))+(((r01)*(sj6)*(x1373)))+(((IkReal(-1.00000000000000))*(r01)*(x1370)*(x1371)))+(((r02)*(x1372))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x1371)*(x1373)))+(sj2)+(((r12)*(x1372)))+(((r11)*(sj6)*(x1373)))+(((IkReal(-1.00000000000000))*(r11)*(x1370)*(x1371)))+(((IkReal(-1.00000000000000))*(r10)*(x1374))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1375=((cj4)*(cj5));
IkReal x1376=((r01)*(sj6));
IkReal x1377=((cj6)*(r00));
if( IKabs(((((r00)*(sj4)*(sj6)))+(((x1375)*(x1376)))+(((cj6)*(r01)*(sj4)))+(((IkReal(-1.00000000000000))*(x1375)*(x1377)))+(((cj4)*(r02)*(sj5))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj5)*(x1377)))+(((IkReal(-1.00000000000000))*(sj5)*(x1376)))+(((cj5)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r00)*(sj4)*(sj6)))+(((x1375)*(x1376)))+(((cj6)*(r01)*(sj4)))+(((IkReal(-1.00000000000000))*(x1375)*(x1377)))+(((cj4)*(r02)*(sj5)))))+IKsqr(((((sj5)*(x1377)))+(((IkReal(-1.00000000000000))*(sj5)*(x1376)))+(((cj5)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((r00)*(sj4)*(sj6)))+(((x1375)*(x1376)))+(((cj6)*(r01)*(sj4)))+(((IkReal(-1.00000000000000))*(x1375)*(x1377)))+(((cj4)*(r02)*(sj5)))), ((((sj5)*(x1377)))+(((IkReal(-1.00000000000000))*(sj5)*(x1376)))+(((cj5)*(r02)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1378=IKsin(j3);
IkReal x1379=IKcos(j3);
IkReal x1380=((r11)*(sj6));
IkReal x1381=((IkReal(1.00000000000000))*(sj5));
IkReal x1382=((cj6)*(sj4));
IkReal x1383=((sj4)*(sj6));
IkReal x1384=((cj4)*(sj5));
IkReal x1385=((cj4)*(cj5));
IkReal x1386=((r01)*(sj6));
IkReal x1387=((r21)*(sj6));
IkReal x1388=((cj6)*(sj5));
IkReal x1389=((IkReal(1.00000000000000))*(x1379));
IkReal x1390=((IkReal(1.00000000000000))*(cj6)*(x1385));
evalcond[0]=((((cj5)*(r22)))+(((sj2)*(x1378)))+(((r20)*(x1388)))+(((IkReal(-1.00000000000000))*(x1381)*(x1387))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1389)))+(((IkReal(-1.00000000000000))*(x1381)*(x1386)))+(((r00)*(x1388)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((r10)*(x1388)))+(((IkReal(-1.00000000000000))*(x1380)*(x1381)))+(((cj2)*(x1378))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x1390)))+(((r21)*(x1382)))+(((r20)*(x1383)))+(((r22)*(x1384)))+(((x1385)*(x1387)))+(((IkReal(-1.00000000000000))*(sj2)*(x1389))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1378)))+(((IkReal(-1.00000000000000))*(r00)*(x1390)))+(((r00)*(x1383)))+(((r01)*(x1382)))+(((x1385)*(x1386)))+(((r02)*(x1384))));
evalcond[5]=((((x1380)*(x1385)))+(((r10)*(x1383)))+(((IkReal(-1.00000000000000))*(r10)*(x1390)))+(((IkReal(-1.00000000000000))*(cj2)*(x1389)))+(((r11)*(x1382)))+(((r12)*(x1384))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1391=((IkReal(1.00000000000000))*(sj2));
if( IKabs(((gconst69)*(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1391)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1391))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst69)*(((((IkReal(-1.00000000000000))*(cj5)*(r01)*(sj6)*(x1391)))+(((IkReal(-1.00000000000000))*(r02)*(sj5)*(x1391)))+(((cj5)*(cj6)*(r00)*(sj2))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst69)*(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1391)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1391)))))), ((gconst69)*(((((IkReal(-1.00000000000000))*(cj5)*(r01)*(sj6)*(x1391)))+(((IkReal(-1.00000000000000))*(r02)*(sj5)*(x1391)))+(((cj5)*(cj6)*(r00)*(sj2)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x1392=IKsin(j4);
IkReal x1393=IKcos(j4);
IkReal x1394=((IkReal(1.00000000000000))*(cj6));
IkReal x1395=((sj5)*(x1392));
IkReal x1396=((cj5)*(x1392));
IkReal x1397=((IkReal(1.00000000000000))*(sj6)*(x1393));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x1397)))+(((r21)*(sj6)*(x1396)))+(((r22)*(x1395)))+(((IkReal(-1.00000000000000))*(r20)*(x1394)*(x1396)))+(((IkReal(-1.00000000000000))*(r21)*(x1393)*(x1394)))+(((IkReal(-1.00000000000000))*(cj2))));
evalcond[1]=((((r01)*(sj6)*(x1396)))+(((IkReal(-1.00000000000000))*(r00)*(x1394)*(x1396)))+(((IkReal(-1.00000000000000))*(r00)*(x1397)))+(((IkReal(-1.00000000000000))*(r01)*(x1393)*(x1394)))+(((r02)*(x1395))));
evalcond[2]=((sj2)+(((r11)*(sj6)*(x1396)))+(((IkReal(-1.00000000000000))*(r10)*(x1394)*(x1396)))+(((IkReal(-1.00000000000000))*(r10)*(x1397)))+(((IkReal(-1.00000000000000))*(r11)*(x1393)*(x1394)))+(((r12)*(x1395))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1398=((cj4)*(cj5));
IkReal x1399=((r01)*(sj6));
IkReal x1400=((cj6)*(r00));
if( IKabs(((((IkReal(-1.00000000000000))*(x1398)*(x1400)))+(((r00)*(sj4)*(sj6)))+(((x1398)*(x1399)))+(((cj6)*(r01)*(sj4)))+(((cj4)*(r02)*(sj5))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(sj5)*(x1399)))+(((sj5)*(x1400)))+(((cj5)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1398)*(x1400)))+(((r00)*(sj4)*(sj6)))+(((x1398)*(x1399)))+(((cj6)*(r01)*(sj4)))+(((cj4)*(r02)*(sj5)))))+IKsqr(((((IkReal(-1.00000000000000))*(sj5)*(x1399)))+(((sj5)*(x1400)))+(((cj5)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1398)*(x1400)))+(((r00)*(sj4)*(sj6)))+(((x1398)*(x1399)))+(((cj6)*(r01)*(sj4)))+(((cj4)*(r02)*(sj5)))), ((((IkReal(-1.00000000000000))*(sj5)*(x1399)))+(((sj5)*(x1400)))+(((cj5)*(r02)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1401=IKsin(j3);
IkReal x1402=IKcos(j3);
IkReal x1403=((r11)*(sj6));
IkReal x1404=((IkReal(1.00000000000000))*(sj5));
IkReal x1405=((cj6)*(sj4));
IkReal x1406=((sj4)*(sj6));
IkReal x1407=((cj4)*(sj5));
IkReal x1408=((cj4)*(cj5));
IkReal x1409=((r01)*(sj6));
IkReal x1410=((r21)*(sj6));
IkReal x1411=((cj6)*(sj5));
IkReal x1412=((IkReal(1.00000000000000))*(x1402));
IkReal x1413=((IkReal(1.00000000000000))*(cj6)*(x1408));
evalcond[0]=((((cj5)*(r22)))+(((r20)*(x1411)))+(((sj2)*(x1401)))+(((IkReal(-1.00000000000000))*(x1404)*(x1410))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1412)))+(((r00)*(x1411)))+(((IkReal(-1.00000000000000))*(x1404)*(x1409)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((r10)*(x1411)))+(((IkReal(-1.00000000000000))*(x1403)*(x1404)))+(((cj2)*(x1401))));
evalcond[3]=((((r20)*(x1406)))+(((r21)*(x1405)))+(((IkReal(-1.00000000000000))*(sj2)*(x1412)))+(((IkReal(-1.00000000000000))*(r20)*(x1413)))+(((r22)*(x1407)))+(((x1408)*(x1410))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1401)))+(((r02)*(x1407)))+(((r00)*(x1406)))+(((r01)*(x1405)))+(((IkReal(-1.00000000000000))*(r00)*(x1413)))+(((x1408)*(x1409))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x1413)))+(((IkReal(-1.00000000000000))*(cj2)*(x1412)))+(((r12)*(x1407)))+(((r11)*(x1405)))+(((x1403)*(x1408)))+(((r10)*(x1406))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1414=((IkReal(195.000000000000))*(cj5));
IkReal x1415=((IkReal(0.250000000000000))*(cj6));
IkReal x1416=((IkReal(0.250000000000000))*(sj6));
IkReal x1417=((IkReal(195.000000000000))*(cj6)*(sj5));
IkReal x1418=((IkReal(195.000000000000))*(sj5)*(sj6));
if( IKabs(((((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*(((((IkReal(-500.000000000000))*(py)))+(((r11)*(x1415)))+(((IkReal(-1.00000000000000))*(r11)*(x1418)))+(((r12)*(x1414)))+(((r10)*(x1416)))+(((r10)*(x1417)))+(((IkReal(200.000000000000))*(cj1))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r21)*(x1415)))+(((r20)*(x1416)))+(((r20)*(x1417)))+(((IkReal(-500.000000000000))*(pz)))+(((r22)*(x1414)))+(((IkReal(-1.00000000000000))*(r21)*(x1418))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*(((((IkReal(-500.000000000000))*(py)))+(((r11)*(x1415)))+(((IkReal(-1.00000000000000))*(r11)*(x1418)))+(((r12)*(x1414)))+(((r10)*(x1416)))+(((r10)*(x1417)))+(((IkReal(200.000000000000))*(cj1)))))))+IKsqr(((((r21)*(x1415)))+(((r20)*(x1416)))+(((r20)*(x1417)))+(((IkReal(-500.000000000000))*(pz)))+(((r22)*(x1414)))+(((IkReal(-1.00000000000000))*(r21)*(x1418)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((IKabs(sj1) != 0)?((IkReal)1/(sj1)):(IkReal)1.0e30))*(((((IkReal(-500.000000000000))*(py)))+(((r11)*(x1415)))+(((IkReal(-1.00000000000000))*(r11)*(x1418)))+(((r12)*(x1414)))+(((r10)*(x1416)))+(((r10)*(x1417)))+(((IkReal(200.000000000000))*(cj1)))))), ((((r21)*(x1415)))+(((r20)*(x1416)))+(((r20)*(x1417)))+(((IkReal(-500.000000000000))*(pz)))+(((r22)*(x1414)))+(((IkReal(-1.00000000000000))*(r21)*(x1418)))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[3];
IkReal x1419=IKsin(j2);
IkReal x1420=((IkReal(0.390000000000000))*(sj5));
IkReal x1421=((IkReal(0.390000000000000))*(cj5));
IkReal x1422=((IkReal(0.000500000000000000))*(cj6));
IkReal x1423=((IkReal(0.000500000000000000))*(sj6));
IkReal x1424=((IkReal(0.00200000000000000))*(x1419));
evalcond[0]=((((r21)*(x1422)))+(((IkReal(-0.00200000000000000))*(IKcos(j2))))+(((r22)*(x1421)))+(((IkReal(-1.00000000000000))*(pz)))+(((cj6)*(r20)*(x1420)))+(((r20)*(x1423)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x1420))));
evalcond[1]=((((r01)*(x1422)))+(((cj6)*(r00)*(x1420)))+(((r00)*(x1423)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1420)))+(((r02)*(x1421)))+(((IkReal(-0.400000000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x1424))));
evalcond[2]=((((r11)*(x1422)))+(((IkReal(0.400000000000000))*(cj1)))+(((r10)*(x1423)))+(((IkReal(-1.00000000000000))*(sj1)*(x1424)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x1420)))+(((cj6)*(r10)*(x1420)))+(((r12)*(x1421))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x1425=(sj6)*(sj6);
IkReal x1426=(cj6)*(cj6);
IkReal x1427=((IkReal(1.00000000000000))*(r20));
IkReal x1428=((r00)*(r21));
IkReal x1429=((r22)*(sj5));
IkReal x1430=((r02)*(sj5));
IkReal x1431=((cj5)*(x1425));
IkReal x1432=((cj5)*(x1426));
gconst0=IKsign(((((x1428)*(x1432)))+(((x1428)*(x1431)))+(((cj6)*(r01)*(x1429)))+(((IkReal(-1.00000000000000))*(sj6)*(x1427)*(x1430)))+(((IkReal(-1.00000000000000))*(r01)*(x1427)*(x1432)))+(((IkReal(-1.00000000000000))*(r01)*(x1427)*(x1431)))+(((r00)*(sj6)*(x1429)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1430)))));
IkReal x1433=(sj6)*(sj6);
IkReal x1434=(cj6)*(cj6);
IkReal x1435=((IkReal(1.00000000000000))*(r20));
IkReal x1436=((r00)*(r21));
IkReal x1437=((r22)*(sj5));
IkReal x1438=((r02)*(sj5));
IkReal x1439=((cj5)*(x1433));
IkReal x1440=((cj5)*(x1434));
dummyeval[0]=((((x1436)*(x1439)))+(((r00)*(sj6)*(x1437)))+(((x1436)*(x1440)))+(((IkReal(-1.00000000000000))*(r01)*(x1435)*(x1439)))+(((IkReal(-1.00000000000000))*(sj6)*(x1435)*(x1438)))+(((cj6)*(r01)*(x1437)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1438)))+(((IkReal(-1.00000000000000))*(r01)*(x1435)*(x1440))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x1441=(sj6)*(sj6);
IkReal x1442=(cj6)*(cj6);
IkReal x1443=((cj6)*(sj5));
IkReal x1444=((r10)*(r21));
IkReal x1445=((IkReal(1.00000000000000))*(r12));
IkReal x1446=((sj5)*(sj6));
IkReal x1447=((cj5)*(x1442));
IkReal x1448=((IkReal(1.00000000000000))*(r11)*(r20));
IkReal x1449=((cj5)*(x1441));
gconst1=IKsign(((((x1444)*(x1447)))+(((x1444)*(x1449)))+(((IkReal(-1.00000000000000))*(x1447)*(x1448)))+(((r10)*(r22)*(x1446)))+(((r11)*(r22)*(x1443)))+(((IkReal(-1.00000000000000))*(r21)*(x1443)*(x1445)))+(((IkReal(-1.00000000000000))*(x1448)*(x1449)))+(((IkReal(-1.00000000000000))*(r20)*(x1445)*(x1446)))));
IkReal x1450=(sj6)*(sj6);
IkReal x1451=(cj6)*(cj6);
IkReal x1452=((cj6)*(sj5));
IkReal x1453=((r10)*(r21));
IkReal x1454=((IkReal(1.00000000000000))*(r12));
IkReal x1455=((sj5)*(sj6));
IkReal x1456=((cj5)*(x1451));
IkReal x1457=((IkReal(1.00000000000000))*(r11)*(r20));
IkReal x1458=((cj5)*(x1450));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1457)*(x1458)))+(((IkReal(-1.00000000000000))*(r21)*(x1452)*(x1454)))+(((r11)*(r22)*(x1452)))+(((IkReal(-1.00000000000000))*(r20)*(x1454)*(x1455)))+(((r10)*(r22)*(x1455)))+(((IkReal(-1.00000000000000))*(x1456)*(x1457)))+(((x1453)*(x1456)))+(((x1453)*(x1458))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x1459=(sj1)*(sj1);
IkReal x1460=(cj1)*(cj1);
dummyeval[0]=((((cj2)*(x1460)))+(((cj2)*(x1459))));
dummyeval[1]=((x1460)+(x1459));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[4];
IkReal x1461=((IkReal(0.390000000000000))*(sj5));
IkReal x1462=((IkReal(0.390000000000000))*(cj5));
IkReal x1463=((IkReal(0.000500000000000000))*(cj6));
IkReal x1464=((IkReal(0.000500000000000000))*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((cj6)*(r20)*(x1461)))+(((r20)*(x1464)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x1461)))+(((IkReal(-1.00000000000000))*(pz)))+(((r22)*(x1462)))+(((r21)*(x1463))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1461)))+(((r01)*(x1463)))+(((r00)*(x1464)))+(((cj6)*(r00)*(x1461)))+(((IkReal(-1.00000000000000))*(px)))+(((r02)*(x1462)))+(((IkReal(-0.00200000000000000))*(cj1)))+(((IkReal(-0.400000000000000))*(sj1))));
evalcond[3]=((((IkReal(0.400000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(py)))+(((r12)*(x1462)))+(((IkReal(-0.00200000000000000))*(sj1)))+(((r11)*(x1463)))+(((r10)*(x1464)))+(((cj6)*(r10)*(x1461)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x1461))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
IkReal x1465=(sj6)*(sj6);
IkReal x1466=(cj6)*(cj6);
IkReal x1467=((IkReal(1.00000000000000))*(r20));
IkReal x1468=((r00)*(r21));
IkReal x1469=((r22)*(sj5));
IkReal x1470=((r02)*(sj5));
IkReal x1471=((cj5)*(x1465));
IkReal x1472=((cj5)*(x1466));
gconst9=IKsign(((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1470)))+(((r00)*(sj6)*(x1469)))+(((IkReal(-1.00000000000000))*(sj6)*(x1467)*(x1470)))+(((cj6)*(r01)*(x1469)))+(((IkReal(-1.00000000000000))*(r01)*(x1467)*(x1471)))+(((IkReal(-1.00000000000000))*(r01)*(x1467)*(x1472)))+(((x1468)*(x1472)))+(((x1468)*(x1471)))));
IkReal x1473=(sj6)*(sj6);
IkReal x1474=(cj6)*(cj6);
IkReal x1475=((IkReal(1.00000000000000))*(r20));
IkReal x1476=((r00)*(r21));
IkReal x1477=((r22)*(sj5));
IkReal x1478=((r02)*(sj5));
IkReal x1479=((cj5)*(x1473));
IkReal x1480=((cj5)*(x1474));
dummyeval[0]=((((r00)*(sj6)*(x1477)))+(((cj6)*(r01)*(x1477)))+(((x1476)*(x1480)))+(((IkReal(-1.00000000000000))*(r01)*(x1475)*(x1480)))+(((IkReal(-1.00000000000000))*(r01)*(x1475)*(x1479)))+(((IkReal(-1.00000000000000))*(sj6)*(x1475)*(x1478)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1478)))+(((x1476)*(x1479))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
IkReal x1481=(sj6)*(sj6);
IkReal x1482=(cj6)*(cj6);
IkReal x1483=((cj6)*(sj5));
IkReal x1484=((r10)*(r21));
IkReal x1485=((IkReal(1.00000000000000))*(r12));
IkReal x1486=((sj5)*(sj6));
IkReal x1487=((cj5)*(x1482));
IkReal x1488=((IkReal(1.00000000000000))*(r11)*(r20));
IkReal x1489=((cj5)*(x1481));
gconst10=IKsign(((((IkReal(-1.00000000000000))*(x1487)*(x1488)))+(((IkReal(-1.00000000000000))*(r20)*(x1485)*(x1486)))+(((IkReal(-1.00000000000000))*(r21)*(x1483)*(x1485)))+(((r10)*(r22)*(x1486)))+(((r11)*(r22)*(x1483)))+(((x1484)*(x1489)))+(((x1484)*(x1487)))+(((IkReal(-1.00000000000000))*(x1488)*(x1489)))));
IkReal x1490=(sj6)*(sj6);
IkReal x1491=(cj6)*(cj6);
IkReal x1492=((cj6)*(sj5));
IkReal x1493=((r10)*(r21));
IkReal x1494=((IkReal(1.00000000000000))*(r12));
IkReal x1495=((sj5)*(sj6));
IkReal x1496=((cj5)*(x1491));
IkReal x1497=((IkReal(1.00000000000000))*(r11)*(r20));
IkReal x1498=((cj5)*(x1490));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1496)*(x1497)))+(((IkReal(-1.00000000000000))*(x1497)*(x1498)))+(((IkReal(-1.00000000000000))*(r21)*(x1492)*(x1494)))+(((r11)*(r22)*(x1492)))+(((r10)*(r22)*(x1495)))+(((IkReal(-1.00000000000000))*(r20)*(x1494)*(x1495)))+(((x1493)*(x1496)))+(((x1493)*(x1498))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj1;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1499=((IkReal(0.000500000000000000))*(cj6));
IkReal x1500=((IkReal(0.000500000000000000))*(sj6));
IkReal x1501=((sj5)*(sj6));
IkReal x1502=((cj5)*(r12));
IkReal x1503=((IkReal(0.390000000000000))*(cj5));
IkReal x1504=((IkReal(0.390000000000000))*(cj6)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((cj6)*(r10)*(sj5)))+(x1502)+(((IkReal(-1.00000000000000))*(r11)*(x1501))));
evalcond[2]=((((r20)*(x1504)))+(((r20)*(x1500)))+(((r21)*(x1499)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-0.390000000000000))*(r21)*(x1501)))+(((r22)*(x1503))));
evalcond[3]=((IkReal(-0.400000000000000))+(((r01)*(x1499)))+(((r00)*(x1504)))+(((r00)*(x1500)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.390000000000000))*(r01)*(x1501)))+(((r02)*(x1503))));
evalcond[4]=((IkReal(-0.00200000000000000))+(((IkReal(0.390000000000000))*(x1502)))+(((r10)*(x1504)))+(((r10)*(x1500)))+(((IkReal(-0.390000000000000))*(r11)*(x1501)))+(((r11)*(x1499)))+(((IkReal(-1.00000000000000))*(py))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1505=((sj5)*(sj6));
IkReal x1506=((IkReal(1.00000000000000))*(cj5));
IkReal x1507=((IkReal(1.00000000000000))*(cj6)*(sj5));
if( IKabs(((((IkReal(-1.00000000000000))*(r20)*(x1507)))+(((IkReal(-1.00000000000000))*(r22)*(x1506)))+(((r21)*(x1505))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r00)*(x1507)))+(((r01)*(x1505)))+(((IkReal(-1.00000000000000))*(r02)*(x1506))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r20)*(x1507)))+(((IkReal(-1.00000000000000))*(r22)*(x1506)))+(((r21)*(x1505)))))+IKsqr(((((IkReal(-1.00000000000000))*(r00)*(x1507)))+(((r01)*(x1505)))+(((IkReal(-1.00000000000000))*(r02)*(x1506)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r20)*(x1507)))+(((IkReal(-1.00000000000000))*(r22)*(x1506)))+(((r21)*(x1505)))), ((((IkReal(-1.00000000000000))*(r00)*(x1507)))+(((r01)*(x1505)))+(((IkReal(-1.00000000000000))*(r02)*(x1506)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[2];
IkReal x1508=((cj6)*(sj5));
IkReal x1509=((IkReal(1.00000000000000))*(sj5)*(sj6));
evalcond[0]=((((cj5)*(r22)))+(((r20)*(x1508)))+(IKsin(j3))+(((IkReal(-1.00000000000000))*(r21)*(x1509))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x1509)))+(((r00)*(x1508)))+(IKcos(j3))+(((cj5)*(r02))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst15;
IkReal x1510=(sj6)*(sj6);
IkReal x1511=(cj6)*(cj6);
IkReal x1512=((r01)*(r10));
IkReal x1513=((IkReal(1.00000000000000))*(r00));
IkReal x1514=((r02)*(sj5));
IkReal x1515=((r12)*(sj5));
IkReal x1516=((cj5)*(x1510));
IkReal x1517=((cj5)*(x1511));
gconst15=IKsign(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1515)))+(((r10)*(sj6)*(x1514)))+(((IkReal(-1.00000000000000))*(r11)*(x1513)*(x1516)))+(((IkReal(-1.00000000000000))*(r11)*(x1513)*(x1517)))+(((x1512)*(x1516)))+(((x1512)*(x1517)))+(((IkReal(-1.00000000000000))*(sj6)*(x1513)*(x1515)))+(((cj6)*(r11)*(x1514)))));
IkReal x1518=(sj6)*(sj6);
IkReal x1519=(cj6)*(cj6);
IkReal x1520=((r01)*(r10));
IkReal x1521=((IkReal(1.00000000000000))*(r00));
IkReal x1522=((r02)*(sj5));
IkReal x1523=((r12)*(sj5));
IkReal x1524=((cj5)*(x1518));
IkReal x1525=((cj5)*(x1519));
dummyeval[0]=((((cj6)*(r11)*(x1522)))+(((IkReal(-1.00000000000000))*(sj6)*(x1521)*(x1523)))+(((IkReal(-1.00000000000000))*(r11)*(x1521)*(x1524)))+(((IkReal(-1.00000000000000))*(r11)*(x1521)*(x1525)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1523)))+(((r10)*(sj6)*(x1522)))+(((x1520)*(x1524)))+(((x1520)*(x1525))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst16;
IkReal x1526=(cj5)*(cj5);
IkReal x1527=(sj6)*(sj6);
IkReal x1528=(cj6)*(cj6);
IkReal x1529=((r00)*(r20));
IkReal x1530=((cj5)*(sj5));
IkReal x1531=((r01)*(r21));
IkReal x1532=((r21)*(sj6));
IkReal x1533=((sj6)*(x1530));
IkReal x1534=((IkReal(1.00000000000000))*(cj6)*(r00));
IkReal x1535=((cj6)*(r01)*(r20)*(sj6));
gconst16=IKsign(((((r01)*(r22)*(x1533)))+(((r02)*(x1530)*(x1532)))+(((IkReal(-1.00000000000000))*(r22)*(x1530)*(x1534)))+(((cj6)*(r00)*(x1532)))+(((x1528)*(x1531)))+(((x1526)*(x1528)*(x1529)))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(r20)*(x1530)))+(x1535)+(((x1527)*(x1529)))+(((r02)*(r22)*((sj5)*(sj5))))+(((IkReal(-1.00000000000000))*(x1526)*(x1532)*(x1534)))+(((IkReal(-1.00000000000000))*(x1526)*(x1535)))+(((x1526)*(x1527)*(x1531)))));
IkReal x1536=(cj5)*(cj5);
IkReal x1537=(sj6)*(sj6);
IkReal x1538=(cj6)*(cj6);
IkReal x1539=((r00)*(r20));
IkReal x1540=((cj5)*(sj5));
IkReal x1541=((r01)*(r21));
IkReal x1542=((r21)*(sj6));
IkReal x1543=((sj6)*(x1540));
IkReal x1544=((IkReal(1.00000000000000))*(cj6)*(r00));
IkReal x1545=x1535;
dummyeval[0]=((((x1538)*(x1541)))+(((x1537)*(x1539)))+(x1545)+(((r01)*(r22)*(x1543)))+(((r02)*(r22)*((sj5)*(sj5))))+(((IkReal(-1.00000000000000))*(x1536)*(x1542)*(x1544)))+(((IkReal(-1.00000000000000))*(r22)*(x1540)*(x1544)))+(((x1536)*(x1538)*(x1539)))+(((IkReal(-1.00000000000000))*(x1536)*(x1545)))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(r20)*(x1540)))+(((cj6)*(r00)*(x1542)))+(((x1536)*(x1537)*(x1541)))+(((r02)*(x1540)*(x1542))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1546=((IkReal(1.00000000000000))*(sj3));
if( IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1546)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x1546))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(r22)*(sj5)*(x1546)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(sj6)*(x1546)))+(((cj5)*(cj6)*(r20)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst16)*(((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1546)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x1546)))))), ((gconst16)*(((((IkReal(-1.00000000000000))*(r22)*(sj5)*(x1546)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(sj6)*(x1546)))+(((cj5)*(cj6)*(r20)*(sj3)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1547=IKsin(j4);
IkReal x1548=IKcos(j4);
IkReal x1549=((IkReal(1.00000000000000))*(r00));
IkReal x1550=((cj5)*(r01));
IkReal x1551=((cj5)*(r11));
IkReal x1552=((IkReal(1.00000000000000))*(cj5));
IkReal x1553=((cj5)*(r21));
IkReal x1554=((sj5)*(x1547));
IkReal x1555=((cj6)*(x1547));
IkReal x1556=((sj6)*(x1548));
IkReal x1557=((sj6)*(x1547));
IkReal x1558=((sj5)*(x1548));
IkReal x1559=((cj6)*(x1548));
evalcond[0]=((((x1553)*(x1557)))+(((IkReal(-1.00000000000000))*(r21)*(x1559)))+(((IkReal(-1.00000000000000))*(r20)*(x1552)*(x1555)))+(((r22)*(x1554)))+(((IkReal(-1.00000000000000))*(r20)*(x1556))));
evalcond[1]=((((x1553)*(x1556)))+(((IkReal(-1.00000000000000))*(r20)*(x1552)*(x1559)))+(((r22)*(x1558)))+(((r21)*(x1555)))+(((r20)*(x1557)))+(((IkReal(-1.00000000000000))*(cj3))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1549)*(x1556)))+(((IkReal(-1.00000000000000))*(cj5)*(x1549)*(x1555)))+(((x1550)*(x1557)))+(((r02)*(x1554)))+(((IkReal(-1.00000000000000))*(r01)*(x1559))));
evalcond[3]=((IkReal(-1.00000000000000))+(((x1551)*(x1557)))+(((r12)*(x1554)))+(((IkReal(-1.00000000000000))*(r10)*(x1556)))+(((IkReal(-1.00000000000000))*(r11)*(x1559)))+(((IkReal(-1.00000000000000))*(r10)*(x1552)*(x1555))));
evalcond[4]=((((r00)*(x1557)))+(((r01)*(x1555)))+(sj3)+(((IkReal(-1.00000000000000))*(cj5)*(x1549)*(x1559)))+(((x1550)*(x1556)))+(((r02)*(x1558))));
evalcond[5]=((((x1551)*(x1556)))+(((r11)*(x1555)))+(((r12)*(x1558)))+(((IkReal(-1.00000000000000))*(r10)*(x1552)*(x1559)))+(((r10)*(x1557))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1560=((cj5)*(sj3));
IkReal x1561=((IkReal(1.00000000000000))*(r10));
if( IKabs(((gconst15)*(((((r12)*(sj3)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(x1560)*(x1561)))+(((r11)*(sj6)*(x1560))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((IkReal(-1.00000000000000))*(sj3)*(sj6)*(x1561)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst15)*(((((r12)*(sj3)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(x1560)*(x1561)))+(((r11)*(sj6)*(x1560)))))), ((gconst15)*(((((IkReal(-1.00000000000000))*(sj3)*(sj6)*(x1561)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(sj3)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1562=IKsin(j4);
IkReal x1563=IKcos(j4);
IkReal x1564=((IkReal(1.00000000000000))*(r00));
IkReal x1565=((cj5)*(r01));
IkReal x1566=((cj5)*(r11));
IkReal x1567=((IkReal(1.00000000000000))*(cj5));
IkReal x1568=((cj5)*(r21));
IkReal x1569=((sj5)*(x1562));
IkReal x1570=((cj6)*(x1562));
IkReal x1571=((sj6)*(x1563));
IkReal x1572=((sj6)*(x1562));
IkReal x1573=((sj5)*(x1563));
IkReal x1574=((cj6)*(x1563));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x1571)))+(((IkReal(-1.00000000000000))*(r21)*(x1574)))+(((x1568)*(x1572)))+(((IkReal(-1.00000000000000))*(r20)*(x1567)*(x1570)))+(((r22)*(x1569))));
evalcond[1]=((((r20)*(x1572)))+(((x1568)*(x1571)))+(((r21)*(x1570)))+(((IkReal(-1.00000000000000))*(r20)*(x1567)*(x1574)))+(((r22)*(x1573)))+(((IkReal(-1.00000000000000))*(cj3))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x1574)))+(((IkReal(-1.00000000000000))*(x1564)*(x1571)))+(((r02)*(x1569)))+(((x1565)*(x1572)))+(((IkReal(-1.00000000000000))*(cj5)*(x1564)*(x1570))));
evalcond[3]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x1567)*(x1570)))+(((x1566)*(x1572)))+(((r12)*(x1569)))+(((IkReal(-1.00000000000000))*(r10)*(x1571)))+(((IkReal(-1.00000000000000))*(r11)*(x1574))));
evalcond[4]=((sj3)+(((r02)*(x1573)))+(((x1565)*(x1571)))+(((IkReal(-1.00000000000000))*(cj5)*(x1564)*(x1574)))+(((r01)*(x1570)))+(((r00)*(x1572))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x1567)*(x1574)))+(((x1566)*(x1571)))+(((r12)*(x1573)))+(((r11)*(x1570)))+(((r10)*(x1572))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x1575=((IkReal(0.000500000000000000))*(cj6));
IkReal x1576=((IkReal(0.000500000000000000))*(sj6));
IkReal x1577=((sj5)*(sj6));
IkReal x1578=((cj5)*(r12));
IkReal x1579=((IkReal(0.390000000000000))*(cj5));
IkReal x1580=((IkReal(0.390000000000000))*(cj6)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((cj6)*(r10)*(sj5)))+(x1578)+(((IkReal(-1.00000000000000))*(r11)*(x1577))));
evalcond[2]=((((r20)*(x1576)))+(((r20)*(x1580)))+(((IkReal(-1.00000000000000))*(pz)))+(((r21)*(x1575)))+(((IkReal(-0.390000000000000))*(r21)*(x1577)))+(((r22)*(x1579))));
evalcond[3]=((IkReal(0.400000000000000))+(((IkReal(-1.00000000000000))*(px)))+(((r02)*(x1579)))+(((IkReal(-0.390000000000000))*(r01)*(x1577)))+(((r01)*(x1575)))+(((r00)*(x1576)))+(((r00)*(x1580))));
evalcond[4]=((IkReal(0.00200000000000000))+(((IkReal(0.390000000000000))*(x1578)))+(((IkReal(-0.390000000000000))*(r11)*(x1577)))+(((IkReal(-1.00000000000000))*(py)))+(((r11)*(x1575)))+(((r10)*(x1576)))+(((r10)*(x1580))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1581=((IkReal(1.00000000000000))*(sj5));
if( IKabs(((((IkReal(-1.00000000000000))*(cj6)*(r20)*(x1581)))+(((r21)*(sj5)*(sj6)))+(((IkReal(-1.00000000000000))*(cj5)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1581)))+(((cj6)*(r00)*(sj5)))+(((cj5)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj6)*(r20)*(x1581)))+(((r21)*(sj5)*(sj6)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))))+IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1581)))+(((cj6)*(r00)*(sj5)))+(((cj5)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj6)*(r20)*(x1581)))+(((r21)*(sj5)*(sj6)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))), ((((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1581)))+(((cj6)*(r00)*(sj5)))+(((cj5)*(r02)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[2];
IkReal x1582=((cj6)*(sj5));
IkReal x1583=((IkReal(1.00000000000000))*(sj5)*(sj6));
evalcond[0]=((((cj5)*(r22)))+(((r20)*(x1582)))+(IKsin(j3))+(((IkReal(-1.00000000000000))*(r21)*(x1583))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x1583)))+(((IkReal(-1.00000000000000))*(IKcos(j3))))+(((r00)*(x1582)))+(((cj5)*(r02))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst19;
IkReal x1584=(cj6)*(cj6);
IkReal x1585=(sj6)*(sj6);
IkReal x1586=((r11)*(r20));
IkReal x1587=((r12)*(sj5));
IkReal x1588=((IkReal(1.00000000000000))*(r10));
IkReal x1589=((r22)*(sj5));
IkReal x1590=((cj5)*(x1585));
IkReal x1591=((cj5)*(x1584));
gconst19=IKsign(((((x1586)*(x1591)))+(((x1586)*(x1590)))+(((IkReal(-1.00000000000000))*(r21)*(x1588)*(x1591)))+(((IkReal(-1.00000000000000))*(r21)*(x1588)*(x1590)))+(((r20)*(sj6)*(x1587)))+(((IkReal(-1.00000000000000))*(sj6)*(x1588)*(x1589)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1589)))+(((cj6)*(r21)*(x1587)))));
IkReal x1592=(cj6)*(cj6);
IkReal x1593=(sj6)*(sj6);
IkReal x1594=((r11)*(r20));
IkReal x1595=((r12)*(sj5));
IkReal x1596=((IkReal(1.00000000000000))*(r10));
IkReal x1597=((r22)*(sj5));
IkReal x1598=((cj5)*(x1593));
IkReal x1599=((cj5)*(x1592));
dummyeval[0]=((((x1594)*(x1598)))+(((x1594)*(x1599)))+(((IkReal(-1.00000000000000))*(sj6)*(x1596)*(x1597)))+(((r20)*(sj6)*(x1595)))+(((IkReal(-1.00000000000000))*(r21)*(x1596)*(x1599)))+(((IkReal(-1.00000000000000))*(r21)*(x1596)*(x1598)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1597)))+(((cj6)*(r21)*(x1595))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst20;
IkReal x1600=(cj5)*(cj5);
IkReal x1601=(r11)*(r11);
IkReal x1602=(sj6)*(sj6);
IkReal x1603=(cj6)*(cj6);
IkReal x1604=(r10)*(r10);
IkReal x1605=((r11)*(sj6));
IkReal x1606=((IkReal(1.00000000000000))*(x1602));
IkReal x1607=((IkReal(1.00000000000000))*(x1603));
IkReal x1608=((IkReal(2.00000000000000))*(cj6)*(r10));
IkReal x1609=((cj5)*(r12)*(sj5));
gconst20=IKsign(((((IkReal(-1.00000000000000))*(x1600)*(x1601)*(x1606)))+(((IkReal(-1.00000000000000))*((r12)*(r12))*((sj5)*(sj5))))+(((IkReal(-1.00000000000000))*(x1601)*(x1607)))+(((x1608)*(x1609)))+(((x1600)*(x1605)*(x1608)))+(((IkReal(-1.00000000000000))*(x1605)*(x1608)))+(((IkReal(-1.00000000000000))*(x1600)*(x1604)*(x1607)))+(((IkReal(-2.00000000000000))*(x1605)*(x1609)))+(((IkReal(-1.00000000000000))*(x1604)*(x1606)))));
IkReal x1610=(cj5)*(cj5);
IkReal x1611=(r11)*(r11);
IkReal x1612=(sj6)*(sj6);
IkReal x1613=(cj6)*(cj6);
IkReal x1614=(r10)*(r10);
IkReal x1615=((r11)*(sj6));
IkReal x1616=((IkReal(1.00000000000000))*(x1612));
IkReal x1617=((IkReal(1.00000000000000))*(x1613));
IkReal x1618=((IkReal(2.00000000000000))*(cj6)*(r10));
IkReal x1619=((cj5)*(r12)*(sj5));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1611)*(x1617)))+(((x1610)*(x1615)*(x1618)))+(((IkReal(-1.00000000000000))*((r12)*(r12))*((sj5)*(sj5))))+(((IkReal(-1.00000000000000))*(x1610)*(x1614)*(x1617)))+(((IkReal(-1.00000000000000))*(x1614)*(x1616)))+(((x1618)*(x1619)))+(((IkReal(-2.00000000000000))*(x1615)*(x1619)))+(((IkReal(-1.00000000000000))*(x1615)*(x1618)))+(((IkReal(-1.00000000000000))*(x1610)*(x1611)*(x1616))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1620=((IkReal(1.00000000000000))*(r10));
if( IKabs(((gconst20)*(((((cj5)*(r11)*(sj6)))+(((IkReal(-1.00000000000000))*(cj5)*(cj6)*(x1620)))+(((r12)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst20)*(((((IkReal(-1.00000000000000))*(cj6)*(r11)))+(((IkReal(-1.00000000000000))*(sj6)*(x1620))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst20)*(((((cj5)*(r11)*(sj6)))+(((IkReal(-1.00000000000000))*(cj5)*(cj6)*(x1620)))+(((r12)*(sj5)))))), ((gconst20)*(((((IkReal(-1.00000000000000))*(cj6)*(r11)))+(((IkReal(-1.00000000000000))*(sj6)*(x1620)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1621=IKsin(j4);
IkReal x1622=IKcos(j4);
IkReal x1623=((IkReal(1.00000000000000))*(r00));
IkReal x1624=((cj5)*(r01));
IkReal x1625=((cj5)*(r11));
IkReal x1626=((IkReal(1.00000000000000))*(cj5));
IkReal x1627=((cj5)*(r21));
IkReal x1628=((sj5)*(x1621));
IkReal x1629=((cj6)*(x1621));
IkReal x1630=((sj6)*(x1622));
IkReal x1631=((sj6)*(x1621));
IkReal x1632=((sj5)*(x1622));
IkReal x1633=((cj6)*(x1622));
evalcond[0]=((((x1627)*(x1631)))+(((IkReal(-1.00000000000000))*(r20)*(x1626)*(x1629)))+(((IkReal(-1.00000000000000))*(r20)*(x1630)))+(((r22)*(x1628)))+(((IkReal(-1.00000000000000))*(r21)*(x1633))));
evalcond[1]=((((x1627)*(x1630)))+(((r20)*(x1631)))+(((r21)*(x1629)))+(((IkReal(-1.00000000000000))*(r20)*(x1626)*(x1633)))+(((r22)*(x1632)))+(((IkReal(-1.00000000000000))*(cj3))));
evalcond[2]=((((r02)*(x1628)))+(((IkReal(-1.00000000000000))*(x1623)*(x1630)))+(((IkReal(-1.00000000000000))*(r01)*(x1633)))+(((x1624)*(x1631)))+(((IkReal(-1.00000000000000))*(cj5)*(x1623)*(x1629))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x1626)*(x1629)))+(((x1625)*(x1631)))+(((r12)*(x1628)))+(((IkReal(-1.00000000000000))*(r10)*(x1630)))+(((IkReal(-1.00000000000000))*(r11)*(x1633))));
evalcond[4]=((((r02)*(x1632)))+(((IkReal(-1.00000000000000))*(sj3)))+(((r01)*(x1629)))+(((x1624)*(x1630)))+(((r00)*(x1631)))+(((IkReal(-1.00000000000000))*(cj5)*(x1623)*(x1633))));
evalcond[5]=((((r10)*(x1631)))+(((r12)*(x1632)))+(((x1625)*(x1630)))+(((r11)*(x1629)))+(((IkReal(-1.00000000000000))*(r10)*(x1626)*(x1633))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1634=((cj3)*(sj6));
IkReal x1635=((IkReal(1.00000000000000))*(r10));
IkReal x1636=((cj3)*(cj6));
if( IKabs(((gconst19)*(((((cj3)*(r12)*(sj5)))+(((cj5)*(r11)*(x1634)))+(((IkReal(-1.00000000000000))*(cj5)*(x1635)*(x1636))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst19)*(((((IkReal(-1.00000000000000))*(x1634)*(x1635)))+(((IkReal(-1.00000000000000))*(r11)*(x1636))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst19)*(((((cj3)*(r12)*(sj5)))+(((cj5)*(r11)*(x1634)))+(((IkReal(-1.00000000000000))*(cj5)*(x1635)*(x1636)))))), ((gconst19)*(((((IkReal(-1.00000000000000))*(x1634)*(x1635)))+(((IkReal(-1.00000000000000))*(r11)*(x1636)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1637=IKsin(j4);
IkReal x1638=IKcos(j4);
IkReal x1639=((IkReal(1.00000000000000))*(r00));
IkReal x1640=((cj5)*(r01));
IkReal x1641=((cj5)*(r11));
IkReal x1642=((IkReal(1.00000000000000))*(cj5));
IkReal x1643=((cj5)*(r21));
IkReal x1644=((sj5)*(x1637));
IkReal x1645=((cj6)*(x1637));
IkReal x1646=((sj6)*(x1638));
IkReal x1647=((sj6)*(x1637));
IkReal x1648=((sj5)*(x1638));
IkReal x1649=((cj6)*(x1638));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x1646)))+(((IkReal(-1.00000000000000))*(r20)*(x1642)*(x1645)))+(((x1643)*(x1647)))+(((IkReal(-1.00000000000000))*(r21)*(x1649)))+(((r22)*(x1644))));
evalcond[1]=((((r21)*(x1645)))+(((r20)*(x1647)))+(((IkReal(-1.00000000000000))*(r20)*(x1642)*(x1649)))+(((x1643)*(x1646)))+(((r22)*(x1648)))+(((IkReal(-1.00000000000000))*(cj3))));
evalcond[2]=((((x1640)*(x1647)))+(((r02)*(x1644)))+(((IkReal(-1.00000000000000))*(r01)*(x1649)))+(((IkReal(-1.00000000000000))*(x1639)*(x1646)))+(((IkReal(-1.00000000000000))*(cj5)*(x1639)*(x1645))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x1642)*(x1645)))+(((r12)*(x1644)))+(((x1641)*(x1647)))+(((IkReal(-1.00000000000000))*(r10)*(x1646)))+(((IkReal(-1.00000000000000))*(r11)*(x1649))));
evalcond[4]=((((x1640)*(x1646)))+(((IkReal(-1.00000000000000))*(sj3)))+(((r02)*(x1648)))+(((r00)*(x1647)))+(((IkReal(-1.00000000000000))*(cj5)*(x1639)*(x1649)))+(((r01)*(x1645))));
evalcond[5]=((((r11)*(x1645)))+(((r10)*(x1647)))+(((IkReal(-1.00000000000000))*(r10)*(x1642)*(x1649)))+(((r12)*(x1648)))+(((x1641)*(x1646))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1650=((cj6)*(sj5));
IkReal x1651=((sj5)*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x1650)))+(((r21)*(x1651))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)))+(((r10)*(x1650)))+(((IkReal(-1.00000000000000))*(r11)*(x1651))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x1650)))+(((r21)*(x1651)))))+IKsqr(((((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)))+(((r10)*(x1650)))+(((IkReal(-1.00000000000000))*(r11)*(x1651)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x1650)))+(((r21)*(x1651)))), ((((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)))+(((r10)*(x1650)))+(((IkReal(-1.00000000000000))*(r11)*(x1651)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x1652=IKcos(j3);
IkReal x1653=((cj6)*(sj5));
IkReal x1654=((IkReal(1.00000000000000))*(sj5)*(sj6));
evalcond[0]=((((cj5)*(r22)))+(((r20)*(x1653)))+(((IkReal(-1.00000000000000))*(r21)*(x1654)))+(IKsin(j3)));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x1654)))+(((sj1)*(x1652)))+(((r00)*(x1653)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((r10)*(x1653)))+(((IkReal(-1.00000000000000))*(r11)*(x1654)))+(((IkReal(-1.00000000000000))*(cj1)*(x1652))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst11;
IkReal x1655=(cj5)*(cj5);
IkReal x1656=(r21)*(r21);
IkReal x1657=(sj6)*(sj6);
IkReal x1658=(cj6)*(cj6);
IkReal x1659=(r20)*(r20);
IkReal x1660=((cj6)*(r20));
IkReal x1661=((IkReal(1.00000000000000))*(x1658));
IkReal x1662=((IkReal(2.00000000000000))*(r21)*(sj6));
IkReal x1663=((cj5)*(r22)*(sj5));
IkReal x1664=((IkReal(1.00000000000000))*(x1657));
gconst11=IKsign(((((IkReal(-1.00000000000000))*(x1656)*(x1661)))+(((IkReal(-1.00000000000000))*(x1662)*(x1663)))+(((IkReal(-1.00000000000000))*(x1655)*(x1656)*(x1664)))+(((IkReal(2.00000000000000))*(x1660)*(x1663)))+(((x1655)*(x1660)*(x1662)))+(((IkReal(-1.00000000000000))*(x1655)*(x1659)*(x1661)))+(((IkReal(-1.00000000000000))*(x1660)*(x1662)))+(((IkReal(-1.00000000000000))*((r22)*(r22))*((sj5)*(sj5))))+(((IkReal(-1.00000000000000))*(x1659)*(x1664)))));
IkReal x1665=(cj5)*(cj5);
IkReal x1666=(r21)*(r21);
IkReal x1667=(sj6)*(sj6);
IkReal x1668=(cj6)*(cj6);
IkReal x1669=(r20)*(r20);
IkReal x1670=((cj6)*(r20));
IkReal x1671=((IkReal(1.00000000000000))*(x1668));
IkReal x1672=((IkReal(2.00000000000000))*(r21)*(sj6));
IkReal x1673=((cj5)*(r22)*(sj5));
IkReal x1674=((IkReal(1.00000000000000))*(x1667));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1672)*(x1673)))+(((IkReal(-1.00000000000000))*(x1669)*(x1674)))+(((IkReal(-1.00000000000000))*(x1665)*(x1669)*(x1671)))+(((IkReal(2.00000000000000))*(x1670)*(x1673)))+(((IkReal(-1.00000000000000))*(x1670)*(x1672)))+(((x1665)*(x1670)*(x1672)))+(((IkReal(-1.00000000000000))*(x1666)*(x1671)))+(((IkReal(-1.00000000000000))*(x1665)*(x1666)*(x1674)))+(((IkReal(-1.00000000000000))*((r22)*(r22))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
IkReal x1675=(cj5)*(cj5);
IkReal x1676=(sj6)*(sj6);
IkReal x1677=(cj6)*(cj6);
IkReal x1678=((r00)*(r20));
IkReal x1679=((cj5)*(sj5));
IkReal x1680=((r01)*(r21));
IkReal x1681=((r21)*(sj6));
IkReal x1682=((sj6)*(x1679));
IkReal x1683=((IkReal(1.00000000000000))*(cj6)*(r00));
IkReal x1684=((cj6)*(r01)*(r20)*(sj6));
gconst12=IKsign(((((x1676)*(x1678)))+(((x1675)*(x1677)*(x1678)))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(r20)*(x1679)))+(((IkReal(-1.00000000000000))*(r22)*(x1679)*(x1683)))+(((x1677)*(x1680)))+(((IkReal(-1.00000000000000))*(x1675)*(x1681)*(x1683)))+(x1684)+(((r01)*(r22)*(x1682)))+(((x1675)*(x1676)*(x1680)))+(((IkReal(-1.00000000000000))*(x1675)*(x1684)))+(((r02)*(r22)*((sj5)*(sj5))))+(((cj6)*(r00)*(x1681)))+(((r02)*(x1679)*(x1681)))));
IkReal x1685=(cj5)*(cj5);
IkReal x1686=(sj6)*(sj6);
IkReal x1687=(cj6)*(cj6);
IkReal x1688=((r00)*(r20));
IkReal x1689=((cj5)*(sj5));
IkReal x1690=((r01)*(r21));
IkReal x1691=((r21)*(sj6));
IkReal x1692=((sj6)*(x1689));
IkReal x1693=((IkReal(1.00000000000000))*(cj6)*(r00));
IkReal x1694=x1684;
dummyeval[0]=((((IkReal(-1.00000000000000))*(r22)*(x1689)*(x1693)))+(((x1685)*(x1686)*(x1690)))+(x1694)+(((r01)*(r22)*(x1692)))+(((IkReal(-1.00000000000000))*(x1685)*(x1691)*(x1693)))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(r20)*(x1689)))+(((r02)*(x1689)*(x1691)))+(((IkReal(-1.00000000000000))*(x1685)*(x1694)))+(((x1686)*(x1688)))+(((r02)*(r22)*((sj5)*(sj5))))+(((cj6)*(r00)*(x1691)))+(((x1687)*(x1690)))+(((x1685)*(x1687)*(x1688))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1695=((IkReal(1.00000000000000))*(sj1)*(sj3));
if( IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(r20)*(sj6)*(x1695)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1695))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(r22)*(sj5)*(x1695)))+(((cj5)*(cj6)*(r20)*(sj1)*(sj3)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(sj6)*(x1695))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst12)*(((((IkReal(-1.00000000000000))*(r20)*(sj6)*(x1695)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1695)))))), ((gconst12)*(((((IkReal(-1.00000000000000))*(r22)*(sj5)*(x1695)))+(((cj5)*(cj6)*(r20)*(sj1)*(sj3)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(sj6)*(x1695)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1696=IKsin(j4);
IkReal x1697=IKcos(j4);
IkReal x1698=((IkReal(1.00000000000000))*(r00));
IkReal x1699=((cj5)*(r01));
IkReal x1700=((cj5)*(r11));
IkReal x1701=((IkReal(1.00000000000000))*(cj5));
IkReal x1702=((IkReal(1.00000000000000))*(cj1));
IkReal x1703=((cj5)*(r21));
IkReal x1704=((sj5)*(x1696));
IkReal x1705=((cj6)*(x1696));
IkReal x1706=((sj6)*(x1697));
IkReal x1707=((sj6)*(x1696));
IkReal x1708=((sj5)*(x1697));
IkReal x1709=((cj6)*(x1697));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x1701)*(x1705)))+(((r22)*(x1704)))+(((x1703)*(x1707)))+(((IkReal(-1.00000000000000))*(r21)*(x1709)))+(((IkReal(-1.00000000000000))*(r20)*(x1706))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x1701)*(x1709)))+(((r22)*(x1708)))+(((x1703)*(x1706)))+(((r20)*(x1707)))+(((r21)*(x1705)))+(((IkReal(-1.00000000000000))*(cj3))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1698)*(x1706)))+(((r02)*(x1704)))+(((IkReal(-1.00000000000000))*(r01)*(x1709)))+(((IkReal(-1.00000000000000))*(x1702)))+(((IkReal(-1.00000000000000))*(cj5)*(x1698)*(x1705)))+(((x1699)*(x1707))));
evalcond[3]=((((r12)*(x1704)))+(((IkReal(-1.00000000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(r10)*(x1706)))+(((x1700)*(x1707)))+(((IkReal(-1.00000000000000))*(r11)*(x1709)))+(((IkReal(-1.00000000000000))*(r10)*(x1701)*(x1705))));
evalcond[4]=((((r02)*(x1708)))+(((r01)*(x1705)))+(((sj1)*(sj3)))+(((r00)*(x1707)))+(((IkReal(-1.00000000000000))*(cj5)*(x1698)*(x1709)))+(((x1699)*(x1706))));
evalcond[5]=((((r12)*(x1708)))+(((r11)*(x1705)))+(((IkReal(-1.00000000000000))*(sj3)*(x1702)))+(((x1700)*(x1706)))+(((r10)*(x1707)))+(((IkReal(-1.00000000000000))*(r10)*(x1701)*(x1709))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1710=((cj3)*(cj6));
IkReal x1711=((IkReal(1.00000000000000))*(r21));
IkReal x1712=((cj3)*(sj6));
if( IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(x1710)*(x1711)))+(((IkReal(-1.00000000000000))*(r20)*(x1712))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(cj5)*(x1711)*(x1712)))+(((cj5)*(r20)*(x1710)))+(((IkReal(-1.00000000000000))*(cj3)*(r22)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst11)*(((((IkReal(-1.00000000000000))*(x1710)*(x1711)))+(((IkReal(-1.00000000000000))*(r20)*(x1712)))))), ((gconst11)*(((((IkReal(-1.00000000000000))*(cj5)*(x1711)*(x1712)))+(((cj5)*(r20)*(x1710)))+(((IkReal(-1.00000000000000))*(cj3)*(r22)*(sj5)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1713=IKsin(j4);
IkReal x1714=IKcos(j4);
IkReal x1715=((IkReal(1.00000000000000))*(r00));
IkReal x1716=((cj5)*(r01));
IkReal x1717=((cj5)*(r11));
IkReal x1718=((IkReal(1.00000000000000))*(cj5));
IkReal x1719=((IkReal(1.00000000000000))*(cj1));
IkReal x1720=((cj5)*(r21));
IkReal x1721=((sj5)*(x1713));
IkReal x1722=((cj6)*(x1713));
IkReal x1723=((sj6)*(x1714));
IkReal x1724=((sj6)*(x1713));
IkReal x1725=((sj5)*(x1714));
IkReal x1726=((cj6)*(x1714));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x1723)))+(((r22)*(x1721)))+(((x1720)*(x1724)))+(((IkReal(-1.00000000000000))*(r20)*(x1718)*(x1722)))+(((IkReal(-1.00000000000000))*(r21)*(x1726))));
evalcond[1]=((((r21)*(x1722)))+(((r22)*(x1725)))+(((x1720)*(x1723)))+(((IkReal(-1.00000000000000))*(r20)*(x1718)*(x1726)))+(((r20)*(x1724)))+(((IkReal(-1.00000000000000))*(cj3))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1715)*(x1723)))+(((IkReal(-1.00000000000000))*(x1719)))+(((r02)*(x1721)))+(((IkReal(-1.00000000000000))*(r01)*(x1726)))+(((IkReal(-1.00000000000000))*(cj5)*(x1715)*(x1722)))+(((x1716)*(x1724))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(r11)*(x1726)))+(((x1717)*(x1724)))+(((IkReal(-1.00000000000000))*(r10)*(x1718)*(x1722)))+(((r12)*(x1721)))+(((IkReal(-1.00000000000000))*(r10)*(x1723))));
evalcond[4]=((((r01)*(x1722)))+(((r00)*(x1724)))+(((sj1)*(sj3)))+(((r02)*(x1725)))+(((IkReal(-1.00000000000000))*(cj5)*(x1715)*(x1726)))+(((x1716)*(x1723))));
evalcond[5]=((((r10)*(x1724)))+(((IkReal(-1.00000000000000))*(sj3)*(x1719)))+(((x1717)*(x1723)))+(((IkReal(-1.00000000000000))*(r10)*(x1718)*(x1726)))+(((r11)*(x1722)))+(((r12)*(x1725))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1727=((cj6)*(sj1));
IkReal x1728=((IkReal(1.00000000000000))*(sj1)*(sj6));
if( IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(r21)*(x1727)))+(((IkReal(-1.00000000000000))*(r20)*(x1728))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((cj5)*(r20)*(x1727)))+(((IkReal(-1.00000000000000))*(r22)*(sj1)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1728))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst10)*(((((IkReal(-1.00000000000000))*(r21)*(x1727)))+(((IkReal(-1.00000000000000))*(r20)*(x1728)))))), ((gconst10)*(((((cj5)*(r20)*(x1727)))+(((IkReal(-1.00000000000000))*(r22)*(sj1)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x1728)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x1729=IKsin(j4);
IkReal x1730=IKcos(j4);
IkReal x1731=((IkReal(1.00000000000000))*(cj6));
IkReal x1732=((sj5)*(x1729));
IkReal x1733=((cj5)*(x1729));
IkReal x1734=((IkReal(1.00000000000000))*(sj6)*(x1730));
evalcond[0]=((((r21)*(sj6)*(x1733)))+(((r22)*(x1732)))+(((IkReal(-1.00000000000000))*(r20)*(x1731)*(x1733)))+(((IkReal(-1.00000000000000))*(r20)*(x1734)))+(((IkReal(-1.00000000000000))*(r21)*(x1730)*(x1731))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(x1731)*(x1733)))+(((IkReal(-1.00000000000000))*(r00)*(x1734)))+(((r02)*(x1732)))+(((IkReal(-1.00000000000000))*(r01)*(x1730)*(x1731)))+(((r01)*(sj6)*(x1733)))+(((IkReal(-1.00000000000000))*(cj1))));
evalcond[2]=((((r11)*(sj6)*(x1733)))+(((IkReal(-1.00000000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(r10)*(x1734)))+(((IkReal(-1.00000000000000))*(r10)*(x1731)*(x1733)))+(((IkReal(-1.00000000000000))*(r11)*(x1730)*(x1731)))+(((r12)*(x1732))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1735=((cj4)*(cj5));
IkReal x1736=((r21)*(sj6));
IkReal x1737=((IkReal(1.00000000000000))*(cj6)*(r20));
if( IKabs(((((sj5)*(x1736)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x1737))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj4)*(r22)*(sj5)))+(((x1735)*(x1736)))+(((cj6)*(r21)*(sj4)))+(((IkReal(-1.00000000000000))*(x1735)*(x1737)))+(((r20)*(sj4)*(sj6))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj5)*(x1736)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x1737)))))+IKsqr(((((cj4)*(r22)*(sj5)))+(((x1735)*(x1736)))+(((cj6)*(r21)*(sj4)))+(((IkReal(-1.00000000000000))*(x1735)*(x1737)))+(((r20)*(sj4)*(sj6)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((sj5)*(x1736)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x1737)))), ((((cj4)*(r22)*(sj5)))+(((x1735)*(x1736)))+(((cj6)*(r21)*(sj4)))+(((IkReal(-1.00000000000000))*(x1735)*(x1737)))+(((r20)*(sj4)*(sj6)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1738=IKcos(j3);
IkReal x1739=IKsin(j3);
IkReal x1740=((r11)*(sj6));
IkReal x1741=((IkReal(1.00000000000000))*(sj5));
IkReal x1742=((IkReal(1.00000000000000))*(cj1));
IkReal x1743=((cj6)*(sj4));
IkReal x1744=((sj4)*(sj6));
IkReal x1745=((cj4)*(sj5));
IkReal x1746=((cj4)*(cj5));
IkReal x1747=((r01)*(sj6));
IkReal x1748=((r21)*(sj6));
IkReal x1749=((cj6)*(sj5));
IkReal x1750=((IkReal(1.00000000000000))*(cj6)*(x1746));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1741)*(x1748)))+(((cj5)*(r22)))+(x1739)+(((r20)*(x1749))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1741)*(x1747)))+(((sj1)*(x1738)))+(((r00)*(x1749)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x1738)*(x1742)))+(((IkReal(-1.00000000000000))*(x1740)*(x1741)))+(((r10)*(x1749))));
evalcond[3]=((((r22)*(x1745)))+(((x1746)*(x1748)))+(((r21)*(x1743)))+(((r20)*(x1744)))+(((IkReal(-1.00000000000000))*(r20)*(x1750)))+(((IkReal(-1.00000000000000))*(x1738))));
evalcond[4]=((((x1746)*(x1747)))+(((r02)*(x1745)))+(((sj1)*(x1739)))+(((IkReal(-1.00000000000000))*(r00)*(x1750)))+(((r00)*(x1744)))+(((r01)*(x1743))));
evalcond[5]=((((r12)*(x1745)))+(((IkReal(-1.00000000000000))*(r10)*(x1750)))+(((IkReal(-1.00000000000000))*(x1739)*(x1742)))+(((x1740)*(x1746)))+(((r11)*(x1743)))+(((r10)*(x1744))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1751=((cj1)*(cj6));
IkReal x1752=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(r21)*(x1751)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x1752))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(r22)*(sj5)*(x1752)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(sj6)*(x1752)))+(((cj5)*(r20)*(x1751))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst9)*(((((IkReal(-1.00000000000000))*(r21)*(x1751)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x1752)))))), ((gconst9)*(((((IkReal(-1.00000000000000))*(r22)*(sj5)*(x1752)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(sj6)*(x1752)))+(((cj5)*(r20)*(x1751)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x1753=IKsin(j4);
IkReal x1754=IKcos(j4);
IkReal x1755=((IkReal(1.00000000000000))*(cj6));
IkReal x1756=((sj5)*(x1753));
IkReal x1757=((cj5)*(x1753));
IkReal x1758=((IkReal(1.00000000000000))*(sj6)*(x1754));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x1755)*(x1757)))+(((r22)*(x1756)))+(((r21)*(sj6)*(x1757)))+(((IkReal(-1.00000000000000))*(r20)*(x1758)))+(((IkReal(-1.00000000000000))*(r21)*(x1754)*(x1755))));
evalcond[1]=((((r01)*(sj6)*(x1757)))+(((r02)*(x1756)))+(((IkReal(-1.00000000000000))*(r00)*(x1755)*(x1757)))+(((IkReal(-1.00000000000000))*(r01)*(x1754)*(x1755)))+(((IkReal(-1.00000000000000))*(r00)*(x1758)))+(((IkReal(-1.00000000000000))*(cj1))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(r11)*(x1754)*(x1755)))+(((IkReal(-1.00000000000000))*(r10)*(x1758)))+(((IkReal(-1.00000000000000))*(r10)*(x1755)*(x1757)))+(((r11)*(sj6)*(x1757)))+(((r12)*(x1756))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1759=((cj4)*(cj5));
IkReal x1760=((r21)*(sj6));
IkReal x1761=((IkReal(1.00000000000000))*(cj6)*(r20));
if( IKabs(((((IkReal(-1.00000000000000))*(sj5)*(x1761)))+(((sj5)*(x1760)))+(((IkReal(-1.00000000000000))*(cj5)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1759)*(x1760)))+(((IkReal(-1.00000000000000))*(x1759)*(x1761)))+(((cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((r20)*(sj4)*(sj6))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(sj5)*(x1761)))+(((sj5)*(x1760)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))))+IKsqr(((((x1759)*(x1760)))+(((IkReal(-1.00000000000000))*(x1759)*(x1761)))+(((cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((r20)*(sj4)*(sj6)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(sj5)*(x1761)))+(((sj5)*(x1760)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))), ((((x1759)*(x1760)))+(((IkReal(-1.00000000000000))*(x1759)*(x1761)))+(((cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((r20)*(sj4)*(sj6)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1762=IKcos(j3);
IkReal x1763=IKsin(j3);
IkReal x1764=((r11)*(sj6));
IkReal x1765=((IkReal(1.00000000000000))*(sj5));
IkReal x1766=((IkReal(1.00000000000000))*(cj1));
IkReal x1767=((cj6)*(sj4));
IkReal x1768=((sj4)*(sj6));
IkReal x1769=((cj4)*(sj5));
IkReal x1770=((cj4)*(cj5));
IkReal x1771=((r01)*(sj6));
IkReal x1772=((r21)*(sj6));
IkReal x1773=((cj6)*(sj5));
IkReal x1774=((IkReal(1.00000000000000))*(cj6)*(x1770));
evalcond[0]=((((cj5)*(r22)))+(x1763)+(((r20)*(x1773)))+(((IkReal(-1.00000000000000))*(x1765)*(x1772))));
evalcond[1]=((((sj1)*(x1762)))+(((r00)*(x1773)))+(((IkReal(-1.00000000000000))*(x1765)*(x1771)))+(((cj5)*(r02))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1762)*(x1766)))+(((cj5)*(r12)))+(((r10)*(x1773)))+(((IkReal(-1.00000000000000))*(x1764)*(x1765))));
evalcond[3]=((((r21)*(x1767)))+(((IkReal(-1.00000000000000))*(x1762)))+(((r20)*(x1768)))+(((x1770)*(x1772)))+(((IkReal(-1.00000000000000))*(r20)*(x1774)))+(((r22)*(x1769))));
evalcond[4]=((((sj1)*(x1763)))+(((x1770)*(x1771)))+(((r01)*(x1767)))+(((r00)*(x1768)))+(((r02)*(x1769)))+(((IkReal(-1.00000000000000))*(r00)*(x1774))));
evalcond[5]=((((x1764)*(x1770)))+(((IkReal(-1.00000000000000))*(x1763)*(x1766)))+(((r11)*(x1767)))+(((IkReal(-1.00000000000000))*(r10)*(x1774)))+(((r12)*(x1769)))+(((r10)*(x1768))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

} else
{
IkReal x1775=((IkReal(0.390000000000000))*(sj5));
IkReal x1776=((IkReal(0.390000000000000))*(cj5));
IkReal x1777=((IkReal(0.000500000000000000))*(cj6));
IkReal x1778=((IkReal(0.000500000000000000))*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((r22)*(x1776)))+(((r20)*(x1778)))+(((IkReal(-1.00000000000000))*(pz)))+(((cj6)*(r20)*(x1775)))+(((r21)*(x1777)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x1775))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1775)))+(((r02)*(x1776)))+(((cj6)*(r00)*(x1775)))+(((r00)*(x1778)))+(((IkReal(0.00200000000000000))*(cj1)))+(((r01)*(x1777)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.400000000000000))*(sj1))));
evalcond[3]=((((r12)*(x1776)))+(((r11)*(x1777)))+(((IkReal(0.400000000000000))*(cj1)))+(((IkReal(0.00200000000000000))*(sj1)))+(((r10)*(x1778)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x1775)))+(((cj6)*(r10)*(x1775))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst21;
IkReal x1779=(cj6)*(cj6);
IkReal x1780=(sj6)*(sj6);
IkReal x1781=((r01)*(r20));
IkReal x1782=((r02)*(sj5));
IkReal x1783=((cj5)*(x1780));
IkReal x1784=((IkReal(1.00000000000000))*(r22)*(sj5));
IkReal x1785=((IkReal(1.00000000000000))*(r00)*(r21));
IkReal x1786=((cj5)*(x1779));
gconst21=IKsign(((((cj6)*(r21)*(x1782)))+(((IkReal(-1.00000000000000))*(x1783)*(x1785)))+(((r20)*(sj6)*(x1782)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1784)))+(((IkReal(-1.00000000000000))*(x1785)*(x1786)))+(((x1781)*(x1786)))+(((x1781)*(x1783)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1784)))));
IkReal x1787=(cj6)*(cj6);
IkReal x1788=(sj6)*(sj6);
IkReal x1789=((r01)*(r20));
IkReal x1790=((r02)*(sj5));
IkReal x1791=((cj5)*(x1788));
IkReal x1792=((IkReal(1.00000000000000))*(r22)*(sj5));
IkReal x1793=((IkReal(1.00000000000000))*(r00)*(r21));
IkReal x1794=((cj5)*(x1787));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1792)))+(((cj6)*(r21)*(x1790)))+(((r20)*(sj6)*(x1790)))+(((IkReal(-1.00000000000000))*(x1793)*(x1794)))+(((x1789)*(x1794)))+(((x1789)*(x1791)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1792)))+(((IkReal(-1.00000000000000))*(x1791)*(x1793))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst22;
IkReal x1795=(cj6)*(cj6);
IkReal x1796=(sj6)*(sj6);
IkReal x1797=((r11)*(r20));
IkReal x1798=((r12)*(sj5));
IkReal x1799=((IkReal(1.00000000000000))*(r10));
IkReal x1800=((r22)*(sj5));
IkReal x1801=((cj5)*(x1796));
IkReal x1802=((cj5)*(x1795));
gconst22=IKsign(((((cj6)*(r21)*(x1798)))+(((r20)*(sj6)*(x1798)))+(((x1797)*(x1801)))+(((x1797)*(x1802)))+(((IkReal(-1.00000000000000))*(sj6)*(x1799)*(x1800)))+(((IkReal(-1.00000000000000))*(r21)*(x1799)*(x1802)))+(((IkReal(-1.00000000000000))*(r21)*(x1799)*(x1801)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1800)))));
IkReal x1803=(cj6)*(cj6);
IkReal x1804=(sj6)*(sj6);
IkReal x1805=((r11)*(r20));
IkReal x1806=((r12)*(sj5));
IkReal x1807=((IkReal(1.00000000000000))*(r10));
IkReal x1808=((r22)*(sj5));
IkReal x1809=((cj5)*(x1804));
IkReal x1810=((cj5)*(x1803));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r21)*(x1807)*(x1810)))+(((r20)*(sj6)*(x1806)))+(((IkReal(-1.00000000000000))*(sj6)*(x1807)*(x1808)))+(((x1805)*(x1810)))+(((IkReal(-1.00000000000000))*(r21)*(x1807)*(x1809)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1808)))+(((cj6)*(r21)*(x1806)))+(((x1805)*(x1809))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj1;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1811=((IkReal(0.000500000000000000))*(cj6));
IkReal x1812=((IkReal(0.000500000000000000))*(sj6));
IkReal x1813=((sj5)*(sj6));
IkReal x1814=((cj5)*(r12));
IkReal x1815=((IkReal(0.390000000000000))*(cj5));
IkReal x1816=((IkReal(0.390000000000000))*(cj6)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((cj6)*(r10)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x1813)))+(x1814));
evalcond[2]=((((r22)*(x1815)))+(((r20)*(x1812)))+(((r20)*(x1816)))+(((IkReal(-1.00000000000000))*(pz)))+(((r21)*(x1811)))+(((IkReal(-0.390000000000000))*(r21)*(x1813))));
evalcond[3]=((IkReal(-0.400000000000000))+(((r02)*(x1815)))+(((IkReal(-0.390000000000000))*(r01)*(x1813)))+(((IkReal(-1.00000000000000))*(px)))+(((r01)*(x1811)))+(((r00)*(x1812)))+(((r00)*(x1816))));
evalcond[4]=((IkReal(0.00200000000000000))+(((IkReal(-0.390000000000000))*(r11)*(x1813)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.390000000000000))*(x1814)))+(((r11)*(x1811)))+(((r10)*(x1812)))+(((r10)*(x1816))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1817=((cj6)*(sj5));
IkReal x1818=((sj5)*(sj6));
if( IKabs(((((cj5)*(r22)))+(((r20)*(x1817)))+(((IkReal(-1.00000000000000))*(r21)*(x1818))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r00)*(x1817)))+(((r01)*(x1818)))+(((IkReal(-1.00000000000000))*(cj5)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj5)*(r22)))+(((r20)*(x1817)))+(((IkReal(-1.00000000000000))*(r21)*(x1818)))))+IKsqr(((((IkReal(-1.00000000000000))*(r00)*(x1817)))+(((r01)*(x1818)))+(((IkReal(-1.00000000000000))*(cj5)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((cj5)*(r22)))+(((r20)*(x1817)))+(((IkReal(-1.00000000000000))*(r21)*(x1818)))), ((((IkReal(-1.00000000000000))*(r00)*(x1817)))+(((r01)*(x1818)))+(((IkReal(-1.00000000000000))*(cj5)*(r02)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[2];
IkReal x1819=((cj6)*(sj5));
IkReal x1820=((IkReal(1.00000000000000))*(sj5)*(sj6));
evalcond[0]=((((cj5)*(r22)))+(((r20)*(x1819)))+(((IkReal(-1.00000000000000))*(IKsin(j3))))+(((IkReal(-1.00000000000000))*(r21)*(x1820))));
evalcond[1]=((IKcos(j3))+(((IkReal(-1.00000000000000))*(r01)*(x1820)))+(((r00)*(x1819)))+(((cj5)*(r02))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst27;
IkReal x1821=(sj6)*(sj6);
IkReal x1822=(cj6)*(cj6);
IkReal x1823=((cj6)*(sj5));
IkReal x1824=((r10)*(r21));
IkReal x1825=((IkReal(1.00000000000000))*(r12));
IkReal x1826=((sj5)*(sj6));
IkReal x1827=((cj5)*(x1822));
IkReal x1828=((IkReal(1.00000000000000))*(r11)*(r20));
IkReal x1829=((cj5)*(x1821));
gconst27=IKsign(((((IkReal(-1.00000000000000))*(r20)*(x1825)*(x1826)))+(((IkReal(-1.00000000000000))*(r21)*(x1823)*(x1825)))+(((x1824)*(x1827)))+(((x1824)*(x1829)))+(((IkReal(-1.00000000000000))*(x1827)*(x1828)))+(((r10)*(r22)*(x1826)))+(((IkReal(-1.00000000000000))*(x1828)*(x1829)))+(((r11)*(r22)*(x1823)))));
IkReal x1830=(sj6)*(sj6);
IkReal x1831=(cj6)*(cj6);
IkReal x1832=((cj6)*(sj5));
IkReal x1833=((r10)*(r21));
IkReal x1834=((IkReal(1.00000000000000))*(r12));
IkReal x1835=((sj5)*(sj6));
IkReal x1836=((cj5)*(x1831));
IkReal x1837=((IkReal(1.00000000000000))*(r11)*(r20));
IkReal x1838=((cj5)*(x1830));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r20)*(x1834)*(x1835)))+(((r10)*(r22)*(x1835)))+(((IkReal(-1.00000000000000))*(x1837)*(x1838)))+(((IkReal(-1.00000000000000))*(x1836)*(x1837)))+(((IkReal(-1.00000000000000))*(r21)*(x1832)*(x1834)))+(((x1833)*(x1838)))+(((x1833)*(x1836)))+(((r11)*(r22)*(x1832))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst28;
IkReal x1839=(sj6)*(sj6);
IkReal x1840=(cj6)*(cj6);
IkReal x1841=((r01)*(r10));
IkReal x1842=((IkReal(1.00000000000000))*(r00));
IkReal x1843=((r02)*(sj5));
IkReal x1844=((r12)*(sj5));
IkReal x1845=((cj5)*(x1839));
IkReal x1846=((cj5)*(x1840));
gconst28=IKsign(((((r10)*(sj6)*(x1843)))+(((IkReal(-1.00000000000000))*(r11)*(x1842)*(x1846)))+(((IkReal(-1.00000000000000))*(r11)*(x1842)*(x1845)))+(((cj6)*(r11)*(x1843)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1844)))+(((IkReal(-1.00000000000000))*(sj6)*(x1842)*(x1844)))+(((x1841)*(x1846)))+(((x1841)*(x1845)))));
IkReal x1847=(sj6)*(sj6);
IkReal x1848=(cj6)*(cj6);
IkReal x1849=((r01)*(r10));
IkReal x1850=((IkReal(1.00000000000000))*(r00));
IkReal x1851=((r02)*(sj5));
IkReal x1852=((r12)*(sj5));
IkReal x1853=((cj5)*(x1847));
IkReal x1854=((cj5)*(x1848));
dummyeval[0]=((((x1849)*(x1853)))+(((x1849)*(x1854)))+(((cj6)*(r11)*(x1851)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1852)))+(((r10)*(sj6)*(x1851)))+(((IkReal(-1.00000000000000))*(r11)*(x1850)*(x1854)))+(((IkReal(-1.00000000000000))*(r11)*(x1850)*(x1853)))+(((IkReal(-1.00000000000000))*(sj6)*(x1850)*(x1852))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1855=((sj3)*(sj6));
IkReal x1856=((IkReal(1.00000000000000))*(r10));
IkReal x1857=((cj6)*(sj3));
if( IKabs(((gconst28)*(((((r12)*(sj3)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x1856)*(x1857)))+(((cj5)*(r11)*(x1855))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst28)*(((((IkReal(-1.00000000000000))*(x1855)*(x1856)))+(((IkReal(-1.00000000000000))*(r11)*(x1857))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst28)*(((((r12)*(sj3)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x1856)*(x1857)))+(((cj5)*(r11)*(x1855)))))), ((gconst28)*(((((IkReal(-1.00000000000000))*(x1855)*(x1856)))+(((IkReal(-1.00000000000000))*(r11)*(x1857)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1858=IKsin(j4);
IkReal x1859=IKcos(j4);
IkReal x1860=((IkReal(1.00000000000000))*(r00));
IkReal x1861=((cj5)*(r01));
IkReal x1862=((cj5)*(r11));
IkReal x1863=((IkReal(1.00000000000000))*(cj5));
IkReal x1864=((cj5)*(r21));
IkReal x1865=((sj5)*(x1858));
IkReal x1866=((cj6)*(x1858));
IkReal x1867=((sj6)*(x1859));
IkReal x1868=((sj6)*(x1858));
IkReal x1869=((sj5)*(x1859));
IkReal x1870=((cj6)*(x1859));
evalcond[0]=((((x1864)*(x1868)))+(((r22)*(x1865)))+(((IkReal(-1.00000000000000))*(r21)*(x1870)))+(((IkReal(-1.00000000000000))*(r20)*(x1863)*(x1866)))+(((IkReal(-1.00000000000000))*(r20)*(x1867))));
evalcond[1]=((((x1864)*(x1867)))+(cj3)+(((r22)*(x1869)))+(((r20)*(x1868)))+(((r21)*(x1866)))+(((IkReal(-1.00000000000000))*(r20)*(x1863)*(x1870))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x1870)))+(((IkReal(-1.00000000000000))*(cj5)*(x1860)*(x1866)))+(((IkReal(-1.00000000000000))*(x1860)*(x1867)))+(((r02)*(x1865)))+(((x1861)*(x1868))));
evalcond[3]=((IkReal(1.00000000000000))+(((r12)*(x1865)))+(((x1862)*(x1868)))+(((IkReal(-1.00000000000000))*(r11)*(x1870)))+(((IkReal(-1.00000000000000))*(r10)*(x1863)*(x1866)))+(((IkReal(-1.00000000000000))*(r10)*(x1867))));
evalcond[4]=((sj3)+(((r02)*(x1869)))+(((IkReal(-1.00000000000000))*(cj5)*(x1860)*(x1870)))+(((r01)*(x1866)))+(((x1861)*(x1867)))+(((r00)*(x1868))));
evalcond[5]=((((r12)*(x1869)))+(((r11)*(x1866)))+(((x1862)*(x1867)))+(((IkReal(-1.00000000000000))*(r10)*(x1863)*(x1870)))+(((r10)*(x1868))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1871=((cj3)*(cj5));
IkReal x1872=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((gconst27)*(((((IkReal(-1.00000000000000))*(r10)*(x1871)*(x1872)))+(((cj3)*(r12)*(sj5)))+(((r11)*(sj6)*(x1871))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst27)*(((((IkReal(-1.00000000000000))*(cj3)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(x1872))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst27)*(((((IkReal(-1.00000000000000))*(r10)*(x1871)*(x1872)))+(((cj3)*(r12)*(sj5)))+(((r11)*(sj6)*(x1871)))))), ((gconst27)*(((((IkReal(-1.00000000000000))*(cj3)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(x1872)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1873=IKsin(j4);
IkReal x1874=IKcos(j4);
IkReal x1875=((IkReal(1.00000000000000))*(r00));
IkReal x1876=((cj5)*(r01));
IkReal x1877=((cj5)*(r11));
IkReal x1878=((IkReal(1.00000000000000))*(cj5));
IkReal x1879=((cj5)*(r21));
IkReal x1880=((sj5)*(x1873));
IkReal x1881=((cj6)*(x1873));
IkReal x1882=((sj6)*(x1874));
IkReal x1883=((sj6)*(x1873));
IkReal x1884=((sj5)*(x1874));
IkReal x1885=((cj6)*(x1874));
evalcond[0]=((((x1879)*(x1883)))+(((IkReal(-1.00000000000000))*(r20)*(x1878)*(x1881)))+(((IkReal(-1.00000000000000))*(r20)*(x1882)))+(((IkReal(-1.00000000000000))*(r21)*(x1885)))+(((r22)*(x1880))));
evalcond[1]=((((x1879)*(x1882)))+(((r21)*(x1881)))+(cj3)+(((IkReal(-1.00000000000000))*(r20)*(x1878)*(x1885)))+(((r20)*(x1883)))+(((r22)*(x1884))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(x1875)*(x1881)))+(((IkReal(-1.00000000000000))*(x1875)*(x1882)))+(((x1876)*(x1883)))+(((IkReal(-1.00000000000000))*(r01)*(x1885)))+(((r02)*(x1880))));
evalcond[3]=((IkReal(1.00000000000000))+(((x1877)*(x1883)))+(((IkReal(-1.00000000000000))*(r10)*(x1878)*(x1881)))+(((r12)*(x1880)))+(((IkReal(-1.00000000000000))*(r10)*(x1882)))+(((IkReal(-1.00000000000000))*(r11)*(x1885))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj5)*(x1875)*(x1885)))+(sj3)+(((x1876)*(x1882)))+(((r00)*(x1883)))+(((r01)*(x1881)))+(((r02)*(x1884))));
evalcond[5]=((((x1877)*(x1882)))+(((IkReal(-1.00000000000000))*(r10)*(x1878)*(x1885)))+(((r12)*(x1884)))+(((r10)*(x1883)))+(((r11)*(x1881))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x1886=((IkReal(0.000500000000000000))*(cj6));
IkReal x1887=((IkReal(0.000500000000000000))*(sj6));
IkReal x1888=((sj5)*(sj6));
IkReal x1889=((cj5)*(r12));
IkReal x1890=((IkReal(0.390000000000000))*(cj5));
IkReal x1891=((IkReal(0.390000000000000))*(cj6)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((cj6)*(r10)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x1888)))+(x1889));
evalcond[2]=((((r22)*(x1890)))+(((r21)*(x1886)))+(((r20)*(x1887)))+(((r20)*(x1891)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-0.390000000000000))*(r21)*(x1888))));
evalcond[3]=((IkReal(0.400000000000000))+(((r02)*(x1890)))+(((r00)*(x1891)))+(((r00)*(x1887)))+(((r01)*(x1886)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.390000000000000))*(r01)*(x1888))));
evalcond[4]=((IkReal(-0.00200000000000000))+(((r10)*(x1891)))+(((IkReal(-0.390000000000000))*(r11)*(x1888)))+(((r10)*(x1887)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.390000000000000))*(x1889)))+(((r11)*(x1886))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1892=((cj6)*(sj5));
IkReal x1893=((IkReal(1.00000000000000))*(sj5)*(sj6));
if( IKabs(((((cj5)*(r22)))+(((r20)*(x1892)))+(((IkReal(-1.00000000000000))*(r21)*(x1893))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r00)*(x1892)))+(((IkReal(-1.00000000000000))*(r01)*(x1893)))+(((cj5)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj5)*(r22)))+(((r20)*(x1892)))+(((IkReal(-1.00000000000000))*(r21)*(x1893)))))+IKsqr(((((r00)*(x1892)))+(((IkReal(-1.00000000000000))*(r01)*(x1893)))+(((cj5)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((cj5)*(r22)))+(((r20)*(x1892)))+(((IkReal(-1.00000000000000))*(r21)*(x1893)))), ((((r00)*(x1892)))+(((IkReal(-1.00000000000000))*(r01)*(x1893)))+(((cj5)*(r02)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[2];
IkReal x1894=((cj6)*(sj5));
IkReal x1895=((IkReal(1.00000000000000))*(sj5)*(sj6));
evalcond[0]=((((cj5)*(r22)))+(((r20)*(x1894)))+(((IkReal(-1.00000000000000))*(IKsin(j3))))+(((IkReal(-1.00000000000000))*(r21)*(x1895))));
evalcond[1]=((((r00)*(x1894)))+(((IkReal(-1.00000000000000))*(r01)*(x1895)))+(((IkReal(-1.00000000000000))*(IKcos(j3))))+(((cj5)*(r02))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst31;
IkReal x1896=(sj6)*(sj6);
IkReal x1897=(cj6)*(cj6);
IkReal x1898=((cj6)*(sj5));
IkReal x1899=((r10)*(r21));
IkReal x1900=((IkReal(1.00000000000000))*(r12));
IkReal x1901=((sj5)*(sj6));
IkReal x1902=((cj5)*(x1897));
IkReal x1903=((IkReal(1.00000000000000))*(r11)*(r20));
IkReal x1904=((cj5)*(x1896));
gconst31=IKsign(((((IkReal(-1.00000000000000))*(x1902)*(x1903)))+(((IkReal(-1.00000000000000))*(r21)*(x1898)*(x1900)))+(((IkReal(-1.00000000000000))*(x1903)*(x1904)))+(((r10)*(r22)*(x1901)))+(((r11)*(r22)*(x1898)))+(((x1899)*(x1902)))+(((x1899)*(x1904)))+(((IkReal(-1.00000000000000))*(r20)*(x1900)*(x1901)))));
IkReal x1905=(sj6)*(sj6);
IkReal x1906=(cj6)*(cj6);
IkReal x1907=((cj6)*(sj5));
IkReal x1908=((r10)*(r21));
IkReal x1909=((IkReal(1.00000000000000))*(r12));
IkReal x1910=((sj5)*(sj6));
IkReal x1911=((cj5)*(x1906));
IkReal x1912=((IkReal(1.00000000000000))*(r11)*(r20));
IkReal x1913=((cj5)*(x1905));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1911)*(x1912)))+(((r11)*(r22)*(x1907)))+(((r10)*(r22)*(x1910)))+(((IkReal(-1.00000000000000))*(r20)*(x1909)*(x1910)))+(((x1908)*(x1913)))+(((x1908)*(x1911)))+(((IkReal(-1.00000000000000))*(x1912)*(x1913)))+(((IkReal(-1.00000000000000))*(r21)*(x1907)*(x1909))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst32;
IkReal x1914=(r20)*(r20);
IkReal x1915=(cj5)*(cj5);
IkReal x1916=(sj6)*(sj6);
IkReal x1917=(cj6)*(cj6);
IkReal x1918=(r21)*(r21);
IkReal x1919=((cj6)*(r20));
IkReal x1920=((IkReal(2.00000000000000))*(r21)*(sj6));
IkReal x1921=((cj5)*(r22)*(sj5));
gconst32=IKsign(((((IkReal(-2.00000000000000))*(x1919)*(x1921)))+(((x1915)*(x1916)*(x1918)))+(((IkReal(-1.00000000000000))*(x1915)*(x1919)*(x1920)))+(((x1914)*(x1916)))+(((x1917)*(x1918)))+(((x1919)*(x1920)))+(((x1920)*(x1921)))+(((x1914)*(x1915)*(x1917)))+((((r22)*(r22))*((sj5)*(sj5))))));
IkReal x1922=(r20)*(r20);
IkReal x1923=(cj5)*(cj5);
IkReal x1924=(sj6)*(sj6);
IkReal x1925=(cj6)*(cj6);
IkReal x1926=(r21)*(r21);
IkReal x1927=((cj6)*(r20));
IkReal x1928=((IkReal(2.00000000000000))*(r21)*(sj6));
IkReal x1929=((cj5)*(r22)*(sj5));
dummyeval[0]=((((x1928)*(x1929)))+(((x1923)*(x1924)*(x1926)))+(((x1927)*(x1928)))+(((IkReal(-2.00000000000000))*(x1927)*(x1929)))+(((x1922)*(x1923)*(x1925)))+(((IkReal(-1.00000000000000))*(x1923)*(x1927)*(x1928)))+((((r22)*(r22))*((sj5)*(sj5))))+(((x1925)*(x1926)))+(((x1922)*(x1924))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1930=((cj3)*(cj6));
IkReal x1931=((IkReal(1.00000000000000))*(r21));
IkReal x1932=((cj3)*(sj6));
if( IKabs(((gconst32)*(((((IkReal(-1.00000000000000))*(x1930)*(x1931)))+(((IkReal(-1.00000000000000))*(r20)*(x1932))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst32)*(((((cj5)*(r20)*(x1930)))+(((IkReal(-1.00000000000000))*(cj3)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x1931)*(x1932))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst32)*(((((IkReal(-1.00000000000000))*(x1930)*(x1931)))+(((IkReal(-1.00000000000000))*(r20)*(x1932)))))), ((gconst32)*(((((cj5)*(r20)*(x1930)))+(((IkReal(-1.00000000000000))*(cj3)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x1931)*(x1932)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1933=IKsin(j4);
IkReal x1934=IKcos(j4);
IkReal x1935=((IkReal(1.00000000000000))*(r00));
IkReal x1936=((cj5)*(r01));
IkReal x1937=((cj5)*(r11));
IkReal x1938=((IkReal(1.00000000000000))*(cj5));
IkReal x1939=((cj5)*(r21));
IkReal x1940=((sj5)*(x1933));
IkReal x1941=((cj6)*(x1933));
IkReal x1942=((sj6)*(x1934));
IkReal x1943=((sj6)*(x1933));
IkReal x1944=((sj5)*(x1934));
IkReal x1945=((cj6)*(x1934));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x1942)))+(((IkReal(-1.00000000000000))*(r20)*(x1938)*(x1941)))+(((x1939)*(x1943)))+(((r22)*(x1940)))+(((IkReal(-1.00000000000000))*(r21)*(x1945))));
evalcond[1]=((cj3)+(((r20)*(x1943)))+(((IkReal(-1.00000000000000))*(r20)*(x1938)*(x1945)))+(((x1939)*(x1942)))+(((r22)*(x1944)))+(((r21)*(x1941))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x1945)))+(((x1936)*(x1943)))+(((IkReal(-1.00000000000000))*(x1935)*(x1942)))+(((IkReal(-1.00000000000000))*(cj5)*(x1935)*(x1941)))+(((r02)*(x1940))));
evalcond[3]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x1938)*(x1941)))+(((x1937)*(x1943)))+(((r12)*(x1940)))+(((IkReal(-1.00000000000000))*(r11)*(x1945)))+(((IkReal(-1.00000000000000))*(r10)*(x1942))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj3)))+(((x1936)*(x1942)))+(((r00)*(x1943)))+(((r01)*(x1941)))+(((IkReal(-1.00000000000000))*(cj5)*(x1935)*(x1945)))+(((r02)*(x1944))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x1938)*(x1945)))+(((r11)*(x1941)))+(((x1937)*(x1942)))+(((r10)*(x1943)))+(((r12)*(x1944))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1946=((cj3)*(sj6));
IkReal x1947=((IkReal(1.00000000000000))*(r10));
IkReal x1948=((cj3)*(cj6));
if( IKabs(((gconst31)*(((((cj3)*(r12)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x1947)*(x1948)))+(((cj5)*(r11)*(x1946))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst31)*(((((IkReal(-1.00000000000000))*(r11)*(x1948)))+(((IkReal(-1.00000000000000))*(x1946)*(x1947))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst31)*(((((cj3)*(r12)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x1947)*(x1948)))+(((cj5)*(r11)*(x1946)))))), ((gconst31)*(((((IkReal(-1.00000000000000))*(r11)*(x1948)))+(((IkReal(-1.00000000000000))*(x1946)*(x1947)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1949=IKsin(j4);
IkReal x1950=IKcos(j4);
IkReal x1951=((IkReal(1.00000000000000))*(r00));
IkReal x1952=((cj5)*(r01));
IkReal x1953=((cj5)*(r11));
IkReal x1954=((IkReal(1.00000000000000))*(cj5));
IkReal x1955=((cj5)*(r21));
IkReal x1956=((sj5)*(x1949));
IkReal x1957=((cj6)*(x1949));
IkReal x1958=((sj6)*(x1950));
IkReal x1959=((sj6)*(x1949));
IkReal x1960=((sj5)*(x1950));
IkReal x1961=((cj6)*(x1950));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x1954)*(x1957)))+(((IkReal(-1.00000000000000))*(r20)*(x1958)))+(((x1955)*(x1959)))+(((r22)*(x1956)))+(((IkReal(-1.00000000000000))*(r21)*(x1961))));
evalcond[1]=((((r20)*(x1959)))+(cj3)+(((x1955)*(x1958)))+(((r21)*(x1957)))+(((r22)*(x1960)))+(((IkReal(-1.00000000000000))*(r20)*(x1954)*(x1961))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(x1951)*(x1957)))+(((x1952)*(x1959)))+(((IkReal(-1.00000000000000))*(x1951)*(x1958)))+(((IkReal(-1.00000000000000))*(r01)*(x1961)))+(((r02)*(x1956))));
evalcond[3]=((IkReal(-1.00000000000000))+(((r12)*(x1956)))+(((IkReal(-1.00000000000000))*(r11)*(x1961)))+(((x1953)*(x1959)))+(((IkReal(-1.00000000000000))*(r10)*(x1954)*(x1957)))+(((IkReal(-1.00000000000000))*(r10)*(x1958))));
evalcond[4]=((((r02)*(x1960)))+(((IkReal(-1.00000000000000))*(sj3)))+(((x1952)*(x1958)))+(((IkReal(-1.00000000000000))*(cj5)*(x1951)*(x1961)))+(((r01)*(x1957)))+(((r00)*(x1959))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x1954)*(x1961)))+(((r11)*(x1957)))+(((r12)*(x1960)))+(((r10)*(x1959)))+(((x1953)*(x1958))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1962=((cj6)*(sj5));
IkReal x1963=((IkReal(1.00000000000000))*(sj5)*(sj6));
if( IKabs(((((cj5)*(r22)))+(((r20)*(x1962)))+(((IkReal(-1.00000000000000))*(r21)*(x1963))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)))+(((r10)*(x1962)))+(((IkReal(-1.00000000000000))*(r11)*(x1963))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj5)*(r22)))+(((r20)*(x1962)))+(((IkReal(-1.00000000000000))*(r21)*(x1963)))))+IKsqr(((((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)))+(((r10)*(x1962)))+(((IkReal(-1.00000000000000))*(r11)*(x1963)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((cj5)*(r22)))+(((r20)*(x1962)))+(((IkReal(-1.00000000000000))*(r21)*(x1963)))), ((((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)))+(((r10)*(x1962)))+(((IkReal(-1.00000000000000))*(r11)*(x1963)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x1964=IKcos(j3);
IkReal x1965=((cj6)*(sj5));
IkReal x1966=((IkReal(1.00000000000000))*(sj5)*(sj6));
evalcond[0]=((((cj5)*(r22)))+(((r20)*(x1965)))+(((IkReal(-1.00000000000000))*(IKsin(j3))))+(((IkReal(-1.00000000000000))*(r21)*(x1966))));
evalcond[1]=((((sj1)*(x1964)))+(((r00)*(x1965)))+(((IkReal(-1.00000000000000))*(r01)*(x1966)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((r10)*(x1965)))+(((IkReal(-1.00000000000000))*(cj1)*(x1964)))+(((IkReal(-1.00000000000000))*(r11)*(x1966))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst23;
IkReal x1967=(r20)*(r20);
IkReal x1968=(cj5)*(cj5);
IkReal x1969=(sj6)*(sj6);
IkReal x1970=(cj6)*(cj6);
IkReal x1971=(r21)*(r21);
IkReal x1972=((cj6)*(r20));
IkReal x1973=((IkReal(2.00000000000000))*(r21)*(sj6));
IkReal x1974=((cj5)*(r22)*(sj5));
gconst23=IKsign(((((x1972)*(x1973)))+(((IkReal(-2.00000000000000))*(x1972)*(x1974)))+(((x1970)*(x1971)))+(((x1968)*(x1969)*(x1971)))+(((x1973)*(x1974)))+(((x1967)*(x1968)*(x1970)))+(((IkReal(-1.00000000000000))*(x1968)*(x1972)*(x1973)))+((((r22)*(r22))*((sj5)*(sj5))))+(((x1967)*(x1969)))));
IkReal x1975=(r20)*(r20);
IkReal x1976=(cj5)*(cj5);
IkReal x1977=(sj6)*(sj6);
IkReal x1978=(cj6)*(cj6);
IkReal x1979=(r21)*(r21);
IkReal x1980=((cj6)*(r20));
IkReal x1981=((IkReal(2.00000000000000))*(r21)*(sj6));
IkReal x1982=((cj5)*(r22)*(sj5));
dummyeval[0]=((((x1975)*(x1977)))+(((x1981)*(x1982)))+(((x1980)*(x1981)))+(((x1975)*(x1976)*(x1978)))+(((x1976)*(x1977)*(x1979)))+(((x1978)*(x1979)))+(((IkReal(-2.00000000000000))*(x1980)*(x1982)))+(((IkReal(-1.00000000000000))*(x1976)*(x1980)*(x1981)))+((((r22)*(r22))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst24;
IkReal x1983=(cj5)*(cj5);
IkReal x1984=(sj6)*(sj6);
IkReal x1985=(cj6)*(cj6);
IkReal x1986=((r00)*(r20));
IkReal x1987=((cj5)*(sj5));
IkReal x1988=((r01)*(r21));
IkReal x1989=((r21)*(sj6));
IkReal x1990=((sj6)*(x1987));
IkReal x1991=((IkReal(1.00000000000000))*(cj6)*(r00));
IkReal x1992=((cj6)*(r01)*(r20)*(sj6));
gconst24=IKsign(((((x1984)*(x1986)))+(((IkReal(-1.00000000000000))*(x1983)*(x1992)))+(((IkReal(-1.00000000000000))*(x1983)*(x1989)*(x1991)))+(((r01)*(r22)*(x1990)))+(((x1983)*(x1985)*(x1986)))+(x1992)+(((cj6)*(r00)*(x1989)))+(((r02)*(r22)*((sj5)*(sj5))))+(((r02)*(x1987)*(x1989)))+(((IkReal(-1.00000000000000))*(r22)*(x1987)*(x1991)))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(r20)*(x1987)))+(((x1985)*(x1988)))+(((x1983)*(x1984)*(x1988)))));
IkReal x1993=(cj5)*(cj5);
IkReal x1994=(sj6)*(sj6);
IkReal x1995=(cj6)*(cj6);
IkReal x1996=((r00)*(r20));
IkReal x1997=((cj5)*(sj5));
IkReal x1998=((r01)*(r21));
IkReal x1999=((r21)*(sj6));
IkReal x2000=((sj6)*(x1997));
IkReal x2001=((IkReal(1.00000000000000))*(cj6)*(r00));
IkReal x2002=x1992;
dummyeval[0]=((((cj6)*(r00)*(x1999)))+(((r01)*(r22)*(x2000)))+(x2002)+(((x1995)*(x1998)))+(((x1993)*(x1995)*(x1996)))+(((x1994)*(x1996)))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(r20)*(x1997)))+(((IkReal(-1.00000000000000))*(x1993)*(x1999)*(x2001)))+(((r02)*(r22)*((sj5)*(sj5))))+(((r02)*(x1997)*(x1999)))+(((IkReal(-1.00000000000000))*(x1993)*(x2002)))+(((IkReal(-1.00000000000000))*(r22)*(x1997)*(x2001)))+(((x1993)*(x1994)*(x1998))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2003=((cj1)*(r20));
IkReal x2004=((cj5)*(cj6));
IkReal x2005=((IkReal(1.00000000000000))*(cj1));
IkReal x2006=((IkReal(1.00000000000000))*(cj3));
IkReal x2007=((sj6)*(x2006));
if( IKabs(((gconst24)*(((((IkReal(-1.00000000000000))*(r22)*(sj5)*(x2005)))+(((IkReal(-1.00000000000000))*(r00)*(x2007)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(sj6)*(x2005)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x2006)))+(((x2003)*(x2004))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst24)*(((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2007)))+(((IkReal(-1.00000000000000))*(r02)*(sj5)*(x2006)))+(((cj1)*(cj6)*(r21)))+(((cj3)*(r00)*(x2004)))+(((sj6)*(x2003))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst24)*(((((IkReal(-1.00000000000000))*(r22)*(sj5)*(x2005)))+(((IkReal(-1.00000000000000))*(r00)*(x2007)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(sj6)*(x2005)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x2006)))+(((x2003)*(x2004)))))), ((gconst24)*(((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2007)))+(((IkReal(-1.00000000000000))*(r02)*(sj5)*(x2006)))+(((cj1)*(cj6)*(r21)))+(((cj3)*(r00)*(x2004)))+(((sj6)*(x2003)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2008=IKsin(j4);
IkReal x2009=IKcos(j4);
IkReal x2010=((IkReal(1.00000000000000))*(r00));
IkReal x2011=((cj5)*(r01));
IkReal x2012=((cj5)*(r11));
IkReal x2013=((IkReal(1.00000000000000))*(cj5));
IkReal x2014=((cj5)*(r21));
IkReal x2015=((sj5)*(x2008));
IkReal x2016=((cj6)*(x2008));
IkReal x2017=((sj6)*(x2009));
IkReal x2018=((sj6)*(x2008));
IkReal x2019=((sj5)*(x2009));
IkReal x2020=((cj6)*(x2009));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x2017)))+(((IkReal(-1.00000000000000))*(r21)*(x2020)))+(((x2014)*(x2018)))+(((r22)*(x2015)))+(((IkReal(-1.00000000000000))*(r20)*(x2013)*(x2016))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x2013)*(x2020)))+(((r20)*(x2018)))+(cj3)+(((x2014)*(x2017)))+(((r22)*(x2019)))+(((r21)*(x2016))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2010)*(x2017)))+(cj1)+(((IkReal(-1.00000000000000))*(cj5)*(x2010)*(x2016)))+(((x2011)*(x2018)))+(((r02)*(x2015)))+(((IkReal(-1.00000000000000))*(r01)*(x2020))));
evalcond[3]=((sj1)+(((IkReal(-1.00000000000000))*(r10)*(x2017)))+(((IkReal(-1.00000000000000))*(r10)*(x2013)*(x2016)))+(((x2012)*(x2018)))+(((r12)*(x2015)))+(((IkReal(-1.00000000000000))*(r11)*(x2020))));
evalcond[4]=((((r00)*(x2018)))+(((sj1)*(sj3)))+(((r01)*(x2016)))+(((x2011)*(x2017)))+(((IkReal(-1.00000000000000))*(cj5)*(x2010)*(x2020)))+(((r02)*(x2019))));
evalcond[5]=((((r10)*(x2018)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)))+(((x2012)*(x2017)))+(((r12)*(x2019)))+(((r11)*(x2016)))+(((IkReal(-1.00000000000000))*(r10)*(x2013)*(x2020))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2021=((cj3)*(cj6));
IkReal x2022=((IkReal(1.00000000000000))*(r21));
IkReal x2023=((cj3)*(sj6));
if( IKabs(((gconst23)*(((((IkReal(-1.00000000000000))*(x2021)*(x2022)))+(((IkReal(-1.00000000000000))*(r20)*(x2023))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst23)*(((((IkReal(-1.00000000000000))*(cj5)*(x2022)*(x2023)))+(((IkReal(-1.00000000000000))*(cj3)*(r22)*(sj5)))+(((cj5)*(r20)*(x2021))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst23)*(((((IkReal(-1.00000000000000))*(x2021)*(x2022)))+(((IkReal(-1.00000000000000))*(r20)*(x2023)))))), ((gconst23)*(((((IkReal(-1.00000000000000))*(cj5)*(x2022)*(x2023)))+(((IkReal(-1.00000000000000))*(cj3)*(r22)*(sj5)))+(((cj5)*(r20)*(x2021)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2024=IKsin(j4);
IkReal x2025=IKcos(j4);
IkReal x2026=((IkReal(1.00000000000000))*(r00));
IkReal x2027=((cj5)*(r01));
IkReal x2028=((cj5)*(r11));
IkReal x2029=((IkReal(1.00000000000000))*(cj5));
IkReal x2030=((cj5)*(r21));
IkReal x2031=((sj5)*(x2024));
IkReal x2032=((cj6)*(x2024));
IkReal x2033=((sj6)*(x2025));
IkReal x2034=((sj6)*(x2024));
IkReal x2035=((sj5)*(x2025));
IkReal x2036=((cj6)*(x2025));
evalcond[0]=((((r22)*(x2031)))+(((x2030)*(x2034)))+(((IkReal(-1.00000000000000))*(r20)*(x2033)))+(((IkReal(-1.00000000000000))*(r20)*(x2029)*(x2032)))+(((IkReal(-1.00000000000000))*(r21)*(x2036))));
evalcond[1]=((((r22)*(x2035)))+(((r21)*(x2032)))+(cj3)+(((x2030)*(x2033)))+(((IkReal(-1.00000000000000))*(r20)*(x2029)*(x2036)))+(((r20)*(x2034))));
evalcond[2]=((((x2027)*(x2034)))+(cj1)+(((IkReal(-1.00000000000000))*(cj5)*(x2026)*(x2032)))+(((r02)*(x2031)))+(((IkReal(-1.00000000000000))*(x2026)*(x2033)))+(((IkReal(-1.00000000000000))*(r01)*(x2036))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x2033)))+(sj1)+(((r12)*(x2031)))+(((x2028)*(x2034)))+(((IkReal(-1.00000000000000))*(r10)*(x2029)*(x2032)))+(((IkReal(-1.00000000000000))*(r11)*(x2036))));
evalcond[4]=((((x2027)*(x2033)))+(((r00)*(x2034)))+(((r01)*(x2032)))+(((sj1)*(sj3)))+(((IkReal(-1.00000000000000))*(cj5)*(x2026)*(x2036)))+(((r02)*(x2035))));
evalcond[5]=((((r10)*(x2034)))+(((r12)*(x2035)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)))+(((x2028)*(x2033)))+(((IkReal(-1.00000000000000))*(r10)*(x2029)*(x2036)))+(((r11)*(x2032))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2037=((cj6)*(sj1));
IkReal x2038=((IkReal(1.00000000000000))*(sj1)*(sj6));
if( IKabs(((gconst22)*(((((IkReal(-1.00000000000000))*(r20)*(x2038)))+(((IkReal(-1.00000000000000))*(r21)*(x2037))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst22)*(((((cj5)*(r20)*(x2037)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2038)))+(((IkReal(-1.00000000000000))*(r22)*(sj1)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst22)*(((((IkReal(-1.00000000000000))*(r20)*(x2038)))+(((IkReal(-1.00000000000000))*(r21)*(x2037)))))), ((gconst22)*(((((cj5)*(r20)*(x2037)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(x2038)))+(((IkReal(-1.00000000000000))*(r22)*(sj1)*(sj5)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x2039=IKsin(j4);
IkReal x2040=IKcos(j4);
IkReal x2041=((IkReal(1.00000000000000))*(cj6));
IkReal x2042=((sj5)*(x2039));
IkReal x2043=((cj5)*(x2039));
IkReal x2044=((IkReal(1.00000000000000))*(sj6)*(x2040));
evalcond[0]=((((r22)*(x2042)))+(((IkReal(-1.00000000000000))*(r21)*(x2040)*(x2041)))+(((r21)*(sj6)*(x2043)))+(((IkReal(-1.00000000000000))*(r20)*(x2044)))+(((IkReal(-1.00000000000000))*(r20)*(x2041)*(x2043))));
evalcond[1]=((cj1)+(((r01)*(sj6)*(x2043)))+(((r02)*(x2042)))+(((IkReal(-1.00000000000000))*(r01)*(x2040)*(x2041)))+(((IkReal(-1.00000000000000))*(r00)*(x2041)*(x2043)))+(((IkReal(-1.00000000000000))*(r00)*(x2044))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r11)*(x2040)*(x2041)))+(((r11)*(sj6)*(x2043)))+(sj1)+(((IkReal(-1.00000000000000))*(r10)*(x2044)))+(((r12)*(x2042)))+(((IkReal(-1.00000000000000))*(r10)*(x2041)*(x2043))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2045=((cj4)*(cj5));
IkReal x2046=((cj6)*(r20));
IkReal x2047=((IkReal(1.00000000000000))*(sj4));
IkReal x2048=((IkReal(1.00000000000000))*(r21)*(sj6));
if( IKabs(((((sj5)*(x2046)))+(((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x2048))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r20)*(sj6)*(x2047)))+(((IkReal(-1.00000000000000))*(x2045)*(x2048)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((x2045)*(x2046)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x2047))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj5)*(x2046)))+(((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x2048)))))+IKsqr(((((IkReal(-1.00000000000000))*(r20)*(sj6)*(x2047)))+(((IkReal(-1.00000000000000))*(x2045)*(x2048)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((x2045)*(x2046)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x2047)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((sj5)*(x2046)))+(((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x2048)))), ((((IkReal(-1.00000000000000))*(r20)*(sj6)*(x2047)))+(((IkReal(-1.00000000000000))*(x2045)*(x2048)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((x2045)*(x2046)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x2047)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x2049=IKcos(j3);
IkReal x2050=IKsin(j3);
IkReal x2051=((r11)*(sj6));
IkReal x2052=((IkReal(1.00000000000000))*(sj5));
IkReal x2053=((IkReal(1.00000000000000))*(cj1));
IkReal x2054=((sj4)*(sj6));
IkReal x2055=((cj4)*(sj5));
IkReal x2056=((cj6)*(sj4));
IkReal x2057=((cj4)*(cj5));
IkReal x2058=((r01)*(sj6));
IkReal x2059=((r21)*(sj6));
IkReal x2060=((cj6)*(sj5));
IkReal x2061=((IkReal(1.00000000000000))*(cj6)*(x2057));
evalcond[0]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(x2050)))+(((r20)*(x2060)))+(((IkReal(-1.00000000000000))*(x2052)*(x2059))));
evalcond[1]=((((r00)*(x2060)))+(((sj1)*(x2049)))+(((IkReal(-1.00000000000000))*(x2052)*(x2058)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x2049)*(x2053)))+(((IkReal(-1.00000000000000))*(x2051)*(x2052)))+(((r10)*(x2060))));
evalcond[3]=((((r22)*(x2055)))+(x2049)+(((IkReal(-1.00000000000000))*(r20)*(x2061)))+(((x2057)*(x2059)))+(((r20)*(x2054)))+(((r21)*(x2056))));
evalcond[4]=((((r01)*(x2056)))+(((sj1)*(x2050)))+(((r02)*(x2055)))+(((IkReal(-1.00000000000000))*(r00)*(x2061)))+(((x2057)*(x2058)))+(((r00)*(x2054))));
evalcond[5]=((((r10)*(x2054)))+(((r12)*(x2055)))+(((IkReal(-1.00000000000000))*(r10)*(x2061)))+(((r11)*(x2056)))+(((IkReal(-1.00000000000000))*(x2050)*(x2053)))+(((x2051)*(x2057))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2062=((cj1)*(cj6));
IkReal x2063=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((gconst21)*(((((IkReal(-1.00000000000000))*(r21)*(x2062)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x2063))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(sj6)*(x2063)))+(((cj5)*(r20)*(x2062)))+(((IkReal(-1.00000000000000))*(r22)*(sj5)*(x2063))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst21)*(((((IkReal(-1.00000000000000))*(r21)*(x2062)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x2063)))))), ((gconst21)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(sj6)*(x2063)))+(((cj5)*(r20)*(x2062)))+(((IkReal(-1.00000000000000))*(r22)*(sj5)*(x2063)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x2064=IKsin(j4);
IkReal x2065=IKcos(j4);
IkReal x2066=((IkReal(1.00000000000000))*(cj6));
IkReal x2067=((sj5)*(x2064));
IkReal x2068=((cj5)*(x2064));
IkReal x2069=((IkReal(1.00000000000000))*(sj6)*(x2065));
evalcond[0]=((((r22)*(x2067)))+(((IkReal(-1.00000000000000))*(r21)*(x2065)*(x2066)))+(((r21)*(sj6)*(x2068)))+(((IkReal(-1.00000000000000))*(r20)*(x2069)))+(((IkReal(-1.00000000000000))*(r20)*(x2066)*(x2068))));
evalcond[1]=((cj1)+(((r01)*(sj6)*(x2068)))+(((r02)*(x2067)))+(((IkReal(-1.00000000000000))*(r00)*(x2069)))+(((IkReal(-1.00000000000000))*(r01)*(x2065)*(x2066)))+(((IkReal(-1.00000000000000))*(r00)*(x2066)*(x2068))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r11)*(x2065)*(x2066)))+(((IkReal(-1.00000000000000))*(r10)*(x2069)))+(sj1)+(((r11)*(sj6)*(x2068)))+(((r12)*(x2067)))+(((IkReal(-1.00000000000000))*(r10)*(x2066)*(x2068))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2070=((cj4)*(cj5));
IkReal x2071=((cj6)*(r20));
IkReal x2072=((IkReal(1.00000000000000))*(sj4));
IkReal x2073=((IkReal(1.00000000000000))*(r21)*(sj6));
if( IKabs(((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x2073)))+(((sj5)*(x2071))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x2070)*(x2073)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x2072)))+(((x2070)*(x2071)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x2072))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x2073)))+(((sj5)*(x2071)))))+IKsqr(((((IkReal(-1.00000000000000))*(x2070)*(x2073)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x2072)))+(((x2070)*(x2071)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x2072)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x2073)))+(((sj5)*(x2071)))), ((((IkReal(-1.00000000000000))*(x2070)*(x2073)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x2072)))+(((x2070)*(x2071)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x2072)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x2074=IKcos(j3);
IkReal x2075=IKsin(j3);
IkReal x2076=((r11)*(sj6));
IkReal x2077=((IkReal(1.00000000000000))*(sj5));
IkReal x2078=((IkReal(1.00000000000000))*(cj1));
IkReal x2079=((sj4)*(sj6));
IkReal x2080=((cj4)*(sj5));
IkReal x2081=((cj6)*(sj4));
IkReal x2082=((cj4)*(cj5));
IkReal x2083=((r01)*(sj6));
IkReal x2084=((r21)*(sj6));
IkReal x2085=((cj6)*(sj5));
IkReal x2086=((IkReal(1.00000000000000))*(cj6)*(x2082));
evalcond[0]=((((cj5)*(r22)))+(((r20)*(x2085)))+(((IkReal(-1.00000000000000))*(x2077)*(x2084)))+(((IkReal(-1.00000000000000))*(x2075))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2077)*(x2083)))+(((sj1)*(x2074)))+(((r00)*(x2085)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x2076)*(x2077)))+(((r10)*(x2085)))+(((IkReal(-1.00000000000000))*(x2074)*(x2078))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x2086)))+(x2074)+(((r20)*(x2079)))+(((x2082)*(x2084)))+(((r21)*(x2081)))+(((r22)*(x2080))));
evalcond[4]=((((r02)*(x2080)))+(((x2082)*(x2083)))+(((sj1)*(x2075)))+(((r01)*(x2081)))+(((r00)*(x2079)))+(((IkReal(-1.00000000000000))*(r00)*(x2086))));
evalcond[5]=((((x2076)*(x2082)))+(((IkReal(-1.00000000000000))*(r10)*(x2086)))+(((r10)*(x2079)))+(((r11)*(x2081)))+(((r12)*(x2080)))+(((IkReal(-1.00000000000000))*(x2075)*(x2078))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2087=(sj1)*(sj1);
IkReal x2088=(cj1)*(cj1);
IkReal x2089=((cj5)*(r12));
IkReal x2090=((cj6)*(sj5));
IkReal x2091=((IkReal(1.00000000000000))*(sj1));
IkReal x2092=((cj5)*(r02));
IkReal x2093=((IkReal(1.00000000000000))*(cj1));
IkReal x2094=((r01)*(sj5)*(sj6));
IkReal x2095=((r11)*(sj5)*(sj6));
if( IKabs(((((IKabs(((((cj2)*(x2087)))+(((cj2)*(x2088))))) != 0)?((IkReal)1/(((((cj2)*(x2087)))+(((cj2)*(x2088)))))):(IkReal)1.0e30))*(((((cj1)*(x2092)))+(((cj1)*(r00)*(x2090)))+(((IkReal(-1.00000000000000))*(x2091)*(x2095)))+(((sj1)*(x2089)))+(((IkReal(-1.00000000000000))*(x2093)*(x2094)))+(((r10)*(sj1)*(x2090))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((x2088)+(x2087))) != 0)?((IkReal)1/(((x2088)+(x2087)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2091)*(x2092)))+(((sj1)*(x2094)))+(((cj1)*(x2089)))+(((IkReal(-1.00000000000000))*(x2093)*(x2095)))+(((cj1)*(r10)*(x2090)))+(((IkReal(-1.00000000000000))*(r00)*(x2090)*(x2091))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((cj2)*(x2087)))+(((cj2)*(x2088))))) != 0)?((IkReal)1/(((((cj2)*(x2087)))+(((cj2)*(x2088)))))):(IkReal)1.0e30))*(((((cj1)*(x2092)))+(((cj1)*(r00)*(x2090)))+(((IkReal(-1.00000000000000))*(x2091)*(x2095)))+(((sj1)*(x2089)))+(((IkReal(-1.00000000000000))*(x2093)*(x2094)))+(((r10)*(sj1)*(x2090)))))))+IKsqr(((((IKabs(((x2088)+(x2087))) != 0)?((IkReal)1/(((x2088)+(x2087)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2091)*(x2092)))+(((sj1)*(x2094)))+(((cj1)*(x2089)))+(((IkReal(-1.00000000000000))*(x2093)*(x2095)))+(((cj1)*(r10)*(x2090)))+(((IkReal(-1.00000000000000))*(r00)*(x2090)*(x2091)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IKabs(((((cj2)*(x2087)))+(((cj2)*(x2088))))) != 0)?((IkReal)1/(((((cj2)*(x2087)))+(((cj2)*(x2088)))))):(IkReal)1.0e30))*(((((cj1)*(x2092)))+(((cj1)*(r00)*(x2090)))+(((IkReal(-1.00000000000000))*(x2091)*(x2095)))+(((sj1)*(x2089)))+(((IkReal(-1.00000000000000))*(x2093)*(x2094)))+(((r10)*(sj1)*(x2090)))))), ((((IKabs(((x2088)+(x2087))) != 0)?((IkReal)1/(((x2088)+(x2087)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2091)*(x2092)))+(((sj1)*(x2094)))+(((cj1)*(x2089)))+(((IkReal(-1.00000000000000))*(x2093)*(x2095)))+(((cj1)*(r10)*(x2090)))+(((IkReal(-1.00000000000000))*(r00)*(x2090)*(x2091)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x2096=IKsin(j3);
IkReal x2097=IKcos(j3);
IkReal x2098=((IkReal(1.00000000000000))*(cj1));
IkReal x2099=((cj6)*(sj5));
IkReal x2100=((IkReal(1.00000000000000))*(sj5)*(sj6));
IkReal x2101=((cj2)*(x2096));
evalcond[0]=((((cj5)*(r22)))+(((r20)*(x2099)))+(((sj2)*(x2096)))+(((IkReal(-1.00000000000000))*(r21)*(x2100))));
evalcond[1]=((((sj1)*(x2097)))+(((r00)*(x2099)))+(((IkReal(-1.00000000000000))*(r01)*(x2100)))+(((IkReal(-1.00000000000000))*(x2098)*(x2101)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(sj1)*(x2101)))+(((IkReal(-1.00000000000000))*(x2097)*(x2098)))+(((IkReal(-1.00000000000000))*(r11)*(x2100)))+(((r10)*(x2099))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst2;
IkReal x2102=(cj5)*(cj5);
IkReal x2103=(r21)*(r21);
IkReal x2104=(sj6)*(sj6);
IkReal x2105=(cj6)*(cj6);
IkReal x2106=(r20)*(r20);
IkReal x2107=((cj6)*(r20));
IkReal x2108=((IkReal(1.00000000000000))*(x2105));
IkReal x2109=((IkReal(2.00000000000000))*(r21)*(sj6));
IkReal x2110=((cj5)*(r22)*(sj5));
IkReal x2111=((IkReal(1.00000000000000))*(x2104));
gconst2=IKsign(((((IkReal(-1.00000000000000))*(x2103)*(x2108)))+(((IkReal(-1.00000000000000))*(x2107)*(x2109)))+(((IkReal(-1.00000000000000))*(x2109)*(x2110)))+(((IkReal(2.00000000000000))*(x2107)*(x2110)))+(((IkReal(-1.00000000000000))*(x2102)*(x2103)*(x2111)))+(((x2102)*(x2107)*(x2109)))+(((IkReal(-1.00000000000000))*((r22)*(r22))*((sj5)*(sj5))))+(((IkReal(-1.00000000000000))*(x2102)*(x2106)*(x2108)))+(((IkReal(-1.00000000000000))*(x2106)*(x2111)))));
IkReal x2112=(cj5)*(cj5);
IkReal x2113=(r21)*(r21);
IkReal x2114=(sj6)*(sj6);
IkReal x2115=(cj6)*(cj6);
IkReal x2116=(r20)*(r20);
IkReal x2117=((cj6)*(r20));
IkReal x2118=((IkReal(1.00000000000000))*(x2115));
IkReal x2119=((IkReal(2.00000000000000))*(r21)*(sj6));
IkReal x2120=((cj5)*(r22)*(sj5));
IkReal x2121=((IkReal(1.00000000000000))*(x2114));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x2112)*(x2116)*(x2118)))+(((IkReal(-1.00000000000000))*(x2116)*(x2121)))+(((IkReal(2.00000000000000))*(x2117)*(x2120)))+(((IkReal(-1.00000000000000))*(x2117)*(x2119)))+(((IkReal(-1.00000000000000))*(x2119)*(x2120)))+(((IkReal(-1.00000000000000))*(x2112)*(x2113)*(x2121)))+(((x2112)*(x2117)*(x2119)))+(((IkReal(-1.00000000000000))*((r22)*(r22))*((sj5)*(sj5))))+(((IkReal(-1.00000000000000))*(x2113)*(x2118))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
IkReal x2122=(cj5)*(cj5);
IkReal x2123=(sj6)*(sj6);
IkReal x2124=(cj6)*(cj6);
IkReal x2125=((r00)*(r20));
IkReal x2126=((cj5)*(sj5));
IkReal x2127=((r01)*(r21));
IkReal x2128=((r21)*(sj6));
IkReal x2129=((sj6)*(x2126));
IkReal x2130=((IkReal(1.00000000000000))*(cj6)*(r00));
IkReal x2131=((cj6)*(r01)*(r20)*(sj6));
gconst3=IKsign(((((x2123)*(x2125)))+(((IkReal(-1.00000000000000))*(r22)*(x2126)*(x2130)))+(((cj6)*(r00)*(x2128)))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(r20)*(x2126)))+(((x2122)*(x2123)*(x2127)))+(x2131)+(((IkReal(-1.00000000000000))*(x2122)*(x2131)))+(((r02)*(r22)*((sj5)*(sj5))))+(((IkReal(-1.00000000000000))*(x2122)*(x2128)*(x2130)))+(((r02)*(x2126)*(x2128)))+(((x2124)*(x2127)))+(((x2122)*(x2124)*(x2125)))+(((r01)*(r22)*(x2129)))));
IkReal x2132=(cj5)*(cj5);
IkReal x2133=(sj6)*(sj6);
IkReal x2134=(cj6)*(cj6);
IkReal x2135=((r00)*(r20));
IkReal x2136=((cj5)*(sj5));
IkReal x2137=((r01)*(r21));
IkReal x2138=((r21)*(sj6));
IkReal x2139=((sj6)*(x2136));
IkReal x2140=((IkReal(1.00000000000000))*(cj6)*(r00));
IkReal x2141=x2131;
dummyeval[0]=((((IkReal(-1.00000000000000))*(x2132)*(x2141)))+(((x2132)*(x2134)*(x2135)))+(((cj6)*(r00)*(x2138)))+(((r01)*(r22)*(x2139)))+(((IkReal(-1.00000000000000))*(x2132)*(x2138)*(x2140)))+(x2141)+(((IkReal(-1.00000000000000))*(r22)*(x2136)*(x2140)))+(((x2134)*(x2137)))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(r20)*(x2136)))+(((r02)*(r22)*((sj5)*(sj5))))+(((r02)*(x2136)*(x2138)))+(((x2133)*(x2135)))+(((x2132)*(x2133)*(x2137))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2142=((sj2)*(sj5));
IkReal x2143=((cj5)*(sj6));
IkReal x2144=((sj2)*(sj6));
IkReal x2145=((cj3)*(r00));
IkReal x2146=((cj3)*(r01)*(sj2));
IkReal x2147=((IkReal(1.00000000000000))*(cj1)*(cj6)*(sj2));
if( IKabs(((gconst3)*(((((cj6)*(x2146)))+(((cj1)*(r22)*(x2142)))+(((cj1)*(r21)*(sj2)*(x2143)))+(((x2144)*(x2145)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x2147))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(cj5)*(cj6)*(sj2)*(x2145)))+(((x2143)*(x2146)))+(((IkReal(-1.00000000000000))*(cj1)*(r20)*(x2144)))+(((cj3)*(r02)*(x2142)))+(((IkReal(-1.00000000000000))*(r21)*(x2147))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(((((cj6)*(x2146)))+(((cj1)*(r22)*(x2142)))+(((cj1)*(r21)*(sj2)*(x2143)))+(((x2144)*(x2145)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x2147)))))), ((gconst3)*(((((IkReal(-1.00000000000000))*(cj5)*(cj6)*(sj2)*(x2145)))+(((x2143)*(x2146)))+(((IkReal(-1.00000000000000))*(cj1)*(r20)*(x2144)))+(((cj3)*(r02)*(x2142)))+(((IkReal(-1.00000000000000))*(r21)*(x2147)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2148=IKsin(j4);
IkReal x2149=IKcos(j4);
IkReal x2150=((IkReal(1.00000000000000))*(r00));
IkReal x2151=((cj5)*(r01));
IkReal x2152=((cj5)*(r11));
IkReal x2153=((cj2)*(cj3));
IkReal x2154=((IkReal(1.00000000000000))*(sj2));
IkReal x2155=((IkReal(1.00000000000000))*(cj5));
IkReal x2156=((cj5)*(r21));
IkReal x2157=((sj5)*(x2148));
IkReal x2158=((cj6)*(x2148));
IkReal x2159=((sj6)*(x2149));
IkReal x2160=((sj6)*(x2148));
IkReal x2161=((sj5)*(x2149));
IkReal x2162=((cj6)*(x2149));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(x2162)))+(((IkReal(-1.00000000000000))*(r20)*(x2159)))+(((x2156)*(x2160)))+(((IkReal(-1.00000000000000))*(r20)*(x2155)*(x2158)))+(((r22)*(x2157)))+(((IkReal(-1.00000000000000))*(cj2))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x2155)*(x2162)))+(((x2156)*(x2159)))+(((r20)*(x2160)))+(((r22)*(x2161)))+(((r21)*(x2158)))+(((IkReal(-1.00000000000000))*(cj3)*(x2154))));
evalcond[2]=((((r02)*(x2157)))+(((IkReal(-1.00000000000000))*(cj1)*(x2154)))+(((IkReal(-1.00000000000000))*(x2150)*(x2159)))+(((IkReal(-1.00000000000000))*(cj5)*(x2150)*(x2158)))+(((x2151)*(x2160)))+(((IkReal(-1.00000000000000))*(r01)*(x2162))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x2162)))+(((IkReal(-1.00000000000000))*(r10)*(x2159)))+(((IkReal(-1.00000000000000))*(sj1)*(x2154)))+(((IkReal(-1.00000000000000))*(r10)*(x2155)*(x2158)))+(((x2152)*(x2160)))+(((r12)*(x2157))));
evalcond[4]=((((r00)*(x2160)))+(((IkReal(-1.00000000000000))*(cj5)*(x2150)*(x2162)))+(((sj1)*(sj3)))+(((r02)*(x2161)))+(((x2151)*(x2159)))+(((r01)*(x2158)))+(((cj1)*(x2153))));
evalcond[5]=((((r12)*(x2161)))+(((x2152)*(x2159)))+(((IkReal(-1.00000000000000))*(r10)*(x2155)*(x2162)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)))+(((sj1)*(x2153)))+(((r10)*(x2160)))+(((r11)*(x2158))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2163=((r22)*(sj5));
IkReal x2164=((cj2)*(cj5));
IkReal x2165=((r21)*(sj6));
IkReal x2166=((cj6)*(r20));
IkReal x2167=((cj6)*(r21));
IkReal x2168=((r20)*(sj6));
IkReal x2169=((IkReal(1.00000000000000))*(cj3)*(sj2));
if( IKabs(((gconst2)*(((((x2164)*(x2166)))+(((IkReal(-1.00000000000000))*(cj2)*(x2163)))+(((IkReal(-1.00000000000000))*(x2168)*(x2169)))+(((IkReal(-1.00000000000000))*(x2164)*(x2165)))+(((IkReal(-1.00000000000000))*(x2167)*(x2169))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(cj5)*(x2165)*(x2169)))+(((IkReal(-1.00000000000000))*(x2163)*(x2169)))+(((cj3)*(cj5)*(sj2)*(x2166)))+(((cj2)*(x2167)))+(((cj2)*(x2168))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst2)*(((((x2164)*(x2166)))+(((IkReal(-1.00000000000000))*(cj2)*(x2163)))+(((IkReal(-1.00000000000000))*(x2168)*(x2169)))+(((IkReal(-1.00000000000000))*(x2164)*(x2165)))+(((IkReal(-1.00000000000000))*(x2167)*(x2169)))))), ((gconst2)*(((((IkReal(-1.00000000000000))*(cj5)*(x2165)*(x2169)))+(((IkReal(-1.00000000000000))*(x2163)*(x2169)))+(((cj3)*(cj5)*(sj2)*(x2166)))+(((cj2)*(x2167)))+(((cj2)*(x2168)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2170=IKsin(j4);
IkReal x2171=IKcos(j4);
IkReal x2172=((IkReal(1.00000000000000))*(r00));
IkReal x2173=((cj5)*(r01));
IkReal x2174=((cj5)*(r11));
IkReal x2175=((cj2)*(cj3));
IkReal x2176=((IkReal(1.00000000000000))*(sj2));
IkReal x2177=((IkReal(1.00000000000000))*(cj5));
IkReal x2178=((cj5)*(r21));
IkReal x2179=((sj5)*(x2170));
IkReal x2180=((cj6)*(x2170));
IkReal x2181=((sj6)*(x2171));
IkReal x2182=((sj6)*(x2170));
IkReal x2183=((sj5)*(x2171));
IkReal x2184=((cj6)*(x2171));
evalcond[0]=((((r22)*(x2179)))+(((IkReal(-1.00000000000000))*(r20)*(x2181)))+(((x2178)*(x2182)))+(((IkReal(-1.00000000000000))*(r20)*(x2177)*(x2180)))+(((IkReal(-1.00000000000000))*(r21)*(x2184)))+(((IkReal(-1.00000000000000))*(cj2))));
evalcond[1]=((((r22)*(x2183)))+(((IkReal(-1.00000000000000))*(cj3)*(x2176)))+(((x2178)*(x2181)))+(((r20)*(x2182)))+(((r21)*(x2180)))+(((IkReal(-1.00000000000000))*(r20)*(x2177)*(x2184))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x2184)))+(((IkReal(-1.00000000000000))*(cj5)*(x2172)*(x2180)))+(((IkReal(-1.00000000000000))*(x2172)*(x2181)))+(((r02)*(x2179)))+(((IkReal(-1.00000000000000))*(cj1)*(x2176)))+(((x2173)*(x2182))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj1)*(x2176)))+(((IkReal(-1.00000000000000))*(r10)*(x2181)))+(((x2174)*(x2182)))+(((IkReal(-1.00000000000000))*(r11)*(x2184)))+(((IkReal(-1.00000000000000))*(r10)*(x2177)*(x2180)))+(((r12)*(x2179))));
evalcond[4]=((((sj1)*(sj3)))+(((IkReal(-1.00000000000000))*(cj5)*(x2172)*(x2184)))+(((r02)*(x2183)))+(((cj1)*(x2175)))+(((x2173)*(x2181)))+(((r01)*(x2180)))+(((r00)*(x2182))));
evalcond[5]=((((sj1)*(x2175)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)))+(((x2174)*(x2181)))+(((r12)*(x2183)))+(((r11)*(x2180)))+(((IkReal(-1.00000000000000))*(r10)*(x2177)*(x2184)))+(((r10)*(x2182))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2185=((cj2)*(cj6));
IkReal x2186=((cj5)*(sj6));
IkReal x2187=((IkReal(1.00000000000000))*(sj1)*(sj2));
IkReal x2188=((r21)*(x2187));
if( IKabs(((gconst1)*(((((cj2)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x2187)))+(((IkReal(-1.00000000000000))*(cj6)*(x2188)))+(((r11)*(x2185))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(cj5)*(r10)*(x2185)))+(((IkReal(-1.00000000000000))*(x2186)*(x2188)))+(((IkReal(-1.00000000000000))*(r22)*(sj5)*(x2187)))+(((cj5)*(cj6)*(r20)*(sj1)*(sj2)))+(((cj2)*(r11)*(x2186)))+(((cj2)*(r12)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst1)*(((((cj2)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x2187)))+(((IkReal(-1.00000000000000))*(cj6)*(x2188)))+(((r11)*(x2185)))))), ((gconst1)*(((((IkReal(-1.00000000000000))*(cj5)*(r10)*(x2185)))+(((IkReal(-1.00000000000000))*(x2186)*(x2188)))+(((IkReal(-1.00000000000000))*(r22)*(sj5)*(x2187)))+(((cj5)*(cj6)*(r20)*(sj1)*(sj2)))+(((cj2)*(r11)*(x2186)))+(((cj2)*(r12)*(sj5)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x2189=IKsin(j4);
IkReal x2190=IKcos(j4);
IkReal x2191=((IkReal(1.00000000000000))*(sj2));
IkReal x2192=((IkReal(1.00000000000000))*(cj6));
IkReal x2193=((sj5)*(x2189));
IkReal x2194=((cj5)*(x2189));
IkReal x2195=((IkReal(1.00000000000000))*(sj6)*(x2190));
evalcond[0]=((((r22)*(x2193)))+(((IkReal(-1.00000000000000))*(r20)*(x2195)))+(((IkReal(-1.00000000000000))*(r21)*(x2190)*(x2192)))+(((r21)*(sj6)*(x2194)))+(((IkReal(-1.00000000000000))*(r20)*(x2192)*(x2194)))+(((IkReal(-1.00000000000000))*(cj2))));
evalcond[1]=((((r01)*(sj6)*(x2194)))+(((r02)*(x2193)))+(((IkReal(-1.00000000000000))*(cj1)*(x2191)))+(((IkReal(-1.00000000000000))*(r01)*(x2190)*(x2192)))+(((IkReal(-1.00000000000000))*(r00)*(x2195)))+(((IkReal(-1.00000000000000))*(r00)*(x2192)*(x2194))));
evalcond[2]=((((r11)*(sj6)*(x2194)))+(((IkReal(-1.00000000000000))*(r10)*(x2195)))+(((IkReal(-1.00000000000000))*(r10)*(x2192)*(x2194)))+(((IkReal(-1.00000000000000))*(sj1)*(x2191)))+(((r12)*(x2193)))+(((IkReal(-1.00000000000000))*(r11)*(x2190)*(x2192))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(sj2);
dummyeval[0]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x2196=(sj1)*(sj1);
IkReal x2197=(cj1)*(cj1);
dummyeval[0]=((((cj2)*(x2196)))+(((cj2)*(x2197))));
dummyeval[1]=((x2196)+(x2197));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj2;
dummyeval[1]=cj1;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x2198=((sj4)*(sj5));
IkReal x2199=((cj6)*(r20));
IkReal x2200=((IkReal(1.00000000000000))*(cj4));
IkReal x2201=((IkReal(0.390000000000000))*(sj5));
IkReal x2202=((r21)*(sj6));
IkReal x2203=((IkReal(0.390000000000000))*(cj5));
IkReal x2204=((cj6)*(r00));
IkReal x2205=((IkReal(0.000500000000000000))*(cj6));
IkReal x2206=((r11)*(sj6));
IkReal x2207=((cj5)*(sj4));
IkReal x2208=((r01)*(sj6));
IkReal x2209=((r20)*(sj6));
IkReal x2210=((r10)*(sj6));
IkReal x2211=((cj6)*(r10));
IkReal x2212=((cj6)*(r21));
IkReal x2213=((r00)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((cj5)*(r22)))+(((sj5)*(x2199)))+(((IkReal(-1.00000000000000))*(sj5)*(x2202))));
evalcond[2]=((IkReal(-0.00200000000000000))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.000500000000000000))*(x2209)))+(((x2199)*(x2201)))+(((r22)*(x2203)))+(((r21)*(x2205)))+(((IkReal(-1.00000000000000))*(x2201)*(x2202))));
evalcond[3]=((((r02)*(x2203)))+(((r01)*(x2205)))+(((x2201)*(x2204)))+(((IkReal(0.000500000000000000))*(x2213)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(x2201)*(x2208)))+(((IkReal(-0.400000000000000))*(sj1))));
evalcond[4]=((((r12)*(x2203)))+(((IkReal(0.400000000000000))*(cj1)))+(((r11)*(x2205)))+(((x2201)*(x2211)))+(((IkReal(0.000500000000000000))*(x2210)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(x2201)*(x2206))));
evalcond[5]=((IkReal(-1.00000000000000))+(((x2202)*(x2207)))+(((r22)*(x2198)))+(((IkReal(-1.00000000000000))*(x2199)*(x2207)))+(((IkReal(-1.00000000000000))*(x2200)*(x2212)))+(((IkReal(-1.00000000000000))*(x2200)*(x2209))));
evalcond[6]=((((cj4)*(r22)*(sj5)))+(((sj4)*(x2209)))+(((sj4)*(x2212)))+(((IkReal(-1.00000000000000))*(cj5)*(x2199)*(x2200)))+(((cj4)*(cj5)*(x2202))));
evalcond[7]=((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x2200)))+(((IkReal(-1.00000000000000))*(x2204)*(x2207)))+(((IkReal(-1.00000000000000))*(x2200)*(x2213)))+(((r02)*(x2198)))+(((x2207)*(x2208))));
evalcond[8]=((((x2206)*(x2207)))+(((IkReal(-1.00000000000000))*(x2207)*(x2211)))+(((r12)*(x2198)))+(((IkReal(-1.00000000000000))*(x2200)*(x2210)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x2200))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2214=((IkReal(1.00000000000000))*(sj4));
IkReal x2215=((r00)*(sj6));
IkReal x2216=((cj1)*(cj6));
IkReal x2217=((cj4)*(sj5));
IkReal x2218=((cj4)*(cj5));
IkReal x2219=((r01)*(sj1));
IkReal x2220=((IkReal(1.00000000000000))*(sj6));
IkReal x2221=((cj1)*(r02));
IkReal x2222=((cj1)*(r01));
IkReal x2223=((IkReal(1.00000000000000))*(r02)*(sj1));
IkReal x2224=((cj6)*(r00)*(sj1));
if( IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(x2217)*(x2223)))+(((r00)*(sj5)*(x2216)))+(((IkReal(-1.00000000000000))*(sj1)*(x2214)*(x2215)))+(((IkReal(-1.00000000000000))*(sj5)*(x2220)*(x2222)))+(((IkReal(-1.00000000000000))*(cj6)*(x2214)*(x2219)))+(((cj5)*(x2221)))+(((x2218)*(x2224)))+(((IkReal(-1.00000000000000))*(x2218)*(x2219)*(x2220))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((r00)*(x2216)*(x2218)))+(((IkReal(-1.00000000000000))*(cj5)*(x2223)))+(((IkReal(-1.00000000000000))*(sj5)*(x2224)))+(((IkReal(-1.00000000000000))*(x2218)*(x2220)*(x2222)))+(((sj5)*(sj6)*(x2219)))+(((IkReal(-1.00000000000000))*(cj1)*(x2214)*(x2215)))+(((IkReal(-1.00000000000000))*(r01)*(x2214)*(x2216)))+(((IkReal(-1.00000000000000))*(x2217)*(x2221))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst6)*(((((IkReal(-1.00000000000000))*(x2217)*(x2223)))+(((r00)*(sj5)*(x2216)))+(((IkReal(-1.00000000000000))*(sj1)*(x2214)*(x2215)))+(((IkReal(-1.00000000000000))*(sj5)*(x2220)*(x2222)))+(((IkReal(-1.00000000000000))*(cj6)*(x2214)*(x2219)))+(((cj5)*(x2221)))+(((x2218)*(x2224)))+(((IkReal(-1.00000000000000))*(x2218)*(x2219)*(x2220)))))), ((gconst6)*(((((r00)*(x2216)*(x2218)))+(((IkReal(-1.00000000000000))*(cj5)*(x2223)))+(((IkReal(-1.00000000000000))*(sj5)*(x2224)))+(((IkReal(-1.00000000000000))*(x2218)*(x2220)*(x2222)))+(((sj5)*(sj6)*(x2219)))+(((IkReal(-1.00000000000000))*(cj1)*(x2214)*(x2215)))+(((IkReal(-1.00000000000000))*(r01)*(x2214)*(x2216)))+(((IkReal(-1.00000000000000))*(x2217)*(x2221)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x2225=IKcos(j3);
IkReal x2226=IKsin(j3);
IkReal x2227=((r11)*(sj6));
IkReal x2228=((IkReal(1.00000000000000))*(sj5));
IkReal x2229=((sj4)*(sj6));
IkReal x2230=((cj4)*(sj5));
IkReal x2231=((cj6)*(sj4));
IkReal x2232=((cj4)*(cj5));
IkReal x2233=((r01)*(sj6));
IkReal x2234=((cj6)*(sj5));
IkReal x2235=((sj1)*(x2225));
IkReal x2236=((cj1)*(x2225));
IkReal x2237=((IkReal(1.00000000000000))*(x2226));
IkReal x2238=((cj1)*(x2237));
IkReal x2239=((IkReal(1.00000000000000))*(cj6)*(x2232));
evalcond[0]=((x2235)+(((IkReal(-1.00000000000000))*(x2228)*(x2233)))+(((IkReal(-1.00000000000000))*(x2238)))+(((r00)*(x2234)))+(((cj5)*(r02))));
evalcond[1]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x2227)*(x2228)))+(((r10)*(x2234)))+(((IkReal(-1.00000000000000))*(sj1)*(x2237)))+(((IkReal(-1.00000000000000))*(x2236))));
evalcond[2]=((((x2232)*(x2233)))+(x2236)+(((sj1)*(x2226)))+(((r02)*(x2230)))+(((IkReal(-1.00000000000000))*(r00)*(x2239)))+(((r00)*(x2229)))+(((r01)*(x2231))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x2239)))+(x2235)+(((r10)*(x2229)))+(((x2227)*(x2232)))+(((IkReal(-1.00000000000000))*(x2238)))+(((r11)*(x2231)))+(((r12)*(x2230))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2240=((cj5)*(r12));
IkReal x2241=((cj6)*(sj5));
IkReal x2242=((IkReal(1.00000000000000))*(sj1));
IkReal x2243=((cj5)*(r02));
IkReal x2244=((IkReal(1.00000000000000))*(cj1));
IkReal x2245=((r01)*(sj5)*(sj6));
IkReal x2246=((r11)*(sj5)*(sj6));
if( IKabs(((gconst5)*(((((cj1)*(x2243)))+(((r10)*(sj1)*(x2241)))+(((IkReal(-1.00000000000000))*(x2244)*(x2245)))+(((cj1)*(r00)*(x2241)))+(((sj1)*(x2240)))+(((IkReal(-1.00000000000000))*(x2242)*(x2246))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(r00)*(x2241)*(x2242)))+(((cj1)*(x2240)))+(((cj1)*(r10)*(x2241)))+(((IkReal(-1.00000000000000))*(x2244)*(x2246)))+(((sj1)*(x2245)))+(((IkReal(-1.00000000000000))*(x2242)*(x2243))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst5)*(((((cj1)*(x2243)))+(((r10)*(sj1)*(x2241)))+(((IkReal(-1.00000000000000))*(x2244)*(x2245)))+(((cj1)*(r00)*(x2241)))+(((sj1)*(x2240)))+(((IkReal(-1.00000000000000))*(x2242)*(x2246)))))), ((gconst5)*(((((IkReal(-1.00000000000000))*(r00)*(x2241)*(x2242)))+(((cj1)*(x2240)))+(((cj1)*(r10)*(x2241)))+(((IkReal(-1.00000000000000))*(x2244)*(x2246)))+(((sj1)*(x2245)))+(((IkReal(-1.00000000000000))*(x2242)*(x2243)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x2247=IKcos(j3);
IkReal x2248=IKsin(j3);
IkReal x2249=((r11)*(sj6));
IkReal x2250=((IkReal(1.00000000000000))*(sj5));
IkReal x2251=((sj4)*(sj6));
IkReal x2252=((cj4)*(sj5));
IkReal x2253=((cj6)*(sj4));
IkReal x2254=((cj4)*(cj5));
IkReal x2255=((r01)*(sj6));
IkReal x2256=((cj6)*(sj5));
IkReal x2257=((sj1)*(x2247));
IkReal x2258=((cj1)*(x2247));
IkReal x2259=((IkReal(1.00000000000000))*(x2248));
IkReal x2260=((cj1)*(x2259));
IkReal x2261=((IkReal(1.00000000000000))*(cj6)*(x2254));
evalcond[0]=((x2257)+(((r00)*(x2256)))+(((IkReal(-1.00000000000000))*(x2260)))+(((IkReal(-1.00000000000000))*(x2250)*(x2255)))+(((cj5)*(r02))));
evalcond[1]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x2249)*(x2250)))+(((IkReal(-1.00000000000000))*(sj1)*(x2259)))+(((r10)*(x2256)))+(((IkReal(-1.00000000000000))*(x2258))));
evalcond[2]=((x2258)+(((x2254)*(x2255)))+(((IkReal(-1.00000000000000))*(r00)*(x2261)))+(((sj1)*(x2248)))+(((r00)*(x2251)))+(((r01)*(x2253)))+(((r02)*(x2252))));
evalcond[3]=((((r10)*(x2251)))+(x2257)+(((r12)*(x2252)))+(((x2249)*(x2254)))+(((IkReal(-1.00000000000000))*(r10)*(x2261)))+(((IkReal(-1.00000000000000))*(x2260)))+(((r11)*(x2253))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2262=((sj4)*(sj5));
IkReal x2263=((cj6)*(r20));
IkReal x2264=((IkReal(1.00000000000000))*(cj4));
IkReal x2265=((IkReal(0.390000000000000))*(sj5));
IkReal x2266=((r21)*(sj6));
IkReal x2267=((IkReal(0.390000000000000))*(cj5));
IkReal x2268=((cj6)*(r00));
IkReal x2269=((IkReal(0.000500000000000000))*(cj6));
IkReal x2270=((r11)*(sj6));
IkReal x2271=((cj5)*(sj4));
IkReal x2272=((r01)*(sj6));
IkReal x2273=((r20)*(sj6));
IkReal x2274=((r10)*(sj6));
IkReal x2275=((cj6)*(r10));
IkReal x2276=((cj6)*(r21));
IkReal x2277=((r00)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x2266)))+(((sj5)*(x2263))));
evalcond[2]=((IkReal(0.00200000000000000))+(((x2263)*(x2265)))+(((r21)*(x2269)))+(((r22)*(x2267)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(x2265)*(x2266)))+(((IkReal(0.000500000000000000))*(x2273))));
evalcond[3]=((((r01)*(x2269)))+(((IkReal(-1.00000000000000))*(px)))+(((r02)*(x2267)))+(((x2265)*(x2268)))+(((IkReal(-1.00000000000000))*(x2265)*(x2272)))+(((IkReal(-0.400000000000000))*(sj1)))+(((IkReal(0.000500000000000000))*(x2277))));
evalcond[4]=((((IkReal(0.400000000000000))*(cj1)))+(((r11)*(x2269)))+(((IkReal(-1.00000000000000))*(py)))+(((r12)*(x2267)))+(((x2265)*(x2275)))+(((IkReal(-1.00000000000000))*(x2265)*(x2270)))+(((IkReal(0.000500000000000000))*(x2274))));
evalcond[5]=((IkReal(1.00000000000000))+(((r22)*(x2262)))+(((IkReal(-1.00000000000000))*(x2263)*(x2271)))+(((x2266)*(x2271)))+(((IkReal(-1.00000000000000))*(x2264)*(x2276)))+(((IkReal(-1.00000000000000))*(x2264)*(x2273))));
evalcond[6]=((((cj4)*(cj5)*(x2266)))+(((sj4)*(x2273)))+(((sj4)*(x2276)))+(((cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x2263)*(x2264))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x2268)*(x2271)))+(((r02)*(x2262)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x2264)))+(((IkReal(-1.00000000000000))*(x2264)*(x2277)))+(((x2271)*(x2272))));
evalcond[8]=((((x2270)*(x2271)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x2264)))+(((IkReal(-1.00000000000000))*(x2271)*(x2275)))+(((r12)*(x2262)))+(((IkReal(-1.00000000000000))*(x2264)*(x2274))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2278=((sj1)*(sj6));
IkReal x2279=((r00)*(sj4));
IkReal x2280=((IkReal(1.00000000000000))*(r01));
IkReal x2281=((cj1)*(cj6));
IkReal x2282=((cj1)*(sj6));
IkReal x2283=((cj4)*(cj5));
IkReal x2284=((r02)*(sj1));
IkReal x2285=((cj4)*(sj5));
IkReal x2286=((cj1)*(r02));
IkReal x2287=((cj6)*(r00)*(sj1));
if( IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(x2283)*(x2287)))+(((r00)*(sj5)*(x2281)))+(((r01)*(x2278)*(x2283)))+(((cj6)*(r01)*(sj1)*(sj4)))+(((cj5)*(x2286)))+(((IkReal(-1.00000000000000))*(sj5)*(x2280)*(x2282)))+(((x2278)*(x2279)))+(((x2284)*(x2285))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(x2285)*(x2286)))+(((r00)*(x2281)*(x2283)))+(((sj5)*(x2287)))+(((IkReal(-1.00000000000000))*(sj5)*(x2278)*(x2280)))+(((IkReal(-1.00000000000000))*(x2280)*(x2282)*(x2283)))+(((IkReal(-1.00000000000000))*(x2279)*(x2282)))+(((cj5)*(x2284)))+(((IkReal(-1.00000000000000))*(sj4)*(x2280)*(x2281))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst8)*(((((IkReal(-1.00000000000000))*(x2283)*(x2287)))+(((r00)*(sj5)*(x2281)))+(((r01)*(x2278)*(x2283)))+(((cj6)*(r01)*(sj1)*(sj4)))+(((cj5)*(x2286)))+(((IkReal(-1.00000000000000))*(sj5)*(x2280)*(x2282)))+(((x2278)*(x2279)))+(((x2284)*(x2285)))))), ((gconst8)*(((((IkReal(-1.00000000000000))*(x2285)*(x2286)))+(((r00)*(x2281)*(x2283)))+(((sj5)*(x2287)))+(((IkReal(-1.00000000000000))*(sj5)*(x2278)*(x2280)))+(((IkReal(-1.00000000000000))*(x2280)*(x2282)*(x2283)))+(((IkReal(-1.00000000000000))*(x2279)*(x2282)))+(((cj5)*(x2284)))+(((IkReal(-1.00000000000000))*(sj4)*(x2280)*(x2281)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x2288=IKsin(j3);
IkReal x2289=IKcos(j3);
IkReal x2290=((r11)*(sj6));
IkReal x2291=((IkReal(1.00000000000000))*(sj5));
IkReal x2292=((sj4)*(sj6));
IkReal x2293=((cj4)*(sj5));
IkReal x2294=((cj6)*(sj4));
IkReal x2295=((cj4)*(cj5));
IkReal x2296=((r01)*(sj6));
IkReal x2297=((cj6)*(sj5));
IkReal x2298=((sj1)*(x2288));
IkReal x2299=((cj1)*(x2288));
IkReal x2300=((IkReal(1.00000000000000))*(x2289));
IkReal x2301=((cj1)*(x2300));
IkReal x2302=((IkReal(1.00000000000000))*(cj6)*(x2295));
evalcond[0]=((x2299)+(((sj1)*(x2289)))+(((r00)*(x2297)))+(((IkReal(-1.00000000000000))*(x2291)*(x2296)))+(((cj5)*(r02))));
evalcond[1]=((((cj5)*(r12)))+(x2298)+(((r10)*(x2297)))+(((IkReal(-1.00000000000000))*(x2301)))+(((IkReal(-1.00000000000000))*(x2290)*(x2291))));
evalcond[2]=((x2298)+(((IkReal(-1.00000000000000))*(r00)*(x2302)))+(((x2295)*(x2296)))+(((IkReal(-1.00000000000000))*(x2301)))+(((r02)*(x2293)))+(((r00)*(x2292)))+(((r01)*(x2294))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x2302)))+(((IkReal(-1.00000000000000))*(sj1)*(x2300)))+(((r10)*(x2292)))+(((IkReal(-1.00000000000000))*(x2299)))+(((x2290)*(x2295)))+(((r12)*(x2293)))+(((r11)*(x2294))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2303=((sj1)*(sj5));
IkReal x2304=((cj6)*(r10));
IkReal x2305=((cj5)*(sj1));
IkReal x2306=((cj1)*(cj5));
IkReal x2307=((cj1)*(sj5));
IkReal x2308=((cj6)*(r00));
IkReal x2309=((r11)*(sj6));
IkReal x2310=((IkReal(1.00000000000000))*(r01)*(sj6));
if( IKabs(((gconst7)*(((((r12)*(x2305)))+(((x2303)*(x2304)))+(((r02)*(x2306)))+(((IkReal(-1.00000000000000))*(x2307)*(x2310)))+(((x2307)*(x2308)))+(((IkReal(-1.00000000000000))*(x2303)*(x2309))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(r12)*(x2306)))+(((x2303)*(x2308)))+(((r02)*(x2305)))+(((IkReal(-1.00000000000000))*(x2303)*(x2310)))+(((IkReal(-1.00000000000000))*(x2304)*(x2307)))+(((x2307)*(x2309))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst7)*(((((r12)*(x2305)))+(((x2303)*(x2304)))+(((r02)*(x2306)))+(((IkReal(-1.00000000000000))*(x2307)*(x2310)))+(((x2307)*(x2308)))+(((IkReal(-1.00000000000000))*(x2303)*(x2309)))))), ((gconst7)*(((((IkReal(-1.00000000000000))*(r12)*(x2306)))+(((x2303)*(x2308)))+(((r02)*(x2305)))+(((IkReal(-1.00000000000000))*(x2303)*(x2310)))+(((IkReal(-1.00000000000000))*(x2304)*(x2307)))+(((x2307)*(x2309)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x2311=IKsin(j3);
IkReal x2312=IKcos(j3);
IkReal x2313=((r11)*(sj6));
IkReal x2314=((IkReal(1.00000000000000))*(sj5));
IkReal x2315=((sj4)*(sj6));
IkReal x2316=((cj4)*(sj5));
IkReal x2317=((cj6)*(sj4));
IkReal x2318=((cj4)*(cj5));
IkReal x2319=((r01)*(sj6));
IkReal x2320=((cj6)*(sj5));
IkReal x2321=((sj1)*(x2311));
IkReal x2322=((cj1)*(x2311));
IkReal x2323=((IkReal(1.00000000000000))*(x2312));
IkReal x2324=((cj1)*(x2323));
IkReal x2325=((IkReal(1.00000000000000))*(cj6)*(x2318));
evalcond[0]=((x2322)+(((sj1)*(x2312)))+(((r00)*(x2320)))+(((IkReal(-1.00000000000000))*(x2314)*(x2319)))+(((cj5)*(r02))));
evalcond[1]=((((r10)*(x2320)))+(((cj5)*(r12)))+(x2321)+(((IkReal(-1.00000000000000))*(x2313)*(x2314)))+(((IkReal(-1.00000000000000))*(x2324))));
evalcond[2]=((x2321)+(((x2318)*(x2319)))+(((r01)*(x2317)))+(((r00)*(x2315)))+(((IkReal(-1.00000000000000))*(r00)*(x2325)))+(((r02)*(x2316)))+(((IkReal(-1.00000000000000))*(x2324))));
evalcond[3]=((((r10)*(x2315)))+(((r11)*(x2317)))+(((r12)*(x2316)))+(((IkReal(-1.00000000000000))*(r10)*(x2325)))+(((IkReal(-1.00000000000000))*(sj1)*(x2323)))+(((x2313)*(x2318)))+(((IkReal(-1.00000000000000))*(x2322))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2326=((sj4)*(sj5));
IkReal x2327=((IkReal(0.390000000000000))*(sj5));
IkReal x2328=((r21)*(sj6));
IkReal x2329=((IkReal(0.390000000000000))*(cj5));
IkReal x2330=((cj6)*(r00));
IkReal x2331=((IkReal(0.000500000000000000))*(cj6));
IkReal x2332=((r11)*(sj6));
IkReal x2333=((cj5)*(sj4));
IkReal x2334=((IkReal(1.00000000000000))*(r20));
IkReal x2335=((cj4)*(sj6));
IkReal x2336=((r01)*(sj6));
IkReal x2337=((IkReal(0.000500000000000000))*(sj6));
IkReal x2338=((IkReal(1.00000000000000))*(r10));
IkReal x2339=((IkReal(1.00000000000000))*(cj4)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((r21)*(x2331)))+(((r22)*(x2329)))+(((cj6)*(r20)*(x2327)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(x2327)*(x2328)))+(((IkReal(-0.00200000000000000))*(cj2)))+(((r20)*(x2337))));
evalcond[2]=((IkReal(-0.400000000000000))+(((r02)*(x2329)))+(((r01)*(x2331)))+(((IkReal(-1.00000000000000))*(px)))+(((x2327)*(x2330)))+(((r00)*(x2337)))+(((IkReal(-1.00000000000000))*(x2327)*(x2336))));
evalcond[3]=((((r11)*(x2331)))+(((r12)*(x2329)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.00200000000000000))*(sj2)))+(((cj6)*(r10)*(x2327)))+(((IkReal(-1.00000000000000))*(x2327)*(x2332)))+(((r10)*(x2337))));
evalcond[4]=((((r22)*(x2326)))+(((IkReal(-1.00000000000000))*(cj6)*(x2333)*(x2334)))+(((IkReal(-1.00000000000000))*(x2334)*(x2335)))+(((IkReal(-1.00000000000000))*(r21)*(x2339)))+(((IkReal(-1.00000000000000))*(cj2)))+(((x2328)*(x2333))));
evalcond[5]=((((r02)*(x2326)))+(((x2333)*(x2336)))+(((IkReal(-1.00000000000000))*(x2330)*(x2333)))+(((IkReal(-1.00000000000000))*(r01)*(x2339)))+(((IkReal(-1.00000000000000))*(r00)*(x2335))));
evalcond[6]=((((IkReal(-1.00000000000000))*(sj2)))+(((x2332)*(x2333)))+(((IkReal(-1.00000000000000))*(cj6)*(x2333)*(x2338)))+(((r12)*(x2326)))+(((IkReal(-1.00000000000000))*(r11)*(x2339)))+(((IkReal(-1.00000000000000))*(x2335)*(x2338))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2340=((IkReal(1.00000000000000))*(cj6));
IkReal x2341=((IkReal(1.00000000000000))*(cj5));
IkReal x2342=((r01)*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(sj6)))+(((cj4)*(cj5)*(cj6)*(r00)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(x2340)))+(((IkReal(-1.00000000000000))*(cj4)*(x2341)*(x2342))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2340)))+(((IkReal(-1.00000000000000))*(r02)*(x2341)))+(((sj5)*(x2342))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(sj6)))+(((cj4)*(cj5)*(cj6)*(r00)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(x2340)))+(((IkReal(-1.00000000000000))*(cj4)*(x2341)*(x2342)))))+IKsqr(((((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2340)))+(((IkReal(-1.00000000000000))*(r02)*(x2341)))+(((sj5)*(x2342)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(sj6)))+(((cj4)*(cj5)*(cj6)*(r00)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(x2340)))+(((IkReal(-1.00000000000000))*(cj4)*(x2341)*(x2342)))), ((((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2340)))+(((IkReal(-1.00000000000000))*(r02)*(x2341)))+(((sj5)*(x2342)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x2343=IKsin(j3);
IkReal x2344=IKcos(j3);
IkReal x2345=((r11)*(sj6));
IkReal x2346=((IkReal(1.00000000000000))*(sj5));
IkReal x2347=((sj4)*(sj6));
IkReal x2348=((cj4)*(sj5));
IkReal x2349=((cj6)*(sj4));
IkReal x2350=((cj4)*(cj5));
IkReal x2351=((r01)*(sj6));
IkReal x2352=((r21)*(sj6));
IkReal x2353=((cj6)*(sj5));
IkReal x2354=((IkReal(1.00000000000000))*(cj6)*(x2350));
evalcond[0]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(x2346)*(x2352)))+(((r20)*(x2353)))+(((sj2)*(x2343))));
evalcond[1]=((((r00)*(x2353)))+(((IkReal(-1.00000000000000))*(x2346)*(x2351)))+(x2344)+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x2345)*(x2346)))+(((r10)*(x2353)))+(((IkReal(-1.00000000000000))*(cj2)*(x2343))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x2354)))+(((r22)*(x2348)))+(((x2350)*(x2352)))+(((IkReal(-1.00000000000000))*(sj2)*(x2344)))+(((r20)*(x2347)))+(((r21)*(x2349))));
evalcond[4]=((((r01)*(x2349)))+(x2343)+(((IkReal(-1.00000000000000))*(r00)*(x2354)))+(((r00)*(x2347)))+(((x2350)*(x2351)))+(((r02)*(x2348))));
evalcond[5]=((((r10)*(x2347)))+(((r12)*(x2348)))+(((cj2)*(x2344)))+(((r11)*(x2349)))+(((x2345)*(x2350)))+(((IkReal(-1.00000000000000))*(r10)*(x2354))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2355=((sj4)*(sj5));
IkReal x2356=((IkReal(0.390000000000000))*(sj5));
IkReal x2357=((r21)*(sj6));
IkReal x2358=((IkReal(0.390000000000000))*(cj5));
IkReal x2359=((cj6)*(r00));
IkReal x2360=((IkReal(0.000500000000000000))*(cj6));
IkReal x2361=((r11)*(sj6));
IkReal x2362=((cj5)*(sj4));
IkReal x2363=((IkReal(1.00000000000000))*(r20));
IkReal x2364=((cj4)*(sj6));
IkReal x2365=((r01)*(sj6));
IkReal x2366=((IkReal(0.000500000000000000))*(sj6));
IkReal x2367=((IkReal(1.00000000000000))*(r10));
IkReal x2368=((IkReal(1.00000000000000))*(cj4)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2356)*(x2357)))+(((r20)*(x2366)))+(((r22)*(x2358)))+(((IkReal(-1.00000000000000))*(pz)))+(((cj6)*(r20)*(x2356)))+(((IkReal(-0.00200000000000000))*(cj2)))+(((r21)*(x2360))));
evalcond[2]=((IkReal(0.400000000000000))+(((x2356)*(x2359)))+(((IkReal(-1.00000000000000))*(x2356)*(x2365)))+(((IkReal(-1.00000000000000))*(px)))+(((r01)*(x2360)))+(((r02)*(x2358)))+(((r00)*(x2366))));
evalcond[3]=((((r11)*(x2360)))+(((cj6)*(r10)*(x2356)))+(((r12)*(x2358)))+(((r10)*(x2366)))+(((IkReal(0.00200000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x2356)*(x2361)))+(((IkReal(-1.00000000000000))*(py))));
evalcond[4]=((((r22)*(x2355)))+(((IkReal(-1.00000000000000))*(cj6)*(x2362)*(x2363)))+(((IkReal(-1.00000000000000))*(r21)*(x2368)))+(((x2357)*(x2362)))+(((IkReal(-1.00000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x2363)*(x2364))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x2364)))+(((IkReal(-1.00000000000000))*(x2359)*(x2362)))+(((IkReal(-1.00000000000000))*(r01)*(x2368)))+(((x2362)*(x2365)))+(((r02)*(x2355))));
evalcond[6]=((sj2)+(((IkReal(-1.00000000000000))*(cj6)*(x2362)*(x2367)))+(((r12)*(x2355)))+(((IkReal(-1.00000000000000))*(x2364)*(x2367)))+(((x2361)*(x2362)))+(((IkReal(-1.00000000000000))*(r11)*(x2368))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2369=((cj4)*(cj5));
IkReal x2370=((r01)*(sj6));
IkReal x2371=((cj6)*(r00));
if( IKabs(((((r00)*(sj4)*(sj6)))+(((cj6)*(r01)*(sj4)))+(((cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x2369)*(x2371)))+(((x2369)*(x2370))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj5)*(x2371)))+(((IkReal(-1.00000000000000))*(sj5)*(x2370)))+(((cj5)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r00)*(sj4)*(sj6)))+(((cj6)*(r01)*(sj4)))+(((cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x2369)*(x2371)))+(((x2369)*(x2370)))))+IKsqr(((((sj5)*(x2371)))+(((IkReal(-1.00000000000000))*(sj5)*(x2370)))+(((cj5)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((r00)*(sj4)*(sj6)))+(((cj6)*(r01)*(sj4)))+(((cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x2369)*(x2371)))+(((x2369)*(x2370)))), ((((sj5)*(x2371)))+(((IkReal(-1.00000000000000))*(sj5)*(x2370)))+(((cj5)*(r02)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x2372=IKsin(j3);
IkReal x2373=IKcos(j3);
IkReal x2374=((r11)*(sj6));
IkReal x2375=((IkReal(1.00000000000000))*(sj5));
IkReal x2376=((cj6)*(sj4));
IkReal x2377=((sj4)*(sj6));
IkReal x2378=((cj4)*(sj5));
IkReal x2379=((cj4)*(cj5));
IkReal x2380=((r01)*(sj6));
IkReal x2381=((r21)*(sj6));
IkReal x2382=((cj6)*(sj5));
IkReal x2383=((IkReal(1.00000000000000))*(x2373));
IkReal x2384=((IkReal(1.00000000000000))*(cj6)*(x2379));
evalcond[0]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(x2375)*(x2381)))+(((r20)*(x2382)))+(((sj2)*(x2372))));
evalcond[1]=((((r00)*(x2382)))+(((IkReal(-1.00000000000000))*(x2375)*(x2380)))+(((IkReal(-1.00000000000000))*(x2383)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((r10)*(x2382)))+(((IkReal(-1.00000000000000))*(x2374)*(x2375)))+(((cj2)*(x2372))));
evalcond[3]=((((r20)*(x2377)))+(((IkReal(-1.00000000000000))*(sj2)*(x2383)))+(((IkReal(-1.00000000000000))*(r20)*(x2384)))+(((r22)*(x2378)))+(((x2379)*(x2381)))+(((r21)*(x2376))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(x2384)))+(((r02)*(x2378)))+(((IkReal(-1.00000000000000))*(x2372)))+(((x2379)*(x2380)))+(((r00)*(x2377)))+(((r01)*(x2376))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x2384)))+(((r12)*(x2378)))+(((r10)*(x2377)))+(((x2374)*(x2379)))+(((IkReal(-1.00000000000000))*(cj2)*(x2383)))+(((r11)*(x2376))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2385=((sj4)*(sj5));
IkReal x2386=((IkReal(0.390000000000000))*(sj5));
IkReal x2387=((r21)*(sj6));
IkReal x2388=((IkReal(0.390000000000000))*(cj5));
IkReal x2389=((cj6)*(r00));
IkReal x2390=((IkReal(0.000500000000000000))*(cj6));
IkReal x2391=((r11)*(sj6));
IkReal x2392=((cj5)*(sj4));
IkReal x2393=((r01)*(sj6));
IkReal x2394=((IkReal(1.00000000000000))*(r20));
IkReal x2395=((cj4)*(sj6));
IkReal x2396=((IkReal(0.000500000000000000))*(sj6));
IkReal x2397=((IkReal(1.00000000000000))*(r10));
IkReal x2398=((IkReal(1.00000000000000))*(cj4)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2386)*(x2387)))+(((r20)*(x2396)))+(((IkReal(-1.00000000000000))*(pz)))+(((r22)*(x2388)))+(((cj6)*(r20)*(x2386)))+(((r21)*(x2390))));
evalcond[2]=((((r00)*(x2396)))+(((r01)*(x2390)))+(((IkReal(-1.00000000000000))*(x2386)*(x2393)))+(((r02)*(x2388)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.00200000000000000))*(cj1)))+(((IkReal(-0.400000000000000))*(sj1)))+(((x2386)*(x2389))));
evalcond[3]=((((cj6)*(r10)*(x2386)))+(((IkReal(-1.00000000000000))*(x2386)*(x2391)))+(((IkReal(0.400000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.00200000000000000))*(sj1)))+(((r10)*(x2396)))+(((r11)*(x2390)))+(((r12)*(x2388))));
evalcond[4]=((((x2387)*(x2392)))+(((IkReal(-1.00000000000000))*(cj6)*(x2392)*(x2394)))+(((IkReal(-1.00000000000000))*(r21)*(x2398)))+(((IkReal(-1.00000000000000))*(x2394)*(x2395)))+(((r22)*(x2385))));
evalcond[5]=((((x2392)*(x2393)))+(((IkReal(-1.00000000000000))*(r01)*(x2398)))+(((r02)*(x2385)))+(((IkReal(-1.00000000000000))*(r00)*(x2395)))+(((IkReal(-1.00000000000000))*(x2389)*(x2392)))+(((IkReal(-1.00000000000000))*(cj1))));
evalcond[6]=((((IkReal(-1.00000000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(cj6)*(x2392)*(x2397)))+(((x2391)*(x2392)))+(((IkReal(-1.00000000000000))*(x2395)*(x2397)))+(((r12)*(x2385)))+(((IkReal(-1.00000000000000))*(r11)*(x2398))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2399=((cj4)*(cj5));
IkReal x2400=((r21)*(sj6));
IkReal x2401=((IkReal(1.00000000000000))*(cj6)*(r20));
if( IKabs(((((sj5)*(x2400)))+(((IkReal(-1.00000000000000))*(sj5)*(x2401)))+(((IkReal(-1.00000000000000))*(cj5)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x2399)*(x2401)))+(((x2399)*(x2400)))+(((cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((r20)*(sj4)*(sj6))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj5)*(x2400)))+(((IkReal(-1.00000000000000))*(sj5)*(x2401)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))))+IKsqr(((((IkReal(-1.00000000000000))*(x2399)*(x2401)))+(((x2399)*(x2400)))+(((cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((r20)*(sj4)*(sj6)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((sj5)*(x2400)))+(((IkReal(-1.00000000000000))*(sj5)*(x2401)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))), ((((IkReal(-1.00000000000000))*(x2399)*(x2401)))+(((x2399)*(x2400)))+(((cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((r20)*(sj4)*(sj6)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x2402=IKcos(j3);
IkReal x2403=IKsin(j3);
IkReal x2404=((r11)*(sj6));
IkReal x2405=((IkReal(1.00000000000000))*(sj5));
IkReal x2406=((IkReal(1.00000000000000))*(cj1));
IkReal x2407=((cj6)*(sj4));
IkReal x2408=((sj4)*(sj6));
IkReal x2409=((cj4)*(sj5));
IkReal x2410=((cj4)*(cj5));
IkReal x2411=((r01)*(sj6));
IkReal x2412=((r21)*(sj6));
IkReal x2413=((cj6)*(sj5));
IkReal x2414=((IkReal(1.00000000000000))*(cj6)*(x2410));
evalcond[0]=((((cj5)*(r22)))+(x2403)+(((IkReal(-1.00000000000000))*(x2405)*(x2412)))+(((r20)*(x2413))));
evalcond[1]=((((r00)*(x2413)))+(((IkReal(-1.00000000000000))*(x2405)*(x2411)))+(((sj1)*(x2402)))+(((cj5)*(r02))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2404)*(x2405)))+(((cj5)*(r12)))+(((r10)*(x2413)))+(((IkReal(-1.00000000000000))*(x2402)*(x2406))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x2414)))+(((IkReal(-1.00000000000000))*(x2402)))+(((r20)*(x2408)))+(((x2410)*(x2412)))+(((r22)*(x2409)))+(((r21)*(x2407))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(x2414)))+(((r01)*(x2407)))+(((r00)*(x2408)))+(((x2410)*(x2411)))+(((r02)*(x2409)))+(((sj1)*(x2403))));
evalcond[5]=((((r10)*(x2408)))+(((r11)*(x2407)))+(((IkReal(-1.00000000000000))*(x2403)*(x2406)))+(((r12)*(x2409)))+(((x2404)*(x2410)))+(((IkReal(-1.00000000000000))*(r10)*(x2414))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2415=((sj4)*(sj5));
IkReal x2416=((IkReal(0.390000000000000))*(sj5));
IkReal x2417=((r21)*(sj6));
IkReal x2418=((IkReal(0.390000000000000))*(cj5));
IkReal x2419=((cj6)*(r00));
IkReal x2420=((IkReal(0.000500000000000000))*(cj6));
IkReal x2421=((r11)*(sj6));
IkReal x2422=((cj5)*(sj4));
IkReal x2423=((r01)*(sj6));
IkReal x2424=((IkReal(1.00000000000000))*(r20));
IkReal x2425=((cj4)*(sj6));
IkReal x2426=((IkReal(0.000500000000000000))*(sj6));
IkReal x2427=((IkReal(1.00000000000000))*(r10));
IkReal x2428=((IkReal(1.00000000000000))*(cj4)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((r22)*(x2418)))+(((r21)*(x2420)))+(((IkReal(-1.00000000000000))*(x2416)*(x2417)))+(((cj6)*(r20)*(x2416)))+(((IkReal(-1.00000000000000))*(pz)))+(((r20)*(x2426))));
evalcond[2]=((((IkReal(0.00200000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(px)))+(((x2416)*(x2419)))+(((r00)*(x2426)))+(((r01)*(x2420)))+(((IkReal(-1.00000000000000))*(x2416)*(x2423)))+(((r02)*(x2418)))+(((IkReal(-0.400000000000000))*(sj1))));
evalcond[3]=((((IkReal(0.400000000000000))*(cj1)))+(((r10)*(x2426)))+(((IkReal(0.00200000000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(py)))+(((r11)*(x2420)))+(((IkReal(-1.00000000000000))*(x2416)*(x2421)))+(((cj6)*(r10)*(x2416)))+(((r12)*(x2418))));
evalcond[4]=((((r22)*(x2415)))+(((x2417)*(x2422)))+(((IkReal(-1.00000000000000))*(x2424)*(x2425)))+(((IkReal(-1.00000000000000))*(r21)*(x2428)))+(((IkReal(-1.00000000000000))*(cj6)*(x2422)*(x2424))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r01)*(x2428)))+(cj1)+(((x2422)*(x2423)))+(((r02)*(x2415)))+(((IkReal(-1.00000000000000))*(r00)*(x2425)))+(((IkReal(-1.00000000000000))*(x2419)*(x2422))));
evalcond[6]=((sj1)+(((IkReal(-1.00000000000000))*(x2425)*(x2427)))+(((IkReal(-1.00000000000000))*(r11)*(x2428)))+(((IkReal(-1.00000000000000))*(cj6)*(x2422)*(x2427)))+(((x2421)*(x2422)))+(((r12)*(x2415))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2429=((cj4)*(cj5));
IkReal x2430=((cj6)*(r20));
IkReal x2431=((IkReal(1.00000000000000))*(sj4));
IkReal x2432=((IkReal(1.00000000000000))*(r21)*(sj6));
if( IKabs(((((cj5)*(r22)))+(((sj5)*(x2430)))+(((IkReal(-1.00000000000000))*(sj5)*(x2432))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x2429)*(x2430)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x2431)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x2429)*(x2432)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x2431))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj5)*(r22)))+(((sj5)*(x2430)))+(((IkReal(-1.00000000000000))*(sj5)*(x2432)))))+IKsqr(((((x2429)*(x2430)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x2431)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x2429)*(x2432)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x2431)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((cj5)*(r22)))+(((sj5)*(x2430)))+(((IkReal(-1.00000000000000))*(sj5)*(x2432)))), ((((x2429)*(x2430)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x2431)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x2429)*(x2432)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x2431)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x2433=IKcos(j3);
IkReal x2434=IKsin(j3);
IkReal x2435=((r11)*(sj6));
IkReal x2436=((IkReal(1.00000000000000))*(sj5));
IkReal x2437=((IkReal(1.00000000000000))*(cj1));
IkReal x2438=((sj4)*(sj6));
IkReal x2439=((cj4)*(sj5));
IkReal x2440=((cj6)*(sj4));
IkReal x2441=((cj4)*(cj5));
IkReal x2442=((r01)*(sj6));
IkReal x2443=((r21)*(sj6));
IkReal x2444=((cj6)*(sj5));
IkReal x2445=((IkReal(1.00000000000000))*(cj6)*(x2441));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2434)))+(((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(x2436)*(x2443)))+(((r20)*(x2444))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2436)*(x2442)))+(((r00)*(x2444)))+(((sj1)*(x2433)))+(((cj5)*(r02))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2433)*(x2437)))+(((cj5)*(r12)))+(((r10)*(x2444)))+(((IkReal(-1.00000000000000))*(x2435)*(x2436))));
evalcond[3]=((x2433)+(((IkReal(-1.00000000000000))*(r20)*(x2445)))+(((r20)*(x2438)))+(((r22)*(x2439)))+(((x2441)*(x2443)))+(((r21)*(x2440))));
evalcond[4]=((((r00)*(x2438)))+(((r02)*(x2439)))+(((r01)*(x2440)))+(((sj1)*(x2434)))+(((IkReal(-1.00000000000000))*(r00)*(x2445)))+(((x2441)*(x2442))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x2445)))+(((r12)*(x2439)))+(((IkReal(-1.00000000000000))*(x2434)*(x2437)))+(((r11)*(x2440)))+(((r10)*(x2438)))+(((x2435)*(x2441))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2446=((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30);
IkReal x2447=((IkReal(1.00000000000000))*(sj5));
IkReal x2448=((cj2)*(sj1));
IkReal x2449=((r21)*(sj6));
IkReal x2450=((cj6)*(r20));
IkReal x2451=((cj5)*(r22));
if( IKabs(((x2446)*(((((sj5)*(x2449)))+(((IkReal(-1.00000000000000))*(x2451)))+(((IkReal(-1.00000000000000))*(x2447)*(x2450))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x2446)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)*(sj2)))+(((IkReal(-1.00000000000000))*(x2447)*(x2448)*(x2449)))+(((IkReal(-1.00000000000000))*(r11)*(sj2)*(sj6)*(x2447)))+(((sj5)*(x2448)*(x2450)))+(((x2448)*(x2451)))+(((cj6)*(r10)*(sj2)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x2446)*(((((sj5)*(x2449)))+(((IkReal(-1.00000000000000))*(x2451)))+(((IkReal(-1.00000000000000))*(x2447)*(x2450)))))))+IKsqr(((x2446)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)*(sj2)))+(((IkReal(-1.00000000000000))*(x2447)*(x2448)*(x2449)))+(((IkReal(-1.00000000000000))*(r11)*(sj2)*(sj6)*(x2447)))+(((sj5)*(x2448)*(x2450)))+(((x2448)*(x2451)))+(((cj6)*(r10)*(sj2)*(sj5)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x2446)*(((((sj5)*(x2449)))+(((IkReal(-1.00000000000000))*(x2451)))+(((IkReal(-1.00000000000000))*(x2447)*(x2450)))))), ((x2446)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)*(sj2)))+(((IkReal(-1.00000000000000))*(x2447)*(x2448)*(x2449)))+(((IkReal(-1.00000000000000))*(r11)*(sj2)*(sj6)*(x2447)))+(((sj5)*(x2448)*(x2450)))+(((x2448)*(x2451)))+(((cj6)*(r10)*(sj2)*(sj5)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x2452=IKsin(j3);
IkReal x2453=IKcos(j3);
IkReal x2454=((r11)*(sj6));
IkReal x2455=((IkReal(1.00000000000000))*(sj5));
IkReal x2456=((sj4)*(sj6));
IkReal x2457=((cj4)*(sj5));
IkReal x2458=((cj6)*(sj4));
IkReal x2459=((cj4)*(cj5));
IkReal x2460=((r01)*(sj6));
IkReal x2461=((r21)*(sj6));
IkReal x2462=((cj6)*(sj5));
IkReal x2463=((IkReal(1.00000000000000))*(x2453));
IkReal x2464=((sj1)*(x2453));
IkReal x2465=((IkReal(1.00000000000000))*(cj6)*(x2459));
IkReal x2466=((IkReal(1.00000000000000))*(cj2)*(x2452));
evalcond[0]=((((cj5)*(r22)))+(((sj2)*(x2452)))+(((r20)*(x2462)))+(((IkReal(-1.00000000000000))*(x2455)*(x2461))));
evalcond[1]=((x2464)+(((IkReal(-1.00000000000000))*(x2455)*(x2460)))+(((IkReal(-1.00000000000000))*(cj1)*(x2466)))+(((cj5)*(r02)))+(((r00)*(x2462))));
evalcond[2]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x2454)*(x2455)))+(((IkReal(-1.00000000000000))*(cj1)*(x2463)))+(((IkReal(-1.00000000000000))*(sj1)*(x2466)))+(((r10)*(x2462))));
evalcond[3]=((((x2459)*(x2461)))+(((r22)*(x2457)))+(((IkReal(-1.00000000000000))*(r20)*(x2465)))+(((IkReal(-1.00000000000000))*(sj2)*(x2463)))+(((r20)*(x2456)))+(((r21)*(x2458))));
evalcond[4]=((((r02)*(x2457)))+(((x2459)*(x2460)))+(((IkReal(-1.00000000000000))*(r00)*(x2465)))+(((sj1)*(x2452)))+(((cj1)*(cj2)*(x2453)))+(((r01)*(x2458)))+(((r00)*(x2456))));
evalcond[5]=((((cj2)*(x2464)))+(((r10)*(x2456)))+(((x2454)*(x2459)))+(((r12)*(x2457)))+(((r11)*(x2458)))+(((IkReal(-1.00000000000000))*(r10)*(x2465)))+(((IkReal(-1.00000000000000))*(cj1)*(x2452))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2467=(sj1)*(sj1);
IkReal x2468=(cj1)*(cj1);
IkReal x2469=((cj5)*(r12));
IkReal x2470=((cj6)*(sj5));
IkReal x2471=((IkReal(1.00000000000000))*(sj1));
IkReal x2472=((cj5)*(r02));
IkReal x2473=((IkReal(1.00000000000000))*(cj1));
IkReal x2474=((r01)*(sj5)*(sj6));
IkReal x2475=((r11)*(sj5)*(sj6));
if( IKabs(((((IKabs(((((cj2)*(x2467)))+(((cj2)*(x2468))))) != 0)?((IkReal)1/(((((cj2)*(x2467)))+(((cj2)*(x2468)))))):(IkReal)1.0e30))*(((((r10)*(sj1)*(x2470)))+(((IkReal(-1.00000000000000))*(x2473)*(x2474)))+(((cj1)*(r00)*(x2470)))+(((IkReal(-1.00000000000000))*(x2471)*(x2475)))+(((sj1)*(x2469)))+(((cj1)*(x2472))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((x2467)+(x2468))) != 0)?((IkReal)1/(((x2467)+(x2468)))):(IkReal)1.0e30))*(((((cj1)*(x2469)))+(((IkReal(-1.00000000000000))*(r00)*(x2470)*(x2471)))+(((IkReal(-1.00000000000000))*(x2473)*(x2475)))+(((sj1)*(x2474)))+(((IkReal(-1.00000000000000))*(x2471)*(x2472)))+(((cj1)*(r10)*(x2470))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((cj2)*(x2467)))+(((cj2)*(x2468))))) != 0)?((IkReal)1/(((((cj2)*(x2467)))+(((cj2)*(x2468)))))):(IkReal)1.0e30))*(((((r10)*(sj1)*(x2470)))+(((IkReal(-1.00000000000000))*(x2473)*(x2474)))+(((cj1)*(r00)*(x2470)))+(((IkReal(-1.00000000000000))*(x2471)*(x2475)))+(((sj1)*(x2469)))+(((cj1)*(x2472)))))))+IKsqr(((((IKabs(((x2467)+(x2468))) != 0)?((IkReal)1/(((x2467)+(x2468)))):(IkReal)1.0e30))*(((((cj1)*(x2469)))+(((IkReal(-1.00000000000000))*(r00)*(x2470)*(x2471)))+(((IkReal(-1.00000000000000))*(x2473)*(x2475)))+(((sj1)*(x2474)))+(((IkReal(-1.00000000000000))*(x2471)*(x2472)))+(((cj1)*(r10)*(x2470)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IKabs(((((cj2)*(x2467)))+(((cj2)*(x2468))))) != 0)?((IkReal)1/(((((cj2)*(x2467)))+(((cj2)*(x2468)))))):(IkReal)1.0e30))*(((((r10)*(sj1)*(x2470)))+(((IkReal(-1.00000000000000))*(x2473)*(x2474)))+(((cj1)*(r00)*(x2470)))+(((IkReal(-1.00000000000000))*(x2471)*(x2475)))+(((sj1)*(x2469)))+(((cj1)*(x2472)))))), ((((IKabs(((x2467)+(x2468))) != 0)?((IkReal)1/(((x2467)+(x2468)))):(IkReal)1.0e30))*(((((cj1)*(x2469)))+(((IkReal(-1.00000000000000))*(r00)*(x2470)*(x2471)))+(((IkReal(-1.00000000000000))*(x2473)*(x2475)))+(((sj1)*(x2474)))+(((IkReal(-1.00000000000000))*(x2471)*(x2472)))+(((cj1)*(r10)*(x2470)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x2476=IKsin(j3);
IkReal x2477=IKcos(j3);
IkReal x2478=((r11)*(sj6));
IkReal x2479=((IkReal(1.00000000000000))*(sj5));
IkReal x2480=((sj4)*(sj6));
IkReal x2481=((cj4)*(sj5));
IkReal x2482=((cj6)*(sj4));
IkReal x2483=((cj4)*(cj5));
IkReal x2484=((r01)*(sj6));
IkReal x2485=((r21)*(sj6));
IkReal x2486=((cj6)*(sj5));
IkReal x2487=((IkReal(1.00000000000000))*(x2477));
IkReal x2488=((sj1)*(x2477));
IkReal x2489=((IkReal(1.00000000000000))*(cj6)*(x2483));
IkReal x2490=((IkReal(1.00000000000000))*(cj2)*(x2476));
evalcond[0]=((((cj5)*(r22)))+(((sj2)*(x2476)))+(((IkReal(-1.00000000000000))*(x2479)*(x2485)))+(((r20)*(x2486))));
evalcond[1]=((x2488)+(((IkReal(-1.00000000000000))*(cj1)*(x2490)))+(((IkReal(-1.00000000000000))*(x2479)*(x2484)))+(((cj5)*(r02)))+(((r00)*(x2486))));
evalcond[2]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(sj1)*(x2490)))+(((IkReal(-1.00000000000000))*(cj1)*(x2487)))+(((IkReal(-1.00000000000000))*(x2478)*(x2479)))+(((r10)*(x2486))));
evalcond[3]=((((r22)*(x2481)))+(((x2483)*(x2485)))+(((IkReal(-1.00000000000000))*(r20)*(x2489)))+(((IkReal(-1.00000000000000))*(sj2)*(x2487)))+(((r21)*(x2482)))+(((r20)*(x2480))));
evalcond[4]=((((r01)*(x2482)))+(((r02)*(x2481)))+(((x2483)*(x2484)))+(((IkReal(-1.00000000000000))*(r00)*(x2489)))+(((sj1)*(x2476)))+(((cj1)*(cj2)*(x2477)))+(((r00)*(x2480))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x2489)))+(((cj2)*(x2488)))+(((IkReal(-1.00000000000000))*(cj1)*(x2476)))+(((r11)*(x2482)))+(((x2478)*(x2483)))+(((r12)*(x2481)))+(((r10)*(x2480))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2491=((cj4)*(cj5));
IkReal x2492=((r21)*(sj6));
IkReal x2493=((IkReal(1.00000000000000))*(cj6)*(r20));
if( IKabs(((gconst4)*(((((sj5)*(x2492)))+(((IkReal(-1.00000000000000))*(sj5)*(x2493)))+(((IkReal(-1.00000000000000))*(cj5)*(r22))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x2491)*(x2493)))+(((cj6)*(r21)*(sj4)))+(((x2491)*(x2492)))+(((r20)*(sj4)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst4)*(((((sj5)*(x2492)))+(((IkReal(-1.00000000000000))*(sj5)*(x2493)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))))), ((gconst4)*(((((cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x2491)*(x2493)))+(((cj6)*(r21)*(sj4)))+(((x2491)*(x2492)))+(((r20)*(sj4)*(sj6)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x2494=IKsin(j3);
IkReal x2495=IKcos(j3);
IkReal x2496=((r11)*(sj6));
IkReal x2497=((IkReal(1.00000000000000))*(sj5));
IkReal x2498=((sj4)*(sj6));
IkReal x2499=((cj4)*(sj5));
IkReal x2500=((cj6)*(sj4));
IkReal x2501=((cj4)*(cj5));
IkReal x2502=((r01)*(sj6));
IkReal x2503=((r21)*(sj6));
IkReal x2504=((cj6)*(sj5));
IkReal x2505=((IkReal(1.00000000000000))*(x2495));
IkReal x2506=((sj1)*(x2495));
IkReal x2507=((IkReal(1.00000000000000))*(cj6)*(x2501));
IkReal x2508=((IkReal(1.00000000000000))*(cj2)*(x2494));
evalcond[0]=((((cj5)*(r22)))+(((sj2)*(x2494)))+(((IkReal(-1.00000000000000))*(x2497)*(x2503)))+(((r20)*(x2504))));
evalcond[1]=((x2506)+(((IkReal(-1.00000000000000))*(x2497)*(x2502)))+(((r00)*(x2504)))+(((IkReal(-1.00000000000000))*(cj1)*(x2508)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x2496)*(x2497)))+(((r10)*(x2504)))+(((IkReal(-1.00000000000000))*(sj1)*(x2508)))+(((IkReal(-1.00000000000000))*(cj1)*(x2505))));
evalcond[3]=((((x2501)*(x2503)))+(((r22)*(x2499)))+(((r21)*(x2500)))+(((IkReal(-1.00000000000000))*(sj2)*(x2505)))+(((r20)*(x2498)))+(((IkReal(-1.00000000000000))*(r20)*(x2507))));
evalcond[4]=((((cj1)*(cj2)*(x2495)))+(((sj1)*(x2494)))+(((r00)*(x2498)))+(((r02)*(x2499)))+(((x2501)*(x2502)))+(((IkReal(-1.00000000000000))*(r00)*(x2507)))+(((r01)*(x2500))));
evalcond[5]=((((x2496)*(x2501)))+(((IkReal(-1.00000000000000))*(cj1)*(x2494)))+(((r12)*(x2499)))+(((cj2)*(x2506)))+(((IkReal(-1.00000000000000))*(r10)*(x2507)))+(((r11)*(x2500)))+(((r10)*(x2498))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2509=((cj2)*(sj6));
IkReal x2510=((cj2)*(cj6));
IkReal x2511=((IkReal(1.00000000000000))*(cj1)*(sj2));
if( IKabs(((gconst0)*(((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x2511)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x2511)))+(((r01)*(x2510)))+(((r00)*(x2509))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((IkReal(-1.00000000000000))*(cj5)*(r00)*(x2510)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(sj6)*(x2511)))+(((cj5)*(r01)*(x2509)))+(((IkReal(-1.00000000000000))*(r22)*(sj5)*(x2511)))+(((cj2)*(r02)*(sj5)))+(((cj1)*(cj5)*(cj6)*(r20)*(sj2))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst0)*(((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x2511)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x2511)))+(((r01)*(x2510)))+(((r00)*(x2509)))))), ((gconst0)*(((((IkReal(-1.00000000000000))*(cj5)*(r00)*(x2510)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(sj6)*(x2511)))+(((cj5)*(r01)*(x2509)))+(((IkReal(-1.00000000000000))*(r22)*(sj5)*(x2511)))+(((cj2)*(r02)*(sj5)))+(((cj1)*(cj5)*(cj6)*(r20)*(sj2)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x2512=IKsin(j4);
IkReal x2513=IKcos(j4);
IkReal x2514=((IkReal(1.00000000000000))*(sj2));
IkReal x2515=((IkReal(1.00000000000000))*(cj6));
IkReal x2516=((sj5)*(x2512));
IkReal x2517=((cj5)*(x2512));
IkReal x2518=((IkReal(1.00000000000000))*(sj6)*(x2513));
evalcond[0]=((((r21)*(sj6)*(x2517)))+(((IkReal(-1.00000000000000))*(r20)*(x2515)*(x2517)))+(((r22)*(x2516)))+(((IkReal(-1.00000000000000))*(r21)*(x2513)*(x2515)))+(((IkReal(-1.00000000000000))*(r20)*(x2518)))+(((IkReal(-1.00000000000000))*(cj2))));
evalcond[1]=((((r01)*(sj6)*(x2517)))+(((IkReal(-1.00000000000000))*(r01)*(x2513)*(x2515)))+(((r02)*(x2516)))+(((IkReal(-1.00000000000000))*(r00)*(x2518)))+(((IkReal(-1.00000000000000))*(cj1)*(x2514)))+(((IkReal(-1.00000000000000))*(r00)*(x2515)*(x2517))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj1)*(x2514)))+(((IkReal(-1.00000000000000))*(r11)*(x2513)*(x2515)))+(((IkReal(-1.00000000000000))*(r10)*(x2515)*(x2517)))+(((IkReal(-1.00000000000000))*(r10)*(x2518)))+(((r11)*(sj6)*(x2517)))+(((r12)*(x2516))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(sj2);
dummyeval[0]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x2519=(sj1)*(sj1);
IkReal x2520=(cj1)*(cj1);
dummyeval[0]=((((cj2)*(x2520)))+(((cj2)*(x2519))));
dummyeval[1]=((x2520)+(x2519));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj2;
dummyeval[1]=cj1;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x2521=((sj4)*(sj5));
IkReal x2522=((cj6)*(r20));
IkReal x2523=((IkReal(1.00000000000000))*(cj4));
IkReal x2524=((IkReal(0.390000000000000))*(sj5));
IkReal x2525=((r21)*(sj6));
IkReal x2526=((IkReal(0.390000000000000))*(cj5));
IkReal x2527=((cj6)*(r00));
IkReal x2528=((IkReal(0.000500000000000000))*(cj6));
IkReal x2529=((r11)*(sj6));
IkReal x2530=((cj5)*(sj4));
IkReal x2531=((r01)*(sj6));
IkReal x2532=((r20)*(sj6));
IkReal x2533=((r10)*(sj6));
IkReal x2534=((cj6)*(r10));
IkReal x2535=((cj6)*(r21));
IkReal x2536=((r00)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((cj5)*(r22)))+(((sj5)*(x2522)))+(((IkReal(-1.00000000000000))*(sj5)*(x2525))));
evalcond[2]=((IkReal(-0.00200000000000000))+(((IkReal(-1.00000000000000))*(x2524)*(x2525)))+(((r22)*(x2526)))+(((x2522)*(x2524)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.000500000000000000))*(x2532)))+(((r21)*(x2528))));
evalcond[3]=((((r02)*(x2526)))+(((IkReal(-1.00000000000000))*(x2524)*(x2531)))+(((IkReal(-1.00000000000000))*(px)))+(((r01)*(x2528)))+(((IkReal(0.000500000000000000))*(x2536)))+(((IkReal(-0.400000000000000))*(sj1)))+(((x2524)*(x2527))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2524)*(x2529)))+(((r12)*(x2526)))+(((IkReal(0.400000000000000))*(cj1)))+(((r11)*(x2528)))+(((IkReal(-1.00000000000000))*(py)))+(((x2524)*(x2534)))+(((IkReal(0.000500000000000000))*(x2533))));
evalcond[5]=((IkReal(-1.00000000000000))+(((r22)*(x2521)))+(((IkReal(-1.00000000000000))*(x2522)*(x2530)))+(((x2525)*(x2530)))+(((IkReal(-1.00000000000000))*(x2523)*(x2535)))+(((IkReal(-1.00000000000000))*(x2523)*(x2532))));
evalcond[6]=((((cj4)*(cj5)*(x2525)))+(((IkReal(-1.00000000000000))*(cj5)*(x2522)*(x2523)))+(((cj4)*(r22)*(sj5)))+(((sj4)*(x2532)))+(((sj4)*(x2535))));
evalcond[7]=((((r02)*(x2521)))+(((x2530)*(x2531)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x2523)))+(((IkReal(-1.00000000000000))*(x2523)*(x2536)))+(((IkReal(-1.00000000000000))*(x2527)*(x2530))));
evalcond[8]=((((r12)*(x2521)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x2523)))+(((IkReal(-1.00000000000000))*(x2523)*(x2533)))+(((x2529)*(x2530)))+(((IkReal(-1.00000000000000))*(x2530)*(x2534))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2537=((IkReal(1.00000000000000))*(sj4));
IkReal x2538=((r00)*(sj6));
IkReal x2539=((cj1)*(cj6));
IkReal x2540=((cj4)*(sj5));
IkReal x2541=((cj4)*(cj5));
IkReal x2542=((r01)*(sj1));
IkReal x2543=((IkReal(1.00000000000000))*(sj6));
IkReal x2544=((cj1)*(r02));
IkReal x2545=((cj1)*(r01));
IkReal x2546=((IkReal(1.00000000000000))*(r02)*(sj1));
IkReal x2547=((cj6)*(r00)*(sj1));
if( IKabs(((gconst6)*(((((r00)*(sj5)*(x2539)))+(((IkReal(-1.00000000000000))*(sj1)*(x2537)*(x2538)))+(((IkReal(-1.00000000000000))*(sj5)*(x2543)*(x2545)))+(((cj5)*(x2544)))+(((IkReal(-1.00000000000000))*(cj6)*(x2537)*(x2542)))+(((IkReal(-1.00000000000000))*(x2541)*(x2542)*(x2543)))+(((IkReal(-1.00000000000000))*(x2540)*(x2546)))+(((x2541)*(x2547))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(r01)*(x2537)*(x2539)))+(((sj5)*(sj6)*(x2542)))+(((r00)*(x2539)*(x2541)))+(((IkReal(-1.00000000000000))*(sj5)*(x2547)))+(((IkReal(-1.00000000000000))*(cj5)*(x2546)))+(((IkReal(-1.00000000000000))*(cj1)*(x2537)*(x2538)))+(((IkReal(-1.00000000000000))*(x2541)*(x2543)*(x2545)))+(((IkReal(-1.00000000000000))*(x2540)*(x2544))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst6)*(((((r00)*(sj5)*(x2539)))+(((IkReal(-1.00000000000000))*(sj1)*(x2537)*(x2538)))+(((IkReal(-1.00000000000000))*(sj5)*(x2543)*(x2545)))+(((cj5)*(x2544)))+(((IkReal(-1.00000000000000))*(cj6)*(x2537)*(x2542)))+(((IkReal(-1.00000000000000))*(x2541)*(x2542)*(x2543)))+(((IkReal(-1.00000000000000))*(x2540)*(x2546)))+(((x2541)*(x2547)))))), ((gconst6)*(((((IkReal(-1.00000000000000))*(r01)*(x2537)*(x2539)))+(((sj5)*(sj6)*(x2542)))+(((r00)*(x2539)*(x2541)))+(((IkReal(-1.00000000000000))*(sj5)*(x2547)))+(((IkReal(-1.00000000000000))*(cj5)*(x2546)))+(((IkReal(-1.00000000000000))*(cj1)*(x2537)*(x2538)))+(((IkReal(-1.00000000000000))*(x2541)*(x2543)*(x2545)))+(((IkReal(-1.00000000000000))*(x2540)*(x2544)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x2548=IKcos(j3);
IkReal x2549=IKsin(j3);
IkReal x2550=((r11)*(sj6));
IkReal x2551=((IkReal(1.00000000000000))*(sj5));
IkReal x2552=((sj4)*(sj6));
IkReal x2553=((cj4)*(sj5));
IkReal x2554=((cj6)*(sj4));
IkReal x2555=((cj4)*(cj5));
IkReal x2556=((r01)*(sj6));
IkReal x2557=((cj6)*(sj5));
IkReal x2558=((sj1)*(x2548));
IkReal x2559=((cj1)*(x2548));
IkReal x2560=((IkReal(1.00000000000000))*(x2549));
IkReal x2561=((cj1)*(x2560));
IkReal x2562=((IkReal(1.00000000000000))*(cj6)*(x2555));
evalcond[0]=((x2558)+(((IkReal(-1.00000000000000))*(x2561)))+(((r00)*(x2557)))+(((IkReal(-1.00000000000000))*(x2551)*(x2556)))+(((cj5)*(r02))));
evalcond[1]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x2559)))+(((IkReal(-1.00000000000000))*(x2550)*(x2551)))+(((IkReal(-1.00000000000000))*(sj1)*(x2560)))+(((r10)*(x2557))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x2562)))+(x2559)+(((r01)*(x2554)))+(((x2555)*(x2556)))+(((r00)*(x2552)))+(((sj1)*(x2549)))+(((r02)*(x2553))));
evalcond[3]=((x2558)+(((r12)*(x2553)))+(((x2550)*(x2555)))+(((r11)*(x2554)))+(((IkReal(-1.00000000000000))*(x2561)))+(((IkReal(-1.00000000000000))*(r10)*(x2562)))+(((r10)*(x2552))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2563=((cj5)*(r12));
IkReal x2564=((cj6)*(sj5));
IkReal x2565=((IkReal(1.00000000000000))*(sj1));
IkReal x2566=((cj5)*(r02));
IkReal x2567=((IkReal(1.00000000000000))*(cj1));
IkReal x2568=((r01)*(sj5)*(sj6));
IkReal x2569=((r11)*(sj5)*(sj6));
if( IKabs(((gconst5)*(((((cj1)*(x2566)))+(((cj1)*(r00)*(x2564)))+(((r10)*(sj1)*(x2564)))+(((IkReal(-1.00000000000000))*(x2565)*(x2569)))+(((sj1)*(x2563)))+(((IkReal(-1.00000000000000))*(x2567)*(x2568))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((cj1)*(x2563)))+(((cj1)*(r10)*(x2564)))+(((IkReal(-1.00000000000000))*(r00)*(x2564)*(x2565)))+(((IkReal(-1.00000000000000))*(x2565)*(x2566)))+(((sj1)*(x2568)))+(((IkReal(-1.00000000000000))*(x2567)*(x2569))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst5)*(((((cj1)*(x2566)))+(((cj1)*(r00)*(x2564)))+(((r10)*(sj1)*(x2564)))+(((IkReal(-1.00000000000000))*(x2565)*(x2569)))+(((sj1)*(x2563)))+(((IkReal(-1.00000000000000))*(x2567)*(x2568)))))), ((gconst5)*(((((cj1)*(x2563)))+(((cj1)*(r10)*(x2564)))+(((IkReal(-1.00000000000000))*(r00)*(x2564)*(x2565)))+(((IkReal(-1.00000000000000))*(x2565)*(x2566)))+(((sj1)*(x2568)))+(((IkReal(-1.00000000000000))*(x2567)*(x2569)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x2570=IKcos(j3);
IkReal x2571=IKsin(j3);
IkReal x2572=((r11)*(sj6));
IkReal x2573=((IkReal(1.00000000000000))*(sj5));
IkReal x2574=((sj4)*(sj6));
IkReal x2575=((cj4)*(sj5));
IkReal x2576=((cj6)*(sj4));
IkReal x2577=((cj4)*(cj5));
IkReal x2578=((r01)*(sj6));
IkReal x2579=((cj6)*(sj5));
IkReal x2580=((sj1)*(x2570));
IkReal x2581=((cj1)*(x2570));
IkReal x2582=((IkReal(1.00000000000000))*(x2571));
IkReal x2583=((cj1)*(x2582));
IkReal x2584=((IkReal(1.00000000000000))*(cj6)*(x2577));
evalcond[0]=((x2580)+(((IkReal(-1.00000000000000))*(x2583)))+(((IkReal(-1.00000000000000))*(x2573)*(x2578)))+(((r00)*(x2579)))+(((cj5)*(r02))));
evalcond[1]=((((cj5)*(r12)))+(((r10)*(x2579)))+(((IkReal(-1.00000000000000))*(x2581)))+(((IkReal(-1.00000000000000))*(sj1)*(x2582)))+(((IkReal(-1.00000000000000))*(x2572)*(x2573))));
evalcond[2]=((x2581)+(((IkReal(-1.00000000000000))*(r00)*(x2584)))+(((r01)*(x2576)))+(((r00)*(x2574)))+(((x2577)*(x2578)))+(((r02)*(x2575)))+(((sj1)*(x2571))));
evalcond[3]=((((r10)*(x2574)))+(x2580)+(((r11)*(x2576)))+(((r12)*(x2575)))+(((IkReal(-1.00000000000000))*(x2583)))+(((x2572)*(x2577)))+(((IkReal(-1.00000000000000))*(r10)*(x2584))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2585=((sj4)*(sj5));
IkReal x2586=((cj6)*(r20));
IkReal x2587=((IkReal(1.00000000000000))*(cj4));
IkReal x2588=((IkReal(0.390000000000000))*(sj5));
IkReal x2589=((r21)*(sj6));
IkReal x2590=((IkReal(0.390000000000000))*(cj5));
IkReal x2591=((cj6)*(r00));
IkReal x2592=((IkReal(0.000500000000000000))*(cj6));
IkReal x2593=((r11)*(sj6));
IkReal x2594=((cj5)*(sj4));
IkReal x2595=((r01)*(sj6));
IkReal x2596=((r20)*(sj6));
IkReal x2597=((r10)*(sj6));
IkReal x2598=((cj6)*(r10));
IkReal x2599=((cj6)*(r21));
IkReal x2600=((r00)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((sj5)*(x2586)))+(((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x2589))));
evalcond[2]=((IkReal(0.00200000000000000))+(((r22)*(x2590)))+(((IkReal(-1.00000000000000))*(x2588)*(x2589)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.000500000000000000))*(x2596)))+(((x2586)*(x2588)))+(((r21)*(x2592))));
evalcond[3]=((((r01)*(x2592)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(x2588)*(x2595)))+(((x2588)*(x2591)))+(((IkReal(-0.400000000000000))*(sj1)))+(((IkReal(0.000500000000000000))*(x2600)))+(((r02)*(x2590))));
evalcond[4]=((((IkReal(0.400000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.000500000000000000))*(x2597)))+(((IkReal(-1.00000000000000))*(x2588)*(x2593)))+(((r12)*(x2590)))+(((r11)*(x2592)))+(((x2588)*(x2598))));
evalcond[5]=((IkReal(1.00000000000000))+(((r22)*(x2585)))+(((IkReal(-1.00000000000000))*(x2586)*(x2594)))+(((IkReal(-1.00000000000000))*(x2587)*(x2596)))+(((IkReal(-1.00000000000000))*(x2587)*(x2599)))+(((x2589)*(x2594))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj5)*(x2586)*(x2587)))+(((cj4)*(r22)*(sj5)))+(((sj4)*(x2596)))+(((sj4)*(x2599)))+(((cj4)*(cj5)*(x2589))));
evalcond[7]=((((x2594)*(x2595)))+(((IkReal(-1.00000000000000))*(x2587)*(x2600)))+(((IkReal(-1.00000000000000))*(x2591)*(x2594)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x2587)))+(((r02)*(x2585))));
evalcond[8]=((((IkReal(-1.00000000000000))*(cj6)*(r11)*(x2587)))+(((r12)*(x2585)))+(((IkReal(-1.00000000000000))*(x2587)*(x2597)))+(((x2593)*(x2594)))+(((IkReal(-1.00000000000000))*(x2594)*(x2598))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2601=((sj1)*(sj6));
IkReal x2602=((r00)*(sj4));
IkReal x2603=((IkReal(1.00000000000000))*(r01));
IkReal x2604=((cj1)*(cj6));
IkReal x2605=((cj1)*(sj6));
IkReal x2606=((cj4)*(cj5));
IkReal x2607=((r02)*(sj1));
IkReal x2608=((cj4)*(sj5));
IkReal x2609=((cj1)*(r02));
IkReal x2610=((cj6)*(r00)*(sj1));
if( IKabs(((gconst8)*(((((r01)*(x2601)*(x2606)))+(((x2607)*(x2608)))+(((IkReal(-1.00000000000000))*(x2606)*(x2610)))+(((r00)*(sj5)*(x2604)))+(((cj5)*(x2609)))+(((x2601)*(x2602)))+(((cj6)*(r01)*(sj1)*(sj4)))+(((IkReal(-1.00000000000000))*(sj5)*(x2603)*(x2605))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((sj5)*(x2610)))+(((cj5)*(x2607)))+(((IkReal(-1.00000000000000))*(sj4)*(x2603)*(x2604)))+(((r00)*(x2604)*(x2606)))+(((IkReal(-1.00000000000000))*(x2602)*(x2605)))+(((IkReal(-1.00000000000000))*(sj5)*(x2601)*(x2603)))+(((IkReal(-1.00000000000000))*(x2608)*(x2609)))+(((IkReal(-1.00000000000000))*(x2603)*(x2605)*(x2606))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst8)*(((((r01)*(x2601)*(x2606)))+(((x2607)*(x2608)))+(((IkReal(-1.00000000000000))*(x2606)*(x2610)))+(((r00)*(sj5)*(x2604)))+(((cj5)*(x2609)))+(((x2601)*(x2602)))+(((cj6)*(r01)*(sj1)*(sj4)))+(((IkReal(-1.00000000000000))*(sj5)*(x2603)*(x2605)))))), ((gconst8)*(((((sj5)*(x2610)))+(((cj5)*(x2607)))+(((IkReal(-1.00000000000000))*(sj4)*(x2603)*(x2604)))+(((r00)*(x2604)*(x2606)))+(((IkReal(-1.00000000000000))*(x2602)*(x2605)))+(((IkReal(-1.00000000000000))*(sj5)*(x2601)*(x2603)))+(((IkReal(-1.00000000000000))*(x2608)*(x2609)))+(((IkReal(-1.00000000000000))*(x2603)*(x2605)*(x2606)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x2611=IKsin(j3);
IkReal x2612=IKcos(j3);
IkReal x2613=((r11)*(sj6));
IkReal x2614=((IkReal(1.00000000000000))*(sj5));
IkReal x2615=((sj4)*(sj6));
IkReal x2616=((cj4)*(sj5));
IkReal x2617=((cj6)*(sj4));
IkReal x2618=((cj4)*(cj5));
IkReal x2619=((r01)*(sj6));
IkReal x2620=((cj6)*(sj5));
IkReal x2621=((sj1)*(x2611));
IkReal x2622=((cj1)*(x2611));
IkReal x2623=((IkReal(1.00000000000000))*(x2612));
IkReal x2624=((cj1)*(x2623));
IkReal x2625=((IkReal(1.00000000000000))*(cj6)*(x2618));
evalcond[0]=((((r00)*(x2620)))+(((sj1)*(x2612)))+(((IkReal(-1.00000000000000))*(x2614)*(x2619)))+(x2622)+(((cj5)*(r02))));
evalcond[1]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x2613)*(x2614)))+(((IkReal(-1.00000000000000))*(x2624)))+(((r10)*(x2620)))+(x2621));
evalcond[2]=((((r00)*(x2615)))+(((r01)*(x2617)))+(((IkReal(-1.00000000000000))*(r00)*(x2625)))+(((r02)*(x2616)))+(((x2618)*(x2619)))+(((IkReal(-1.00000000000000))*(x2624)))+(x2621));
evalcond[3]=((((x2613)*(x2618)))+(((IkReal(-1.00000000000000))*(x2622)))+(((IkReal(-1.00000000000000))*(r10)*(x2625)))+(((r11)*(x2617)))+(((r10)*(x2615)))+(((r12)*(x2616)))+(((IkReal(-1.00000000000000))*(sj1)*(x2623))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2626=((sj1)*(sj5));
IkReal x2627=((cj6)*(r10));
IkReal x2628=((cj5)*(sj1));
IkReal x2629=((cj1)*(cj5));
IkReal x2630=((cj1)*(sj5));
IkReal x2631=((cj6)*(r00));
IkReal x2632=((r11)*(sj6));
IkReal x2633=((IkReal(1.00000000000000))*(r01)*(sj6));
if( IKabs(((gconst7)*(((((x2626)*(x2627)))+(((r02)*(x2629)))+(((IkReal(-1.00000000000000))*(x2626)*(x2632)))+(((x2630)*(x2631)))+(((IkReal(-1.00000000000000))*(x2630)*(x2633)))+(((r12)*(x2628))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((r02)*(x2628)))+(((IkReal(-1.00000000000000))*(r12)*(x2629)))+(((IkReal(-1.00000000000000))*(x2627)*(x2630)))+(((x2630)*(x2632)))+(((IkReal(-1.00000000000000))*(x2626)*(x2633)))+(((x2626)*(x2631))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst7)*(((((x2626)*(x2627)))+(((r02)*(x2629)))+(((IkReal(-1.00000000000000))*(x2626)*(x2632)))+(((x2630)*(x2631)))+(((IkReal(-1.00000000000000))*(x2630)*(x2633)))+(((r12)*(x2628)))))), ((gconst7)*(((((r02)*(x2628)))+(((IkReal(-1.00000000000000))*(r12)*(x2629)))+(((IkReal(-1.00000000000000))*(x2627)*(x2630)))+(((x2630)*(x2632)))+(((IkReal(-1.00000000000000))*(x2626)*(x2633)))+(((x2626)*(x2631)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x2634=IKsin(j3);
IkReal x2635=IKcos(j3);
IkReal x2636=((r11)*(sj6));
IkReal x2637=((IkReal(1.00000000000000))*(sj5));
IkReal x2638=((sj4)*(sj6));
IkReal x2639=((cj4)*(sj5));
IkReal x2640=((cj6)*(sj4));
IkReal x2641=((cj4)*(cj5));
IkReal x2642=((r01)*(sj6));
IkReal x2643=((cj6)*(sj5));
IkReal x2644=((sj1)*(x2634));
IkReal x2645=((cj1)*(x2634));
IkReal x2646=((IkReal(1.00000000000000))*(x2635));
IkReal x2647=((cj1)*(x2646));
IkReal x2648=((IkReal(1.00000000000000))*(cj6)*(x2641));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2637)*(x2642)))+(((sj1)*(x2635)))+(((r00)*(x2643)))+(x2645)+(((cj5)*(r02))));
evalcond[1]=((((cj5)*(r12)))+(((r10)*(x2643)))+(((IkReal(-1.00000000000000))*(x2647)))+(((IkReal(-1.00000000000000))*(x2636)*(x2637)))+(x2644));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x2648)))+(((r00)*(x2638)))+(((r01)*(x2640)))+(((IkReal(-1.00000000000000))*(x2647)))+(((x2641)*(x2642)))+(x2644)+(((r02)*(x2639))));
evalcond[3]=((((r11)*(x2640)))+(((r10)*(x2638)))+(((r12)*(x2639)))+(((x2636)*(x2641)))+(((IkReal(-1.00000000000000))*(r10)*(x2648)))+(((IkReal(-1.00000000000000))*(x2645)))+(((IkReal(-1.00000000000000))*(sj1)*(x2646))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2649=((sj4)*(sj5));
IkReal x2650=((IkReal(0.390000000000000))*(sj5));
IkReal x2651=((r21)*(sj6));
IkReal x2652=((IkReal(0.390000000000000))*(cj5));
IkReal x2653=((cj6)*(r00));
IkReal x2654=((IkReal(0.000500000000000000))*(cj6));
IkReal x2655=((r11)*(sj6));
IkReal x2656=((cj5)*(sj4));
IkReal x2657=((IkReal(1.00000000000000))*(r20));
IkReal x2658=((cj4)*(sj6));
IkReal x2659=((r01)*(sj6));
IkReal x2660=((IkReal(0.000500000000000000))*(sj6));
IkReal x2661=((IkReal(1.00000000000000))*(r10));
IkReal x2662=((IkReal(1.00000000000000))*(cj4)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2650)*(x2651)))+(((r21)*(x2654)))+(((cj6)*(r20)*(x2650)))+(((IkReal(-1.00000000000000))*(pz)))+(((r22)*(x2652)))+(((IkReal(-0.00200000000000000))*(cj2)))+(((r20)*(x2660))));
evalcond[2]=((IkReal(-0.400000000000000))+(((IkReal(-1.00000000000000))*(x2650)*(x2659)))+(((r02)*(x2652)))+(((IkReal(-1.00000000000000))*(px)))+(((r01)*(x2654)))+(((r00)*(x2660)))+(((x2650)*(x2653))));
evalcond[3]=((((r12)*(x2652)))+(((r11)*(x2654)))+(((IkReal(-1.00000000000000))*(x2650)*(x2655)))+(((r10)*(x2660)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.00200000000000000))*(sj2)))+(((cj6)*(r10)*(x2650))));
evalcond[4]=((((r22)*(x2649)))+(((IkReal(-1.00000000000000))*(r21)*(x2662)))+(((IkReal(-1.00000000000000))*(x2657)*(x2658)))+(((x2651)*(x2656)))+(((IkReal(-1.00000000000000))*(cj6)*(x2656)*(x2657)))+(((IkReal(-1.00000000000000))*(cj2))));
evalcond[5]=((((x2656)*(x2659)))+(((IkReal(-1.00000000000000))*(r01)*(x2662)))+(((r02)*(x2649)))+(((IkReal(-1.00000000000000))*(x2653)*(x2656)))+(((IkReal(-1.00000000000000))*(r00)*(x2658))));
evalcond[6]=((((r12)*(x2649)))+(((IkReal(-1.00000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(r11)*(x2662)))+(((x2655)*(x2656)))+(((IkReal(-1.00000000000000))*(x2658)*(x2661)))+(((IkReal(-1.00000000000000))*(cj6)*(x2656)*(x2661))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2663=((IkReal(1.00000000000000))*(cj6));
IkReal x2664=((IkReal(1.00000000000000))*(cj5));
IkReal x2665=((r01)*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(cj4)*(x2664)*(x2665)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(x2663)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(sj6)))+(((cj4)*(cj5)*(cj6)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r02)*(x2664)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2663)))+(((sj5)*(x2665))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj4)*(x2664)*(x2665)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(x2663)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(sj6)))+(((cj4)*(cj5)*(cj6)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(r02)*(x2664)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2663)))+(((sj5)*(x2665)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj4)*(x2664)*(x2665)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(x2663)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(sj6)))+(((cj4)*(cj5)*(cj6)*(r00)))), ((((IkReal(-1.00000000000000))*(r02)*(x2664)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x2663)))+(((sj5)*(x2665)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x2666=IKsin(j3);
IkReal x2667=IKcos(j3);
IkReal x2668=((r11)*(sj6));
IkReal x2669=((IkReal(1.00000000000000))*(sj5));
IkReal x2670=((sj4)*(sj6));
IkReal x2671=((cj4)*(sj5));
IkReal x2672=((cj6)*(sj4));
IkReal x2673=((cj4)*(cj5));
IkReal x2674=((r01)*(sj6));
IkReal x2675=((r21)*(sj6));
IkReal x2676=((cj6)*(sj5));
IkReal x2677=((IkReal(1.00000000000000))*(cj6)*(x2673));
evalcond[0]=((((cj5)*(r22)))+(((sj2)*(x2666)))+(((IkReal(-1.00000000000000))*(x2669)*(x2675)))+(((r20)*(x2676))));
evalcond[1]=((((r00)*(x2676)))+(((IkReal(-1.00000000000000))*(x2669)*(x2674)))+(x2667)+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(cj2)*(x2666)))+(((r10)*(x2676)))+(((IkReal(-1.00000000000000))*(x2668)*(x2669))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(x2667)))+(((x2673)*(x2675)))+(((r21)*(x2672)))+(((r22)*(x2671)))+(((IkReal(-1.00000000000000))*(r20)*(x2677)))+(((r20)*(x2670))));
evalcond[4]=((((x2673)*(x2674)))+(((IkReal(-1.00000000000000))*(r00)*(x2677)))+(((r02)*(x2671)))+(((r00)*(x2670)))+(((r01)*(x2672)))+(x2666));
evalcond[5]=((((r12)*(x2671)))+(((x2668)*(x2673)))+(((r10)*(x2670)))+(((cj2)*(x2667)))+(((r11)*(x2672)))+(((IkReal(-1.00000000000000))*(r10)*(x2677))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2678=((sj4)*(sj5));
IkReal x2679=((IkReal(0.390000000000000))*(sj5));
IkReal x2680=((r21)*(sj6));
IkReal x2681=((IkReal(0.390000000000000))*(cj5));
IkReal x2682=((cj6)*(r00));
IkReal x2683=((IkReal(0.000500000000000000))*(cj6));
IkReal x2684=((r11)*(sj6));
IkReal x2685=((cj5)*(sj4));
IkReal x2686=((IkReal(1.00000000000000))*(r20));
IkReal x2687=((cj4)*(sj6));
IkReal x2688=((r01)*(sj6));
IkReal x2689=((IkReal(0.000500000000000000))*(sj6));
IkReal x2690=((IkReal(1.00000000000000))*(r10));
IkReal x2691=((IkReal(1.00000000000000))*(cj4)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((r22)*(x2681)))+(((IkReal(-1.00000000000000))*(x2679)*(x2680)))+(((r21)*(x2683)))+(((cj6)*(r20)*(x2679)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-0.00200000000000000))*(cj2)))+(((r20)*(x2689))));
evalcond[2]=((IkReal(0.400000000000000))+(((r02)*(x2681)))+(((r01)*(x2683)))+(((IkReal(-1.00000000000000))*(x2679)*(x2688)))+(((IkReal(-1.00000000000000))*(px)))+(((r00)*(x2689)))+(((x2679)*(x2682))));
evalcond[3]=((((r11)*(x2683)))+(((r10)*(x2689)))+(((IkReal(-1.00000000000000))*(x2679)*(x2684)))+(((cj6)*(r10)*(x2679)))+(((IkReal(0.00200000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(py)))+(((r12)*(x2681))));
evalcond[4]=((((r22)*(x2678)))+(((IkReal(-1.00000000000000))*(x2686)*(x2687)))+(((IkReal(-1.00000000000000))*(cj6)*(x2685)*(x2686)))+(((x2680)*(x2685)))+(((IkReal(-1.00000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(r21)*(x2691))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2682)*(x2685)))+(((IkReal(-1.00000000000000))*(r00)*(x2687)))+(((r02)*(x2678)))+(((x2685)*(x2688)))+(((IkReal(-1.00000000000000))*(r01)*(x2691))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj6)*(x2685)*(x2690)))+(sj2)+(((r12)*(x2678)))+(((x2684)*(x2685)))+(((IkReal(-1.00000000000000))*(x2687)*(x2690)))+(((IkReal(-1.00000000000000))*(r11)*(x2691))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2692=((cj4)*(cj5));
IkReal x2693=((r01)*(sj6));
IkReal x2694=((cj6)*(r00));
if( IKabs(((((r00)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(x2692)*(x2694)))+(((cj6)*(r01)*(sj4)))+(((cj4)*(r02)*(sj5)))+(((x2692)*(x2693))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(sj5)*(x2693)))+(((sj5)*(x2694)))+(((cj5)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r00)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(x2692)*(x2694)))+(((cj6)*(r01)*(sj4)))+(((cj4)*(r02)*(sj5)))+(((x2692)*(x2693)))))+IKsqr(((((IkReal(-1.00000000000000))*(sj5)*(x2693)))+(((sj5)*(x2694)))+(((cj5)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((r00)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(x2692)*(x2694)))+(((cj6)*(r01)*(sj4)))+(((cj4)*(r02)*(sj5)))+(((x2692)*(x2693)))), ((((IkReal(-1.00000000000000))*(sj5)*(x2693)))+(((sj5)*(x2694)))+(((cj5)*(r02)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x2695=IKsin(j3);
IkReal x2696=IKcos(j3);
IkReal x2697=((r11)*(sj6));
IkReal x2698=((IkReal(1.00000000000000))*(sj5));
IkReal x2699=((cj6)*(sj4));
IkReal x2700=((sj4)*(sj6));
IkReal x2701=((cj4)*(sj5));
IkReal x2702=((cj4)*(cj5));
IkReal x2703=((r01)*(sj6));
IkReal x2704=((r21)*(sj6));
IkReal x2705=((cj6)*(sj5));
IkReal x2706=((IkReal(1.00000000000000))*(x2696));
IkReal x2707=((IkReal(1.00000000000000))*(cj6)*(x2702));
evalcond[0]=((((cj5)*(r22)))+(((r20)*(x2705)))+(((sj2)*(x2695)))+(((IkReal(-1.00000000000000))*(x2698)*(x2704))));
evalcond[1]=((((r00)*(x2705)))+(((IkReal(-1.00000000000000))*(x2706)))+(((cj5)*(r02)))+(((IkReal(-1.00000000000000))*(x2698)*(x2703))));
evalcond[2]=((((cj5)*(r12)))+(((r10)*(x2705)))+(((IkReal(-1.00000000000000))*(x2697)*(x2698)))+(((cj2)*(x2695))));
evalcond[3]=((((r22)*(x2701)))+(((IkReal(-1.00000000000000))*(r20)*(x2707)))+(((r20)*(x2700)))+(((r21)*(x2699)))+(((x2702)*(x2704)))+(((IkReal(-1.00000000000000))*(sj2)*(x2706))));
evalcond[4]=((((r00)*(x2700)))+(((IkReal(-1.00000000000000))*(r00)*(x2707)))+(((r01)*(x2699)))+(((x2702)*(x2703)))+(((IkReal(-1.00000000000000))*(x2695)))+(((r02)*(x2701))));
evalcond[5]=((((r12)*(x2701)))+(((IkReal(-1.00000000000000))*(r10)*(x2707)))+(((r10)*(x2700)))+(((x2697)*(x2702)))+(((IkReal(-1.00000000000000))*(cj2)*(x2706)))+(((r11)*(x2699))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2708=((sj4)*(sj5));
IkReal x2709=((IkReal(0.390000000000000))*(sj5));
IkReal x2710=((r21)*(sj6));
IkReal x2711=((IkReal(0.390000000000000))*(cj5));
IkReal x2712=((cj6)*(r00));
IkReal x2713=((IkReal(0.000500000000000000))*(cj6));
IkReal x2714=((r11)*(sj6));
IkReal x2715=((cj5)*(sj4));
IkReal x2716=((r01)*(sj6));
IkReal x2717=((IkReal(1.00000000000000))*(r20));
IkReal x2718=((cj4)*(sj6));
IkReal x2719=((IkReal(0.000500000000000000))*(sj6));
IkReal x2720=((IkReal(1.00000000000000))*(r10));
IkReal x2721=((IkReal(1.00000000000000))*(cj4)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((r22)*(x2711)))+(((IkReal(-1.00000000000000))*(pz)))+(((cj6)*(r20)*(x2709)))+(((IkReal(-1.00000000000000))*(x2709)*(x2710)))+(((r21)*(x2713)))+(((r20)*(x2719))));
evalcond[2]=((((r02)*(x2711)))+(((x2709)*(x2712)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(x2709)*(x2716)))+(((IkReal(-0.00200000000000000))*(cj1)))+(((IkReal(-0.400000000000000))*(sj1)))+(((r00)*(x2719)))+(((r01)*(x2713))));
evalcond[3]=((((r12)*(x2711)))+(((IkReal(0.400000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.00200000000000000))*(sj1)))+(((r10)*(x2719)))+(((IkReal(-1.00000000000000))*(x2709)*(x2714)))+(((r11)*(x2713)))+(((cj6)*(r10)*(x2709))));
evalcond[4]=((((r22)*(x2708)))+(((IkReal(-1.00000000000000))*(r21)*(x2721)))+(((IkReal(-1.00000000000000))*(cj6)*(x2715)*(x2717)))+(((x2710)*(x2715)))+(((IkReal(-1.00000000000000))*(x2717)*(x2718))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r01)*(x2721)))+(((x2715)*(x2716)))+(((IkReal(-1.00000000000000))*(x2712)*(x2715)))+(((r02)*(x2708)))+(((IkReal(-1.00000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(r00)*(x2718))));
evalcond[6]=((((r12)*(x2708)))+(((IkReal(-1.00000000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(cj6)*(x2715)*(x2720)))+(((IkReal(-1.00000000000000))*(x2718)*(x2720)))+(((IkReal(-1.00000000000000))*(r11)*(x2721)))+(((x2714)*(x2715))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2722=((cj4)*(cj5));
IkReal x2723=((r21)*(sj6));
IkReal x2724=((IkReal(1.00000000000000))*(cj6)*(r20));
if( IKabs(((((sj5)*(x2723)))+(((IkReal(-1.00000000000000))*(sj5)*(x2724)))+(((IkReal(-1.00000000000000))*(cj5)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x2722)*(x2724)))+(((cj6)*(r21)*(sj4)))+(((x2722)*(x2723)))+(((r20)*(sj4)*(sj6))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj5)*(x2723)))+(((IkReal(-1.00000000000000))*(sj5)*(x2724)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))))+IKsqr(((((cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x2722)*(x2724)))+(((cj6)*(r21)*(sj4)))+(((x2722)*(x2723)))+(((r20)*(sj4)*(sj6)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((sj5)*(x2723)))+(((IkReal(-1.00000000000000))*(sj5)*(x2724)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))), ((((cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x2722)*(x2724)))+(((cj6)*(r21)*(sj4)))+(((x2722)*(x2723)))+(((r20)*(sj4)*(sj6)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x2725=IKcos(j3);
IkReal x2726=IKsin(j3);
IkReal x2727=((r11)*(sj6));
IkReal x2728=((IkReal(1.00000000000000))*(sj5));
IkReal x2729=((IkReal(1.00000000000000))*(cj1));
IkReal x2730=((cj6)*(sj4));
IkReal x2731=((sj4)*(sj6));
IkReal x2732=((cj4)*(sj5));
IkReal x2733=((cj4)*(cj5));
IkReal x2734=((r01)*(sj6));
IkReal x2735=((r21)*(sj6));
IkReal x2736=((cj6)*(sj5));
IkReal x2737=((IkReal(1.00000000000000))*(cj6)*(x2733));
evalcond[0]=((x2726)+(((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(x2728)*(x2735)))+(((r20)*(x2736))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2728)*(x2734)))+(((r00)*(x2736)))+(((sj1)*(x2725)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x2725)*(x2729)))+(((IkReal(-1.00000000000000))*(x2727)*(x2728)))+(((r10)*(x2736))));
evalcond[3]=((((r21)*(x2730)))+(((r22)*(x2732)))+(((IkReal(-1.00000000000000))*(x2725)))+(((r20)*(x2731)))+(((IkReal(-1.00000000000000))*(r20)*(x2737)))+(((x2733)*(x2735))));
evalcond[4]=((((r02)*(x2732)))+(((r01)*(x2730)))+(((r00)*(x2731)))+(((sj1)*(x2726)))+(((x2733)*(x2734)))+(((IkReal(-1.00000000000000))*(r00)*(x2737))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2726)*(x2729)))+(((x2727)*(x2733)))+(((r12)*(x2732)))+(((r10)*(x2731)))+(((IkReal(-1.00000000000000))*(r10)*(x2737)))+(((r11)*(x2730))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2738=((sj4)*(sj5));
IkReal x2739=((IkReal(0.390000000000000))*(sj5));
IkReal x2740=((r21)*(sj6));
IkReal x2741=((IkReal(0.390000000000000))*(cj5));
IkReal x2742=((cj6)*(r00));
IkReal x2743=((IkReal(0.000500000000000000))*(cj6));
IkReal x2744=((r11)*(sj6));
IkReal x2745=((cj5)*(sj4));
IkReal x2746=((r01)*(sj6));
IkReal x2747=((IkReal(1.00000000000000))*(r20));
IkReal x2748=((cj4)*(sj6));
IkReal x2749=((IkReal(0.000500000000000000))*(sj6));
IkReal x2750=((IkReal(1.00000000000000))*(r10));
IkReal x2751=((IkReal(1.00000000000000))*(cj4)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((r21)*(x2743)))+(((r22)*(x2741)))+(((IkReal(-1.00000000000000))*(x2739)*(x2740)))+(((IkReal(-1.00000000000000))*(pz)))+(((r20)*(x2749)))+(((cj6)*(r20)*(x2739))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2739)*(x2746)))+(((x2739)*(x2742)))+(((IkReal(0.00200000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(px)))+(((r01)*(x2743)))+(((r00)*(x2749)))+(((IkReal(-0.400000000000000))*(sj1)))+(((r02)*(x2741))));
evalcond[3]=((((cj6)*(r10)*(x2739)))+(((r11)*(x2743)))+(((r12)*(x2741)))+(((IkReal(0.400000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(x2739)*(x2744)))+(((r10)*(x2749)))+(((IkReal(0.00200000000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(py))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2747)*(x2748)))+(((r22)*(x2738)))+(((x2740)*(x2745)))+(((IkReal(-1.00000000000000))*(cj6)*(x2745)*(x2747)))+(((IkReal(-1.00000000000000))*(r21)*(x2751))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2742)*(x2745)))+(((r02)*(x2738)))+(cj1)+(((IkReal(-1.00000000000000))*(r01)*(x2751)))+(((x2745)*(x2746)))+(((IkReal(-1.00000000000000))*(r00)*(x2748))));
evalcond[6]=((sj1)+(((x2744)*(x2745)))+(((IkReal(-1.00000000000000))*(r11)*(x2751)))+(((IkReal(-1.00000000000000))*(x2748)*(x2750)))+(((r12)*(x2738)))+(((IkReal(-1.00000000000000))*(cj6)*(x2745)*(x2750))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2752=((cj4)*(cj5));
IkReal x2753=((cj6)*(r20));
IkReal x2754=((IkReal(1.00000000000000))*(sj4));
IkReal x2755=((IkReal(1.00000000000000))*(r21)*(sj6));
if( IKabs(((((cj5)*(r22)))+(((sj5)*(x2753)))+(((IkReal(-1.00000000000000))*(sj5)*(x2755))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x2752)*(x2753)))+(((IkReal(-1.00000000000000))*(x2752)*(x2755)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x2754)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x2754))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj5)*(r22)))+(((sj5)*(x2753)))+(((IkReal(-1.00000000000000))*(sj5)*(x2755)))))+IKsqr(((((x2752)*(x2753)))+(((IkReal(-1.00000000000000))*(x2752)*(x2755)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x2754)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x2754)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((cj5)*(r22)))+(((sj5)*(x2753)))+(((IkReal(-1.00000000000000))*(sj5)*(x2755)))), ((((x2752)*(x2753)))+(((IkReal(-1.00000000000000))*(x2752)*(x2755)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x2754)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x2754)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x2756=IKcos(j3);
IkReal x2757=IKsin(j3);
IkReal x2758=((r11)*(sj6));
IkReal x2759=((IkReal(1.00000000000000))*(sj5));
IkReal x2760=((IkReal(1.00000000000000))*(cj1));
IkReal x2761=((sj4)*(sj6));
IkReal x2762=((cj4)*(sj5));
IkReal x2763=((cj6)*(sj4));
IkReal x2764=((cj4)*(cj5));
IkReal x2765=((r01)*(sj6));
IkReal x2766=((r21)*(sj6));
IkReal x2767=((cj6)*(sj5));
IkReal x2768=((IkReal(1.00000000000000))*(cj6)*(x2764));
evalcond[0]=((((cj5)*(r22)))+(((r20)*(x2767)))+(((IkReal(-1.00000000000000))*(x2759)*(x2766)))+(((IkReal(-1.00000000000000))*(x2757))));
evalcond[1]=((((r00)*(x2767)))+(((IkReal(-1.00000000000000))*(x2759)*(x2765)))+(((sj1)*(x2756)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((r10)*(x2767)))+(((IkReal(-1.00000000000000))*(x2756)*(x2760)))+(((IkReal(-1.00000000000000))*(x2758)*(x2759))));
evalcond[3]=((x2756)+(((r20)*(x2761)))+(((IkReal(-1.00000000000000))*(r20)*(x2768)))+(((r21)*(x2763)))+(((x2764)*(x2766)))+(((r22)*(x2762))));
evalcond[4]=((((r00)*(x2761)))+(((IkReal(-1.00000000000000))*(r00)*(x2768)))+(((r01)*(x2763)))+(((sj1)*(x2757)))+(((r02)*(x2762)))+(((x2764)*(x2765))));
evalcond[5]=((((x2758)*(x2764)))+(((r12)*(x2762)))+(((IkReal(-1.00000000000000))*(r10)*(x2768)))+(((r10)*(x2761)))+(((IkReal(-1.00000000000000))*(x2757)*(x2760)))+(((r11)*(x2763))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2769=((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30);
IkReal x2770=((IkReal(1.00000000000000))*(sj5));
IkReal x2771=((cj2)*(sj1));
IkReal x2772=((r21)*(sj6));
IkReal x2773=((cj6)*(r20));
IkReal x2774=((cj5)*(r22));
if( IKabs(((x2769)*(((((IkReal(-1.00000000000000))*(x2774)))+(((IkReal(-1.00000000000000))*(x2770)*(x2773)))+(((sj5)*(x2772))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x2769)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)*(sj2)))+(((x2771)*(x2774)))+(((sj5)*(x2771)*(x2773)))+(((IkReal(-1.00000000000000))*(x2770)*(x2771)*(x2772)))+(((IkReal(-1.00000000000000))*(r11)*(sj2)*(sj6)*(x2770)))+(((cj6)*(r10)*(sj2)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x2769)*(((((IkReal(-1.00000000000000))*(x2774)))+(((IkReal(-1.00000000000000))*(x2770)*(x2773)))+(((sj5)*(x2772)))))))+IKsqr(((x2769)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)*(sj2)))+(((x2771)*(x2774)))+(((sj5)*(x2771)*(x2773)))+(((IkReal(-1.00000000000000))*(x2770)*(x2771)*(x2772)))+(((IkReal(-1.00000000000000))*(r11)*(sj2)*(sj6)*(x2770)))+(((cj6)*(r10)*(sj2)*(sj5)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x2769)*(((((IkReal(-1.00000000000000))*(x2774)))+(((IkReal(-1.00000000000000))*(x2770)*(x2773)))+(((sj5)*(x2772)))))), ((x2769)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)*(sj2)))+(((x2771)*(x2774)))+(((sj5)*(x2771)*(x2773)))+(((IkReal(-1.00000000000000))*(x2770)*(x2771)*(x2772)))+(((IkReal(-1.00000000000000))*(r11)*(sj2)*(sj6)*(x2770)))+(((cj6)*(r10)*(sj2)*(sj5)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x2775=IKsin(j3);
IkReal x2776=IKcos(j3);
IkReal x2777=((r11)*(sj6));
IkReal x2778=((IkReal(1.00000000000000))*(sj5));
IkReal x2779=((sj4)*(sj6));
IkReal x2780=((cj4)*(sj5));
IkReal x2781=((cj6)*(sj4));
IkReal x2782=((cj4)*(cj5));
IkReal x2783=((r01)*(sj6));
IkReal x2784=((r21)*(sj6));
IkReal x2785=((cj6)*(sj5));
IkReal x2786=((IkReal(1.00000000000000))*(x2776));
IkReal x2787=((sj1)*(x2776));
IkReal x2788=((IkReal(1.00000000000000))*(cj6)*(x2782));
IkReal x2789=((IkReal(1.00000000000000))*(cj2)*(x2775));
evalcond[0]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(x2778)*(x2784)))+(((sj2)*(x2775)))+(((r20)*(x2785))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(x2789)))+(x2787)+(((IkReal(-1.00000000000000))*(x2778)*(x2783)))+(((r00)*(x2785)))+(((cj5)*(r02))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x2786)))+(((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x2777)*(x2778)))+(((IkReal(-1.00000000000000))*(sj1)*(x2789)))+(((r10)*(x2785))));
evalcond[3]=((((r21)*(x2781)))+(((IkReal(-1.00000000000000))*(r20)*(x2788)))+(((IkReal(-1.00000000000000))*(sj2)*(x2786)))+(((x2782)*(x2784)))+(((r20)*(x2779)))+(((r22)*(x2780))));
evalcond[4]=((((sj1)*(x2775)))+(((r00)*(x2779)))+(((r02)*(x2780)))+(((x2782)*(x2783)))+(((cj1)*(cj2)*(x2776)))+(((r01)*(x2781)))+(((IkReal(-1.00000000000000))*(r00)*(x2788))));
evalcond[5]=((((x2777)*(x2782)))+(((cj2)*(x2787)))+(((r12)*(x2780)))+(((r10)*(x2779)))+(((IkReal(-1.00000000000000))*(r10)*(x2788)))+(((r11)*(x2781)))+(((IkReal(-1.00000000000000))*(cj1)*(x2775))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2790=(sj1)*(sj1);
IkReal x2791=(cj1)*(cj1);
IkReal x2792=((cj5)*(r12));
IkReal x2793=((cj6)*(sj5));
IkReal x2794=((IkReal(1.00000000000000))*(sj1));
IkReal x2795=((cj5)*(r02));
IkReal x2796=((IkReal(1.00000000000000))*(cj1));
IkReal x2797=((r01)*(sj5)*(sj6));
IkReal x2798=((r11)*(sj5)*(sj6));
if( IKabs(((((IKabs(((((cj2)*(x2790)))+(((cj2)*(x2791))))) != 0)?((IkReal)1/(((((cj2)*(x2790)))+(((cj2)*(x2791)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2796)*(x2797)))+(((r10)*(sj1)*(x2793)))+(((cj1)*(x2795)))+(((cj1)*(r00)*(x2793)))+(((sj1)*(x2792)))+(((IkReal(-1.00000000000000))*(x2794)*(x2798))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((x2790)+(x2791))) != 0)?((IkReal)1/(((x2790)+(x2791)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r00)*(x2793)*(x2794)))+(((IkReal(-1.00000000000000))*(x2796)*(x2798)))+(((cj1)*(x2792)))+(((sj1)*(x2797)))+(((cj1)*(r10)*(x2793)))+(((IkReal(-1.00000000000000))*(x2794)*(x2795))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((cj2)*(x2790)))+(((cj2)*(x2791))))) != 0)?((IkReal)1/(((((cj2)*(x2790)))+(((cj2)*(x2791)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2796)*(x2797)))+(((r10)*(sj1)*(x2793)))+(((cj1)*(x2795)))+(((cj1)*(r00)*(x2793)))+(((sj1)*(x2792)))+(((IkReal(-1.00000000000000))*(x2794)*(x2798)))))))+IKsqr(((((IKabs(((x2790)+(x2791))) != 0)?((IkReal)1/(((x2790)+(x2791)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r00)*(x2793)*(x2794)))+(((IkReal(-1.00000000000000))*(x2796)*(x2798)))+(((cj1)*(x2792)))+(((sj1)*(x2797)))+(((cj1)*(r10)*(x2793)))+(((IkReal(-1.00000000000000))*(x2794)*(x2795)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IKabs(((((cj2)*(x2790)))+(((cj2)*(x2791))))) != 0)?((IkReal)1/(((((cj2)*(x2790)))+(((cj2)*(x2791)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2796)*(x2797)))+(((r10)*(sj1)*(x2793)))+(((cj1)*(x2795)))+(((cj1)*(r00)*(x2793)))+(((sj1)*(x2792)))+(((IkReal(-1.00000000000000))*(x2794)*(x2798)))))), ((((IKabs(((x2790)+(x2791))) != 0)?((IkReal)1/(((x2790)+(x2791)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r00)*(x2793)*(x2794)))+(((IkReal(-1.00000000000000))*(x2796)*(x2798)))+(((cj1)*(x2792)))+(((sj1)*(x2797)))+(((cj1)*(r10)*(x2793)))+(((IkReal(-1.00000000000000))*(x2794)*(x2795)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x2799=IKsin(j3);
IkReal x2800=IKcos(j3);
IkReal x2801=((r11)*(sj6));
IkReal x2802=((IkReal(1.00000000000000))*(sj5));
IkReal x2803=((sj4)*(sj6));
IkReal x2804=((cj4)*(sj5));
IkReal x2805=((cj6)*(sj4));
IkReal x2806=((cj4)*(cj5));
IkReal x2807=((r01)*(sj6));
IkReal x2808=((r21)*(sj6));
IkReal x2809=((cj6)*(sj5));
IkReal x2810=((IkReal(1.00000000000000))*(x2800));
IkReal x2811=((sj1)*(x2800));
IkReal x2812=((IkReal(1.00000000000000))*(cj6)*(x2806));
IkReal x2813=((IkReal(1.00000000000000))*(cj2)*(x2799));
evalcond[0]=((((cj5)*(r22)))+(((r20)*(x2809)))+(((IkReal(-1.00000000000000))*(x2802)*(x2808)))+(((sj2)*(x2799))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(x2813)))+(((IkReal(-1.00000000000000))*(x2802)*(x2807)))+(x2811)+(((r00)*(x2809)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((r10)*(x2809)))+(((IkReal(-1.00000000000000))*(cj1)*(x2810)))+(((IkReal(-1.00000000000000))*(sj1)*(x2813)))+(((IkReal(-1.00000000000000))*(x2801)*(x2802))));
evalcond[3]=((((r20)*(x2803)))+(((IkReal(-1.00000000000000))*(sj2)*(x2810)))+(((IkReal(-1.00000000000000))*(r20)*(x2812)))+(((r21)*(x2805)))+(((x2806)*(x2808)))+(((r22)*(x2804))));
evalcond[4]=((((r02)*(x2804)))+(((sj1)*(x2799)))+(((cj1)*(cj2)*(x2800)))+(((IkReal(-1.00000000000000))*(r00)*(x2812)))+(((x2806)*(x2807)))+(((r01)*(x2805)))+(((r00)*(x2803))));
evalcond[5]=((((r12)*(x2804)))+(((r10)*(x2803)))+(((IkReal(-1.00000000000000))*(cj1)*(x2799)))+(((x2801)*(x2806)))+(((cj2)*(x2811)))+(((r11)*(x2805)))+(((IkReal(-1.00000000000000))*(r10)*(x2812))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2814=((cj4)*(cj5));
IkReal x2815=((r21)*(sj6));
IkReal x2816=((IkReal(1.00000000000000))*(cj6)*(r20));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(sj5)*(x2816)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))+(((sj5)*(x2815))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((x2814)*(x2815)))+(((IkReal(-1.00000000000000))*(x2814)*(x2816)))+(((r20)*(sj4)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(sj5)*(x2816)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))+(((sj5)*(x2815)))))), ((gconst4)*(((((cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((x2814)*(x2815)))+(((IkReal(-1.00000000000000))*(x2814)*(x2816)))+(((r20)*(sj4)*(sj6)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x2817=IKsin(j3);
IkReal x2818=IKcos(j3);
IkReal x2819=((r11)*(sj6));
IkReal x2820=((IkReal(1.00000000000000))*(sj5));
IkReal x2821=((sj4)*(sj6));
IkReal x2822=((cj4)*(sj5));
IkReal x2823=((cj6)*(sj4));
IkReal x2824=((cj4)*(cj5));
IkReal x2825=((r01)*(sj6));
IkReal x2826=((r21)*(sj6));
IkReal x2827=((cj6)*(sj5));
IkReal x2828=((IkReal(1.00000000000000))*(x2818));
IkReal x2829=((sj1)*(x2818));
IkReal x2830=((IkReal(1.00000000000000))*(cj6)*(x2824));
IkReal x2831=((IkReal(1.00000000000000))*(cj2)*(x2817));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2820)*(x2826)))+(((cj5)*(r22)))+(((sj2)*(x2817)))+(((r20)*(x2827))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2820)*(x2825)))+(((IkReal(-1.00000000000000))*(cj1)*(x2831)))+(((r00)*(x2827)))+(x2829)+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(sj1)*(x2831)))+(((IkReal(-1.00000000000000))*(cj1)*(x2828)))+(((r10)*(x2827)))+(((IkReal(-1.00000000000000))*(x2819)*(x2820))));
evalcond[3]=((((r20)*(x2821)))+(((IkReal(-1.00000000000000))*(sj2)*(x2828)))+(((x2824)*(x2826)))+(((IkReal(-1.00000000000000))*(r20)*(x2830)))+(((r21)*(x2823)))+(((r22)*(x2822))));
evalcond[4]=((((r02)*(x2822)))+(((IkReal(-1.00000000000000))*(r00)*(x2830)))+(((cj1)*(cj2)*(x2818)))+(((x2824)*(x2825)))+(((r00)*(x2821)))+(((sj1)*(x2817)))+(((r01)*(x2823))));
evalcond[5]=((((cj2)*(x2829)))+(((r10)*(x2821)))+(((x2819)*(x2824)))+(((IkReal(-1.00000000000000))*(r10)*(x2830)))+(((r11)*(x2823)))+(((IkReal(-1.00000000000000))*(cj1)*(x2817)))+(((r12)*(x2822))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2832=((IkReal(0.250000000000000))*(cj6));
IkReal x2833=((IkReal(0.250000000000000))*(sj6));
IkReal x2834=((IkReal(195.000000000000))*(sj5));
IkReal x2835=((IkReal(195.000000000000))*(cj5));
if( IKabs(((((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r01)*(sj6)*(x2834)))+(((r02)*(x2835)))+(((IkReal(-500.000000000000))*(px)))+(((IkReal(-200.000000000000))*(sj1)))+(((r00)*(x2833)))+(((r01)*(x2832)))+(((cj6)*(r00)*(x2834))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj6)*(r20)*(x2834)))+(((IkReal(-500.000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x2834)))+(((r20)*(x2833)))+(((r22)*(x2835)))+(((r21)*(x2832))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r01)*(sj6)*(x2834)))+(((r02)*(x2835)))+(((IkReal(-500.000000000000))*(px)))+(((IkReal(-200.000000000000))*(sj1)))+(((r00)*(x2833)))+(((r01)*(x2832)))+(((cj6)*(r00)*(x2834)))))))+IKsqr(((((cj6)*(r20)*(x2834)))+(((IkReal(-500.000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x2834)))+(((r20)*(x2833)))+(((r22)*(x2835)))+(((r21)*(x2832)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r01)*(sj6)*(x2834)))+(((r02)*(x2835)))+(((IkReal(-500.000000000000))*(px)))+(((IkReal(-200.000000000000))*(sj1)))+(((r00)*(x2833)))+(((r01)*(x2832)))+(((cj6)*(r00)*(x2834)))))), ((((cj6)*(r20)*(x2834)))+(((IkReal(-500.000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x2834)))+(((r20)*(x2833)))+(((r22)*(x2835)))+(((r21)*(x2832)))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[3];
IkReal x2836=IKsin(j2);
IkReal x2837=((IkReal(0.390000000000000))*(sj5));
IkReal x2838=((IkReal(0.390000000000000))*(cj5));
IkReal x2839=((IkReal(0.000500000000000000))*(cj6));
IkReal x2840=((IkReal(0.000500000000000000))*(sj6));
IkReal x2841=((IkReal(0.00200000000000000))*(x2836));
evalcond[0]=((((cj6)*(r20)*(x2837)))+(((r20)*(x2840)))+(((IkReal(-0.00200000000000000))*(IKcos(j2))))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x2837)))+(((IkReal(-1.00000000000000))*(pz)))+(((r22)*(x2838)))+(((r21)*(x2839))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(sj6)*(x2837)))+(((r02)*(x2838)))+(((IkReal(-1.00000000000000))*(px)))+(((r00)*(x2840)))+(((IkReal(-0.400000000000000))*(sj1)))+(((r01)*(x2839)))+(((cj6)*(r00)*(x2837)))+(((IkReal(-1.00000000000000))*(cj1)*(x2841))));
evalcond[2]=((((r12)*(x2838)))+(((IkReal(-1.00000000000000))*(sj1)*(x2841)))+(((IkReal(0.400000000000000))*(cj1)))+(((cj6)*(r10)*(x2837)))+(((IkReal(-1.00000000000000))*(py)))+(((r11)*(x2839)))+(((r10)*(x2840)))+(((IkReal(-1.00000000000000))*(r11)*(sj6)*(x2837))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x2842=(sj6)*(sj6);
IkReal x2843=(cj6)*(cj6);
IkReal x2844=((IkReal(1.00000000000000))*(r20));
IkReal x2845=((r00)*(r21));
IkReal x2846=((r22)*(sj5));
IkReal x2847=((r02)*(sj5));
IkReal x2848=((cj5)*(x2842));
IkReal x2849=((cj5)*(x2843));
gconst0=IKsign(((((IkReal(-1.00000000000000))*(sj6)*(x2844)*(x2847)))+(((r00)*(sj6)*(x2846)))+(((cj6)*(r01)*(x2846)))+(((IkReal(-1.00000000000000))*(r01)*(x2844)*(x2848)))+(((IkReal(-1.00000000000000))*(r01)*(x2844)*(x2849)))+(((x2845)*(x2849)))+(((x2845)*(x2848)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x2847)))));
IkReal x2850=(sj6)*(sj6);
IkReal x2851=(cj6)*(cj6);
IkReal x2852=((IkReal(1.00000000000000))*(r20));
IkReal x2853=((r00)*(r21));
IkReal x2854=((r22)*(sj5));
IkReal x2855=((r02)*(sj5));
IkReal x2856=((cj5)*(x2850));
IkReal x2857=((cj5)*(x2851));
dummyeval[0]=((((r00)*(sj6)*(x2854)))+(((x2853)*(x2857)))+(((x2853)*(x2856)))+(((IkReal(-1.00000000000000))*(r01)*(x2852)*(x2857)))+(((IkReal(-1.00000000000000))*(r01)*(x2852)*(x2856)))+(((cj6)*(r01)*(x2854)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x2855)))+(((IkReal(-1.00000000000000))*(sj6)*(x2852)*(x2855))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x2858=(sj6)*(sj6);
IkReal x2859=(cj6)*(cj6);
IkReal x2860=((cj6)*(sj5));
IkReal x2861=((r10)*(r21));
IkReal x2862=((IkReal(1.00000000000000))*(r12));
IkReal x2863=((sj5)*(sj6));
IkReal x2864=((cj5)*(x2859));
IkReal x2865=((IkReal(1.00000000000000))*(r11)*(r20));
IkReal x2866=((cj5)*(x2858));
gconst1=IKsign(((((r11)*(r22)*(x2860)))+(((IkReal(-1.00000000000000))*(x2864)*(x2865)))+(((IkReal(-1.00000000000000))*(r21)*(x2860)*(x2862)))+(((IkReal(-1.00000000000000))*(r20)*(x2862)*(x2863)))+(((IkReal(-1.00000000000000))*(x2865)*(x2866)))+(((r10)*(r22)*(x2863)))+(((x2861)*(x2866)))+(((x2861)*(x2864)))));
IkReal x2867=(sj6)*(sj6);
IkReal x2868=(cj6)*(cj6);
IkReal x2869=((cj6)*(sj5));
IkReal x2870=((r10)*(r21));
IkReal x2871=((IkReal(1.00000000000000))*(r12));
IkReal x2872=((sj5)*(sj6));
IkReal x2873=((cj5)*(x2868));
IkReal x2874=((IkReal(1.00000000000000))*(r11)*(r20));
IkReal x2875=((cj5)*(x2867));
dummyeval[0]=((((r11)*(r22)*(x2869)))+(((x2870)*(x2875)))+(((x2870)*(x2873)))+(((IkReal(-1.00000000000000))*(r20)*(x2871)*(x2872)))+(((r10)*(r22)*(x2872)))+(((IkReal(-1.00000000000000))*(x2874)*(x2875)))+(((IkReal(-1.00000000000000))*(x2873)*(x2874)))+(((IkReal(-1.00000000000000))*(r21)*(x2869)*(x2871))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x2876=(sj1)*(sj1);
IkReal x2877=(cj1)*(cj1);
dummyeval[0]=((((cj2)*(x2877)))+(((cj2)*(x2876))));
dummyeval[1]=((x2877)+(x2876));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[4];
IkReal x2878=((IkReal(0.390000000000000))*(sj5));
IkReal x2879=((IkReal(0.390000000000000))*(cj5));
IkReal x2880=((IkReal(0.000500000000000000))*(cj6));
IkReal x2881=((IkReal(0.000500000000000000))*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x2881)))+(((r22)*(x2879)))+(((cj6)*(r20)*(x2878)))+(((r21)*(x2880)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x2878))));
evalcond[2]=((((cj6)*(r00)*(x2878)))+(((r00)*(x2881)))+(((r01)*(x2880)))+(((IkReal(-1.00000000000000))*(px)))+(((r02)*(x2879)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x2878)))+(((IkReal(-0.00200000000000000))*(cj1)))+(((IkReal(-0.400000000000000))*(sj1))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(sj6)*(x2878)))+(((IkReal(0.400000000000000))*(cj1)))+(((r11)*(x2880)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.00200000000000000))*(sj1)))+(((r10)*(x2881)))+(((cj6)*(r10)*(x2878)))+(((r12)*(x2879))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
IkReal x2882=(sj6)*(sj6);
IkReal x2883=(cj6)*(cj6);
IkReal x2884=((IkReal(1.00000000000000))*(r20));
IkReal x2885=((r00)*(r21));
IkReal x2886=((r22)*(sj5));
IkReal x2887=((r02)*(sj5));
IkReal x2888=((cj5)*(x2882));
IkReal x2889=((cj5)*(x2883));
gconst9=IKsign(((((x2885)*(x2889)))+(((x2885)*(x2888)))+(((IkReal(-1.00000000000000))*(r01)*(x2884)*(x2888)))+(((IkReal(-1.00000000000000))*(r01)*(x2884)*(x2889)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x2887)))+(((cj6)*(r01)*(x2886)))+(((r00)*(sj6)*(x2886)))+(((IkReal(-1.00000000000000))*(sj6)*(x2884)*(x2887)))));
IkReal x2890=(sj6)*(sj6);
IkReal x2891=(cj6)*(cj6);
IkReal x2892=((IkReal(1.00000000000000))*(r20));
IkReal x2893=((r00)*(r21));
IkReal x2894=((r22)*(sj5));
IkReal x2895=((r02)*(sj5));
IkReal x2896=((cj5)*(x2890));
IkReal x2897=((cj5)*(x2891));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x2895)))+(((IkReal(-1.00000000000000))*(sj6)*(x2892)*(x2895)))+(((cj6)*(r01)*(x2894)))+(((x2893)*(x2897)))+(((x2893)*(x2896)))+(((IkReal(-1.00000000000000))*(r01)*(x2892)*(x2896)))+(((IkReal(-1.00000000000000))*(r01)*(x2892)*(x2897)))+(((r00)*(sj6)*(x2894))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
IkReal x2898=(sj6)*(sj6);
IkReal x2899=(cj6)*(cj6);
IkReal x2900=((cj6)*(sj5));
IkReal x2901=((r10)*(r21));
IkReal x2902=((IkReal(1.00000000000000))*(r12));
IkReal x2903=((sj5)*(sj6));
IkReal x2904=((cj5)*(x2899));
IkReal x2905=((IkReal(1.00000000000000))*(r11)*(r20));
IkReal x2906=((cj5)*(x2898));
gconst10=IKsign(((((r10)*(r22)*(x2903)))+(((IkReal(-1.00000000000000))*(x2905)*(x2906)))+(((x2901)*(x2906)))+(((x2901)*(x2904)))+(((IkReal(-1.00000000000000))*(x2904)*(x2905)))+(((IkReal(-1.00000000000000))*(r21)*(x2900)*(x2902)))+(((IkReal(-1.00000000000000))*(r20)*(x2902)*(x2903)))+(((r11)*(r22)*(x2900)))));
IkReal x2907=(sj6)*(sj6);
IkReal x2908=(cj6)*(cj6);
IkReal x2909=((cj6)*(sj5));
IkReal x2910=((r10)*(r21));
IkReal x2911=((IkReal(1.00000000000000))*(r12));
IkReal x2912=((sj5)*(sj6));
IkReal x2913=((cj5)*(x2908));
IkReal x2914=((IkReal(1.00000000000000))*(r11)*(r20));
IkReal x2915=((cj5)*(x2907));
dummyeval[0]=((((r10)*(r22)*(x2912)))+(((IkReal(-1.00000000000000))*(x2913)*(x2914)))+(((IkReal(-1.00000000000000))*(x2914)*(x2915)))+(((x2910)*(x2913)))+(((x2910)*(x2915)))+(((r11)*(r22)*(x2909)))+(((IkReal(-1.00000000000000))*(r20)*(x2911)*(x2912)))+(((IkReal(-1.00000000000000))*(r21)*(x2909)*(x2911))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj1;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x2916=((IkReal(0.000500000000000000))*(cj6));
IkReal x2917=((IkReal(0.000500000000000000))*(sj6));
IkReal x2918=((sj5)*(sj6));
IkReal x2919=((cj5)*(r12));
IkReal x2920=((IkReal(0.390000000000000))*(cj5));
IkReal x2921=((IkReal(0.390000000000000))*(cj6)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((cj6)*(r10)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x2918)))+(x2919));
evalcond[2]=((((r22)*(x2920)))+(((IkReal(-0.390000000000000))*(r21)*(x2918)))+(((r20)*(x2917)))+(((IkReal(-1.00000000000000))*(pz)))+(((r20)*(x2921)))+(((r21)*(x2916))));
evalcond[3]=((IkReal(-0.400000000000000))+(((r01)*(x2916)))+(((IkReal(-0.390000000000000))*(r01)*(x2918)))+(((r00)*(x2917)))+(((r00)*(x2921)))+(((IkReal(-1.00000000000000))*(px)))+(((r02)*(x2920))));
evalcond[4]=((IkReal(-0.00200000000000000))+(((r11)*(x2916)))+(((r10)*(x2921)))+(((IkReal(0.390000000000000))*(x2919)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.390000000000000))*(r11)*(x2918)))+(((r10)*(x2917))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2922=((sj5)*(sj6));
IkReal x2923=((IkReal(1.00000000000000))*(cj5));
IkReal x2924=((IkReal(1.00000000000000))*(cj6)*(sj5));
if( IKabs(((((IkReal(-1.00000000000000))*(r20)*(x2924)))+(((r21)*(x2922)))+(((IkReal(-1.00000000000000))*(r22)*(x2923))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r02)*(x2923)))+(((r01)*(x2922)))+(((IkReal(-1.00000000000000))*(r00)*(x2924))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r20)*(x2924)))+(((r21)*(x2922)))+(((IkReal(-1.00000000000000))*(r22)*(x2923)))))+IKsqr(((((IkReal(-1.00000000000000))*(r02)*(x2923)))+(((r01)*(x2922)))+(((IkReal(-1.00000000000000))*(r00)*(x2924)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r20)*(x2924)))+(((r21)*(x2922)))+(((IkReal(-1.00000000000000))*(r22)*(x2923)))), ((((IkReal(-1.00000000000000))*(r02)*(x2923)))+(((r01)*(x2922)))+(((IkReal(-1.00000000000000))*(r00)*(x2924)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[2];
IkReal x2925=((cj6)*(sj5));
IkReal x2926=((IkReal(1.00000000000000))*(sj5)*(sj6));
evalcond[0]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(x2926)))+(IKsin(j3))+(((r20)*(x2925))));
evalcond[1]=((((r00)*(x2925)))+(IKcos(j3))+(((IkReal(-1.00000000000000))*(r01)*(x2926)))+(((cj5)*(r02))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst15;
IkReal x2927=(sj6)*(sj6);
IkReal x2928=(cj6)*(cj6);
IkReal x2929=((r01)*(r10));
IkReal x2930=((IkReal(1.00000000000000))*(r00));
IkReal x2931=((r02)*(sj5));
IkReal x2932=((r12)*(sj5));
IkReal x2933=((cj5)*(x2927));
IkReal x2934=((cj5)*(x2928));
gconst15=IKsign(((((x2929)*(x2933)))+(((x2929)*(x2934)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x2932)))+(((r10)*(sj6)*(x2931)))+(((IkReal(-1.00000000000000))*(r11)*(x2930)*(x2933)))+(((IkReal(-1.00000000000000))*(r11)*(x2930)*(x2934)))+(((IkReal(-1.00000000000000))*(sj6)*(x2930)*(x2932)))+(((cj6)*(r11)*(x2931)))));
IkReal x2935=(sj6)*(sj6);
IkReal x2936=(cj6)*(cj6);
IkReal x2937=((r01)*(r10));
IkReal x2938=((IkReal(1.00000000000000))*(r00));
IkReal x2939=((r02)*(sj5));
IkReal x2940=((r12)*(sj5));
IkReal x2941=((cj5)*(x2935));
IkReal x2942=((cj5)*(x2936));
dummyeval[0]=((((r10)*(sj6)*(x2939)))+(((IkReal(-1.00000000000000))*(r11)*(x2938)*(x2942)))+(((IkReal(-1.00000000000000))*(r11)*(x2938)*(x2941)))+(((cj6)*(r11)*(x2939)))+(((IkReal(-1.00000000000000))*(sj6)*(x2938)*(x2940)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x2940)))+(((x2937)*(x2942)))+(((x2937)*(x2941))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst16;
IkReal x2943=(cj5)*(cj5);
IkReal x2944=(sj6)*(sj6);
IkReal x2945=(cj6)*(cj6);
IkReal x2946=((r00)*(r20));
IkReal x2947=((cj5)*(sj5));
IkReal x2948=((r01)*(r21));
IkReal x2949=((r21)*(sj6));
IkReal x2950=((sj6)*(x2947));
IkReal x2951=((IkReal(1.00000000000000))*(cj6)*(r00));
IkReal x2952=((cj6)*(r01)*(r20)*(sj6));
gconst16=IKsign(((((r02)*(x2947)*(x2949)))+(((IkReal(-1.00000000000000))*(x2943)*(x2949)*(x2951)))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(r20)*(x2947)))+(((x2943)*(x2945)*(x2946)))+(((cj6)*(r00)*(x2949)))+(((x2945)*(x2948)))+(((IkReal(-1.00000000000000))*(x2943)*(x2952)))+(((r01)*(r22)*(x2950)))+(((r02)*(r22)*((sj5)*(sj5))))+(((x2944)*(x2946)))+(((x2943)*(x2944)*(x2948)))+(x2952)+(((IkReal(-1.00000000000000))*(r22)*(x2947)*(x2951)))));
IkReal x2953=(cj5)*(cj5);
IkReal x2954=(sj6)*(sj6);
IkReal x2955=(cj6)*(cj6);
IkReal x2956=((r00)*(r20));
IkReal x2957=((cj5)*(sj5));
IkReal x2958=((r01)*(r21));
IkReal x2959=((r21)*(sj6));
IkReal x2960=((sj6)*(x2957));
IkReal x2961=((IkReal(1.00000000000000))*(cj6)*(r00));
IkReal x2962=x2952;
dummyeval[0]=((((x2954)*(x2956)))+(((IkReal(-1.00000000000000))*(r22)*(x2957)*(x2961)))+(((r02)*(x2957)*(x2959)))+(((r01)*(r22)*(x2960)))+(((IkReal(-1.00000000000000))*(x2953)*(x2959)*(x2961)))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(r20)*(x2957)))+(((x2953)*(x2954)*(x2958)))+(((r02)*(r22)*((sj5)*(sj5))))+(((IkReal(-1.00000000000000))*(x2953)*(x2962)))+(((x2953)*(x2955)*(x2956)))+(((cj6)*(r00)*(x2959)))+(x2962)+(((x2955)*(x2958))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2963=((IkReal(1.00000000000000))*(sj3));
if( IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x2963)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x2963))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(sj6)*(x2963)))+(((cj5)*(cj6)*(r20)*(sj3)))+(((IkReal(-1.00000000000000))*(r22)*(sj5)*(x2963))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst16)*(((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x2963)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x2963)))))), ((gconst16)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(sj6)*(x2963)))+(((cj5)*(cj6)*(r20)*(sj3)))+(((IkReal(-1.00000000000000))*(r22)*(sj5)*(x2963)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2964=IKsin(j4);
IkReal x2965=IKcos(j4);
IkReal x2966=((IkReal(1.00000000000000))*(r00));
IkReal x2967=((cj5)*(r01));
IkReal x2968=((cj5)*(r11));
IkReal x2969=((IkReal(1.00000000000000))*(cj5));
IkReal x2970=((cj5)*(r21));
IkReal x2971=((sj5)*(x2964));
IkReal x2972=((cj6)*(x2964));
IkReal x2973=((sj6)*(x2965));
IkReal x2974=((sj6)*(x2964));
IkReal x2975=((sj5)*(x2965));
IkReal x2976=((cj6)*(x2965));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x2969)*(x2972)))+(((x2970)*(x2974)))+(((IkReal(-1.00000000000000))*(r21)*(x2976)))+(((r22)*(x2971)))+(((IkReal(-1.00000000000000))*(r20)*(x2973))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x2969)*(x2976)))+(((x2970)*(x2973)))+(((r22)*(x2975)))+(((r20)*(x2974)))+(((IkReal(-1.00000000000000))*(cj3)))+(((r21)*(x2972))));
evalcond[2]=((((r02)*(x2971)))+(((IkReal(-1.00000000000000))*(r01)*(x2976)))+(((IkReal(-1.00000000000000))*(x2966)*(x2973)))+(((IkReal(-1.00000000000000))*(cj5)*(x2966)*(x2972)))+(((x2967)*(x2974))));
evalcond[3]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r11)*(x2976)))+(((r12)*(x2971)))+(((x2968)*(x2974)))+(((IkReal(-1.00000000000000))*(r10)*(x2969)*(x2972)))+(((IkReal(-1.00000000000000))*(r10)*(x2973))));
evalcond[4]=((sj3)+(((r02)*(x2975)))+(((r01)*(x2972)))+(((r00)*(x2974)))+(((IkReal(-1.00000000000000))*(cj5)*(x2966)*(x2976)))+(((x2967)*(x2973))));
evalcond[5]=((((r10)*(x2974)))+(((r12)*(x2975)))+(((x2968)*(x2973)))+(((IkReal(-1.00000000000000))*(r10)*(x2969)*(x2976)))+(((r11)*(x2972))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2977=((cj5)*(sj3));
IkReal x2978=((IkReal(1.00000000000000))*(r10));
if( IKabs(((gconst15)*(((((r12)*(sj3)*(sj5)))+(((r11)*(sj6)*(x2977)))+(((IkReal(-1.00000000000000))*(cj6)*(x2977)*(x2978))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((IkReal(-1.00000000000000))*(cj6)*(r11)*(sj3)))+(((IkReal(-1.00000000000000))*(sj3)*(sj6)*(x2978))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst15)*(((((r12)*(sj3)*(sj5)))+(((r11)*(sj6)*(x2977)))+(((IkReal(-1.00000000000000))*(cj6)*(x2977)*(x2978)))))), ((gconst15)*(((((IkReal(-1.00000000000000))*(cj6)*(r11)*(sj3)))+(((IkReal(-1.00000000000000))*(sj3)*(sj6)*(x2978)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2979=IKsin(j4);
IkReal x2980=IKcos(j4);
IkReal x2981=((IkReal(1.00000000000000))*(r00));
IkReal x2982=((cj5)*(r01));
IkReal x2983=((cj5)*(r11));
IkReal x2984=((IkReal(1.00000000000000))*(cj5));
IkReal x2985=((cj5)*(r21));
IkReal x2986=((sj5)*(x2979));
IkReal x2987=((cj6)*(x2979));
IkReal x2988=((sj6)*(x2980));
IkReal x2989=((sj6)*(x2979));
IkReal x2990=((sj5)*(x2980));
IkReal x2991=((cj6)*(x2980));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(x2991)))+(((IkReal(-1.00000000000000))*(r20)*(x2988)))+(((IkReal(-1.00000000000000))*(r20)*(x2984)*(x2987)))+(((r22)*(x2986)))+(((x2985)*(x2989))));
evalcond[1]=((((r20)*(x2989)))+(((r22)*(x2990)))+(((IkReal(-1.00000000000000))*(r20)*(x2984)*(x2991)))+(((IkReal(-1.00000000000000))*(cj3)))+(((r21)*(x2987)))+(((x2985)*(x2988))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2981)*(x2988)))+(((x2982)*(x2989)))+(((IkReal(-1.00000000000000))*(cj5)*(x2981)*(x2987)))+(((r02)*(x2986)))+(((IkReal(-1.00000000000000))*(r01)*(x2991))));
evalcond[3]=((IkReal(-1.00000000000000))+(((x2983)*(x2989)))+(((r12)*(x2986)))+(((IkReal(-1.00000000000000))*(r11)*(x2991)))+(((IkReal(-1.00000000000000))*(r10)*(x2988)))+(((IkReal(-1.00000000000000))*(r10)*(x2984)*(x2987))));
evalcond[4]=((sj3)+(((r00)*(x2989)))+(((r01)*(x2987)))+(((r02)*(x2990)))+(((x2982)*(x2988)))+(((IkReal(-1.00000000000000))*(cj5)*(x2981)*(x2991))));
evalcond[5]=((((x2983)*(x2988)))+(((r11)*(x2987)))+(((r12)*(x2990)))+(((IkReal(-1.00000000000000))*(r10)*(x2984)*(x2991)))+(((r10)*(x2989))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x2992=((IkReal(0.000500000000000000))*(cj6));
IkReal x2993=((IkReal(0.000500000000000000))*(sj6));
IkReal x2994=((sj5)*(sj6));
IkReal x2995=((cj5)*(r12));
IkReal x2996=((IkReal(0.390000000000000))*(cj5));
IkReal x2997=((IkReal(0.390000000000000))*(cj6)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((cj6)*(r10)*(sj5)))+(((IkReal(-1.00000000000000))*(r11)*(x2994)))+(x2995));
evalcond[2]=((((IkReal(-0.390000000000000))*(r21)*(x2994)))+(((r20)*(x2993)))+(((r20)*(x2997)))+(((IkReal(-1.00000000000000))*(pz)))+(((r21)*(x2992)))+(((r22)*(x2996))));
evalcond[3]=((IkReal(0.400000000000000))+(((IkReal(-0.390000000000000))*(r01)*(x2994)))+(((r00)*(x2993)))+(((r00)*(x2997)))+(((r01)*(x2992)))+(((IkReal(-1.00000000000000))*(px)))+(((r02)*(x2996))));
evalcond[4]=((IkReal(0.00200000000000000))+(((IkReal(0.390000000000000))*(x2995)))+(((IkReal(-0.390000000000000))*(r11)*(x2994)))+(((IkReal(-1.00000000000000))*(py)))+(((r10)*(x2993)))+(((r10)*(x2997)))+(((r11)*(x2992))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2998=((IkReal(1.00000000000000))*(sj5));
if( IKabs(((((r21)*(sj5)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(x2998)))+(((IkReal(-1.00000000000000))*(cj5)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj6)*(x2998)))+(((cj6)*(r00)*(sj5)))+(((cj5)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r21)*(sj5)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(x2998)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))))+IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj6)*(x2998)))+(((cj6)*(r00)*(sj5)))+(((cj5)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((r21)*(sj5)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)*(x2998)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))), ((((IkReal(-1.00000000000000))*(r01)*(sj6)*(x2998)))+(((cj6)*(r00)*(sj5)))+(((cj5)*(r02)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[2];
IkReal x2999=((cj6)*(sj5));
IkReal x3000=((IkReal(1.00000000000000))*(sj5)*(sj6));
evalcond[0]=((((cj5)*(r22)))+(((r20)*(x2999)))+(IKsin(j3))+(((IkReal(-1.00000000000000))*(r21)*(x3000))));
evalcond[1]=((((r00)*(x2999)))+(((IkReal(-1.00000000000000))*(r01)*(x3000)))+(((IkReal(-1.00000000000000))*(IKcos(j3))))+(((cj5)*(r02))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst19;
IkReal x3001=(cj6)*(cj6);
IkReal x3002=(sj6)*(sj6);
IkReal x3003=((r11)*(r20));
IkReal x3004=((r12)*(sj5));
IkReal x3005=((IkReal(1.00000000000000))*(r10));
IkReal x3006=((r22)*(sj5));
IkReal x3007=((cj5)*(x3002));
IkReal x3008=((cj5)*(x3001));
gconst19=IKsign(((((cj6)*(r21)*(x3004)))+(((x3003)*(x3008)))+(((x3003)*(x3007)))+(((IkReal(-1.00000000000000))*(sj6)*(x3005)*(x3006)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x3006)))+(((r20)*(sj6)*(x3004)))+(((IkReal(-1.00000000000000))*(r21)*(x3005)*(x3008)))+(((IkReal(-1.00000000000000))*(r21)*(x3005)*(x3007)))));
IkReal x3009=(cj6)*(cj6);
IkReal x3010=(sj6)*(sj6);
IkReal x3011=((r11)*(r20));
IkReal x3012=((r12)*(sj5));
IkReal x3013=((IkReal(1.00000000000000))*(r10));
IkReal x3014=((r22)*(sj5));
IkReal x3015=((cj5)*(x3010));
IkReal x3016=((cj5)*(x3009));
dummyeval[0]=((((x3011)*(x3016)))+(((x3011)*(x3015)))+(((IkReal(-1.00000000000000))*(sj6)*(x3013)*(x3014)))+(((cj6)*(r21)*(x3012)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x3014)))+(((IkReal(-1.00000000000000))*(r21)*(x3013)*(x3015)))+(((IkReal(-1.00000000000000))*(r21)*(x3013)*(x3016)))+(((r20)*(sj6)*(x3012))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst20;
IkReal x3017=(cj5)*(cj5);
IkReal x3018=(r11)*(r11);
IkReal x3019=(sj6)*(sj6);
IkReal x3020=(cj6)*(cj6);
IkReal x3021=(r10)*(r10);
IkReal x3022=((r11)*(sj6));
IkReal x3023=((IkReal(1.00000000000000))*(x3019));
IkReal x3024=((IkReal(1.00000000000000))*(x3020));
IkReal x3025=((IkReal(2.00000000000000))*(cj6)*(r10));
IkReal x3026=((cj5)*(r12)*(sj5));
gconst20=IKsign(((((IkReal(-1.00000000000000))*(x3018)*(x3024)))+(((IkReal(-1.00000000000000))*(x3017)*(x3021)*(x3024)))+(((IkReal(-1.00000000000000))*(x3021)*(x3023)))+(((IkReal(-1.00000000000000))*((r12)*(r12))*((sj5)*(sj5))))+(((x3017)*(x3022)*(x3025)))+(((x3025)*(x3026)))+(((IkReal(-2.00000000000000))*(x3022)*(x3026)))+(((IkReal(-1.00000000000000))*(x3022)*(x3025)))+(((IkReal(-1.00000000000000))*(x3017)*(x3018)*(x3023)))));
IkReal x3027=(cj5)*(cj5);
IkReal x3028=(r11)*(r11);
IkReal x3029=(sj6)*(sj6);
IkReal x3030=(cj6)*(cj6);
IkReal x3031=(r10)*(r10);
IkReal x3032=((r11)*(sj6));
IkReal x3033=((IkReal(1.00000000000000))*(x3029));
IkReal x3034=((IkReal(1.00000000000000))*(x3030));
IkReal x3035=((IkReal(2.00000000000000))*(cj6)*(r10));
IkReal x3036=((cj5)*(r12)*(sj5));
dummyeval[0]=((((x3027)*(x3032)*(x3035)))+(((IkReal(-1.00000000000000))*(x3027)*(x3028)*(x3033)))+(((IkReal(-1.00000000000000))*((r12)*(r12))*((sj5)*(sj5))))+(((x3035)*(x3036)))+(((IkReal(-2.00000000000000))*(x3032)*(x3036)))+(((IkReal(-1.00000000000000))*(x3028)*(x3034)))+(((IkReal(-1.00000000000000))*(x3032)*(x3035)))+(((IkReal(-1.00000000000000))*(x3031)*(x3033)))+(((IkReal(-1.00000000000000))*(x3027)*(x3031)*(x3034))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3037=((IkReal(1.00000000000000))*(r10));
if( IKabs(((gconst20)*(((((IkReal(-1.00000000000000))*(cj5)*(cj6)*(x3037)))+(((cj5)*(r11)*(sj6)))+(((r12)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst20)*(((((IkReal(-1.00000000000000))*(sj6)*(x3037)))+(((IkReal(-1.00000000000000))*(cj6)*(r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst20)*(((((IkReal(-1.00000000000000))*(cj5)*(cj6)*(x3037)))+(((cj5)*(r11)*(sj6)))+(((r12)*(sj5)))))), ((gconst20)*(((((IkReal(-1.00000000000000))*(sj6)*(x3037)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3038=IKsin(j4);
IkReal x3039=IKcos(j4);
IkReal x3040=((IkReal(1.00000000000000))*(r00));
IkReal x3041=((cj5)*(r01));
IkReal x3042=((cj5)*(r11));
IkReal x3043=((IkReal(1.00000000000000))*(cj5));
IkReal x3044=((cj5)*(r21));
IkReal x3045=((sj5)*(x3038));
IkReal x3046=((cj6)*(x3038));
IkReal x3047=((sj6)*(x3039));
IkReal x3048=((sj6)*(x3038));
IkReal x3049=((sj5)*(x3039));
IkReal x3050=((cj6)*(x3039));
evalcond[0]=((((r22)*(x3045)))+(((IkReal(-1.00000000000000))*(r20)*(x3043)*(x3046)))+(((IkReal(-1.00000000000000))*(r21)*(x3050)))+(((IkReal(-1.00000000000000))*(r20)*(x3047)))+(((x3044)*(x3048))));
evalcond[1]=((((r22)*(x3049)))+(((r21)*(x3046)))+(((r20)*(x3048)))+(((IkReal(-1.00000000000000))*(r20)*(x3043)*(x3050)))+(((x3044)*(x3047)))+(((IkReal(-1.00000000000000))*(cj3))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x3050)))+(((IkReal(-1.00000000000000))*(cj5)*(x3040)*(x3046)))+(((r02)*(x3045)))+(((IkReal(-1.00000000000000))*(x3040)*(x3047)))+(((x3041)*(x3048))));
evalcond[3]=((IkReal(1.00000000000000))+(((x3042)*(x3048)))+(((IkReal(-1.00000000000000))*(r11)*(x3050)))+(((IkReal(-1.00000000000000))*(r10)*(x3047)))+(((IkReal(-1.00000000000000))*(r10)*(x3043)*(x3046)))+(((r12)*(x3045))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj5)*(x3040)*(x3050)))+(((IkReal(-1.00000000000000))*(sj3)))+(((r02)*(x3049)))+(((r00)*(x3048)))+(((x3041)*(x3047)))+(((r01)*(x3046))));
evalcond[5]=((((x3042)*(x3047)))+(((r10)*(x3048)))+(((IkReal(-1.00000000000000))*(r10)*(x3043)*(x3050)))+(((r12)*(x3049)))+(((r11)*(x3046))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3051=((cj3)*(sj6));
IkReal x3052=((IkReal(1.00000000000000))*(r10));
IkReal x3053=((cj3)*(cj6));
if( IKabs(((gconst19)*(((((cj3)*(r12)*(sj5)))+(((cj5)*(r11)*(x3051)))+(((IkReal(-1.00000000000000))*(cj5)*(x3052)*(x3053))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst19)*(((((IkReal(-1.00000000000000))*(x3051)*(x3052)))+(((IkReal(-1.00000000000000))*(r11)*(x3053))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst19)*(((((cj3)*(r12)*(sj5)))+(((cj5)*(r11)*(x3051)))+(((IkReal(-1.00000000000000))*(cj5)*(x3052)*(x3053)))))), ((gconst19)*(((((IkReal(-1.00000000000000))*(x3051)*(x3052)))+(((IkReal(-1.00000000000000))*(r11)*(x3053)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3054=IKsin(j4);
IkReal x3055=IKcos(j4);
IkReal x3056=((IkReal(1.00000000000000))*(r00));
IkReal x3057=((cj5)*(r01));
IkReal x3058=((cj5)*(r11));
IkReal x3059=((IkReal(1.00000000000000))*(cj5));
IkReal x3060=((cj5)*(r21));
IkReal x3061=((sj5)*(x3054));
IkReal x3062=((cj6)*(x3054));
IkReal x3063=((sj6)*(x3055));
IkReal x3064=((sj6)*(x3054));
IkReal x3065=((sj5)*(x3055));
IkReal x3066=((cj6)*(x3055));
evalcond[0]=((((r22)*(x3061)))+(((IkReal(-1.00000000000000))*(r21)*(x3066)))+(((IkReal(-1.00000000000000))*(r20)*(x3063)))+(((IkReal(-1.00000000000000))*(r20)*(x3059)*(x3062)))+(((x3060)*(x3064))));
evalcond[1]=((((r22)*(x3065)))+(((r20)*(x3064)))+(((IkReal(-1.00000000000000))*(r20)*(x3059)*(x3066)))+(((x3060)*(x3063)))+(((IkReal(-1.00000000000000))*(cj3)))+(((r21)*(x3062))));
evalcond[2]=((((x3057)*(x3064)))+(((IkReal(-1.00000000000000))*(r01)*(x3066)))+(((IkReal(-1.00000000000000))*(cj5)*(x3056)*(x3062)))+(((r02)*(x3061)))+(((IkReal(-1.00000000000000))*(x3056)*(x3063))));
evalcond[3]=((IkReal(1.00000000000000))+(((x3058)*(x3064)))+(((IkReal(-1.00000000000000))*(r10)*(x3059)*(x3062)))+(((r12)*(x3061)))+(((IkReal(-1.00000000000000))*(r10)*(x3063)))+(((IkReal(-1.00000000000000))*(r11)*(x3066))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj3)))+(((r00)*(x3064)))+(((r01)*(x3062)))+(((x3057)*(x3063)))+(((IkReal(-1.00000000000000))*(cj5)*(x3056)*(x3066)))+(((r02)*(x3065))));
evalcond[5]=((((x3058)*(x3063)))+(((r11)*(x3062)))+(((r10)*(x3064)))+(((IkReal(-1.00000000000000))*(r10)*(x3059)*(x3066)))+(((r12)*(x3065))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3067=((cj6)*(sj5));
IkReal x3068=((sj5)*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(r20)*(x3067)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))+(((r21)*(x3068))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)))+(((r10)*(x3067)))+(((IkReal(-1.00000000000000))*(r11)*(x3068))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r20)*(x3067)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))+(((r21)*(x3068)))))+IKsqr(((((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)))+(((r10)*(x3067)))+(((IkReal(-1.00000000000000))*(r11)*(x3068)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r20)*(x3067)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))+(((r21)*(x3068)))), ((((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)))+(((r10)*(x3067)))+(((IkReal(-1.00000000000000))*(r11)*(x3068)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x3069=IKcos(j3);
IkReal x3070=((cj6)*(sj5));
IkReal x3071=((IkReal(1.00000000000000))*(sj5)*(sj6));
evalcond[0]=((((cj5)*(r22)))+(IKsin(j3))+(((r20)*(x3070)))+(((IkReal(-1.00000000000000))*(r21)*(x3071))));
evalcond[1]=((((r00)*(x3070)))+(((IkReal(-1.00000000000000))*(r01)*(x3071)))+(((sj1)*(x3069)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((r10)*(x3070)))+(((IkReal(-1.00000000000000))*(r11)*(x3071)))+(((IkReal(-1.00000000000000))*(cj1)*(x3069))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst11;
IkReal x3072=(cj5)*(cj5);
IkReal x3073=(r21)*(r21);
IkReal x3074=(sj6)*(sj6);
IkReal x3075=(cj6)*(cj6);
IkReal x3076=(r20)*(r20);
IkReal x3077=((cj6)*(r20));
IkReal x3078=((IkReal(1.00000000000000))*(x3075));
IkReal x3079=((IkReal(2.00000000000000))*(r21)*(sj6));
IkReal x3080=((cj5)*(r22)*(sj5));
IkReal x3081=((IkReal(1.00000000000000))*(x3074));
gconst11=IKsign(((((IkReal(-1.00000000000000))*(x3079)*(x3080)))+(((IkReal(2.00000000000000))*(x3077)*(x3080)))+(((x3072)*(x3077)*(x3079)))+(((IkReal(-1.00000000000000))*(x3073)*(x3078)))+(((IkReal(-1.00000000000000))*(x3076)*(x3081)))+(((IkReal(-1.00000000000000))*(x3072)*(x3073)*(x3081)))+(((IkReal(-1.00000000000000))*((r22)*(r22))*((sj5)*(sj5))))+(((IkReal(-1.00000000000000))*(x3072)*(x3076)*(x3078)))+(((IkReal(-1.00000000000000))*(x3077)*(x3079)))));
IkReal x3082=(cj5)*(cj5);
IkReal x3083=(r21)*(r21);
IkReal x3084=(sj6)*(sj6);
IkReal x3085=(cj6)*(cj6);
IkReal x3086=(r20)*(r20);
IkReal x3087=((cj6)*(r20));
IkReal x3088=((IkReal(1.00000000000000))*(x3085));
IkReal x3089=((IkReal(2.00000000000000))*(r21)*(sj6));
IkReal x3090=((cj5)*(r22)*(sj5));
IkReal x3091=((IkReal(1.00000000000000))*(x3084));
dummyeval[0]=((((IkReal(2.00000000000000))*(x3087)*(x3090)))+(((IkReal(-1.00000000000000))*(x3083)*(x3088)))+(((IkReal(-1.00000000000000))*(x3082)*(x3083)*(x3091)))+(((IkReal(-1.00000000000000))*(x3089)*(x3090)))+(((x3082)*(x3087)*(x3089)))+(((IkReal(-1.00000000000000))*(x3082)*(x3086)*(x3088)))+(((IkReal(-1.00000000000000))*(x3086)*(x3091)))+(((IkReal(-1.00000000000000))*((r22)*(r22))*((sj5)*(sj5))))+(((IkReal(-1.00000000000000))*(x3087)*(x3089))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
IkReal x3092=(cj5)*(cj5);
IkReal x3093=(sj6)*(sj6);
IkReal x3094=(cj6)*(cj6);
IkReal x3095=((r00)*(r20));
IkReal x3096=((cj5)*(sj5));
IkReal x3097=((r01)*(r21));
IkReal x3098=((r21)*(sj6));
IkReal x3099=((sj6)*(x3096));
IkReal x3100=((IkReal(1.00000000000000))*(cj6)*(r00));
IkReal x3101=((cj6)*(r01)*(r20)*(sj6));
gconst12=IKsign(((x3101)+(((x3092)*(x3094)*(x3095)))+(((IkReal(-1.00000000000000))*(r22)*(x3096)*(x3100)))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(r20)*(x3096)))+(((cj6)*(r00)*(x3098)))+(((r01)*(r22)*(x3099)))+(((r02)*(r22)*((sj5)*(sj5))))+(((IkReal(-1.00000000000000))*(x3092)*(x3101)))+(((x3093)*(x3095)))+(((IkReal(-1.00000000000000))*(x3092)*(x3098)*(x3100)))+(((x3094)*(x3097)))+(((x3092)*(x3093)*(x3097)))+(((r02)*(x3096)*(x3098)))));
IkReal x3102=(cj5)*(cj5);
IkReal x3103=(sj6)*(sj6);
IkReal x3104=(cj6)*(cj6);
IkReal x3105=((r00)*(r20));
IkReal x3106=((cj5)*(sj5));
IkReal x3107=((r01)*(r21));
IkReal x3108=((r21)*(sj6));
IkReal x3109=((sj6)*(x3106));
IkReal x3110=((IkReal(1.00000000000000))*(cj6)*(r00));
IkReal x3111=x3101;
dummyeval[0]=((x3111)+(((r02)*(x3106)*(x3108)))+(((IkReal(-1.00000000000000))*(r22)*(x3106)*(x3110)))+(((r01)*(r22)*(x3109)))+(((cj6)*(r00)*(x3108)))+(((x3103)*(x3105)))+(((x3102)*(x3103)*(x3107)))+(((r02)*(r22)*((sj5)*(sj5))))+(((IkReal(-1.00000000000000))*(x3102)*(x3108)*(x3110)))+(((IkReal(-1.00000000000000))*(x3102)*(x3111)))+(((x3102)*(x3104)*(x3105)))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(r20)*(x3106)))+(((x3104)*(x3107))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3112=((IkReal(1.00000000000000))*(sj1)*(sj3));
if( IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x3112)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x3112))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(r22)*(sj5)*(x3112)))+(((cj5)*(cj6)*(r20)*(sj1)*(sj3)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(sj6)*(x3112))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst12)*(((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x3112)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x3112)))))), ((gconst12)*(((((IkReal(-1.00000000000000))*(r22)*(sj5)*(x3112)))+(((cj5)*(cj6)*(r20)*(sj1)*(sj3)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(sj6)*(x3112)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3113=IKsin(j4);
IkReal x3114=IKcos(j4);
IkReal x3115=((IkReal(1.00000000000000))*(r00));
IkReal x3116=((cj5)*(r01));
IkReal x3117=((cj5)*(r11));
IkReal x3118=((IkReal(1.00000000000000))*(cj5));
IkReal x3119=((IkReal(1.00000000000000))*(cj1));
IkReal x3120=((cj5)*(r21));
IkReal x3121=((sj5)*(x3113));
IkReal x3122=((cj6)*(x3113));
IkReal x3123=((sj6)*(x3114));
IkReal x3124=((sj6)*(x3113));
IkReal x3125=((sj5)*(x3114));
IkReal x3126=((cj6)*(x3114));
evalcond[0]=((((x3120)*(x3124)))+(((IkReal(-1.00000000000000))*(r20)*(x3123)))+(((IkReal(-1.00000000000000))*(r20)*(x3118)*(x3122)))+(((r22)*(x3121)))+(((IkReal(-1.00000000000000))*(r21)*(x3126))));
evalcond[1]=((((x3120)*(x3123)))+(((r20)*(x3124)))+(((IkReal(-1.00000000000000))*(r20)*(x3118)*(x3126)))+(((r21)*(x3122)))+(((r22)*(x3125)))+(((IkReal(-1.00000000000000))*(cj3))));
evalcond[2]=((((x3116)*(x3124)))+(((IkReal(-1.00000000000000))*(x3119)))+(((IkReal(-1.00000000000000))*(x3115)*(x3123)))+(((IkReal(-1.00000000000000))*(cj5)*(x3115)*(x3122)))+(((r02)*(x3121)))+(((IkReal(-1.00000000000000))*(r01)*(x3126))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x3118)*(x3122)))+(((IkReal(-1.00000000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(r11)*(x3126)))+(((IkReal(-1.00000000000000))*(r10)*(x3123)))+(((r12)*(x3121)))+(((x3117)*(x3124))));
evalcond[4]=((((x3116)*(x3123)))+(((r00)*(x3124)))+(((r01)*(x3122)))+(((sj1)*(sj3)))+(((IkReal(-1.00000000000000))*(cj5)*(x3115)*(x3126)))+(((r02)*(x3125))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x3118)*(x3126)))+(((r10)*(x3124)))+(((r12)*(x3125)))+(((r11)*(x3122)))+(((x3117)*(x3123)))+(((IkReal(-1.00000000000000))*(sj3)*(x3119))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3127=((cj3)*(cj6));
IkReal x3128=((IkReal(1.00000000000000))*(r21));
IkReal x3129=((cj3)*(sj6));
if( IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(r20)*(x3129)))+(((IkReal(-1.00000000000000))*(x3127)*(x3128))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((cj5)*(r20)*(x3127)))+(((IkReal(-1.00000000000000))*(cj5)*(x3128)*(x3129)))+(((IkReal(-1.00000000000000))*(cj3)*(r22)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst11)*(((((IkReal(-1.00000000000000))*(r20)*(x3129)))+(((IkReal(-1.00000000000000))*(x3127)*(x3128)))))), ((gconst11)*(((((cj5)*(r20)*(x3127)))+(((IkReal(-1.00000000000000))*(cj5)*(x3128)*(x3129)))+(((IkReal(-1.00000000000000))*(cj3)*(r22)*(sj5)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3130=IKsin(j4);
IkReal x3131=IKcos(j4);
IkReal x3132=((IkReal(1.00000000000000))*(r00));
IkReal x3133=((cj5)*(r01));
IkReal x3134=((cj5)*(r11));
IkReal x3135=((IkReal(1.00000000000000))*(cj5));
IkReal x3136=((IkReal(1.00000000000000))*(cj1));
IkReal x3137=((cj5)*(r21));
IkReal x3138=((sj5)*(x3130));
IkReal x3139=((cj6)*(x3130));
IkReal x3140=((sj6)*(x3131));
IkReal x3141=((sj6)*(x3130));
IkReal x3142=((sj5)*(x3131));
IkReal x3143=((cj6)*(x3131));
evalcond[0]=((((r22)*(x3138)))+(((IkReal(-1.00000000000000))*(r21)*(x3143)))+(((x3137)*(x3141)))+(((IkReal(-1.00000000000000))*(r20)*(x3140)))+(((IkReal(-1.00000000000000))*(r20)*(x3135)*(x3139))));
evalcond[1]=((((r22)*(x3142)))+(((r21)*(x3139)))+(((r20)*(x3141)))+(((IkReal(-1.00000000000000))*(r20)*(x3135)*(x3143)))+(((x3137)*(x3140)))+(((IkReal(-1.00000000000000))*(cj3))));
evalcond[2]=((((r02)*(x3138)))+(((x3133)*(x3141)))+(((IkReal(-1.00000000000000))*(x3132)*(x3140)))+(((IkReal(-1.00000000000000))*(x3136)))+(((IkReal(-1.00000000000000))*(cj5)*(x3132)*(x3139)))+(((IkReal(-1.00000000000000))*(r01)*(x3143))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(r10)*(x3140)))+(((r12)*(x3138)))+(((IkReal(-1.00000000000000))*(r10)*(x3135)*(x3139)))+(((x3134)*(x3141)))+(((IkReal(-1.00000000000000))*(r11)*(x3143))));
evalcond[4]=((((r01)*(x3139)))+(((r02)*(x3142)))+(((sj1)*(sj3)))+(((r00)*(x3141)))+(((x3133)*(x3140)))+(((IkReal(-1.00000000000000))*(cj5)*(x3132)*(x3143))));
evalcond[5]=((((r10)*(x3141)))+(((r12)*(x3142)))+(((IkReal(-1.00000000000000))*(sj3)*(x3136)))+(((IkReal(-1.00000000000000))*(r10)*(x3135)*(x3143)))+(((r11)*(x3139)))+(((x3134)*(x3140))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3144=((cj6)*(sj1));
IkReal x3145=((IkReal(1.00000000000000))*(sj1)*(sj6));
if( IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(r20)*(x3145)))+(((IkReal(-1.00000000000000))*(r21)*(x3144))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3145)))+(((IkReal(-1.00000000000000))*(r22)*(sj1)*(sj5)))+(((cj5)*(r20)*(x3144))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst10)*(((((IkReal(-1.00000000000000))*(r20)*(x3145)))+(((IkReal(-1.00000000000000))*(r21)*(x3144)))))), ((gconst10)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3145)))+(((IkReal(-1.00000000000000))*(r22)*(sj1)*(sj5)))+(((cj5)*(r20)*(x3144)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x3146=IKsin(j4);
IkReal x3147=IKcos(j4);
IkReal x3148=((IkReal(1.00000000000000))*(cj6));
IkReal x3149=((sj5)*(x3146));
IkReal x3150=((cj5)*(x3146));
IkReal x3151=((IkReal(1.00000000000000))*(sj6)*(x3147));
evalcond[0]=((((r22)*(x3149)))+(((IkReal(-1.00000000000000))*(r20)*(x3148)*(x3150)))+(((IkReal(-1.00000000000000))*(r21)*(x3147)*(x3148)))+(((IkReal(-1.00000000000000))*(r20)*(x3151)))+(((r21)*(sj6)*(x3150))));
evalcond[1]=((((r02)*(x3149)))+(((r01)*(sj6)*(x3150)))+(((IkReal(-1.00000000000000))*(r00)*(x3148)*(x3150)))+(((IkReal(-1.00000000000000))*(r01)*(x3147)*(x3148)))+(((IkReal(-1.00000000000000))*(r00)*(x3151)))+(((IkReal(-1.00000000000000))*(cj1))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj1)))+(((r12)*(x3149)))+(((IkReal(-1.00000000000000))*(r10)*(x3148)*(x3150)))+(((IkReal(-1.00000000000000))*(r11)*(x3147)*(x3148)))+(((r11)*(sj6)*(x3150)))+(((IkReal(-1.00000000000000))*(r10)*(x3151))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3152=((cj4)*(cj5));
IkReal x3153=((r21)*(sj6));
IkReal x3154=((IkReal(1.00000000000000))*(cj6)*(r20));
if( IKabs(((((sj5)*(x3153)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x3154))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((r20)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(x3152)*(x3154)))+(((x3152)*(x3153))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj5)*(x3153)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x3154)))))+IKsqr(((((cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((r20)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(x3152)*(x3154)))+(((x3152)*(x3153)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((sj5)*(x3153)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x3154)))), ((((cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((r20)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(x3152)*(x3154)))+(((x3152)*(x3153)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x3155=IKcos(j3);
IkReal x3156=IKsin(j3);
IkReal x3157=((r11)*(sj6));
IkReal x3158=((IkReal(1.00000000000000))*(sj5));
IkReal x3159=((IkReal(1.00000000000000))*(cj1));
IkReal x3160=((cj6)*(sj4));
IkReal x3161=((sj4)*(sj6));
IkReal x3162=((cj4)*(sj5));
IkReal x3163=((cj4)*(cj5));
IkReal x3164=((r01)*(sj6));
IkReal x3165=((r21)*(sj6));
IkReal x3166=((cj6)*(sj5));
IkReal x3167=((IkReal(1.00000000000000))*(cj6)*(x3163));
evalcond[0]=((x3156)+(((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(x3158)*(x3165)))+(((r20)*(x3166))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3158)*(x3164)))+(((sj1)*(x3155)))+(((r00)*(x3166)))+(((cj5)*(r02))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3157)*(x3158)))+(((cj5)*(r12)))+(((r10)*(x3166)))+(((IkReal(-1.00000000000000))*(x3155)*(x3159))));
evalcond[3]=((((r22)*(x3162)))+(((IkReal(-1.00000000000000))*(x3155)))+(((x3163)*(x3165)))+(((r20)*(x3161)))+(((r21)*(x3160)))+(((IkReal(-1.00000000000000))*(r20)*(x3167))));
evalcond[4]=((((r02)*(x3162)))+(((x3163)*(x3164)))+(((sj1)*(x3156)))+(((r01)*(x3160)))+(((r00)*(x3161)))+(((IkReal(-1.00000000000000))*(r00)*(x3167))));
evalcond[5]=((((r11)*(x3160)))+(((r10)*(x3161)))+(((r12)*(x3162)))+(((IkReal(-1.00000000000000))*(x3156)*(x3159)))+(((IkReal(-1.00000000000000))*(r10)*(x3167)))+(((x3157)*(x3163))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3168=((cj1)*(cj6));
IkReal x3169=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(r20)*(sj6)*(x3169)))+(((IkReal(-1.00000000000000))*(r21)*(x3168))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(r22)*(sj5)*(x3169)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(sj6)*(x3169)))+(((cj5)*(r20)*(x3168))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst9)*(((((IkReal(-1.00000000000000))*(r20)*(sj6)*(x3169)))+(((IkReal(-1.00000000000000))*(r21)*(x3168)))))), ((gconst9)*(((((IkReal(-1.00000000000000))*(r22)*(sj5)*(x3169)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(sj6)*(x3169)))+(((cj5)*(r20)*(x3168)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x3170=IKsin(j4);
IkReal x3171=IKcos(j4);
IkReal x3172=((IkReal(1.00000000000000))*(cj6));
IkReal x3173=((sj5)*(x3170));
IkReal x3174=((cj5)*(x3170));
IkReal x3175=((IkReal(1.00000000000000))*(sj6)*(x3171));
evalcond[0]=((((r21)*(sj6)*(x3174)))+(((r22)*(x3173)))+(((IkReal(-1.00000000000000))*(r21)*(x3171)*(x3172)))+(((IkReal(-1.00000000000000))*(r20)*(x3175)))+(((IkReal(-1.00000000000000))*(r20)*(x3172)*(x3174))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(x3172)*(x3174)))+(((IkReal(-1.00000000000000))*(r01)*(x3171)*(x3172)))+(((IkReal(-1.00000000000000))*(r00)*(x3175)))+(((r01)*(sj6)*(x3174)))+(((r02)*(x3173)))+(((IkReal(-1.00000000000000))*(cj1))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r11)*(x3171)*(x3172)))+(((IkReal(-1.00000000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(r10)*(x3175)))+(((IkReal(-1.00000000000000))*(r10)*(x3172)*(x3174)))+(((r11)*(sj6)*(x3174)))+(((r12)*(x3173))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3176=((cj4)*(cj5));
IkReal x3177=((r21)*(sj6));
IkReal x3178=((IkReal(1.00000000000000))*(cj6)*(r20));
if( IKabs(((((IkReal(-1.00000000000000))*(sj5)*(x3178)))+(((sj5)*(x3177)))+(((IkReal(-1.00000000000000))*(cj5)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((x3176)*(x3177)))+(((IkReal(-1.00000000000000))*(x3176)*(x3178)))+(((r20)*(sj4)*(sj6))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(sj5)*(x3178)))+(((sj5)*(x3177)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))))+IKsqr(((((cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((x3176)*(x3177)))+(((IkReal(-1.00000000000000))*(x3176)*(x3178)))+(((r20)*(sj4)*(sj6)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(sj5)*(x3178)))+(((sj5)*(x3177)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))), ((((cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((x3176)*(x3177)))+(((IkReal(-1.00000000000000))*(x3176)*(x3178)))+(((r20)*(sj4)*(sj6)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x3179=IKcos(j3);
IkReal x3180=IKsin(j3);
IkReal x3181=((r11)*(sj6));
IkReal x3182=((IkReal(1.00000000000000))*(sj5));
IkReal x3183=((IkReal(1.00000000000000))*(cj1));
IkReal x3184=((cj6)*(sj4));
IkReal x3185=((sj4)*(sj6));
IkReal x3186=((cj4)*(sj5));
IkReal x3187=((cj4)*(cj5));
IkReal x3188=((r01)*(sj6));
IkReal x3189=((r21)*(sj6));
IkReal x3190=((cj6)*(sj5));
IkReal x3191=((IkReal(1.00000000000000))*(cj6)*(x3187));
evalcond[0]=((x3180)+(((cj5)*(r22)))+(((r20)*(x3190)))+(((IkReal(-1.00000000000000))*(x3182)*(x3189))));
evalcond[1]=((((sj1)*(x3179)))+(((r00)*(x3190)))+(((IkReal(-1.00000000000000))*(x3182)*(x3188)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x3179)*(x3183)))+(((IkReal(-1.00000000000000))*(x3181)*(x3182)))+(((r10)*(x3190))));
evalcond[3]=((((r22)*(x3186)))+(((IkReal(-1.00000000000000))*(x3179)))+(((r20)*(x3185)))+(((IkReal(-1.00000000000000))*(r20)*(x3191)))+(((x3187)*(x3189)))+(((r21)*(x3184))));
evalcond[4]=((((r01)*(x3184)))+(((r00)*(x3185)))+(((sj1)*(x3180)))+(((x3187)*(x3188)))+(((IkReal(-1.00000000000000))*(r00)*(x3191)))+(((r02)*(x3186))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x3180)*(x3183)))+(((IkReal(-1.00000000000000))*(r10)*(x3191)))+(((r12)*(x3186)))+(((r11)*(x3184)))+(((x3181)*(x3187)))+(((r10)*(x3185))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

} else
{
IkReal x3192=((IkReal(0.390000000000000))*(sj5));
IkReal x3193=((IkReal(0.390000000000000))*(cj5));
IkReal x3194=((IkReal(0.000500000000000000))*(cj6));
IkReal x3195=((IkReal(0.000500000000000000))*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((r21)*(x3194)))+(((IkReal(-1.00000000000000))*(r21)*(sj6)*(x3192)))+(((r20)*(x3195)))+(((IkReal(-1.00000000000000))*(pz)))+(((r22)*(x3193)))+(((cj6)*(r20)*(x3192))));
evalcond[2]=((((r00)*(x3195)))+(((IkReal(0.00200000000000000))*(cj1)))+(((r01)*(x3194)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x3192)))+(((IkReal(-1.00000000000000))*(px)))+(((cj6)*(r00)*(x3192)))+(((r02)*(x3193)))+(((IkReal(-0.400000000000000))*(sj1))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(sj6)*(x3192)))+(((IkReal(0.400000000000000))*(cj1)))+(((r11)*(x3194)))+(((IkReal(0.00200000000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(py)))+(((r12)*(x3193)))+(((cj6)*(r10)*(x3192)))+(((r10)*(x3195))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst21;
IkReal x3196=(cj6)*(cj6);
IkReal x3197=(sj6)*(sj6);
IkReal x3198=((r01)*(r20));
IkReal x3199=((r02)*(sj5));
IkReal x3200=((cj5)*(x3197));
IkReal x3201=((IkReal(1.00000000000000))*(r22)*(sj5));
IkReal x3202=((IkReal(1.00000000000000))*(r00)*(r21));
IkReal x3203=((cj5)*(x3196));
gconst21=IKsign(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x3201)))+(((r20)*(sj6)*(x3199)))+(((x3198)*(x3200)))+(((x3198)*(x3203)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x3201)))+(((IkReal(-1.00000000000000))*(x3200)*(x3202)))+(((IkReal(-1.00000000000000))*(x3202)*(x3203)))+(((cj6)*(r21)*(x3199)))));
IkReal x3204=(cj6)*(cj6);
IkReal x3205=(sj6)*(sj6);
IkReal x3206=((r01)*(r20));
IkReal x3207=((r02)*(sj5));
IkReal x3208=((cj5)*(x3205));
IkReal x3209=((IkReal(1.00000000000000))*(r22)*(sj5));
IkReal x3210=((IkReal(1.00000000000000))*(r00)*(r21));
IkReal x3211=((cj5)*(x3204));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x3209)))+(((r20)*(sj6)*(x3207)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x3209)))+(((x3206)*(x3208)))+(((x3206)*(x3211)))+(((IkReal(-1.00000000000000))*(x3210)*(x3211)))+(((IkReal(-1.00000000000000))*(x3208)*(x3210)))+(((cj6)*(r21)*(x3207))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst22;
IkReal x3212=(cj6)*(cj6);
IkReal x3213=(sj6)*(sj6);
IkReal x3214=((r11)*(r20));
IkReal x3215=((r12)*(sj5));
IkReal x3216=((IkReal(1.00000000000000))*(r10));
IkReal x3217=((r22)*(sj5));
IkReal x3218=((cj5)*(x3213));
IkReal x3219=((cj5)*(x3212));
gconst22=IKsign(((((cj6)*(r21)*(x3215)))+(((IkReal(-1.00000000000000))*(r21)*(x3216)*(x3219)))+(((IkReal(-1.00000000000000))*(r21)*(x3216)*(x3218)))+(((x3214)*(x3219)))+(((x3214)*(x3218)))+(((IkReal(-1.00000000000000))*(sj6)*(x3216)*(x3217)))+(((r20)*(sj6)*(x3215)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x3217)))));
IkReal x3220=(cj6)*(cj6);
IkReal x3221=(sj6)*(sj6);
IkReal x3222=((r11)*(r20));
IkReal x3223=((r12)*(sj5));
IkReal x3224=((IkReal(1.00000000000000))*(r10));
IkReal x3225=((r22)*(sj5));
IkReal x3226=((cj5)*(x3221));
IkReal x3227=((cj5)*(x3220));
dummyeval[0]=((((x3222)*(x3227)))+(((x3222)*(x3226)))+(((r20)*(sj6)*(x3223)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x3225)))+(((IkReal(-1.00000000000000))*(sj6)*(x3224)*(x3225)))+(((IkReal(-1.00000000000000))*(r21)*(x3224)*(x3226)))+(((IkReal(-1.00000000000000))*(r21)*(x3224)*(x3227)))+(((cj6)*(r21)*(x3223))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj1;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x3228=((IkReal(0.000500000000000000))*(cj6));
IkReal x3229=((IkReal(0.000500000000000000))*(sj6));
IkReal x3230=((sj5)*(sj6));
IkReal x3231=((cj5)*(r12));
IkReal x3232=((IkReal(0.390000000000000))*(cj5));
IkReal x3233=((IkReal(0.390000000000000))*(cj6)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((cj6)*(r10)*(sj5)))+(x3231)+(((IkReal(-1.00000000000000))*(r11)*(x3230))));
evalcond[2]=((((IkReal(-0.390000000000000))*(r21)*(x3230)))+(((r22)*(x3232)))+(((r20)*(x3233)))+(((r21)*(x3228)))+(((IkReal(-1.00000000000000))*(pz)))+(((r20)*(x3229))));
evalcond[3]=((IkReal(-0.400000000000000))+(((IkReal(-0.390000000000000))*(r01)*(x3230)))+(((r00)*(x3233)))+(((r01)*(x3228)))+(((IkReal(-1.00000000000000))*(px)))+(((r00)*(x3229)))+(((r02)*(x3232))));
evalcond[4]=((IkReal(0.00200000000000000))+(((r10)*(x3229)))+(((r11)*(x3228)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.390000000000000))*(x3231)))+(((IkReal(-0.390000000000000))*(r11)*(x3230)))+(((r10)*(x3233))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3234=((cj6)*(sj5));
IkReal x3235=((sj5)*(sj6));
if( IKabs(((((cj5)*(r22)))+(((r20)*(x3234)))+(((IkReal(-1.00000000000000))*(r21)*(x3235))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r01)*(x3235)))+(((IkReal(-1.00000000000000))*(cj5)*(r02)))+(((IkReal(-1.00000000000000))*(r00)*(x3234))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj5)*(r22)))+(((r20)*(x3234)))+(((IkReal(-1.00000000000000))*(r21)*(x3235)))))+IKsqr(((((r01)*(x3235)))+(((IkReal(-1.00000000000000))*(cj5)*(r02)))+(((IkReal(-1.00000000000000))*(r00)*(x3234)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((cj5)*(r22)))+(((r20)*(x3234)))+(((IkReal(-1.00000000000000))*(r21)*(x3235)))), ((((r01)*(x3235)))+(((IkReal(-1.00000000000000))*(cj5)*(r02)))+(((IkReal(-1.00000000000000))*(r00)*(x3234)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[2];
IkReal x3236=((cj6)*(sj5));
IkReal x3237=((IkReal(1.00000000000000))*(sj5)*(sj6));
evalcond[0]=((((cj5)*(r22)))+(((r20)*(x3236)))+(((IkReal(-1.00000000000000))*(IKsin(j3))))+(((IkReal(-1.00000000000000))*(r21)*(x3237))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x3237)))+(((r00)*(x3236)))+(IKcos(j3))+(((cj5)*(r02))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst27;
IkReal x3238=(sj6)*(sj6);
IkReal x3239=(cj6)*(cj6);
IkReal x3240=((cj6)*(sj5));
IkReal x3241=((r10)*(r21));
IkReal x3242=((IkReal(1.00000000000000))*(r12));
IkReal x3243=((sj5)*(sj6));
IkReal x3244=((cj5)*(x3239));
IkReal x3245=((IkReal(1.00000000000000))*(r11)*(r20));
IkReal x3246=((cj5)*(x3238));
gconst27=IKsign(((((r10)*(r22)*(x3243)))+(((IkReal(-1.00000000000000))*(r21)*(x3240)*(x3242)))+(((r11)*(r22)*(x3240)))+(((IkReal(-1.00000000000000))*(x3244)*(x3245)))+(((IkReal(-1.00000000000000))*(x3245)*(x3246)))+(((x3241)*(x3244)))+(((x3241)*(x3246)))+(((IkReal(-1.00000000000000))*(r20)*(x3242)*(x3243)))));
IkReal x3247=(sj6)*(sj6);
IkReal x3248=(cj6)*(cj6);
IkReal x3249=((cj6)*(sj5));
IkReal x3250=((r10)*(r21));
IkReal x3251=((IkReal(1.00000000000000))*(r12));
IkReal x3252=((sj5)*(sj6));
IkReal x3253=((cj5)*(x3248));
IkReal x3254=((IkReal(1.00000000000000))*(r11)*(r20));
IkReal x3255=((cj5)*(x3247));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x3254)*(x3255)))+(((IkReal(-1.00000000000000))*(x3253)*(x3254)))+(((r11)*(r22)*(x3249)))+(((IkReal(-1.00000000000000))*(r21)*(x3249)*(x3251)))+(((x3250)*(x3255)))+(((x3250)*(x3253)))+(((r10)*(r22)*(x3252)))+(((IkReal(-1.00000000000000))*(r20)*(x3251)*(x3252))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst28;
IkReal x3256=(sj6)*(sj6);
IkReal x3257=(cj6)*(cj6);
IkReal x3258=((r01)*(r10));
IkReal x3259=((IkReal(1.00000000000000))*(r00));
IkReal x3260=((r02)*(sj5));
IkReal x3261=((r12)*(sj5));
IkReal x3262=((cj5)*(x3256));
IkReal x3263=((cj5)*(x3257));
gconst28=IKsign(((((IkReal(-1.00000000000000))*(r11)*(x3259)*(x3262)))+(((IkReal(-1.00000000000000))*(r11)*(x3259)*(x3263)))+(((r10)*(sj6)*(x3260)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x3261)))+(((cj6)*(r11)*(x3260)))+(((IkReal(-1.00000000000000))*(sj6)*(x3259)*(x3261)))+(((x3258)*(x3262)))+(((x3258)*(x3263)))));
IkReal x3264=(sj6)*(sj6);
IkReal x3265=(cj6)*(cj6);
IkReal x3266=((r01)*(r10));
IkReal x3267=((IkReal(1.00000000000000))*(r00));
IkReal x3268=((r02)*(sj5));
IkReal x3269=((r12)*(sj5));
IkReal x3270=((cj5)*(x3264));
IkReal x3271=((cj5)*(x3265));
dummyeval[0]=((((r10)*(sj6)*(x3268)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x3269)))+(((cj6)*(r11)*(x3268)))+(((IkReal(-1.00000000000000))*(r11)*(x3267)*(x3270)))+(((IkReal(-1.00000000000000))*(r11)*(x3267)*(x3271)))+(((x3266)*(x3271)))+(((x3266)*(x3270)))+(((IkReal(-1.00000000000000))*(sj6)*(x3267)*(x3269))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3272=((sj3)*(sj6));
IkReal x3273=((IkReal(1.00000000000000))*(r10));
IkReal x3274=((cj6)*(sj3));
if( IKabs(((gconst28)*(((((r12)*(sj3)*(sj5)))+(((cj5)*(r11)*(x3272)))+(((IkReal(-1.00000000000000))*(cj5)*(x3273)*(x3274))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst28)*(((((IkReal(-1.00000000000000))*(r11)*(x3274)))+(((IkReal(-1.00000000000000))*(x3272)*(x3273))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst28)*(((((r12)*(sj3)*(sj5)))+(((cj5)*(r11)*(x3272)))+(((IkReal(-1.00000000000000))*(cj5)*(x3273)*(x3274)))))), ((gconst28)*(((((IkReal(-1.00000000000000))*(r11)*(x3274)))+(((IkReal(-1.00000000000000))*(x3272)*(x3273)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3275=IKsin(j4);
IkReal x3276=IKcos(j4);
IkReal x3277=((IkReal(1.00000000000000))*(r00));
IkReal x3278=((cj5)*(r01));
IkReal x3279=((cj5)*(r11));
IkReal x3280=((IkReal(1.00000000000000))*(cj5));
IkReal x3281=((cj5)*(r21));
IkReal x3282=((sj5)*(x3275));
IkReal x3283=((cj6)*(x3275));
IkReal x3284=((sj6)*(x3276));
IkReal x3285=((sj6)*(x3275));
IkReal x3286=((sj5)*(x3276));
IkReal x3287=((cj6)*(x3276));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x3284)))+(((r22)*(x3282)))+(((IkReal(-1.00000000000000))*(r20)*(x3280)*(x3283)))+(((IkReal(-1.00000000000000))*(r21)*(x3287)))+(((x3281)*(x3285))));
evalcond[1]=((((r20)*(x3285)))+(cj3)+(((r22)*(x3286)))+(((r21)*(x3283)))+(((IkReal(-1.00000000000000))*(r20)*(x3280)*(x3287)))+(((x3281)*(x3284))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(x3277)*(x3283)))+(((r02)*(x3282)))+(((IkReal(-1.00000000000000))*(x3277)*(x3284)))+(((IkReal(-1.00000000000000))*(r01)*(x3287)))+(((x3278)*(x3285))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x3284)))+(((x3279)*(x3285)))+(((IkReal(-1.00000000000000))*(r10)*(x3280)*(x3283)))+(((IkReal(-1.00000000000000))*(r11)*(x3287)))+(((r12)*(x3282))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj5)*(x3277)*(x3287)))+(((r00)*(x3285)))+(sj3)+(((r02)*(x3286)))+(((x3278)*(x3284)))+(((r01)*(x3283))));
evalcond[5]=((((x3279)*(x3284)))+(((IkReal(-1.00000000000000))*(r10)*(x3280)*(x3287)))+(((r10)*(x3285)))+(((r11)*(x3283)))+(((r12)*(x3286))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3288=((cj3)*(cj5));
IkReal x3289=((IkReal(1.00000000000000))*(cj6));
if( IKabs(((gconst27)*(((((IkReal(-1.00000000000000))*(r10)*(x3288)*(x3289)))+(((cj3)*(r12)*(sj5)))+(((r11)*(sj6)*(x3288))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst27)*(((((IkReal(-1.00000000000000))*(cj3)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(x3289))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst27)*(((((IkReal(-1.00000000000000))*(r10)*(x3288)*(x3289)))+(((cj3)*(r12)*(sj5)))+(((r11)*(sj6)*(x3288)))))), ((gconst27)*(((((IkReal(-1.00000000000000))*(cj3)*(r10)*(sj6)))+(((IkReal(-1.00000000000000))*(cj3)*(r11)*(x3289)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3290=IKsin(j4);
IkReal x3291=IKcos(j4);
IkReal x3292=((IkReal(1.00000000000000))*(r00));
IkReal x3293=((cj5)*(r01));
IkReal x3294=((cj5)*(r11));
IkReal x3295=((IkReal(1.00000000000000))*(cj5));
IkReal x3296=((cj5)*(r21));
IkReal x3297=((sj5)*(x3290));
IkReal x3298=((cj6)*(x3290));
IkReal x3299=((sj6)*(x3291));
IkReal x3300=((sj6)*(x3290));
IkReal x3301=((sj5)*(x3291));
IkReal x3302=((cj6)*(x3291));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x3299)))+(((IkReal(-1.00000000000000))*(r21)*(x3302)))+(((r22)*(x3297)))+(((x3296)*(x3300)))+(((IkReal(-1.00000000000000))*(r20)*(x3295)*(x3298))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x3295)*(x3302)))+(cj3)+(((x3296)*(x3299)))+(((r22)*(x3301)))+(((r21)*(x3298)))+(((r20)*(x3300))));
evalcond[2]=((((x3293)*(x3300)))+(((r02)*(x3297)))+(((IkReal(-1.00000000000000))*(r01)*(x3302)))+(((IkReal(-1.00000000000000))*(x3292)*(x3299)))+(((IkReal(-1.00000000000000))*(cj5)*(x3292)*(x3298))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x3299)))+(((IkReal(-1.00000000000000))*(r11)*(x3302)))+(((x3294)*(x3300)))+(((IkReal(-1.00000000000000))*(r10)*(x3295)*(x3298)))+(((r12)*(x3297))));
evalcond[4]=((((r01)*(x3298)))+(sj3)+(((x3293)*(x3299)))+(((r02)*(x3301)))+(((IkReal(-1.00000000000000))*(cj5)*(x3292)*(x3302)))+(((r00)*(x3300))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x3295)*(x3302)))+(((r10)*(x3300)))+(((r12)*(x3301)))+(((r11)*(x3298)))+(((x3294)*(x3299))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x3303=((IkReal(0.000500000000000000))*(cj6));
IkReal x3304=((IkReal(0.000500000000000000))*(sj6));
IkReal x3305=((sj5)*(sj6));
IkReal x3306=((cj5)*(r12));
IkReal x3307=((IkReal(0.390000000000000))*(cj5));
IkReal x3308=((IkReal(0.390000000000000))*(cj6)*(sj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(x3305)))+(((cj6)*(r10)*(sj5)))+(x3306));
evalcond[2]=((((r21)*(x3303)))+(((r22)*(x3307)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-0.390000000000000))*(r21)*(x3305)))+(((r20)*(x3308)))+(((r20)*(x3304))));
evalcond[3]=((IkReal(0.400000000000000))+(((r02)*(x3307)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.390000000000000))*(r01)*(x3305)))+(((r00)*(x3308)))+(((r00)*(x3304)))+(((r01)*(x3303))));
evalcond[4]=((IkReal(-0.00200000000000000))+(((r10)*(x3308)))+(((r10)*(x3304)))+(((r11)*(x3303)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.390000000000000))*(r11)*(x3305)))+(((IkReal(0.390000000000000))*(x3306))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3309=((cj6)*(sj5));
IkReal x3310=((IkReal(1.00000000000000))*(sj5)*(sj6));
if( IKabs(((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(x3310)))+(((r20)*(x3309))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r01)*(x3310)))+(((r00)*(x3309)))+(((cj5)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(x3310)))+(((r20)*(x3309)))))+IKsqr(((((IkReal(-1.00000000000000))*(r01)*(x3310)))+(((r00)*(x3309)))+(((cj5)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(x3310)))+(((r20)*(x3309)))), ((((IkReal(-1.00000000000000))*(r01)*(x3310)))+(((r00)*(x3309)))+(((cj5)*(r02)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[2];
IkReal x3311=((cj6)*(sj5));
IkReal x3312=((IkReal(1.00000000000000))*(sj5)*(sj6));
evalcond[0]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(x3312)))+(((IkReal(-1.00000000000000))*(IKsin(j3))))+(((r20)*(x3311))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x3312)))+(((IkReal(-1.00000000000000))*(IKcos(j3))))+(((r00)*(x3311)))+(((cj5)*(r02))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst31;
IkReal x3313=(sj6)*(sj6);
IkReal x3314=(cj6)*(cj6);
IkReal x3315=((cj6)*(sj5));
IkReal x3316=((r10)*(r21));
IkReal x3317=((IkReal(1.00000000000000))*(r12));
IkReal x3318=((sj5)*(sj6));
IkReal x3319=((cj5)*(x3314));
IkReal x3320=((IkReal(1.00000000000000))*(r11)*(r20));
IkReal x3321=((cj5)*(x3313));
gconst31=IKsign(((((x3316)*(x3319)))+(((IkReal(-1.00000000000000))*(r20)*(x3317)*(x3318)))+(((IkReal(-1.00000000000000))*(x3319)*(x3320)))+(((r10)*(r22)*(x3318)))+(((IkReal(-1.00000000000000))*(x3320)*(x3321)))+(((x3316)*(x3321)))+(((r11)*(r22)*(x3315)))+(((IkReal(-1.00000000000000))*(r21)*(x3315)*(x3317)))));
IkReal x3322=(sj6)*(sj6);
IkReal x3323=(cj6)*(cj6);
IkReal x3324=((cj6)*(sj5));
IkReal x3325=((r10)*(r21));
IkReal x3326=((IkReal(1.00000000000000))*(r12));
IkReal x3327=((sj5)*(sj6));
IkReal x3328=((cj5)*(x3323));
IkReal x3329=((IkReal(1.00000000000000))*(r11)*(r20));
IkReal x3330=((cj5)*(x3322));
dummyeval[0]=((((r11)*(r22)*(x3324)))+(((IkReal(-1.00000000000000))*(x3328)*(x3329)))+(((x3325)*(x3328)))+(((IkReal(-1.00000000000000))*(r20)*(x3326)*(x3327)))+(((IkReal(-1.00000000000000))*(r21)*(x3324)*(x3326)))+(((x3325)*(x3330)))+(((IkReal(-1.00000000000000))*(x3329)*(x3330)))+(((r10)*(r22)*(x3327))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst32;
IkReal x3331=(r20)*(r20);
IkReal x3332=(cj5)*(cj5);
IkReal x3333=(sj6)*(sj6);
IkReal x3334=(cj6)*(cj6);
IkReal x3335=(r21)*(r21);
IkReal x3336=((cj6)*(r20));
IkReal x3337=((IkReal(2.00000000000000))*(r21)*(sj6));
IkReal x3338=((cj5)*(r22)*(sj5));
gconst32=IKsign(((((x3334)*(x3335)))+(((x3331)*(x3333)))+(((x3331)*(x3332)*(x3334)))+(((IkReal(-1.00000000000000))*(x3332)*(x3336)*(x3337)))+(((x3337)*(x3338)))+(((x3332)*(x3333)*(x3335)))+(((IkReal(-2.00000000000000))*(x3336)*(x3338)))+(((x3336)*(x3337)))+((((r22)*(r22))*((sj5)*(sj5))))));
IkReal x3339=(r20)*(r20);
IkReal x3340=(cj5)*(cj5);
IkReal x3341=(sj6)*(sj6);
IkReal x3342=(cj6)*(cj6);
IkReal x3343=(r21)*(r21);
IkReal x3344=((cj6)*(r20));
IkReal x3345=((IkReal(2.00000000000000))*(r21)*(sj6));
IkReal x3346=((cj5)*(r22)*(sj5));
dummyeval[0]=((((x3344)*(x3345)))+(((IkReal(-1.00000000000000))*(x3340)*(x3344)*(x3345)))+(((x3342)*(x3343)))+(((IkReal(-2.00000000000000))*(x3344)*(x3346)))+(((x3340)*(x3341)*(x3343)))+(((x3339)*(x3340)*(x3342)))+(((x3345)*(x3346)))+(((x3339)*(x3341)))+((((r22)*(r22))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3347=((cj3)*(cj6));
IkReal x3348=((IkReal(1.00000000000000))*(r21));
IkReal x3349=((cj3)*(sj6));
if( IKabs(((gconst32)*(((((IkReal(-1.00000000000000))*(x3347)*(x3348)))+(((IkReal(-1.00000000000000))*(r20)*(x3349))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst32)*(((((IkReal(-1.00000000000000))*(cj5)*(x3348)*(x3349)))+(((cj5)*(r20)*(x3347)))+(((IkReal(-1.00000000000000))*(cj3)*(r22)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst32)*(((((IkReal(-1.00000000000000))*(x3347)*(x3348)))+(((IkReal(-1.00000000000000))*(r20)*(x3349)))))), ((gconst32)*(((((IkReal(-1.00000000000000))*(cj5)*(x3348)*(x3349)))+(((cj5)*(r20)*(x3347)))+(((IkReal(-1.00000000000000))*(cj3)*(r22)*(sj5)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3350=IKsin(j4);
IkReal x3351=IKcos(j4);
IkReal x3352=((IkReal(1.00000000000000))*(r00));
IkReal x3353=((cj5)*(r01));
IkReal x3354=((cj5)*(r11));
IkReal x3355=((IkReal(1.00000000000000))*(cj5));
IkReal x3356=((cj5)*(r21));
IkReal x3357=((sj5)*(x3350));
IkReal x3358=((cj6)*(x3350));
IkReal x3359=((sj6)*(x3351));
IkReal x3360=((sj6)*(x3350));
IkReal x3361=((sj5)*(x3351));
IkReal x3362=((cj6)*(x3351));
evalcond[0]=((((x3356)*(x3360)))+(((IkReal(-1.00000000000000))*(r20)*(x3355)*(x3358)))+(((IkReal(-1.00000000000000))*(r20)*(x3359)))+(((IkReal(-1.00000000000000))*(r21)*(x3362)))+(((r22)*(x3357))));
evalcond[1]=((cj3)+(((r22)*(x3361)))+(((r21)*(x3358)))+(((x3356)*(x3359)))+(((r20)*(x3360)))+(((IkReal(-1.00000000000000))*(r20)*(x3355)*(x3362))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3352)*(x3359)))+(((x3353)*(x3360)))+(((IkReal(-1.00000000000000))*(r01)*(x3362)))+(((IkReal(-1.00000000000000))*(cj5)*(x3352)*(x3358)))+(((r02)*(x3357))));
evalcond[3]=((IkReal(-1.00000000000000))+(((r12)*(x3357)))+(((IkReal(-1.00000000000000))*(r10)*(x3359)))+(((x3354)*(x3360)))+(((IkReal(-1.00000000000000))*(r11)*(x3362)))+(((IkReal(-1.00000000000000))*(r10)*(x3355)*(x3358))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj3)))+(((r02)*(x3361)))+(((r01)*(x3358)))+(((r00)*(x3360)))+(((IkReal(-1.00000000000000))*(cj5)*(x3352)*(x3362)))+(((x3353)*(x3359))));
evalcond[5]=((((r11)*(x3358)))+(((r10)*(x3360)))+(((x3354)*(x3359)))+(((r12)*(x3361)))+(((IkReal(-1.00000000000000))*(r10)*(x3355)*(x3362))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3363=((cj3)*(sj6));
IkReal x3364=((IkReal(1.00000000000000))*(r10));
IkReal x3365=((cj3)*(cj6));
if( IKabs(((gconst31)*(((((cj3)*(r12)*(sj5)))+(((cj5)*(r11)*(x3363)))+(((IkReal(-1.00000000000000))*(cj5)*(x3364)*(x3365))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst31)*(((((IkReal(-1.00000000000000))*(r11)*(x3365)))+(((IkReal(-1.00000000000000))*(x3363)*(x3364))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst31)*(((((cj3)*(r12)*(sj5)))+(((cj5)*(r11)*(x3363)))+(((IkReal(-1.00000000000000))*(cj5)*(x3364)*(x3365)))))), ((gconst31)*(((((IkReal(-1.00000000000000))*(r11)*(x3365)))+(((IkReal(-1.00000000000000))*(x3363)*(x3364)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3366=IKsin(j4);
IkReal x3367=IKcos(j4);
IkReal x3368=((IkReal(1.00000000000000))*(r00));
IkReal x3369=((cj5)*(r01));
IkReal x3370=((cj5)*(r11));
IkReal x3371=((IkReal(1.00000000000000))*(cj5));
IkReal x3372=((cj5)*(r21));
IkReal x3373=((sj5)*(x3366));
IkReal x3374=((cj6)*(x3366));
IkReal x3375=((sj6)*(x3367));
IkReal x3376=((sj6)*(x3366));
IkReal x3377=((sj5)*(x3367));
IkReal x3378=((cj6)*(x3367));
evalcond[0]=((((r22)*(x3373)))+(((IkReal(-1.00000000000000))*(r21)*(x3378)))+(((x3372)*(x3376)))+(((IkReal(-1.00000000000000))*(r20)*(x3371)*(x3374)))+(((IkReal(-1.00000000000000))*(r20)*(x3375))));
evalcond[1]=((cj3)+(((r22)*(x3377)))+(((x3372)*(x3375)))+(((r21)*(x3374)))+(((IkReal(-1.00000000000000))*(r20)*(x3371)*(x3378)))+(((r20)*(x3376))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x3378)))+(((r02)*(x3373)))+(((x3369)*(x3376)))+(((IkReal(-1.00000000000000))*(cj5)*(x3368)*(x3374)))+(((IkReal(-1.00000000000000))*(x3368)*(x3375))));
evalcond[3]=((IkReal(-1.00000000000000))+(((r12)*(x3373)))+(((IkReal(-1.00000000000000))*(r11)*(x3378)))+(((x3370)*(x3376)))+(((IkReal(-1.00000000000000))*(r10)*(x3371)*(x3374)))+(((IkReal(-1.00000000000000))*(r10)*(x3375))));
evalcond[4]=((((r01)*(x3374)))+(((IkReal(-1.00000000000000))*(sj3)))+(((r02)*(x3377)))+(((x3369)*(x3375)))+(((IkReal(-1.00000000000000))*(cj5)*(x3368)*(x3378)))+(((r00)*(x3376))));
evalcond[5]=((((r12)*(x3377)))+(((r10)*(x3376)))+(((x3370)*(x3375)))+(((IkReal(-1.00000000000000))*(r10)*(x3371)*(x3378)))+(((r11)*(x3374))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3379=((cj6)*(sj5));
IkReal x3380=((IkReal(1.00000000000000))*(sj5)*(sj6));
if( IKabs(((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(x3380)))+(((r20)*(x3379))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)))+(((r10)*(x3379)))+(((IkReal(-1.00000000000000))*(r11)*(x3380))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(x3380)))+(((r20)*(x3379)))))+IKsqr(((((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)))+(((r10)*(x3379)))+(((IkReal(-1.00000000000000))*(r11)*(x3380)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(x3380)))+(((r20)*(x3379)))), ((((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)))+(((r10)*(x3379)))+(((IkReal(-1.00000000000000))*(r11)*(x3380)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x3381=IKcos(j3);
IkReal x3382=((cj6)*(sj5));
IkReal x3383=((IkReal(1.00000000000000))*(sj5)*(sj6));
evalcond[0]=((((cj5)*(r22)))+(((r20)*(x3382)))+(((IkReal(-1.00000000000000))*(IKsin(j3))))+(((IkReal(-1.00000000000000))*(r21)*(x3383))));
evalcond[1]=((((sj1)*(x3381)))+(((IkReal(-1.00000000000000))*(r01)*(x3383)))+(((r00)*(x3382)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((r10)*(x3382)))+(((IkReal(-1.00000000000000))*(cj1)*(x3381)))+(((IkReal(-1.00000000000000))*(r11)*(x3383))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst23;
IkReal x3384=(r20)*(r20);
IkReal x3385=(cj5)*(cj5);
IkReal x3386=(sj6)*(sj6);
IkReal x3387=(cj6)*(cj6);
IkReal x3388=(r21)*(r21);
IkReal x3389=((cj6)*(r20));
IkReal x3390=((IkReal(2.00000000000000))*(r21)*(sj6));
IkReal x3391=((cj5)*(r22)*(sj5));
gconst23=IKsign(((((x3384)*(x3385)*(x3387)))+(((x3389)*(x3390)))+(((x3390)*(x3391)))+(((x3387)*(x3388)))+(((IkReal(-1.00000000000000))*(x3385)*(x3389)*(x3390)))+(((x3385)*(x3386)*(x3388)))+(((x3384)*(x3386)))+(((IkReal(-2.00000000000000))*(x3389)*(x3391)))+((((r22)*(r22))*((sj5)*(sj5))))));
IkReal x3392=(r20)*(r20);
IkReal x3393=(cj5)*(cj5);
IkReal x3394=(sj6)*(sj6);
IkReal x3395=(cj6)*(cj6);
IkReal x3396=(r21)*(r21);
IkReal x3397=((cj6)*(r20));
IkReal x3398=((IkReal(2.00000000000000))*(r21)*(sj6));
IkReal x3399=((cj5)*(r22)*(sj5));
dummyeval[0]=((((x3393)*(x3394)*(x3396)))+(((x3392)*(x3393)*(x3395)))+(((x3397)*(x3398)))+(((x3398)*(x3399)))+(((x3392)*(x3394)))+(((IkReal(-1.00000000000000))*(x3393)*(x3397)*(x3398)))+(((x3395)*(x3396)))+((((r22)*(r22))*((sj5)*(sj5))))+(((IkReal(-2.00000000000000))*(x3397)*(x3399))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst24;
IkReal x3400=(cj5)*(cj5);
IkReal x3401=(sj6)*(sj6);
IkReal x3402=(cj6)*(cj6);
IkReal x3403=((r00)*(r20));
IkReal x3404=((cj5)*(sj5));
IkReal x3405=((r01)*(r21));
IkReal x3406=((r21)*(sj6));
IkReal x3407=((sj6)*(x3404));
IkReal x3408=((IkReal(1.00000000000000))*(cj6)*(r00));
IkReal x3409=((cj6)*(r01)*(r20)*(sj6));
gconst24=IKsign(((((r01)*(r22)*(x3407)))+(((IkReal(-1.00000000000000))*(r22)*(x3404)*(x3408)))+(((x3400)*(x3401)*(x3405)))+(((cj6)*(r00)*(x3406)))+(x3409)+(((IkReal(-1.00000000000000))*(x3400)*(x3409)))+(((x3401)*(x3403)))+(((r02)*(r22)*((sj5)*(sj5))))+(((x3400)*(x3402)*(x3403)))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(r20)*(x3404)))+(((x3402)*(x3405)))+(((r02)*(x3404)*(x3406)))+(((IkReal(-1.00000000000000))*(x3400)*(x3406)*(x3408)))));
IkReal x3410=(cj5)*(cj5);
IkReal x3411=(sj6)*(sj6);
IkReal x3412=(cj6)*(cj6);
IkReal x3413=((r00)*(r20));
IkReal x3414=((cj5)*(sj5));
IkReal x3415=((r01)*(r21));
IkReal x3416=((r21)*(sj6));
IkReal x3417=((sj6)*(x3414));
IkReal x3418=((IkReal(1.00000000000000))*(cj6)*(r00));
IkReal x3419=x3409;
dummyeval[0]=((((r01)*(r22)*(x3417)))+(((x3411)*(x3413)))+(((IkReal(-1.00000000000000))*(x3410)*(x3419)))+(x3419)+(((cj6)*(r00)*(x3416)))+(((r02)*(r22)*((sj5)*(sj5))))+(((r02)*(x3414)*(x3416)))+(((x3412)*(x3415)))+(((x3410)*(x3411)*(x3415)))+(((IkReal(-1.00000000000000))*(x3410)*(x3416)*(x3418)))+(((x3410)*(x3412)*(x3413)))+(((IkReal(-1.00000000000000))*(r22)*(x3414)*(x3418)))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(r20)*(x3414))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3420=((cj1)*(r20));
IkReal x3421=((cj5)*(cj6));
IkReal x3422=((IkReal(1.00000000000000))*(cj1));
IkReal x3423=((IkReal(1.00000000000000))*(cj3));
IkReal x3424=((sj6)*(x3423));
if( IKabs(((gconst24)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(sj6)*(x3422)))+(((x3420)*(x3421)))+(((IkReal(-1.00000000000000))*(r00)*(x3424)))+(((IkReal(-1.00000000000000))*(r22)*(sj5)*(x3422)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x3423))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst24)*(((((sj6)*(x3420)))+(((cj1)*(cj6)*(r21)))+(((IkReal(-1.00000000000000))*(r02)*(sj5)*(x3423)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3424)))+(((cj3)*(r00)*(x3421))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst24)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(sj6)*(x3422)))+(((x3420)*(x3421)))+(((IkReal(-1.00000000000000))*(r00)*(x3424)))+(((IkReal(-1.00000000000000))*(r22)*(sj5)*(x3422)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x3423)))))), ((gconst24)*(((((sj6)*(x3420)))+(((cj1)*(cj6)*(r21)))+(((IkReal(-1.00000000000000))*(r02)*(sj5)*(x3423)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x3424)))+(((cj3)*(r00)*(x3421)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3425=IKsin(j4);
IkReal x3426=IKcos(j4);
IkReal x3427=((IkReal(1.00000000000000))*(r00));
IkReal x3428=((cj5)*(r01));
IkReal x3429=((cj5)*(r11));
IkReal x3430=((IkReal(1.00000000000000))*(cj5));
IkReal x3431=((cj5)*(r21));
IkReal x3432=((sj5)*(x3425));
IkReal x3433=((cj6)*(x3425));
IkReal x3434=((sj6)*(x3426));
IkReal x3435=((sj6)*(x3425));
IkReal x3436=((sj5)*(x3426));
IkReal x3437=((cj6)*(x3426));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x3430)*(x3433)))+(((IkReal(-1.00000000000000))*(r20)*(x3434)))+(((r22)*(x3432)))+(((x3431)*(x3435)))+(((IkReal(-1.00000000000000))*(r21)*(x3437))));
evalcond[1]=((cj3)+(((r20)*(x3435)))+(((IkReal(-1.00000000000000))*(r20)*(x3430)*(x3437)))+(((r21)*(x3433)))+(((r22)*(x3436)))+(((x3431)*(x3434))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3427)*(x3434)))+(((x3428)*(x3435)))+(cj1)+(((IkReal(-1.00000000000000))*(cj5)*(x3427)*(x3433)))+(((IkReal(-1.00000000000000))*(r01)*(x3437)))+(((r02)*(x3432))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x3430)*(x3433)))+(((x3429)*(x3435)))+(sj1)+(((IkReal(-1.00000000000000))*(r10)*(x3434)))+(((r12)*(x3432)))+(((IkReal(-1.00000000000000))*(r11)*(x3437))));
evalcond[4]=((((r01)*(x3433)))+(((x3428)*(x3434)))+(((IkReal(-1.00000000000000))*(cj5)*(x3427)*(x3437)))+(((sj1)*(sj3)))+(((r02)*(x3436)))+(((r00)*(x3435))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x3430)*(x3437)))+(((x3429)*(x3434)))+(((r10)*(x3435)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)))+(((r12)*(x3436)))+(((r11)*(x3433))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3438=((cj3)*(cj6));
IkReal x3439=((IkReal(1.00000000000000))*(r21));
IkReal x3440=((cj3)*(sj6));
if( IKabs(((gconst23)*(((((IkReal(-1.00000000000000))*(x3438)*(x3439)))+(((IkReal(-1.00000000000000))*(r20)*(x3440))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst23)*(((((cj5)*(r20)*(x3438)))+(((IkReal(-1.00000000000000))*(cj5)*(x3439)*(x3440)))+(((IkReal(-1.00000000000000))*(cj3)*(r22)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst23)*(((((IkReal(-1.00000000000000))*(x3438)*(x3439)))+(((IkReal(-1.00000000000000))*(r20)*(x3440)))))), ((gconst23)*(((((cj5)*(r20)*(x3438)))+(((IkReal(-1.00000000000000))*(cj5)*(x3439)*(x3440)))+(((IkReal(-1.00000000000000))*(cj3)*(r22)*(sj5)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3441=IKsin(j4);
IkReal x3442=IKcos(j4);
IkReal x3443=((IkReal(1.00000000000000))*(r00));
IkReal x3444=((cj5)*(r01));
IkReal x3445=((cj5)*(r11));
IkReal x3446=((IkReal(1.00000000000000))*(cj5));
IkReal x3447=((cj5)*(r21));
IkReal x3448=((sj5)*(x3441));
IkReal x3449=((cj6)*(x3441));
IkReal x3450=((sj6)*(x3442));
IkReal x3451=((sj6)*(x3441));
IkReal x3452=((sj5)*(x3442));
IkReal x3453=((cj6)*(x3442));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x3446)*(x3449)))+(((x3447)*(x3451)))+(((IkReal(-1.00000000000000))*(r21)*(x3453)))+(((r22)*(x3448)))+(((IkReal(-1.00000000000000))*(r20)*(x3450))));
evalcond[1]=((((r21)*(x3449)))+(((x3447)*(x3450)))+(cj3)+(((r22)*(x3452)))+(((r20)*(x3451)))+(((IkReal(-1.00000000000000))*(r20)*(x3446)*(x3453))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x3453)))+(((x3444)*(x3451)))+(cj1)+(((r02)*(x3448)))+(((IkReal(-1.00000000000000))*(cj5)*(x3443)*(x3449)))+(((IkReal(-1.00000000000000))*(x3443)*(x3450))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x3453)))+(sj1)+(((r12)*(x3448)))+(((x3445)*(x3451)))+(((IkReal(-1.00000000000000))*(r10)*(x3446)*(x3449)))+(((IkReal(-1.00000000000000))*(r10)*(x3450))));
evalcond[4]=((((x3444)*(x3450)))+(((sj1)*(sj3)))+(((r02)*(x3452)))+(((IkReal(-1.00000000000000))*(cj5)*(x3443)*(x3453)))+(((r00)*(x3451)))+(((r01)*(x3449))));
evalcond[5]=((((r11)*(x3449)))+(((r12)*(x3452)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)))+(((x3445)*(x3450)))+(((IkReal(-1.00000000000000))*(r10)*(x3446)*(x3453)))+(((r10)*(x3451))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3454=((cj6)*(sj1));
IkReal x3455=((IkReal(1.00000000000000))*(sj1)*(sj6));
if( IKabs(((gconst22)*(((((IkReal(-1.00000000000000))*(r21)*(x3454)))+(((IkReal(-1.00000000000000))*(r20)*(x3455))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst22)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3455)))+(((cj5)*(r20)*(x3454)))+(((IkReal(-1.00000000000000))*(r22)*(sj1)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst22)*(((((IkReal(-1.00000000000000))*(r21)*(x3454)))+(((IkReal(-1.00000000000000))*(r20)*(x3455)))))), ((gconst22)*(((((IkReal(-1.00000000000000))*(cj5)*(r21)*(x3455)))+(((cj5)*(r20)*(x3454)))+(((IkReal(-1.00000000000000))*(r22)*(sj1)*(sj5)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x3456=IKsin(j4);
IkReal x3457=IKcos(j4);
IkReal x3458=((IkReal(1.00000000000000))*(cj6));
IkReal x3459=((sj5)*(x3456));
IkReal x3460=((cj5)*(x3456));
IkReal x3461=((IkReal(1.00000000000000))*(sj6)*(x3457));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x3461)))+(((r21)*(sj6)*(x3460)))+(((r22)*(x3459)))+(((IkReal(-1.00000000000000))*(r21)*(x3457)*(x3458)))+(((IkReal(-1.00000000000000))*(r20)*(x3458)*(x3460))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(x3461)))+(cj1)+(((r01)*(sj6)*(x3460)))+(((r02)*(x3459)))+(((IkReal(-1.00000000000000))*(r01)*(x3457)*(x3458)))+(((IkReal(-1.00000000000000))*(r00)*(x3458)*(x3460))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x3458)*(x3460)))+(sj1)+(((IkReal(-1.00000000000000))*(r10)*(x3461)))+(((r12)*(x3459)))+(((IkReal(-1.00000000000000))*(r11)*(x3457)*(x3458)))+(((r11)*(sj6)*(x3460))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3462=((cj4)*(cj5));
IkReal x3463=((cj6)*(r20));
IkReal x3464=((IkReal(1.00000000000000))*(sj4));
IkReal x3465=((IkReal(1.00000000000000))*(r21)*(sj6));
if( IKabs(((((cj5)*(r22)))+(((sj5)*(x3463)))+(((IkReal(-1.00000000000000))*(sj5)*(x3465))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x3462)*(x3463)))+(((IkReal(-1.00000000000000))*(x3462)*(x3465)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x3464)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x3464))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj5)*(r22)))+(((sj5)*(x3463)))+(((IkReal(-1.00000000000000))*(sj5)*(x3465)))))+IKsqr(((((x3462)*(x3463)))+(((IkReal(-1.00000000000000))*(x3462)*(x3465)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x3464)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x3464)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((cj5)*(r22)))+(((sj5)*(x3463)))+(((IkReal(-1.00000000000000))*(sj5)*(x3465)))), ((((x3462)*(x3463)))+(((IkReal(-1.00000000000000))*(x3462)*(x3465)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x3464)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x3464)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x3466=IKcos(j3);
IkReal x3467=IKsin(j3);
IkReal x3468=((r11)*(sj6));
IkReal x3469=((IkReal(1.00000000000000))*(sj5));
IkReal x3470=((IkReal(1.00000000000000))*(cj1));
IkReal x3471=((sj4)*(sj6));
IkReal x3472=((cj4)*(sj5));
IkReal x3473=((cj6)*(sj4));
IkReal x3474=((cj4)*(cj5));
IkReal x3475=((r01)*(sj6));
IkReal x3476=((r21)*(sj6));
IkReal x3477=((cj6)*(sj5));
IkReal x3478=((IkReal(1.00000000000000))*(cj6)*(x3474));
evalcond[0]=((((cj5)*(r22)))+(((r20)*(x3477)))+(((IkReal(-1.00000000000000))*(x3469)*(x3476)))+(((IkReal(-1.00000000000000))*(x3467))));
evalcond[1]=((((r00)*(x3477)))+(((IkReal(-1.00000000000000))*(x3469)*(x3475)))+(((sj1)*(x3466)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((r10)*(x3477)))+(((IkReal(-1.00000000000000))*(x3468)*(x3469)))+(((IkReal(-1.00000000000000))*(x3466)*(x3470))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x3478)))+(((x3474)*(x3476)))+(x3466)+(((r20)*(x3471)))+(((r21)*(x3473)))+(((r22)*(x3472))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(x3478)))+(((x3474)*(x3475)))+(((r01)*(x3473)))+(((r00)*(x3471)))+(((sj1)*(x3467)))+(((r02)*(x3472))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x3467)*(x3470)))+(((IkReal(-1.00000000000000))*(r10)*(x3478)))+(((r12)*(x3472)))+(((r10)*(x3471)))+(((r11)*(x3473)))+(((x3468)*(x3474))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3479=((cj1)*(cj6));
IkReal x3480=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((gconst21)*(((((IkReal(-1.00000000000000))*(r21)*(x3479)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x3480))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((IkReal(-1.00000000000000))*(r22)*(sj5)*(x3480)))+(((cj5)*(r20)*(x3479)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(sj6)*(x3480))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst21)*(((((IkReal(-1.00000000000000))*(r21)*(x3479)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x3480)))))), ((gconst21)*(((((IkReal(-1.00000000000000))*(r22)*(sj5)*(x3480)))+(((cj5)*(r20)*(x3479)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(sj6)*(x3480)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x3481=IKsin(j4);
IkReal x3482=IKcos(j4);
IkReal x3483=((IkReal(1.00000000000000))*(cj6));
IkReal x3484=((sj5)*(x3481));
IkReal x3485=((cj5)*(x3481));
IkReal x3486=((IkReal(1.00000000000000))*(sj6)*(x3482));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x3486)))+(((r21)*(sj6)*(x3485)))+(((IkReal(-1.00000000000000))*(r21)*(x3482)*(x3483)))+(((IkReal(-1.00000000000000))*(r20)*(x3483)*(x3485)))+(((r22)*(x3484))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(x3486)))+(cj1)+(((r01)*(sj6)*(x3485)))+(((IkReal(-1.00000000000000))*(r01)*(x3482)*(x3483)))+(((r02)*(x3484)))+(((IkReal(-1.00000000000000))*(r00)*(x3483)*(x3485))));
evalcond[2]=((sj1)+(((IkReal(-1.00000000000000))*(r10)*(x3486)))+(((r11)*(sj6)*(x3485)))+(((IkReal(-1.00000000000000))*(r11)*(x3482)*(x3483)))+(((r12)*(x3484)))+(((IkReal(-1.00000000000000))*(r10)*(x3483)*(x3485))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3487=((cj4)*(cj5));
IkReal x3488=((cj6)*(r20));
IkReal x3489=((IkReal(1.00000000000000))*(sj4));
IkReal x3490=((IkReal(1.00000000000000))*(r21)*(sj6));
if( IKabs(((((cj5)*(r22)))+(((sj5)*(x3488)))+(((IkReal(-1.00000000000000))*(sj5)*(x3490))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x3487)*(x3488)))+(((IkReal(-1.00000000000000))*(x3487)*(x3490)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x3489)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x3489))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj5)*(r22)))+(((sj5)*(x3488)))+(((IkReal(-1.00000000000000))*(sj5)*(x3490)))))+IKsqr(((((x3487)*(x3488)))+(((IkReal(-1.00000000000000))*(x3487)*(x3490)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x3489)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x3489)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((cj5)*(r22)))+(((sj5)*(x3488)))+(((IkReal(-1.00000000000000))*(sj5)*(x3490)))), ((((x3487)*(x3488)))+(((IkReal(-1.00000000000000))*(x3487)*(x3490)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x3489)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x3489)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x3491=IKcos(j3);
IkReal x3492=IKsin(j3);
IkReal x3493=((r11)*(sj6));
IkReal x3494=((IkReal(1.00000000000000))*(sj5));
IkReal x3495=((IkReal(1.00000000000000))*(cj1));
IkReal x3496=((sj4)*(sj6));
IkReal x3497=((cj4)*(sj5));
IkReal x3498=((cj6)*(sj4));
IkReal x3499=((cj4)*(cj5));
IkReal x3500=((r01)*(sj6));
IkReal x3501=((r21)*(sj6));
IkReal x3502=((cj6)*(sj5));
IkReal x3503=((IkReal(1.00000000000000))*(cj6)*(x3499));
evalcond[0]=((((cj5)*(r22)))+(((r20)*(x3502)))+(((IkReal(-1.00000000000000))*(x3492)))+(((IkReal(-1.00000000000000))*(x3494)*(x3501))));
evalcond[1]=((((r00)*(x3502)))+(((sj1)*(x3491)))+(((IkReal(-1.00000000000000))*(x3494)*(x3500)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((r10)*(x3502)))+(((IkReal(-1.00000000000000))*(x3493)*(x3494)))+(((IkReal(-1.00000000000000))*(x3491)*(x3495))));
evalcond[3]=((((r20)*(x3496)))+(x3491)+(((x3499)*(x3501)))+(((r22)*(x3497)))+(((r21)*(x3498)))+(((IkReal(-1.00000000000000))*(r20)*(x3503))));
evalcond[4]=((((r01)*(x3498)))+(((r00)*(x3496)))+(((IkReal(-1.00000000000000))*(r00)*(x3503)))+(((x3499)*(x3500)))+(((r02)*(x3497)))+(((sj1)*(x3492))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x3503)))+(((r10)*(x3496)))+(((IkReal(-1.00000000000000))*(x3492)*(x3495)))+(((r11)*(x3498)))+(((x3493)*(x3499)))+(((r12)*(x3497))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3504=(sj1)*(sj1);
IkReal x3505=(cj1)*(cj1);
IkReal x3506=((cj5)*(r12));
IkReal x3507=((cj6)*(sj5));
IkReal x3508=((IkReal(1.00000000000000))*(sj1));
IkReal x3509=((cj5)*(r02));
IkReal x3510=((IkReal(1.00000000000000))*(cj1));
IkReal x3511=((r01)*(sj5)*(sj6));
IkReal x3512=((r11)*(sj5)*(sj6));
if( IKabs(((((IKabs(((((cj2)*(x3504)))+(((cj2)*(x3505))))) != 0)?((IkReal)1/(((((cj2)*(x3504)))+(((cj2)*(x3505)))))):(IkReal)1.0e30))*(((((cj1)*(r00)*(x3507)))+(((r10)*(sj1)*(x3507)))+(((IkReal(-1.00000000000000))*(x3510)*(x3511)))+(((IkReal(-1.00000000000000))*(x3508)*(x3512)))+(((cj1)*(x3509)))+(((sj1)*(x3506))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((x3504)+(x3505))) != 0)?((IkReal)1/(((x3504)+(x3505)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x3508)*(x3509)))+(((IkReal(-1.00000000000000))*(r00)*(x3507)*(x3508)))+(((IkReal(-1.00000000000000))*(x3510)*(x3512)))+(((cj1)*(x3506)))+(((sj1)*(x3511)))+(((cj1)*(r10)*(x3507))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((cj2)*(x3504)))+(((cj2)*(x3505))))) != 0)?((IkReal)1/(((((cj2)*(x3504)))+(((cj2)*(x3505)))))):(IkReal)1.0e30))*(((((cj1)*(r00)*(x3507)))+(((r10)*(sj1)*(x3507)))+(((IkReal(-1.00000000000000))*(x3510)*(x3511)))+(((IkReal(-1.00000000000000))*(x3508)*(x3512)))+(((cj1)*(x3509)))+(((sj1)*(x3506)))))))+IKsqr(((((IKabs(((x3504)+(x3505))) != 0)?((IkReal)1/(((x3504)+(x3505)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x3508)*(x3509)))+(((IkReal(-1.00000000000000))*(r00)*(x3507)*(x3508)))+(((IkReal(-1.00000000000000))*(x3510)*(x3512)))+(((cj1)*(x3506)))+(((sj1)*(x3511)))+(((cj1)*(r10)*(x3507)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IKabs(((((cj2)*(x3504)))+(((cj2)*(x3505))))) != 0)?((IkReal)1/(((((cj2)*(x3504)))+(((cj2)*(x3505)))))):(IkReal)1.0e30))*(((((cj1)*(r00)*(x3507)))+(((r10)*(sj1)*(x3507)))+(((IkReal(-1.00000000000000))*(x3510)*(x3511)))+(((IkReal(-1.00000000000000))*(x3508)*(x3512)))+(((cj1)*(x3509)))+(((sj1)*(x3506)))))), ((((IKabs(((x3504)+(x3505))) != 0)?((IkReal)1/(((x3504)+(x3505)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x3508)*(x3509)))+(((IkReal(-1.00000000000000))*(r00)*(x3507)*(x3508)))+(((IkReal(-1.00000000000000))*(x3510)*(x3512)))+(((cj1)*(x3506)))+(((sj1)*(x3511)))+(((cj1)*(r10)*(x3507)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x3513=IKsin(j3);
IkReal x3514=IKcos(j3);
IkReal x3515=((IkReal(1.00000000000000))*(cj1));
IkReal x3516=((cj6)*(sj5));
IkReal x3517=((IkReal(1.00000000000000))*(sj5)*(sj6));
IkReal x3518=((cj2)*(x3513));
evalcond[0]=((((cj5)*(r22)))+(((r20)*(x3516)))+(((sj2)*(x3513)))+(((IkReal(-1.00000000000000))*(r21)*(x3517))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3515)*(x3518)))+(((r00)*(x3516)))+(((sj1)*(x3514)))+(((IkReal(-1.00000000000000))*(r01)*(x3517)))+(((cj5)*(r02))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x3514)*(x3515)))+(((cj5)*(r12)))+(((r10)*(x3516)))+(((IkReal(-1.00000000000000))*(sj1)*(x3518)))+(((IkReal(-1.00000000000000))*(r11)*(x3517))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst2;
IkReal x3519=(cj5)*(cj5);
IkReal x3520=(r21)*(r21);
IkReal x3521=(sj6)*(sj6);
IkReal x3522=(cj6)*(cj6);
IkReal x3523=(r20)*(r20);
IkReal x3524=((cj6)*(r20));
IkReal x3525=((IkReal(1.00000000000000))*(x3522));
IkReal x3526=((IkReal(2.00000000000000))*(r21)*(sj6));
IkReal x3527=((cj5)*(r22)*(sj5));
IkReal x3528=((IkReal(1.00000000000000))*(x3521));
gconst2=IKsign(((((IkReal(-1.00000000000000))*(x3519)*(x3523)*(x3525)))+(((IkReal(-1.00000000000000))*(x3524)*(x3526)))+(((IkReal(-1.00000000000000))*(x3526)*(x3527)))+(((IkReal(2.00000000000000))*(x3524)*(x3527)))+(((x3519)*(x3524)*(x3526)))+(((IkReal(-1.00000000000000))*(x3520)*(x3525)))+(((IkReal(-1.00000000000000))*((r22)*(r22))*((sj5)*(sj5))))+(((IkReal(-1.00000000000000))*(x3523)*(x3528)))+(((IkReal(-1.00000000000000))*(x3519)*(x3520)*(x3528)))));
IkReal x3529=(cj5)*(cj5);
IkReal x3530=(r21)*(r21);
IkReal x3531=(sj6)*(sj6);
IkReal x3532=(cj6)*(cj6);
IkReal x3533=(r20)*(r20);
IkReal x3534=((cj6)*(r20));
IkReal x3535=((IkReal(1.00000000000000))*(x3532));
IkReal x3536=((IkReal(2.00000000000000))*(r21)*(sj6));
IkReal x3537=((cj5)*(r22)*(sj5));
IkReal x3538=((IkReal(1.00000000000000))*(x3531));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x3529)*(x3530)*(x3538)))+(((IkReal(-1.00000000000000))*(x3533)*(x3538)))+(((IkReal(2.00000000000000))*(x3534)*(x3537)))+(((IkReal(-1.00000000000000))*(x3529)*(x3533)*(x3535)))+(((IkReal(-1.00000000000000))*(x3530)*(x3535)))+(((x3529)*(x3534)*(x3536)))+(((IkReal(-1.00000000000000))*((r22)*(r22))*((sj5)*(sj5))))+(((IkReal(-1.00000000000000))*(x3536)*(x3537)))+(((IkReal(-1.00000000000000))*(x3534)*(x3536))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
IkReal x3539=(cj5)*(cj5);
IkReal x3540=(sj6)*(sj6);
IkReal x3541=(cj6)*(cj6);
IkReal x3542=((r00)*(r20));
IkReal x3543=((cj5)*(sj5));
IkReal x3544=((r01)*(r21));
IkReal x3545=((r21)*(sj6));
IkReal x3546=((sj6)*(x3543));
IkReal x3547=((IkReal(1.00000000000000))*(cj6)*(r00));
IkReal x3548=((cj6)*(r01)*(r20)*(sj6));
gconst3=IKsign(((((r02)*(x3543)*(x3545)))+(((r01)*(r22)*(x3546)))+(((x3541)*(x3544)))+(((IkReal(-1.00000000000000))*(x3539)*(x3545)*(x3547)))+(((IkReal(-1.00000000000000))*(r22)*(x3543)*(x3547)))+(x3548)+(((cj6)*(r00)*(x3545)))+(((x3540)*(x3542)))+(((r02)*(r22)*((sj5)*(sj5))))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(r20)*(x3543)))+(((x3539)*(x3540)*(x3544)))+(((x3539)*(x3541)*(x3542)))+(((IkReal(-1.00000000000000))*(x3539)*(x3548)))));
IkReal x3549=(cj5)*(cj5);
IkReal x3550=(sj6)*(sj6);
IkReal x3551=(cj6)*(cj6);
IkReal x3552=((r00)*(r20));
IkReal x3553=((cj5)*(sj5));
IkReal x3554=((r01)*(r21));
IkReal x3555=((r21)*(sj6));
IkReal x3556=((sj6)*(x3553));
IkReal x3557=((IkReal(1.00000000000000))*(cj6)*(r00));
IkReal x3558=x3548;
dummyeval[0]=((((r01)*(r22)*(x3556)))+(((IkReal(-1.00000000000000))*(x3549)*(x3558)))+(x3558)+(((IkReal(-1.00000000000000))*(x3549)*(x3555)*(x3557)))+(((cj6)*(r00)*(x3555)))+(((x3549)*(x3551)*(x3552)))+(((r02)*(x3553)*(x3555)))+(((IkReal(-1.00000000000000))*(r22)*(x3553)*(x3557)))+(((r02)*(r22)*((sj5)*(sj5))))+(((IkReal(-1.00000000000000))*(cj6)*(r02)*(r20)*(x3553)))+(((x3551)*(x3554)))+(((x3550)*(x3552)))+(((x3549)*(x3550)*(x3554))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3559=((sj2)*(sj5));
IkReal x3560=((cj5)*(sj6));
IkReal x3561=((sj2)*(sj6));
IkReal x3562=((cj3)*(r00));
IkReal x3563=((cj3)*(r01)*(sj2));
IkReal x3564=((IkReal(1.00000000000000))*(cj1)*(cj6)*(sj2));
if( IKabs(((gconst3)*(((((cj1)*(r21)*(sj2)*(x3560)))+(((x3561)*(x3562)))+(((cj1)*(r22)*(x3559)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x3564)))+(((cj6)*(x3563))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((cj3)*(r02)*(x3559)))+(((IkReal(-1.00000000000000))*(r21)*(x3564)))+(((IkReal(-1.00000000000000))*(cj1)*(r20)*(x3561)))+(((IkReal(-1.00000000000000))*(cj5)*(cj6)*(sj2)*(x3562)))+(((x3560)*(x3563))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(((((cj1)*(r21)*(sj2)*(x3560)))+(((x3561)*(x3562)))+(((cj1)*(r22)*(x3559)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x3564)))+(((cj6)*(x3563)))))), ((gconst3)*(((((cj3)*(r02)*(x3559)))+(((IkReal(-1.00000000000000))*(r21)*(x3564)))+(((IkReal(-1.00000000000000))*(cj1)*(r20)*(x3561)))+(((IkReal(-1.00000000000000))*(cj5)*(cj6)*(sj2)*(x3562)))+(((x3560)*(x3563)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3565=IKsin(j4);
IkReal x3566=IKcos(j4);
IkReal x3567=((IkReal(1.00000000000000))*(r00));
IkReal x3568=((cj5)*(r01));
IkReal x3569=((cj5)*(r11));
IkReal x3570=((cj2)*(cj3));
IkReal x3571=((IkReal(1.00000000000000))*(sj2));
IkReal x3572=((IkReal(1.00000000000000))*(cj5));
IkReal x3573=((cj5)*(r21));
IkReal x3574=((sj5)*(x3565));
IkReal x3575=((cj6)*(x3565));
IkReal x3576=((sj6)*(x3566));
IkReal x3577=((sj6)*(x3565));
IkReal x3578=((sj5)*(x3566));
IkReal x3579=((cj6)*(x3566));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x3576)))+(((x3573)*(x3577)))+(((IkReal(-1.00000000000000))*(r21)*(x3579)))+(((r22)*(x3574)))+(((IkReal(-1.00000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(r20)*(x3572)*(x3575))));
evalcond[1]=((((r21)*(x3575)))+(((IkReal(-1.00000000000000))*(cj3)*(x3571)))+(((x3573)*(x3576)))+(((r20)*(x3577)))+(((r22)*(x3578)))+(((IkReal(-1.00000000000000))*(r20)*(x3572)*(x3579))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(x3567)*(x3575)))+(((IkReal(-1.00000000000000))*(r01)*(x3579)))+(((r02)*(x3574)))+(((x3568)*(x3577)))+(((IkReal(-1.00000000000000))*(x3567)*(x3576)))+(((IkReal(-1.00000000000000))*(cj1)*(x3571))));
evalcond[3]=((((x3569)*(x3577)))+(((r12)*(x3574)))+(((IkReal(-1.00000000000000))*(r11)*(x3579)))+(((IkReal(-1.00000000000000))*(sj1)*(x3571)))+(((IkReal(-1.00000000000000))*(r10)*(x3576)))+(((IkReal(-1.00000000000000))*(r10)*(x3572)*(x3575))));
evalcond[4]=((((r00)*(x3577)))+(((r01)*(x3575)))+(((IkReal(-1.00000000000000))*(cj5)*(x3567)*(x3579)))+(((sj1)*(sj3)))+(((cj1)*(x3570)))+(((r02)*(x3578)))+(((x3568)*(x3576))));
evalcond[5]=((((r10)*(x3577)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)))+(((x3569)*(x3576)))+(((r12)*(x3578)))+(((sj1)*(x3570)))+(((r11)*(x3575)))+(((IkReal(-1.00000000000000))*(r10)*(x3572)*(x3579))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3580=((r22)*(sj5));
IkReal x3581=((cj2)*(cj5));
IkReal x3582=((r21)*(sj6));
IkReal x3583=((cj6)*(r20));
IkReal x3584=((cj6)*(r21));
IkReal x3585=((r20)*(sj6));
IkReal x3586=((IkReal(1.00000000000000))*(cj3)*(sj2));
if( IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x3581)*(x3582)))+(((IkReal(-1.00000000000000))*(x3584)*(x3586)))+(((IkReal(-1.00000000000000))*(cj2)*(x3580)))+(((IkReal(-1.00000000000000))*(x3585)*(x3586)))+(((x3581)*(x3583))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(cj5)*(x3582)*(x3586)))+(((cj3)*(cj5)*(sj2)*(x3583)))+(((IkReal(-1.00000000000000))*(x3580)*(x3586)))+(((cj2)*(x3584)))+(((cj2)*(x3585))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst2)*(((((IkReal(-1.00000000000000))*(x3581)*(x3582)))+(((IkReal(-1.00000000000000))*(x3584)*(x3586)))+(((IkReal(-1.00000000000000))*(cj2)*(x3580)))+(((IkReal(-1.00000000000000))*(x3585)*(x3586)))+(((x3581)*(x3583)))))), ((gconst2)*(((((IkReal(-1.00000000000000))*(cj5)*(x3582)*(x3586)))+(((cj3)*(cj5)*(sj2)*(x3583)))+(((IkReal(-1.00000000000000))*(x3580)*(x3586)))+(((cj2)*(x3584)))+(((cj2)*(x3585)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x3587=IKsin(j4);
IkReal x3588=IKcos(j4);
IkReal x3589=((IkReal(1.00000000000000))*(r00));
IkReal x3590=((cj5)*(r01));
IkReal x3591=((cj5)*(r11));
IkReal x3592=((cj2)*(cj3));
IkReal x3593=((IkReal(1.00000000000000))*(sj2));
IkReal x3594=((IkReal(1.00000000000000))*(cj5));
IkReal x3595=((cj5)*(r21));
IkReal x3596=((sj5)*(x3587));
IkReal x3597=((cj6)*(x3587));
IkReal x3598=((sj6)*(x3588));
IkReal x3599=((sj6)*(x3587));
IkReal x3600=((sj5)*(x3588));
IkReal x3601=((cj6)*(x3588));
evalcond[0]=((((x3595)*(x3599)))+(((IkReal(-1.00000000000000))*(r20)*(x3594)*(x3597)))+(((r22)*(x3596)))+(((IkReal(-1.00000000000000))*(r21)*(x3601)))+(((IkReal(-1.00000000000000))*(r20)*(x3598)))+(((IkReal(-1.00000000000000))*(cj2))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x3594)*(x3601)))+(((r21)*(x3597)))+(((r20)*(x3599)))+(((x3595)*(x3598)))+(((r22)*(x3600)))+(((IkReal(-1.00000000000000))*(cj3)*(x3593))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x3593)))+(((IkReal(-1.00000000000000))*(x3589)*(x3598)))+(((r02)*(x3596)))+(((x3590)*(x3599)))+(((IkReal(-1.00000000000000))*(cj5)*(x3589)*(x3597)))+(((IkReal(-1.00000000000000))*(r01)*(x3601))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x3594)*(x3597)))+(((IkReal(-1.00000000000000))*(r10)*(x3598)))+(((x3591)*(x3599)))+(((r12)*(x3596)))+(((IkReal(-1.00000000000000))*(sj1)*(x3593)))+(((IkReal(-1.00000000000000))*(r11)*(x3601))));
evalcond[4]=((((r02)*(x3600)))+(((x3590)*(x3598)))+(((IkReal(-1.00000000000000))*(cj5)*(x3589)*(x3601)))+(((sj1)*(sj3)))+(((cj1)*(x3592)))+(((r00)*(x3599)))+(((r01)*(x3597))));
evalcond[5]=((((sj1)*(x3592)))+(((x3591)*(x3598)))+(((r11)*(x3597)))+(((r10)*(x3599)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)))+(((IkReal(-1.00000000000000))*(r10)*(x3594)*(x3601)))+(((r12)*(x3600))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3602=((cj2)*(cj6));
IkReal x3603=((cj5)*(sj6));
IkReal x3604=((IkReal(1.00000000000000))*(sj1)*(sj2));
IkReal x3605=((r21)*(x3604));
if( IKabs(((gconst1)*(((((cj2)*(r10)*(sj6)))+(((r11)*(x3602)))+(((IkReal(-1.00000000000000))*(cj6)*(x3605)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x3604))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((cj2)*(r11)*(x3603)))+(((IkReal(-1.00000000000000))*(r22)*(sj5)*(x3604)))+(((IkReal(-1.00000000000000))*(x3603)*(x3605)))+(((cj5)*(cj6)*(r20)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(cj5)*(r10)*(x3602)))+(((cj2)*(r12)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst1)*(((((cj2)*(r10)*(sj6)))+(((r11)*(x3602)))+(((IkReal(-1.00000000000000))*(cj6)*(x3605)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x3604)))))), ((gconst1)*(((((cj2)*(r11)*(x3603)))+(((IkReal(-1.00000000000000))*(r22)*(sj5)*(x3604)))+(((IkReal(-1.00000000000000))*(x3603)*(x3605)))+(((cj5)*(cj6)*(r20)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(cj5)*(r10)*(x3602)))+(((cj2)*(r12)*(sj5)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x3606=IKsin(j4);
IkReal x3607=IKcos(j4);
IkReal x3608=((IkReal(1.00000000000000))*(sj2));
IkReal x3609=((IkReal(1.00000000000000))*(cj6));
IkReal x3610=((sj5)*(x3606));
IkReal x3611=((cj5)*(x3606));
IkReal x3612=((IkReal(1.00000000000000))*(sj6)*(x3607));
evalcond[0]=((((r21)*(sj6)*(x3611)))+(((r22)*(x3610)))+(((IkReal(-1.00000000000000))*(r21)*(x3607)*(x3609)))+(((IkReal(-1.00000000000000))*(r20)*(x3612)))+(((IkReal(-1.00000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(r20)*(x3609)*(x3611))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(x3612)))+(((r01)*(sj6)*(x3611)))+(((r02)*(x3610)))+(((IkReal(-1.00000000000000))*(r01)*(x3607)*(x3609)))+(((IkReal(-1.00000000000000))*(r00)*(x3609)*(x3611)))+(((IkReal(-1.00000000000000))*(cj1)*(x3608))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x3612)))+(((IkReal(-1.00000000000000))*(r10)*(x3609)*(x3611)))+(((r11)*(sj6)*(x3611)))+(((IkReal(-1.00000000000000))*(r11)*(x3607)*(x3609)))+(((IkReal(-1.00000000000000))*(sj1)*(x3608)))+(((r12)*(x3610))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(sj2);
dummyeval[0]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x3613=(sj1)*(sj1);
IkReal x3614=(cj1)*(cj1);
dummyeval[0]=((((cj2)*(x3614)))+(((cj2)*(x3613))));
dummyeval[1]=((x3613)+(x3614));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj2;
dummyeval[1]=cj1;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x3615=((sj4)*(sj5));
IkReal x3616=((cj6)*(r20));
IkReal x3617=((IkReal(1.00000000000000))*(cj4));
IkReal x3618=((IkReal(0.390000000000000))*(sj5));
IkReal x3619=((r21)*(sj6));
IkReal x3620=((IkReal(0.390000000000000))*(cj5));
IkReal x3621=((cj6)*(r00));
IkReal x3622=((IkReal(0.000500000000000000))*(cj6));
IkReal x3623=((r11)*(sj6));
IkReal x3624=((cj5)*(sj4));
IkReal x3625=((r01)*(sj6));
IkReal x3626=((r20)*(sj6));
IkReal x3627=((r10)*(sj6));
IkReal x3628=((cj6)*(r10));
IkReal x3629=((cj6)*(r21));
IkReal x3630=((r00)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((cj5)*(r22)))+(((sj5)*(x3616)))+(((IkReal(-1.00000000000000))*(sj5)*(x3619))));
evalcond[2]=((IkReal(-0.00200000000000000))+(((IkReal(0.000500000000000000))*(x3626)))+(((r21)*(x3622)))+(((IkReal(-1.00000000000000))*(x3618)*(x3619)))+(((IkReal(-1.00000000000000))*(pz)))+(((x3616)*(x3618)))+(((r22)*(x3620))));
evalcond[3]=((((r01)*(x3622)))+(((x3618)*(x3621)))+(((r02)*(x3620)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.000500000000000000))*(x3630)))+(((IkReal(-1.00000000000000))*(x3618)*(x3625)))+(((IkReal(-0.400000000000000))*(sj1))));
evalcond[4]=((((IkReal(0.000500000000000000))*(x3627)))+(((x3618)*(x3628)))+(((IkReal(0.400000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(py)))+(((r11)*(x3622)))+(((IkReal(-1.00000000000000))*(x3618)*(x3623)))+(((r12)*(x3620))));
evalcond[5]=((IkReal(-1.00000000000000))+(((x3619)*(x3624)))+(((r22)*(x3615)))+(((IkReal(-1.00000000000000))*(x3616)*(x3624)))+(((IkReal(-1.00000000000000))*(x3617)*(x3626)))+(((IkReal(-1.00000000000000))*(x3617)*(x3629))));
evalcond[6]=((((sj4)*(x3629)))+(((sj4)*(x3626)))+(((IkReal(-1.00000000000000))*(cj5)*(x3616)*(x3617)))+(((cj4)*(r22)*(sj5)))+(((cj4)*(cj5)*(x3619))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x3617)*(x3630)))+(((r02)*(x3615)))+(((x3624)*(x3625)))+(((IkReal(-1.00000000000000))*(x3621)*(x3624)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x3617))));
evalcond[8]=((((IkReal(-1.00000000000000))*(cj6)*(r11)*(x3617)))+(((IkReal(-1.00000000000000))*(x3617)*(x3627)))+(((x3623)*(x3624)))+(((IkReal(-1.00000000000000))*(x3624)*(x3628)))+(((r12)*(x3615))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3631=((IkReal(1.00000000000000))*(sj4));
IkReal x3632=((r00)*(sj6));
IkReal x3633=((cj1)*(cj6));
IkReal x3634=((cj4)*(sj5));
IkReal x3635=((cj4)*(cj5));
IkReal x3636=((r01)*(sj1));
IkReal x3637=((IkReal(1.00000000000000))*(sj6));
IkReal x3638=((cj1)*(r02));
IkReal x3639=((cj1)*(r01));
IkReal x3640=((IkReal(1.00000000000000))*(r02)*(sj1));
IkReal x3641=((cj6)*(r00)*(sj1));
if( IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(sj1)*(x3631)*(x3632)))+(((IkReal(-1.00000000000000))*(x3635)*(x3636)*(x3637)))+(((IkReal(-1.00000000000000))*(sj5)*(x3637)*(x3639)))+(((IkReal(-1.00000000000000))*(x3634)*(x3640)))+(((x3635)*(x3641)))+(((r00)*(sj5)*(x3633)))+(((IkReal(-1.00000000000000))*(cj6)*(x3631)*(x3636)))+(((cj5)*(x3638))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(r01)*(x3631)*(x3633)))+(((sj5)*(sj6)*(x3636)))+(((IkReal(-1.00000000000000))*(x3634)*(x3638)))+(((r00)*(x3633)*(x3635)))+(((IkReal(-1.00000000000000))*(sj5)*(x3641)))+(((IkReal(-1.00000000000000))*(cj5)*(x3640)))+(((IkReal(-1.00000000000000))*(cj1)*(x3631)*(x3632)))+(((IkReal(-1.00000000000000))*(x3635)*(x3637)*(x3639))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst6)*(((((IkReal(-1.00000000000000))*(sj1)*(x3631)*(x3632)))+(((IkReal(-1.00000000000000))*(x3635)*(x3636)*(x3637)))+(((IkReal(-1.00000000000000))*(sj5)*(x3637)*(x3639)))+(((IkReal(-1.00000000000000))*(x3634)*(x3640)))+(((x3635)*(x3641)))+(((r00)*(sj5)*(x3633)))+(((IkReal(-1.00000000000000))*(cj6)*(x3631)*(x3636)))+(((cj5)*(x3638)))))), ((gconst6)*(((((IkReal(-1.00000000000000))*(r01)*(x3631)*(x3633)))+(((sj5)*(sj6)*(x3636)))+(((IkReal(-1.00000000000000))*(x3634)*(x3638)))+(((r00)*(x3633)*(x3635)))+(((IkReal(-1.00000000000000))*(sj5)*(x3641)))+(((IkReal(-1.00000000000000))*(cj5)*(x3640)))+(((IkReal(-1.00000000000000))*(cj1)*(x3631)*(x3632)))+(((IkReal(-1.00000000000000))*(x3635)*(x3637)*(x3639)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x3642=IKcos(j3);
IkReal x3643=IKsin(j3);
IkReal x3644=((r11)*(sj6));
IkReal x3645=((IkReal(1.00000000000000))*(sj5));
IkReal x3646=((sj4)*(sj6));
IkReal x3647=((cj4)*(sj5));
IkReal x3648=((cj6)*(sj4));
IkReal x3649=((cj4)*(cj5));
IkReal x3650=((r01)*(sj6));
IkReal x3651=((cj6)*(sj5));
IkReal x3652=((sj1)*(x3642));
IkReal x3653=((cj1)*(x3642));
IkReal x3654=((IkReal(1.00000000000000))*(x3643));
IkReal x3655=((cj1)*(x3654));
IkReal x3656=((IkReal(1.00000000000000))*(cj6)*(x3649));
evalcond[0]=((((r00)*(x3651)))+(((IkReal(-1.00000000000000))*(x3645)*(x3650)))+(x3652)+(((cj5)*(r02)))+(((IkReal(-1.00000000000000))*(x3655))));
evalcond[1]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x3644)*(x3645)))+(((IkReal(-1.00000000000000))*(x3653)))+(((r10)*(x3651)))+(((IkReal(-1.00000000000000))*(sj1)*(x3654))));
evalcond[2]=((((r00)*(x3646)))+(((r01)*(x3648)))+(((x3649)*(x3650)))+(x3653)+(((r02)*(x3647)))+(((IkReal(-1.00000000000000))*(r00)*(x3656)))+(((sj1)*(x3643))));
evalcond[3]=((((r11)*(x3648)))+(((r12)*(x3647)))+(((IkReal(-1.00000000000000))*(r10)*(x3656)))+(x3652)+(((r10)*(x3646)))+(((x3644)*(x3649)))+(((IkReal(-1.00000000000000))*(x3655))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3657=((cj5)*(r12));
IkReal x3658=((cj6)*(sj5));
IkReal x3659=((IkReal(1.00000000000000))*(sj1));
IkReal x3660=((cj5)*(r02));
IkReal x3661=((IkReal(1.00000000000000))*(cj1));
IkReal x3662=((r01)*(sj5)*(sj6));
IkReal x3663=((r11)*(sj5)*(sj6));
if( IKabs(((gconst5)*(((((r10)*(sj1)*(x3658)))+(((cj1)*(x3660)))+(((IkReal(-1.00000000000000))*(x3661)*(x3662)))+(((IkReal(-1.00000000000000))*(x3659)*(x3663)))+(((sj1)*(x3657)))+(((cj1)*(r00)*(x3658))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((cj1)*(r10)*(x3658)))+(((IkReal(-1.00000000000000))*(x3661)*(x3663)))+(((sj1)*(x3662)))+(((cj1)*(x3657)))+(((IkReal(-1.00000000000000))*(r00)*(x3658)*(x3659)))+(((IkReal(-1.00000000000000))*(x3659)*(x3660))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst5)*(((((r10)*(sj1)*(x3658)))+(((cj1)*(x3660)))+(((IkReal(-1.00000000000000))*(x3661)*(x3662)))+(((IkReal(-1.00000000000000))*(x3659)*(x3663)))+(((sj1)*(x3657)))+(((cj1)*(r00)*(x3658)))))), ((gconst5)*(((((cj1)*(r10)*(x3658)))+(((IkReal(-1.00000000000000))*(x3661)*(x3663)))+(((sj1)*(x3662)))+(((cj1)*(x3657)))+(((IkReal(-1.00000000000000))*(r00)*(x3658)*(x3659)))+(((IkReal(-1.00000000000000))*(x3659)*(x3660)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x3664=IKcos(j3);
IkReal x3665=IKsin(j3);
IkReal x3666=((r11)*(sj6));
IkReal x3667=((IkReal(1.00000000000000))*(sj5));
IkReal x3668=((sj4)*(sj6));
IkReal x3669=((cj4)*(sj5));
IkReal x3670=((cj6)*(sj4));
IkReal x3671=((cj4)*(cj5));
IkReal x3672=((r01)*(sj6));
IkReal x3673=((cj6)*(sj5));
IkReal x3674=((sj1)*(x3664));
IkReal x3675=((cj1)*(x3664));
IkReal x3676=((IkReal(1.00000000000000))*(x3665));
IkReal x3677=((cj1)*(x3676));
IkReal x3678=((IkReal(1.00000000000000))*(cj6)*(x3671));
evalcond[0]=((((r00)*(x3673)))+(x3674)+(((IkReal(-1.00000000000000))*(x3667)*(x3672)))+(((IkReal(-1.00000000000000))*(x3677)))+(((cj5)*(r02))));
evalcond[1]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x3666)*(x3667)))+(((IkReal(-1.00000000000000))*(sj1)*(x3676)))+(((IkReal(-1.00000000000000))*(x3675)))+(((r10)*(x3673))));
evalcond[2]=((((r01)*(x3670)))+(((sj1)*(x3665)))+(((r00)*(x3668)))+(x3675)+(((x3671)*(x3672)))+(((r02)*(x3669)))+(((IkReal(-1.00000000000000))*(r00)*(x3678))));
evalcond[3]=((((r11)*(x3670)))+(((r12)*(x3669)))+(((r10)*(x3668)))+(((IkReal(-1.00000000000000))*(r10)*(x3678)))+(x3674)+(((x3666)*(x3671)))+(((IkReal(-1.00000000000000))*(x3677))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3679=((sj4)*(sj5));
IkReal x3680=((cj6)*(r20));
IkReal x3681=((IkReal(1.00000000000000))*(cj4));
IkReal x3682=((IkReal(0.390000000000000))*(sj5));
IkReal x3683=((r21)*(sj6));
IkReal x3684=((IkReal(0.390000000000000))*(cj5));
IkReal x3685=((cj6)*(r00));
IkReal x3686=((IkReal(0.000500000000000000))*(cj6));
IkReal x3687=((r11)*(sj6));
IkReal x3688=((cj5)*(sj4));
IkReal x3689=((r01)*(sj6));
IkReal x3690=((r20)*(sj6));
IkReal x3691=((r10)*(sj6));
IkReal x3692=((cj6)*(r10));
IkReal x3693=((cj6)*(r21));
IkReal x3694=((r00)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x3683)))+(((sj5)*(x3680))));
evalcond[2]=((IkReal(0.00200000000000000))+(((r21)*(x3686)))+(((x3680)*(x3682)))+(((IkReal(0.000500000000000000))*(x3690)))+(((IkReal(-1.00000000000000))*(x3682)*(x3683)))+(((IkReal(-1.00000000000000))*(pz)))+(((r22)*(x3684))));
evalcond[3]=((((r01)*(x3686)))+(((IkReal(0.000500000000000000))*(x3694)))+(((IkReal(-1.00000000000000))*(x3682)*(x3689)))+(((IkReal(-1.00000000000000))*(px)))+(((x3682)*(x3685)))+(((r02)*(x3684)))+(((IkReal(-0.400000000000000))*(sj1))));
evalcond[4]=((((IkReal(0.400000000000000))*(cj1)))+(((IkReal(0.000500000000000000))*(x3691)))+(((IkReal(-1.00000000000000))*(x3682)*(x3687)))+(((x3682)*(x3692)))+(((IkReal(-1.00000000000000))*(py)))+(((r12)*(x3684)))+(((r11)*(x3686))));
evalcond[5]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x3681)*(x3690)))+(((IkReal(-1.00000000000000))*(x3681)*(x3693)))+(((IkReal(-1.00000000000000))*(x3680)*(x3688)))+(((r22)*(x3679)))+(((x3683)*(x3688))));
evalcond[6]=((((cj4)*(cj5)*(x3683)))+(((cj4)*(r22)*(sj5)))+(((sj4)*(x3693)))+(((sj4)*(x3690)))+(((IkReal(-1.00000000000000))*(cj5)*(x3680)*(x3681))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x3681)*(x3694)))+(((IkReal(-1.00000000000000))*(x3685)*(x3688)))+(((x3688)*(x3689)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x3681)))+(((r02)*(x3679))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x3681)*(x3691)))+(((r12)*(x3679)))+(((x3687)*(x3688)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x3681)))+(((IkReal(-1.00000000000000))*(x3688)*(x3692))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3695=((sj1)*(sj6));
IkReal x3696=((r00)*(sj4));
IkReal x3697=((IkReal(1.00000000000000))*(r01));
IkReal x3698=((cj1)*(cj6));
IkReal x3699=((cj1)*(sj6));
IkReal x3700=((cj4)*(cj5));
IkReal x3701=((r02)*(sj1));
IkReal x3702=((cj4)*(sj5));
IkReal x3703=((cj1)*(r02));
IkReal x3704=((cj6)*(r00)*(sj1));
if( IKabs(((gconst8)*(((((r00)*(sj5)*(x3698)))+(((x3695)*(x3696)))+(((cj5)*(x3703)))+(((IkReal(-1.00000000000000))*(x3700)*(x3704)))+(((IkReal(-1.00000000000000))*(sj5)*(x3697)*(x3699)))+(((cj6)*(r01)*(sj1)*(sj4)))+(((r01)*(x3695)*(x3700)))+(((x3701)*(x3702))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(x3702)*(x3703)))+(((IkReal(-1.00000000000000))*(sj4)*(x3697)*(x3698)))+(((IkReal(-1.00000000000000))*(sj5)*(x3695)*(x3697)))+(((cj5)*(x3701)))+(((IkReal(-1.00000000000000))*(x3697)*(x3699)*(x3700)))+(((r00)*(x3698)*(x3700)))+(((sj5)*(x3704)))+(((IkReal(-1.00000000000000))*(x3696)*(x3699))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst8)*(((((r00)*(sj5)*(x3698)))+(((x3695)*(x3696)))+(((cj5)*(x3703)))+(((IkReal(-1.00000000000000))*(x3700)*(x3704)))+(((IkReal(-1.00000000000000))*(sj5)*(x3697)*(x3699)))+(((cj6)*(r01)*(sj1)*(sj4)))+(((r01)*(x3695)*(x3700)))+(((x3701)*(x3702)))))), ((gconst8)*(((((IkReal(-1.00000000000000))*(x3702)*(x3703)))+(((IkReal(-1.00000000000000))*(sj4)*(x3697)*(x3698)))+(((IkReal(-1.00000000000000))*(sj5)*(x3695)*(x3697)))+(((cj5)*(x3701)))+(((IkReal(-1.00000000000000))*(x3697)*(x3699)*(x3700)))+(((r00)*(x3698)*(x3700)))+(((sj5)*(x3704)))+(((IkReal(-1.00000000000000))*(x3696)*(x3699)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x3705=IKsin(j3);
IkReal x3706=IKcos(j3);
IkReal x3707=((r11)*(sj6));
IkReal x3708=((IkReal(1.00000000000000))*(sj5));
IkReal x3709=((sj4)*(sj6));
IkReal x3710=((cj4)*(sj5));
IkReal x3711=((cj6)*(sj4));
IkReal x3712=((cj4)*(cj5));
IkReal x3713=((r01)*(sj6));
IkReal x3714=((cj6)*(sj5));
IkReal x3715=((sj1)*(x3705));
IkReal x3716=((cj1)*(x3705));
IkReal x3717=((IkReal(1.00000000000000))*(x3706));
IkReal x3718=((cj1)*(x3717));
IkReal x3719=((IkReal(1.00000000000000))*(cj6)*(x3712));
evalcond[0]=((((sj1)*(x3706)))+(((r00)*(x3714)))+(x3716)+(((IkReal(-1.00000000000000))*(x3708)*(x3713)))+(((cj5)*(r02))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3707)*(x3708)))+(((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x3718)))+(x3715)+(((r10)*(x3714))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x3719)))+(((r00)*(x3709)))+(((IkReal(-1.00000000000000))*(x3718)))+(((x3712)*(x3713)))+(((r01)*(x3711)))+(x3715)+(((r02)*(x3710))));
evalcond[3]=((((r11)*(x3711)))+(((r12)*(x3710)))+(((IkReal(-1.00000000000000))*(r10)*(x3719)))+(((x3707)*(x3712)))+(((IkReal(-1.00000000000000))*(sj1)*(x3717)))+(((r10)*(x3709)))+(((IkReal(-1.00000000000000))*(x3716))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3720=((sj1)*(sj5));
IkReal x3721=((cj6)*(r10));
IkReal x3722=((cj5)*(sj1));
IkReal x3723=((cj1)*(cj5));
IkReal x3724=((cj1)*(sj5));
IkReal x3725=((cj6)*(r00));
IkReal x3726=((r11)*(sj6));
IkReal x3727=((IkReal(1.00000000000000))*(r01)*(sj6));
if( IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(x3724)*(x3727)))+(((r02)*(x3723)))+(((x3724)*(x3725)))+(((r12)*(x3722)))+(((x3720)*(x3721)))+(((IkReal(-1.00000000000000))*(x3720)*(x3726))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((r02)*(x3722)))+(((x3724)*(x3726)))+(((x3720)*(x3725)))+(((IkReal(-1.00000000000000))*(x3720)*(x3727)))+(((IkReal(-1.00000000000000))*(x3721)*(x3724)))+(((IkReal(-1.00000000000000))*(r12)*(x3723))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst7)*(((((IkReal(-1.00000000000000))*(x3724)*(x3727)))+(((r02)*(x3723)))+(((x3724)*(x3725)))+(((r12)*(x3722)))+(((x3720)*(x3721)))+(((IkReal(-1.00000000000000))*(x3720)*(x3726)))))), ((gconst7)*(((((r02)*(x3722)))+(((x3724)*(x3726)))+(((x3720)*(x3725)))+(((IkReal(-1.00000000000000))*(x3720)*(x3727)))+(((IkReal(-1.00000000000000))*(x3721)*(x3724)))+(((IkReal(-1.00000000000000))*(r12)*(x3723)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x3728=IKsin(j3);
IkReal x3729=IKcos(j3);
IkReal x3730=((r11)*(sj6));
IkReal x3731=((IkReal(1.00000000000000))*(sj5));
IkReal x3732=((sj4)*(sj6));
IkReal x3733=((cj4)*(sj5));
IkReal x3734=((cj6)*(sj4));
IkReal x3735=((cj4)*(cj5));
IkReal x3736=((r01)*(sj6));
IkReal x3737=((cj6)*(sj5));
IkReal x3738=((sj1)*(x3728));
IkReal x3739=((cj1)*(x3728));
IkReal x3740=((IkReal(1.00000000000000))*(x3729));
IkReal x3741=((cj1)*(x3740));
IkReal x3742=((IkReal(1.00000000000000))*(cj6)*(x3735));
evalcond[0]=((((r00)*(x3737)))+(((sj1)*(x3729)))+(x3739)+(((IkReal(-1.00000000000000))*(x3731)*(x3736)))+(((cj5)*(r02))));
evalcond[1]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x3741)))+(((IkReal(-1.00000000000000))*(x3730)*(x3731)))+(x3738)+(((r10)*(x3737))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x3742)))+(((r01)*(x3734)))+(((r00)*(x3732)))+(((IkReal(-1.00000000000000))*(x3741)))+(((x3735)*(x3736)))+(((r02)*(x3733)))+(x3738));
evalcond[3]=((((x3730)*(x3735)))+(((r11)*(x3734)))+(((r12)*(x3733)))+(((IkReal(-1.00000000000000))*(r10)*(x3742)))+(((IkReal(-1.00000000000000))*(sj1)*(x3740)))+(((r10)*(x3732)))+(((IkReal(-1.00000000000000))*(x3739))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x3743=((sj4)*(sj5));
IkReal x3744=((IkReal(0.390000000000000))*(sj5));
IkReal x3745=((r21)*(sj6));
IkReal x3746=((IkReal(0.390000000000000))*(cj5));
IkReal x3747=((cj6)*(r00));
IkReal x3748=((IkReal(0.000500000000000000))*(cj6));
IkReal x3749=((r11)*(sj6));
IkReal x3750=((cj5)*(sj4));
IkReal x3751=((IkReal(1.00000000000000))*(r20));
IkReal x3752=((cj4)*(sj6));
IkReal x3753=((r01)*(sj6));
IkReal x3754=((IkReal(0.000500000000000000))*(sj6));
IkReal x3755=((IkReal(1.00000000000000))*(r10));
IkReal x3756=((IkReal(1.00000000000000))*(cj4)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x3754)))+(((cj6)*(r20)*(x3744)))+(((r22)*(x3746)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(x3744)*(x3745)))+(((r21)*(x3748)))+(((IkReal(-0.00200000000000000))*(cj2))));
evalcond[2]=((IkReal(-0.400000000000000))+(((r00)*(x3754)))+(((r01)*(x3748)))+(((x3744)*(x3747)))+(((IkReal(-1.00000000000000))*(px)))+(((r02)*(x3746)))+(((IkReal(-1.00000000000000))*(x3744)*(x3753))));
evalcond[3]=((((r12)*(x3746)))+(((r11)*(x3748)))+(((r10)*(x3754)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.00200000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x3744)*(x3749)))+(((cj6)*(r10)*(x3744))));
evalcond[4]=((((x3745)*(x3750)))+(((IkReal(-1.00000000000000))*(cj6)*(x3750)*(x3751)))+(((IkReal(-1.00000000000000))*(r21)*(x3756)))+(((r22)*(x3743)))+(((IkReal(-1.00000000000000))*(x3751)*(x3752)))+(((IkReal(-1.00000000000000))*(cj2))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x3747)*(x3750)))+(((IkReal(-1.00000000000000))*(r01)*(x3756)))+(((r02)*(x3743)))+(((x3750)*(x3753)))+(((IkReal(-1.00000000000000))*(r00)*(x3752))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x3752)*(x3755)))+(((IkReal(-1.00000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj6)*(x3750)*(x3755)))+(((r12)*(x3743)))+(((IkReal(-1.00000000000000))*(r11)*(x3756)))+(((x3749)*(x3750))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3757=((IkReal(1.00000000000000))*(cj6));
IkReal x3758=((IkReal(1.00000000000000))*(cj5));
IkReal x3759=((r01)*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj4)*(x3758)*(x3759)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(x3757)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(sj6)))+(((cj4)*(cj5)*(cj6)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj5)*(x3759)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3757)))+(((IkReal(-1.00000000000000))*(r02)*(x3758))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj4)*(x3758)*(x3759)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(x3757)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(sj6)))+(((cj4)*(cj5)*(cj6)*(r00)))))+IKsqr(((((sj5)*(x3759)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3757)))+(((IkReal(-1.00000000000000))*(r02)*(x3758)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj4)*(x3758)*(x3759)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(x3757)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(sj6)))+(((cj4)*(cj5)*(cj6)*(r00)))), ((((sj5)*(x3759)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x3757)))+(((IkReal(-1.00000000000000))*(r02)*(x3758)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x3760=IKsin(j3);
IkReal x3761=IKcos(j3);
IkReal x3762=((r11)*(sj6));
IkReal x3763=((IkReal(1.00000000000000))*(sj5));
IkReal x3764=((sj4)*(sj6));
IkReal x3765=((cj4)*(sj5));
IkReal x3766=((cj6)*(sj4));
IkReal x3767=((cj4)*(cj5));
IkReal x3768=((r01)*(sj6));
IkReal x3769=((r21)*(sj6));
IkReal x3770=((cj6)*(sj5));
IkReal x3771=((IkReal(1.00000000000000))*(cj6)*(x3767));
evalcond[0]=((((cj5)*(r22)))+(((sj2)*(x3760)))+(((IkReal(-1.00000000000000))*(x3763)*(x3769)))+(((r20)*(x3770))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3763)*(x3768)))+(x3761)+(((r00)*(x3770)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x3762)*(x3763)))+(((IkReal(-1.00000000000000))*(cj2)*(x3760)))+(((r10)*(x3770))));
evalcond[3]=((((r22)*(x3765)))+(((IkReal(-1.00000000000000))*(r20)*(x3771)))+(((r21)*(x3766)))+(((IkReal(-1.00000000000000))*(sj2)*(x3761)))+(((x3767)*(x3769)))+(((r20)*(x3764))));
evalcond[4]=((((r02)*(x3765)))+(((x3767)*(x3768)))+(x3760)+(((IkReal(-1.00000000000000))*(r00)*(x3771)))+(((r00)*(x3764)))+(((r01)*(x3766))));
evalcond[5]=((((r10)*(x3764)))+(((cj2)*(x3761)))+(((r11)*(x3766)))+(((x3762)*(x3767)))+(((r12)*(x3765)))+(((IkReal(-1.00000000000000))*(r10)*(x3771))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x3772=((sj4)*(sj5));
IkReal x3773=((IkReal(0.390000000000000))*(sj5));
IkReal x3774=((r21)*(sj6));
IkReal x3775=((IkReal(0.390000000000000))*(cj5));
IkReal x3776=((cj6)*(r00));
IkReal x3777=((IkReal(0.000500000000000000))*(cj6));
IkReal x3778=((r11)*(sj6));
IkReal x3779=((cj5)*(sj4));
IkReal x3780=((IkReal(1.00000000000000))*(r20));
IkReal x3781=((cj4)*(sj6));
IkReal x3782=((r01)*(sj6));
IkReal x3783=((IkReal(0.000500000000000000))*(sj6));
IkReal x3784=((IkReal(1.00000000000000))*(r10));
IkReal x3785=((IkReal(1.00000000000000))*(cj4)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((r21)*(x3777)))+(((r22)*(x3775)))+(((cj6)*(r20)*(x3773)))+(((r20)*(x3783)))+(((IkReal(-1.00000000000000))*(x3773)*(x3774)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-0.00200000000000000))*(cj2))));
evalcond[2]=((IkReal(0.400000000000000))+(((r02)*(x3775)))+(((x3773)*(x3776)))+(((IkReal(-1.00000000000000))*(px)))+(((r00)*(x3783)))+(((IkReal(-1.00000000000000))*(x3773)*(x3782)))+(((r01)*(x3777))));
evalcond[3]=((((cj6)*(r10)*(x3773)))+(((IkReal(0.00200000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x3773)*(x3778)))+(((IkReal(-1.00000000000000))*(py)))+(((r11)*(x3777)))+(((r12)*(x3775)))+(((r10)*(x3783))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj6)*(x3779)*(x3780)))+(((r22)*(x3772)))+(((IkReal(-1.00000000000000))*(x3780)*(x3781)))+(((IkReal(-1.00000000000000))*(r21)*(x3785)))+(((x3774)*(x3779)))+(((IkReal(-1.00000000000000))*(cj2))));
evalcond[5]=((((r02)*(x3772)))+(((IkReal(-1.00000000000000))*(r01)*(x3785)))+(((IkReal(-1.00000000000000))*(r00)*(x3781)))+(((x3779)*(x3782)))+(((IkReal(-1.00000000000000))*(x3776)*(x3779))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj6)*(x3779)*(x3784)))+(sj2)+(((x3778)*(x3779)))+(((IkReal(-1.00000000000000))*(x3781)*(x3784)))+(((IkReal(-1.00000000000000))*(r11)*(x3785)))+(((r12)*(x3772))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3786=((cj4)*(cj5));
IkReal x3787=((r01)*(sj6));
IkReal x3788=((cj6)*(r00));
if( IKabs(((((r00)*(sj4)*(sj6)))+(((cj6)*(r01)*(sj4)))+(((cj4)*(r02)*(sj5)))+(((x3786)*(x3787)))+(((IkReal(-1.00000000000000))*(x3786)*(x3788))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj5)*(x3788)))+(((IkReal(-1.00000000000000))*(sj5)*(x3787)))+(((cj5)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r00)*(sj4)*(sj6)))+(((cj6)*(r01)*(sj4)))+(((cj4)*(r02)*(sj5)))+(((x3786)*(x3787)))+(((IkReal(-1.00000000000000))*(x3786)*(x3788)))))+IKsqr(((((sj5)*(x3788)))+(((IkReal(-1.00000000000000))*(sj5)*(x3787)))+(((cj5)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((r00)*(sj4)*(sj6)))+(((cj6)*(r01)*(sj4)))+(((cj4)*(r02)*(sj5)))+(((x3786)*(x3787)))+(((IkReal(-1.00000000000000))*(x3786)*(x3788)))), ((((sj5)*(x3788)))+(((IkReal(-1.00000000000000))*(sj5)*(x3787)))+(((cj5)*(r02)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x3789=IKsin(j3);
IkReal x3790=IKcos(j3);
IkReal x3791=((r11)*(sj6));
IkReal x3792=((IkReal(1.00000000000000))*(sj5));
IkReal x3793=((cj6)*(sj4));
IkReal x3794=((sj4)*(sj6));
IkReal x3795=((cj4)*(sj5));
IkReal x3796=((cj4)*(cj5));
IkReal x3797=((r01)*(sj6));
IkReal x3798=((r21)*(sj6));
IkReal x3799=((cj6)*(sj5));
IkReal x3800=((IkReal(1.00000000000000))*(x3790));
IkReal x3801=((IkReal(1.00000000000000))*(cj6)*(x3796));
evalcond[0]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(x3792)*(x3798)))+(((sj2)*(x3789)))+(((r20)*(x3799))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3800)))+(((r00)*(x3799)))+(((IkReal(-1.00000000000000))*(x3792)*(x3797)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((r10)*(x3799)))+(((IkReal(-1.00000000000000))*(x3791)*(x3792)))+(((cj2)*(x3789))));
evalcond[3]=((((r21)*(x3793)))+(((x3796)*(x3798)))+(((IkReal(-1.00000000000000))*(sj2)*(x3800)))+(((r22)*(x3795)))+(((IkReal(-1.00000000000000))*(r20)*(x3801)))+(((r20)*(x3794))));
evalcond[4]=((((x3796)*(x3797)))+(((IkReal(-1.00000000000000))*(r00)*(x3801)))+(((r02)*(x3795)))+(((IkReal(-1.00000000000000))*(x3789)))+(((r00)*(x3794)))+(((r01)*(x3793))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj2)*(x3800)))+(((x3791)*(x3796)))+(((r10)*(x3794)))+(((r12)*(x3795)))+(((r11)*(x3793)))+(((IkReal(-1.00000000000000))*(r10)*(x3801))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x3802=((sj4)*(sj5));
IkReal x3803=((IkReal(0.390000000000000))*(sj5));
IkReal x3804=((r21)*(sj6));
IkReal x3805=((IkReal(0.390000000000000))*(cj5));
IkReal x3806=((cj6)*(r00));
IkReal x3807=((IkReal(0.000500000000000000))*(cj6));
IkReal x3808=((r11)*(sj6));
IkReal x3809=((cj5)*(sj4));
IkReal x3810=((r01)*(sj6));
IkReal x3811=((IkReal(1.00000000000000))*(r20));
IkReal x3812=((cj4)*(sj6));
IkReal x3813=((IkReal(0.000500000000000000))*(sj6));
IkReal x3814=((IkReal(1.00000000000000))*(r10));
IkReal x3815=((IkReal(1.00000000000000))*(cj4)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((r21)*(x3807)))+(((r22)*(x3805)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(x3803)*(x3804)))+(((r20)*(x3813)))+(((cj6)*(r20)*(x3803))));
evalcond[2]=((((r01)*(x3807)))+(((IkReal(-1.00000000000000))*(x3803)*(x3810)))+(((r02)*(x3805)))+(((IkReal(-1.00000000000000))*(px)))+(((x3803)*(x3806)))+(((IkReal(-0.00200000000000000))*(cj1)))+(((IkReal(-0.400000000000000))*(sj1)))+(((r00)*(x3813))));
evalcond[3]=((((r11)*(x3807)))+(((r12)*(x3805)))+(((IkReal(0.400000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(py)))+(((r10)*(x3813)))+(((IkReal(-0.00200000000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(x3803)*(x3808)))+(((cj6)*(r10)*(x3803))));
evalcond[4]=((((x3804)*(x3809)))+(((r22)*(x3802)))+(((IkReal(-1.00000000000000))*(cj6)*(x3809)*(x3811)))+(((IkReal(-1.00000000000000))*(r21)*(x3815)))+(((IkReal(-1.00000000000000))*(x3811)*(x3812))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r01)*(x3815)))+(((IkReal(-1.00000000000000))*(r00)*(x3812)))+(((x3809)*(x3810)))+(((r02)*(x3802)))+(((IkReal(-1.00000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(x3806)*(x3809))));
evalcond[6]=((((IkReal(-1.00000000000000))*(sj1)))+(((r12)*(x3802)))+(((x3808)*(x3809)))+(((IkReal(-1.00000000000000))*(x3812)*(x3814)))+(((IkReal(-1.00000000000000))*(cj6)*(x3809)*(x3814)))+(((IkReal(-1.00000000000000))*(r11)*(x3815))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3816=((cj4)*(cj5));
IkReal x3817=((r21)*(sj6));
IkReal x3818=((IkReal(1.00000000000000))*(cj6)*(r20));
if( IKabs(((((IkReal(-1.00000000000000))*(sj5)*(x3818)))+(((sj5)*(x3817)))+(((IkReal(-1.00000000000000))*(cj5)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((x3816)*(x3817)))+(((IkReal(-1.00000000000000))*(x3816)*(x3818)))+(((r20)*(sj4)*(sj6))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(sj5)*(x3818)))+(((sj5)*(x3817)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))))+IKsqr(((((cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((x3816)*(x3817)))+(((IkReal(-1.00000000000000))*(x3816)*(x3818)))+(((r20)*(sj4)*(sj6)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(sj5)*(x3818)))+(((sj5)*(x3817)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))), ((((cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((x3816)*(x3817)))+(((IkReal(-1.00000000000000))*(x3816)*(x3818)))+(((r20)*(sj4)*(sj6)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x3819=IKcos(j3);
IkReal x3820=IKsin(j3);
IkReal x3821=((r11)*(sj6));
IkReal x3822=((IkReal(1.00000000000000))*(sj5));
IkReal x3823=((IkReal(1.00000000000000))*(cj1));
IkReal x3824=((cj6)*(sj4));
IkReal x3825=((sj4)*(sj6));
IkReal x3826=((cj4)*(sj5));
IkReal x3827=((cj4)*(cj5));
IkReal x3828=((r01)*(sj6));
IkReal x3829=((r21)*(sj6));
IkReal x3830=((cj6)*(sj5));
IkReal x3831=((IkReal(1.00000000000000))*(cj6)*(x3827));
evalcond[0]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(x3822)*(x3829)))+(((r20)*(x3830)))+(x3820));
evalcond[1]=((((r00)*(x3830)))+(((IkReal(-1.00000000000000))*(x3822)*(x3828)))+(((sj1)*(x3819)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x3821)*(x3822)))+(((IkReal(-1.00000000000000))*(x3819)*(x3823)))+(((r10)*(x3830))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x3831)))+(((r22)*(x3826)))+(((IkReal(-1.00000000000000))*(x3819)))+(((x3827)*(x3829)))+(((r20)*(x3825)))+(((r21)*(x3824))));
evalcond[4]=((((r02)*(x3826)))+(((IkReal(-1.00000000000000))*(r00)*(x3831)))+(((sj1)*(x3820)))+(((x3827)*(x3828)))+(((r01)*(x3824)))+(((r00)*(x3825))));
evalcond[5]=((((r12)*(x3826)))+(((IkReal(-1.00000000000000))*(r10)*(x3831)))+(((r11)*(x3824)))+(((r10)*(x3825)))+(((x3821)*(x3827)))+(((IkReal(-1.00000000000000))*(x3820)*(x3823))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x3832=((sj4)*(sj5));
IkReal x3833=((IkReal(0.390000000000000))*(sj5));
IkReal x3834=((r21)*(sj6));
IkReal x3835=((IkReal(0.390000000000000))*(cj5));
IkReal x3836=((cj6)*(r00));
IkReal x3837=((IkReal(0.000500000000000000))*(cj6));
IkReal x3838=((r11)*(sj6));
IkReal x3839=((cj5)*(sj4));
IkReal x3840=((r01)*(sj6));
IkReal x3841=((IkReal(1.00000000000000))*(r20));
IkReal x3842=((cj4)*(sj6));
IkReal x3843=((IkReal(0.000500000000000000))*(sj6));
IkReal x3844=((IkReal(1.00000000000000))*(r10));
IkReal x3845=((IkReal(1.00000000000000))*(cj4)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3833)*(x3834)))+(((cj6)*(r20)*(x3833)))+(((r20)*(x3843)))+(((IkReal(-1.00000000000000))*(pz)))+(((r21)*(x3837)))+(((r22)*(x3835))));
evalcond[2]=((((r02)*(x3835)))+(((r01)*(x3837)))+(((IkReal(0.00200000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(px)))+(((x3833)*(x3836)))+(((r00)*(x3843)))+(((IkReal(-1.00000000000000))*(x3833)*(x3840)))+(((IkReal(-0.400000000000000))*(sj1))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3833)*(x3838)))+(((IkReal(0.400000000000000))*(cj1)))+(((IkReal(0.00200000000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(py)))+(((r12)*(x3835)))+(((cj6)*(r10)*(x3833)))+(((r11)*(x3837)))+(((r10)*(x3843))));
evalcond[4]=((((x3834)*(x3839)))+(((IkReal(-1.00000000000000))*(r21)*(x3845)))+(((IkReal(-1.00000000000000))*(x3841)*(x3842)))+(((IkReal(-1.00000000000000))*(cj6)*(x3839)*(x3841)))+(((r22)*(x3832))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x3842)))+(((IkReal(-1.00000000000000))*(x3836)*(x3839)))+(cj1)+(((r02)*(x3832)))+(((x3839)*(x3840)))+(((IkReal(-1.00000000000000))*(r01)*(x3845))));
evalcond[6]=((sj1)+(((IkReal(-1.00000000000000))*(x3842)*(x3844)))+(((IkReal(-1.00000000000000))*(r11)*(x3845)))+(((r12)*(x3832)))+(((IkReal(-1.00000000000000))*(cj6)*(x3839)*(x3844)))+(((x3838)*(x3839))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3846=((cj4)*(cj5));
IkReal x3847=((cj6)*(r20));
IkReal x3848=((IkReal(1.00000000000000))*(sj4));
IkReal x3849=((IkReal(1.00000000000000))*(r21)*(sj6));
if( IKabs(((((cj5)*(r22)))+(((sj5)*(x3847)))+(((IkReal(-1.00000000000000))*(sj5)*(x3849))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x3848)))+(((x3846)*(x3847)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x3848)))+(((IkReal(-1.00000000000000))*(x3846)*(x3849))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj5)*(r22)))+(((sj5)*(x3847)))+(((IkReal(-1.00000000000000))*(sj5)*(x3849)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x3848)))+(((x3846)*(x3847)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x3848)))+(((IkReal(-1.00000000000000))*(x3846)*(x3849)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((cj5)*(r22)))+(((sj5)*(x3847)))+(((IkReal(-1.00000000000000))*(sj5)*(x3849)))), ((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x3848)))+(((x3846)*(x3847)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x3848)))+(((IkReal(-1.00000000000000))*(x3846)*(x3849)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x3850=IKcos(j3);
IkReal x3851=IKsin(j3);
IkReal x3852=((r11)*(sj6));
IkReal x3853=((IkReal(1.00000000000000))*(sj5));
IkReal x3854=((IkReal(1.00000000000000))*(cj1));
IkReal x3855=((sj4)*(sj6));
IkReal x3856=((cj4)*(sj5));
IkReal x3857=((cj6)*(sj4));
IkReal x3858=((cj4)*(cj5));
IkReal x3859=((r01)*(sj6));
IkReal x3860=((r21)*(sj6));
IkReal x3861=((cj6)*(sj5));
IkReal x3862=((IkReal(1.00000000000000))*(cj6)*(x3858));
evalcond[0]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(x3851)))+(((r20)*(x3861)))+(((IkReal(-1.00000000000000))*(x3853)*(x3860))));
evalcond[1]=((((r00)*(x3861)))+(((IkReal(-1.00000000000000))*(x3853)*(x3859)))+(((sj1)*(x3850)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x3850)*(x3854)))+(((r10)*(x3861)))+(((IkReal(-1.00000000000000))*(x3852)*(x3853))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x3862)))+(((r21)*(x3857)))+(((r20)*(x3855)))+(x3850)+(((x3858)*(x3860)))+(((r22)*(x3856))));
evalcond[4]=((((r02)*(x3856)))+(((r01)*(x3857)))+(((r00)*(x3855)))+(((IkReal(-1.00000000000000))*(r00)*(x3862)))+(((x3858)*(x3859)))+(((sj1)*(x3851))));
evalcond[5]=((((r11)*(x3857)))+(((x3852)*(x3858)))+(((r10)*(x3855)))+(((IkReal(-1.00000000000000))*(r10)*(x3862)))+(((IkReal(-1.00000000000000))*(x3851)*(x3854)))+(((r12)*(x3856))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3863=((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30);
IkReal x3864=((IkReal(1.00000000000000))*(sj5));
IkReal x3865=((cj2)*(sj1));
IkReal x3866=((r21)*(sj6));
IkReal x3867=((cj6)*(r20));
IkReal x3868=((cj5)*(r22));
if( IKabs(((x3863)*(((((sj5)*(x3866)))+(((IkReal(-1.00000000000000))*(x3864)*(x3867)))+(((IkReal(-1.00000000000000))*(x3868))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x3863)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)*(sj2)))+(((sj5)*(x3865)*(x3867)))+(((x3865)*(x3868)))+(((IkReal(-1.00000000000000))*(r11)*(sj2)*(sj6)*(x3864)))+(((IkReal(-1.00000000000000))*(x3864)*(x3865)*(x3866)))+(((cj6)*(r10)*(sj2)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x3863)*(((((sj5)*(x3866)))+(((IkReal(-1.00000000000000))*(x3864)*(x3867)))+(((IkReal(-1.00000000000000))*(x3868)))))))+IKsqr(((x3863)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)*(sj2)))+(((sj5)*(x3865)*(x3867)))+(((x3865)*(x3868)))+(((IkReal(-1.00000000000000))*(r11)*(sj2)*(sj6)*(x3864)))+(((IkReal(-1.00000000000000))*(x3864)*(x3865)*(x3866)))+(((cj6)*(r10)*(sj2)*(sj5)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x3863)*(((((sj5)*(x3866)))+(((IkReal(-1.00000000000000))*(x3864)*(x3867)))+(((IkReal(-1.00000000000000))*(x3868)))))), ((x3863)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)*(sj2)))+(((sj5)*(x3865)*(x3867)))+(((x3865)*(x3868)))+(((IkReal(-1.00000000000000))*(r11)*(sj2)*(sj6)*(x3864)))+(((IkReal(-1.00000000000000))*(x3864)*(x3865)*(x3866)))+(((cj6)*(r10)*(sj2)*(sj5)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x3869=IKsin(j3);
IkReal x3870=IKcos(j3);
IkReal x3871=((r11)*(sj6));
IkReal x3872=((IkReal(1.00000000000000))*(sj5));
IkReal x3873=((sj4)*(sj6));
IkReal x3874=((cj4)*(sj5));
IkReal x3875=((cj6)*(sj4));
IkReal x3876=((cj4)*(cj5));
IkReal x3877=((r01)*(sj6));
IkReal x3878=((r21)*(sj6));
IkReal x3879=((cj6)*(sj5));
IkReal x3880=((IkReal(1.00000000000000))*(x3870));
IkReal x3881=((sj1)*(x3870));
IkReal x3882=((IkReal(1.00000000000000))*(cj6)*(x3876));
IkReal x3883=((IkReal(1.00000000000000))*(cj2)*(x3869));
evalcond[0]=((((cj5)*(r22)))+(((r20)*(x3879)))+(((sj2)*(x3869)))+(((IkReal(-1.00000000000000))*(x3872)*(x3878))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(x3883)))+(((r00)*(x3879)))+(x3881)+(((IkReal(-1.00000000000000))*(x3872)*(x3877)))+(((cj5)*(r02))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x3880)))+(((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(sj1)*(x3883)))+(((IkReal(-1.00000000000000))*(x3871)*(x3872)))+(((r10)*(x3879))));
evalcond[3]=((((r20)*(x3873)))+(((IkReal(-1.00000000000000))*(r20)*(x3882)))+(((r22)*(x3874)))+(((x3876)*(x3878)))+(((r21)*(x3875)))+(((IkReal(-1.00000000000000))*(sj2)*(x3880))));
evalcond[4]=((((r00)*(x3873)))+(((cj1)*(cj2)*(x3870)))+(((r01)*(x3875)))+(((IkReal(-1.00000000000000))*(r00)*(x3882)))+(((x3876)*(x3877)))+(((sj1)*(x3869)))+(((r02)*(x3874))));
evalcond[5]=((((cj2)*(x3881)))+(((x3871)*(x3876)))+(((IkReal(-1.00000000000000))*(cj1)*(x3869)))+(((r10)*(x3873)))+(((IkReal(-1.00000000000000))*(r10)*(x3882)))+(((r12)*(x3874)))+(((r11)*(x3875))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3884=(sj1)*(sj1);
IkReal x3885=(cj1)*(cj1);
IkReal x3886=((cj5)*(r12));
IkReal x3887=((cj6)*(sj5));
IkReal x3888=((IkReal(1.00000000000000))*(sj1));
IkReal x3889=((cj5)*(r02));
IkReal x3890=((IkReal(1.00000000000000))*(cj1));
IkReal x3891=((r01)*(sj5)*(sj6));
IkReal x3892=((r11)*(sj5)*(sj6));
if( IKabs(((((IKabs(((((cj2)*(x3884)))+(((cj2)*(x3885))))) != 0)?((IkReal)1/(((((cj2)*(x3884)))+(((cj2)*(x3885)))))):(IkReal)1.0e30))*(((((cj1)*(x3889)))+(((cj1)*(r00)*(x3887)))+(((IkReal(-1.00000000000000))*(x3888)*(x3892)))+(((r10)*(sj1)*(x3887)))+(((sj1)*(x3886)))+(((IkReal(-1.00000000000000))*(x3890)*(x3891))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((x3885)+(x3884))) != 0)?((IkReal)1/(((x3885)+(x3884)))):(IkReal)1.0e30))*(((((cj1)*(x3886)))+(((sj1)*(x3891)))+(((cj1)*(r10)*(x3887)))+(((IkReal(-1.00000000000000))*(x3888)*(x3889)))+(((IkReal(-1.00000000000000))*(r00)*(x3887)*(x3888)))+(((IkReal(-1.00000000000000))*(x3890)*(x3892))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((cj2)*(x3884)))+(((cj2)*(x3885))))) != 0)?((IkReal)1/(((((cj2)*(x3884)))+(((cj2)*(x3885)))))):(IkReal)1.0e30))*(((((cj1)*(x3889)))+(((cj1)*(r00)*(x3887)))+(((IkReal(-1.00000000000000))*(x3888)*(x3892)))+(((r10)*(sj1)*(x3887)))+(((sj1)*(x3886)))+(((IkReal(-1.00000000000000))*(x3890)*(x3891)))))))+IKsqr(((((IKabs(((x3885)+(x3884))) != 0)?((IkReal)1/(((x3885)+(x3884)))):(IkReal)1.0e30))*(((((cj1)*(x3886)))+(((sj1)*(x3891)))+(((cj1)*(r10)*(x3887)))+(((IkReal(-1.00000000000000))*(x3888)*(x3889)))+(((IkReal(-1.00000000000000))*(r00)*(x3887)*(x3888)))+(((IkReal(-1.00000000000000))*(x3890)*(x3892)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IKabs(((((cj2)*(x3884)))+(((cj2)*(x3885))))) != 0)?((IkReal)1/(((((cj2)*(x3884)))+(((cj2)*(x3885)))))):(IkReal)1.0e30))*(((((cj1)*(x3889)))+(((cj1)*(r00)*(x3887)))+(((IkReal(-1.00000000000000))*(x3888)*(x3892)))+(((r10)*(sj1)*(x3887)))+(((sj1)*(x3886)))+(((IkReal(-1.00000000000000))*(x3890)*(x3891)))))), ((((IKabs(((x3885)+(x3884))) != 0)?((IkReal)1/(((x3885)+(x3884)))):(IkReal)1.0e30))*(((((cj1)*(x3886)))+(((sj1)*(x3891)))+(((cj1)*(r10)*(x3887)))+(((IkReal(-1.00000000000000))*(x3888)*(x3889)))+(((IkReal(-1.00000000000000))*(r00)*(x3887)*(x3888)))+(((IkReal(-1.00000000000000))*(x3890)*(x3892)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x3893=IKsin(j3);
IkReal x3894=IKcos(j3);
IkReal x3895=((r11)*(sj6));
IkReal x3896=((IkReal(1.00000000000000))*(sj5));
IkReal x3897=((sj4)*(sj6));
IkReal x3898=((cj4)*(sj5));
IkReal x3899=((cj6)*(sj4));
IkReal x3900=((cj4)*(cj5));
IkReal x3901=((r01)*(sj6));
IkReal x3902=((r21)*(sj6));
IkReal x3903=((cj6)*(sj5));
IkReal x3904=((IkReal(1.00000000000000))*(x3894));
IkReal x3905=((sj1)*(x3894));
IkReal x3906=((IkReal(1.00000000000000))*(cj6)*(x3900));
IkReal x3907=((IkReal(1.00000000000000))*(cj2)*(x3893));
evalcond[0]=((((cj5)*(r22)))+(((r20)*(x3903)))+(((IkReal(-1.00000000000000))*(x3896)*(x3902)))+(((sj2)*(x3893))));
evalcond[1]=((((r00)*(x3903)))+(x3905)+(((IkReal(-1.00000000000000))*(cj1)*(x3907)))+(((IkReal(-1.00000000000000))*(x3896)*(x3901)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x3895)*(x3896)))+(((r10)*(x3903)))+(((IkReal(-1.00000000000000))*(sj1)*(x3907)))+(((IkReal(-1.00000000000000))*(cj1)*(x3904))));
evalcond[3]=((((x3900)*(x3902)))+(((r20)*(x3897)))+(((IkReal(-1.00000000000000))*(sj2)*(x3904)))+(((r21)*(x3899)))+(((r22)*(x3898)))+(((IkReal(-1.00000000000000))*(r20)*(x3906))));
evalcond[4]=((((x3900)*(x3901)))+(((cj1)*(cj2)*(x3894)))+(((r01)*(x3899)))+(((sj1)*(x3893)))+(((r00)*(x3897)))+(((IkReal(-1.00000000000000))*(r00)*(x3906)))+(((r02)*(x3898))));
evalcond[5]=((((r10)*(x3897)))+(((IkReal(-1.00000000000000))*(cj1)*(x3893)))+(((r11)*(x3899)))+(((r12)*(x3898)))+(((x3895)*(x3900)))+(((IkReal(-1.00000000000000))*(r10)*(x3906)))+(((cj2)*(x3905))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3908=((cj4)*(cj5));
IkReal x3909=((r21)*(sj6));
IkReal x3910=((IkReal(1.00000000000000))*(cj6)*(r20));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(sj5)*(x3910)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))+(((sj5)*(x3909))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x3908)*(x3910)))+(((cj4)*(r22)*(sj5)))+(((x3908)*(x3909)))+(((cj6)*(r21)*(sj4)))+(((r20)*(sj4)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(sj5)*(x3910)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))+(((sj5)*(x3909)))))), ((gconst4)*(((((IkReal(-1.00000000000000))*(x3908)*(x3910)))+(((cj4)*(r22)*(sj5)))+(((x3908)*(x3909)))+(((cj6)*(r21)*(sj4)))+(((r20)*(sj4)*(sj6)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x3911=IKsin(j3);
IkReal x3912=IKcos(j3);
IkReal x3913=((r11)*(sj6));
IkReal x3914=((IkReal(1.00000000000000))*(sj5));
IkReal x3915=((sj4)*(sj6));
IkReal x3916=((cj4)*(sj5));
IkReal x3917=((cj6)*(sj4));
IkReal x3918=((cj4)*(cj5));
IkReal x3919=((r01)*(sj6));
IkReal x3920=((r21)*(sj6));
IkReal x3921=((cj6)*(sj5));
IkReal x3922=((IkReal(1.00000000000000))*(x3912));
IkReal x3923=((sj1)*(x3912));
IkReal x3924=((IkReal(1.00000000000000))*(cj6)*(x3918));
IkReal x3925=((IkReal(1.00000000000000))*(cj2)*(x3911));
evalcond[0]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(x3914)*(x3920)))+(((sj2)*(x3911)))+(((r20)*(x3921))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x3914)*(x3919)))+(((IkReal(-1.00000000000000))*(cj1)*(x3925)))+(x3923)+(((cj5)*(r02)))+(((r00)*(x3921))));
evalcond[2]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(cj1)*(x3922)))+(((r10)*(x3921)))+(((IkReal(-1.00000000000000))*(x3913)*(x3914)))+(((IkReal(-1.00000000000000))*(sj1)*(x3925))));
evalcond[3]=((((x3918)*(x3920)))+(((r21)*(x3917)))+(((IkReal(-1.00000000000000))*(r20)*(x3924)))+(((r20)*(x3915)))+(((IkReal(-1.00000000000000))*(sj2)*(x3922)))+(((r22)*(x3916))));
evalcond[4]=((((cj1)*(cj2)*(x3912)))+(((sj1)*(x3911)))+(((x3918)*(x3919)))+(((r00)*(x3915)))+(((r01)*(x3917)))+(((r02)*(x3916)))+(((IkReal(-1.00000000000000))*(r00)*(x3924))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x3924)))+(((cj2)*(x3923)))+(((IkReal(-1.00000000000000))*(cj1)*(x3911)))+(((r10)*(x3915)))+(((x3913)*(x3918)))+(((r11)*(x3917)))+(((r12)*(x3916))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x3926=((cj2)*(sj6));
IkReal x3927=((cj2)*(cj6));
IkReal x3928=((IkReal(1.00000000000000))*(cj1)*(sj2));
if( IKabs(((gconst0)*(((((IkReal(-1.00000000000000))*(r20)*(sj6)*(x3928)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x3928)))+(((r01)*(x3927)))+(((r00)*(x3926))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((cj5)*(r01)*(x3926)))+(((IkReal(-1.00000000000000))*(r22)*(sj5)*(x3928)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(sj6)*(x3928)))+(((cj2)*(r02)*(sj5)))+(((cj1)*(cj5)*(cj6)*(r20)*(sj2)))+(((IkReal(-1.00000000000000))*(cj5)*(r00)*(x3927))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst0)*(((((IkReal(-1.00000000000000))*(r20)*(sj6)*(x3928)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x3928)))+(((r01)*(x3927)))+(((r00)*(x3926)))))), ((gconst0)*(((((cj5)*(r01)*(x3926)))+(((IkReal(-1.00000000000000))*(r22)*(sj5)*(x3928)))+(((IkReal(-1.00000000000000))*(cj5)*(r21)*(sj6)*(x3928)))+(((cj2)*(r02)*(sj5)))+(((cj1)*(cj5)*(cj6)*(r20)*(sj2)))+(((IkReal(-1.00000000000000))*(cj5)*(r00)*(x3927)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x3929=IKsin(j4);
IkReal x3930=IKcos(j4);
IkReal x3931=((IkReal(1.00000000000000))*(sj2));
IkReal x3932=((IkReal(1.00000000000000))*(cj6));
IkReal x3933=((sj5)*(x3929));
IkReal x3934=((cj5)*(x3929));
IkReal x3935=((IkReal(1.00000000000000))*(sj6)*(x3930));
evalcond[0]=((((r22)*(x3933)))+(((IkReal(-1.00000000000000))*(r21)*(x3930)*(x3932)))+(((IkReal(-1.00000000000000))*(r20)*(x3932)*(x3934)))+(((IkReal(-1.00000000000000))*(r20)*(x3935)))+(((r21)*(sj6)*(x3934)))+(((IkReal(-1.00000000000000))*(cj2))));
evalcond[1]=((((r01)*(sj6)*(x3934)))+(((IkReal(-1.00000000000000))*(cj1)*(x3931)))+(((IkReal(-1.00000000000000))*(r00)*(x3932)*(x3934)))+(((IkReal(-1.00000000000000))*(r00)*(x3935)))+(((r02)*(x3933)))+(((IkReal(-1.00000000000000))*(r01)*(x3930)*(x3932))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj1)*(x3931)))+(((r11)*(sj6)*(x3934)))+(((IkReal(-1.00000000000000))*(r10)*(x3935)))+(((IkReal(-1.00000000000000))*(r10)*(x3932)*(x3934)))+(((r12)*(x3933)))+(((IkReal(-1.00000000000000))*(r11)*(x3930)*(x3932))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(sj2);
dummyeval[0]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x3936=(sj1)*(sj1);
IkReal x3937=(cj1)*(cj1);
dummyeval[0]=((((cj2)*(x3936)))+(((cj2)*(x3937))));
dummyeval[1]=((x3937)+(x3936));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj2;
dummyeval[1]=cj1;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x3938=((sj4)*(sj5));
IkReal x3939=((cj6)*(r20));
IkReal x3940=((IkReal(1.00000000000000))*(cj4));
IkReal x3941=((IkReal(0.390000000000000))*(sj5));
IkReal x3942=((r21)*(sj6));
IkReal x3943=((IkReal(0.390000000000000))*(cj5));
IkReal x3944=((cj6)*(r00));
IkReal x3945=((IkReal(0.000500000000000000))*(cj6));
IkReal x3946=((r11)*(sj6));
IkReal x3947=((cj5)*(sj4));
IkReal x3948=((r01)*(sj6));
IkReal x3949=((r20)*(sj6));
IkReal x3950=((r10)*(sj6));
IkReal x3951=((cj6)*(r10));
IkReal x3952=((cj6)*(r21));
IkReal x3953=((r00)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x3942)))+(((sj5)*(x3939))));
evalcond[2]=((IkReal(-0.00200000000000000))+(((IkReal(0.000500000000000000))*(x3949)))+(((r22)*(x3943)))+(((x3939)*(x3941)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(x3941)*(x3942)))+(((r21)*(x3945))));
evalcond[3]=((((r01)*(x3945)))+(((IkReal(0.000500000000000000))*(x3953)))+(((x3941)*(x3944)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(x3941)*(x3948)))+(((r02)*(x3943)))+(((IkReal(-0.400000000000000))*(sj1))));
evalcond[4]=((((IkReal(0.000500000000000000))*(x3950)))+(((x3941)*(x3951)))+(((IkReal(0.400000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(x3941)*(x3946)))+(((r12)*(x3943)))+(((r11)*(x3945))));
evalcond[5]=((IkReal(-1.00000000000000))+(((r22)*(x3938)))+(((IkReal(-1.00000000000000))*(x3940)*(x3952)))+(((x3942)*(x3947)))+(((IkReal(-1.00000000000000))*(x3940)*(x3949)))+(((IkReal(-1.00000000000000))*(x3939)*(x3947))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj5)*(x3939)*(x3940)))+(((sj4)*(x3952)))+(((cj4)*(cj5)*(x3942)))+(((sj4)*(x3949)))+(((cj4)*(r22)*(sj5))));
evalcond[7]=((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x3940)))+(((IkReal(-1.00000000000000))*(x3940)*(x3953)))+(((x3947)*(x3948)))+(((IkReal(-1.00000000000000))*(x3944)*(x3947)))+(((r02)*(x3938))));
evalcond[8]=((((IkReal(-1.00000000000000))*(cj6)*(r11)*(x3940)))+(((IkReal(-1.00000000000000))*(x3940)*(x3950)))+(((x3946)*(x3947)))+(((IkReal(-1.00000000000000))*(x3947)*(x3951)))+(((r12)*(x3938))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3954=((IkReal(1.00000000000000))*(sj4));
IkReal x3955=((r00)*(sj6));
IkReal x3956=((cj1)*(cj6));
IkReal x3957=((cj4)*(sj5));
IkReal x3958=((cj4)*(cj5));
IkReal x3959=((r01)*(sj1));
IkReal x3960=((IkReal(1.00000000000000))*(sj6));
IkReal x3961=((cj1)*(r02));
IkReal x3962=((cj1)*(r01));
IkReal x3963=((IkReal(1.00000000000000))*(r02)*(sj1));
IkReal x3964=((cj6)*(r00)*(sj1));
if( IKabs(((gconst6)*(((((cj5)*(x3961)))+(((IkReal(-1.00000000000000))*(cj6)*(x3954)*(x3959)))+(((r00)*(sj5)*(x3956)))+(((IkReal(-1.00000000000000))*(sj5)*(x3960)*(x3962)))+(((IkReal(-1.00000000000000))*(sj1)*(x3954)*(x3955)))+(((IkReal(-1.00000000000000))*(x3958)*(x3959)*(x3960)))+(((IkReal(-1.00000000000000))*(x3957)*(x3963)))+(((x3958)*(x3964))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(x3957)*(x3961)))+(((IkReal(-1.00000000000000))*(r01)*(x3954)*(x3956)))+(((IkReal(-1.00000000000000))*(cj5)*(x3963)))+(((r00)*(x3956)*(x3958)))+(((IkReal(-1.00000000000000))*(cj1)*(x3954)*(x3955)))+(((sj5)*(sj6)*(x3959)))+(((IkReal(-1.00000000000000))*(x3958)*(x3960)*(x3962)))+(((IkReal(-1.00000000000000))*(sj5)*(x3964))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst6)*(((((cj5)*(x3961)))+(((IkReal(-1.00000000000000))*(cj6)*(x3954)*(x3959)))+(((r00)*(sj5)*(x3956)))+(((IkReal(-1.00000000000000))*(sj5)*(x3960)*(x3962)))+(((IkReal(-1.00000000000000))*(sj1)*(x3954)*(x3955)))+(((IkReal(-1.00000000000000))*(x3958)*(x3959)*(x3960)))+(((IkReal(-1.00000000000000))*(x3957)*(x3963)))+(((x3958)*(x3964)))))), ((gconst6)*(((((IkReal(-1.00000000000000))*(x3957)*(x3961)))+(((IkReal(-1.00000000000000))*(r01)*(x3954)*(x3956)))+(((IkReal(-1.00000000000000))*(cj5)*(x3963)))+(((r00)*(x3956)*(x3958)))+(((IkReal(-1.00000000000000))*(cj1)*(x3954)*(x3955)))+(((sj5)*(sj6)*(x3959)))+(((IkReal(-1.00000000000000))*(x3958)*(x3960)*(x3962)))+(((IkReal(-1.00000000000000))*(sj5)*(x3964)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x3965=IKcos(j3);
IkReal x3966=IKsin(j3);
IkReal x3967=((r11)*(sj6));
IkReal x3968=((IkReal(1.00000000000000))*(sj5));
IkReal x3969=((sj4)*(sj6));
IkReal x3970=((cj4)*(sj5));
IkReal x3971=((cj6)*(sj4));
IkReal x3972=((cj4)*(cj5));
IkReal x3973=((r01)*(sj6));
IkReal x3974=((cj6)*(sj5));
IkReal x3975=((sj1)*(x3965));
IkReal x3976=((cj1)*(x3965));
IkReal x3977=((IkReal(1.00000000000000))*(x3966));
IkReal x3978=((cj1)*(x3977));
IkReal x3979=((IkReal(1.00000000000000))*(cj6)*(x3972));
evalcond[0]=((((IkReal(-1.00000000000000))*(x3978)))+(((IkReal(-1.00000000000000))*(x3968)*(x3973)))+(x3975)+(((r00)*(x3974)))+(((cj5)*(r02))));
evalcond[1]=((((cj5)*(r12)))+(((r10)*(x3974)))+(((IkReal(-1.00000000000000))*(sj1)*(x3977)))+(((IkReal(-1.00000000000000))*(x3976)))+(((IkReal(-1.00000000000000))*(x3967)*(x3968))));
evalcond[2]=((((r02)*(x3970)))+(x3976)+(((x3972)*(x3973)))+(((r01)*(x3971)))+(((r00)*(x3969)))+(((sj1)*(x3966)))+(((IkReal(-1.00000000000000))*(r00)*(x3979))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x3978)))+(((r11)*(x3971)))+(((r10)*(x3969)))+(((IkReal(-1.00000000000000))*(r10)*(x3979)))+(((r12)*(x3970)))+(x3975)+(((x3967)*(x3972))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3980=((cj5)*(r12));
IkReal x3981=((cj6)*(sj5));
IkReal x3982=((IkReal(1.00000000000000))*(sj1));
IkReal x3983=((cj5)*(r02));
IkReal x3984=((IkReal(1.00000000000000))*(cj1));
IkReal x3985=((r01)*(sj5)*(sj6));
IkReal x3986=((r11)*(sj5)*(sj6));
if( IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(x3984)*(x3985)))+(((sj1)*(x3980)))+(((IkReal(-1.00000000000000))*(x3982)*(x3986)))+(((cj1)*(r00)*(x3981)))+(((r10)*(sj1)*(x3981)))+(((cj1)*(x3983))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((cj1)*(r10)*(x3981)))+(((IkReal(-1.00000000000000))*(x3984)*(x3986)))+(((sj1)*(x3985)))+(((IkReal(-1.00000000000000))*(x3982)*(x3983)))+(((IkReal(-1.00000000000000))*(r00)*(x3981)*(x3982)))+(((cj1)*(x3980))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst5)*(((((IkReal(-1.00000000000000))*(x3984)*(x3985)))+(((sj1)*(x3980)))+(((IkReal(-1.00000000000000))*(x3982)*(x3986)))+(((cj1)*(r00)*(x3981)))+(((r10)*(sj1)*(x3981)))+(((cj1)*(x3983)))))), ((gconst5)*(((((cj1)*(r10)*(x3981)))+(((IkReal(-1.00000000000000))*(x3984)*(x3986)))+(((sj1)*(x3985)))+(((IkReal(-1.00000000000000))*(x3982)*(x3983)))+(((IkReal(-1.00000000000000))*(r00)*(x3981)*(x3982)))+(((cj1)*(x3980)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x3987=IKcos(j3);
IkReal x3988=IKsin(j3);
IkReal x3989=((r11)*(sj6));
IkReal x3990=((IkReal(1.00000000000000))*(sj5));
IkReal x3991=((sj4)*(sj6));
IkReal x3992=((cj4)*(sj5));
IkReal x3993=((cj6)*(sj4));
IkReal x3994=((cj4)*(cj5));
IkReal x3995=((r01)*(sj6));
IkReal x3996=((cj6)*(sj5));
IkReal x3997=((sj1)*(x3987));
IkReal x3998=((cj1)*(x3987));
IkReal x3999=((IkReal(1.00000000000000))*(x3988));
IkReal x4000=((cj1)*(x3999));
IkReal x4001=((IkReal(1.00000000000000))*(cj6)*(x3994));
evalcond[0]=((((IkReal(-1.00000000000000))*(x4000)))+(((IkReal(-1.00000000000000))*(x3990)*(x3995)))+(x3997)+(((r00)*(x3996)))+(((cj5)*(r02))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x3999)))+(((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x3989)*(x3990)))+(((r10)*(x3996)))+(((IkReal(-1.00000000000000))*(x3998))));
evalcond[2]=((((x3994)*(x3995)))+(((IkReal(-1.00000000000000))*(r00)*(x4001)))+(((sj1)*(x3988)))+(((r02)*(x3992)))+(x3998)+(((r00)*(x3991)))+(((r01)*(x3993))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x4001)))+(((x3989)*(x3994)))+(((IkReal(-1.00000000000000))*(x4000)))+(((r10)*(x3991)))+(((r12)*(x3992)))+(x3997)+(((r11)*(x3993))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x4002=((sj4)*(sj5));
IkReal x4003=((cj6)*(r20));
IkReal x4004=((IkReal(1.00000000000000))*(cj4));
IkReal x4005=((IkReal(0.390000000000000))*(sj5));
IkReal x4006=((r21)*(sj6));
IkReal x4007=((IkReal(0.390000000000000))*(cj5));
IkReal x4008=((cj6)*(r00));
IkReal x4009=((IkReal(0.000500000000000000))*(cj6));
IkReal x4010=((r11)*(sj6));
IkReal x4011=((cj5)*(sj4));
IkReal x4012=((r01)*(sj6));
IkReal x4013=((r20)*(sj6));
IkReal x4014=((r10)*(sj6));
IkReal x4015=((cj6)*(r10));
IkReal x4016=((cj6)*(r21));
IkReal x4017=((r00)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((cj5)*(r22)))+(((sj5)*(x4003)))+(((IkReal(-1.00000000000000))*(sj5)*(x4006))));
evalcond[2]=((IkReal(0.00200000000000000))+(((r22)*(x4007)))+(((IkReal(0.000500000000000000))*(x4013)))+(((IkReal(-1.00000000000000))*(pz)))+(((x4003)*(x4005)))+(((IkReal(-1.00000000000000))*(x4005)*(x4006)))+(((r21)*(x4009))));
evalcond[3]=((((r01)*(x4009)))+(((x4005)*(x4008)))+(((IkReal(0.000500000000000000))*(x4017)))+(((IkReal(-1.00000000000000))*(px)))+(((r02)*(x4007)))+(((IkReal(-0.400000000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(x4005)*(x4012))));
evalcond[4]=((((r12)*(x4007)))+(((x4005)*(x4015)))+(((IkReal(0.400000000000000))*(cj1)))+(((IkReal(0.000500000000000000))*(x4014)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(x4005)*(x4010)))+(((r11)*(x4009))));
evalcond[5]=((IkReal(1.00000000000000))+(((r22)*(x4002)))+(((IkReal(-1.00000000000000))*(x4003)*(x4011)))+(((x4006)*(x4011)))+(((IkReal(-1.00000000000000))*(x4004)*(x4016)))+(((IkReal(-1.00000000000000))*(x4004)*(x4013))));
evalcond[6]=((((cj4)*(cj5)*(x4006)))+(((IkReal(-1.00000000000000))*(cj5)*(x4003)*(x4004)))+(((cj4)*(r22)*(sj5)))+(((sj4)*(x4013)))+(((sj4)*(x4016))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x4008)*(x4011)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x4004)))+(((r02)*(x4002)))+(((x4011)*(x4012)))+(((IkReal(-1.00000000000000))*(x4004)*(x4017))));
evalcond[8]=((((r12)*(x4002)))+(((x4010)*(x4011)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x4004)))+(((IkReal(-1.00000000000000))*(x4011)*(x4015)))+(((IkReal(-1.00000000000000))*(x4004)*(x4014))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x4018=((sj1)*(sj6));
IkReal x4019=((r00)*(sj4));
IkReal x4020=((IkReal(1.00000000000000))*(r01));
IkReal x4021=((cj1)*(cj6));
IkReal x4022=((cj1)*(sj6));
IkReal x4023=((cj4)*(cj5));
IkReal x4024=((r02)*(sj1));
IkReal x4025=((cj4)*(sj5));
IkReal x4026=((cj1)*(r02));
IkReal x4027=((cj6)*(r00)*(sj1));
if( IKabs(((gconst8)*(((((r00)*(sj5)*(x4021)))+(((cj5)*(x4026)))+(((x4018)*(x4019)))+(((r01)*(x4018)*(x4023)))+(((x4024)*(x4025)))+(((cj6)*(r01)*(sj1)*(sj4)))+(((IkReal(-1.00000000000000))*(x4023)*(x4027)))+(((IkReal(-1.00000000000000))*(sj5)*(x4020)*(x4022))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((cj5)*(x4024)))+(((IkReal(-1.00000000000000))*(sj4)*(x4020)*(x4021)))+(((IkReal(-1.00000000000000))*(x4019)*(x4022)))+(((IkReal(-1.00000000000000))*(x4020)*(x4022)*(x4023)))+(((IkReal(-1.00000000000000))*(x4025)*(x4026)))+(((IkReal(-1.00000000000000))*(sj5)*(x4018)*(x4020)))+(((sj5)*(x4027)))+(((r00)*(x4021)*(x4023))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst8)*(((((r00)*(sj5)*(x4021)))+(((cj5)*(x4026)))+(((x4018)*(x4019)))+(((r01)*(x4018)*(x4023)))+(((x4024)*(x4025)))+(((cj6)*(r01)*(sj1)*(sj4)))+(((IkReal(-1.00000000000000))*(x4023)*(x4027)))+(((IkReal(-1.00000000000000))*(sj5)*(x4020)*(x4022)))))), ((gconst8)*(((((cj5)*(x4024)))+(((IkReal(-1.00000000000000))*(sj4)*(x4020)*(x4021)))+(((IkReal(-1.00000000000000))*(x4019)*(x4022)))+(((IkReal(-1.00000000000000))*(x4020)*(x4022)*(x4023)))+(((IkReal(-1.00000000000000))*(x4025)*(x4026)))+(((IkReal(-1.00000000000000))*(sj5)*(x4018)*(x4020)))+(((sj5)*(x4027)))+(((r00)*(x4021)*(x4023)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x4028=IKsin(j3);
IkReal x4029=IKcos(j3);
IkReal x4030=((r11)*(sj6));
IkReal x4031=((IkReal(1.00000000000000))*(sj5));
IkReal x4032=((sj4)*(sj6));
IkReal x4033=((cj4)*(sj5));
IkReal x4034=((cj6)*(sj4));
IkReal x4035=((cj4)*(cj5));
IkReal x4036=((r01)*(sj6));
IkReal x4037=((cj6)*(sj5));
IkReal x4038=((sj1)*(x4028));
IkReal x4039=((cj1)*(x4028));
IkReal x4040=((IkReal(1.00000000000000))*(x4029));
IkReal x4041=((cj1)*(x4040));
IkReal x4042=((IkReal(1.00000000000000))*(cj6)*(x4035));
evalcond[0]=((((IkReal(-1.00000000000000))*(x4031)*(x4036)))+(((sj1)*(x4029)))+(x4039)+(((r00)*(x4037)))+(((cj5)*(r02))));
evalcond[1]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x4030)*(x4031)))+(x4038)+(((r10)*(x4037)))+(((IkReal(-1.00000000000000))*(x4041))));
evalcond[2]=((((x4035)*(x4036)))+(((r02)*(x4033)))+(((IkReal(-1.00000000000000))*(r00)*(x4042)))+(x4038)+(((r00)*(x4032)))+(((r01)*(x4034)))+(((IkReal(-1.00000000000000))*(x4041))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj1)*(x4040)))+(((IkReal(-1.00000000000000))*(r10)*(x4042)))+(((IkReal(-1.00000000000000))*(x4039)))+(((r10)*(x4032)))+(((r12)*(x4033)))+(((r11)*(x4034)))+(((x4030)*(x4035))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x4043=((sj1)*(sj5));
IkReal x4044=((cj6)*(r10));
IkReal x4045=((cj5)*(sj1));
IkReal x4046=((cj1)*(cj5));
IkReal x4047=((cj1)*(sj5));
IkReal x4048=((cj6)*(r00));
IkReal x4049=((r11)*(sj6));
IkReal x4050=((IkReal(1.00000000000000))*(r01)*(sj6));
if( IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(x4043)*(x4049)))+(((r02)*(x4046)))+(((x4043)*(x4044)))+(((r12)*(x4045)))+(((IkReal(-1.00000000000000))*(x4047)*(x4050)))+(((x4047)*(x4048))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(r12)*(x4046)))+(((IkReal(-1.00000000000000))*(x4043)*(x4050)))+(((r02)*(x4045)))+(((x4043)*(x4048)))+(((IkReal(-1.00000000000000))*(x4044)*(x4047)))+(((x4047)*(x4049))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst7)*(((((IkReal(-1.00000000000000))*(x4043)*(x4049)))+(((r02)*(x4046)))+(((x4043)*(x4044)))+(((r12)*(x4045)))+(((IkReal(-1.00000000000000))*(x4047)*(x4050)))+(((x4047)*(x4048)))))), ((gconst7)*(((((IkReal(-1.00000000000000))*(r12)*(x4046)))+(((IkReal(-1.00000000000000))*(x4043)*(x4050)))+(((r02)*(x4045)))+(((x4043)*(x4048)))+(((IkReal(-1.00000000000000))*(x4044)*(x4047)))+(((x4047)*(x4049)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x4051=IKsin(j3);
IkReal x4052=IKcos(j3);
IkReal x4053=((r11)*(sj6));
IkReal x4054=((IkReal(1.00000000000000))*(sj5));
IkReal x4055=((sj4)*(sj6));
IkReal x4056=((cj4)*(sj5));
IkReal x4057=((cj6)*(sj4));
IkReal x4058=((cj4)*(cj5));
IkReal x4059=((r01)*(sj6));
IkReal x4060=((cj6)*(sj5));
IkReal x4061=((sj1)*(x4051));
IkReal x4062=((cj1)*(x4051));
IkReal x4063=((IkReal(1.00000000000000))*(x4052));
IkReal x4064=((cj1)*(x4063));
IkReal x4065=((IkReal(1.00000000000000))*(cj6)*(x4058));
evalcond[0]=((x4062)+(((IkReal(-1.00000000000000))*(x4054)*(x4059)))+(((r00)*(x4060)))+(((sj1)*(x4052)))+(((cj5)*(r02))));
evalcond[1]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x4053)*(x4054)))+(x4061)+(((IkReal(-1.00000000000000))*(x4064)))+(((r10)*(x4060))));
evalcond[2]=((((r02)*(x4056)))+(x4061)+(((IkReal(-1.00000000000000))*(r00)*(x4065)))+(((IkReal(-1.00000000000000))*(x4064)))+(((r00)*(x4055)))+(((r01)*(x4057)))+(((x4058)*(x4059))));
evalcond[3]=((((r11)*(x4057)))+(((IkReal(-1.00000000000000))*(r10)*(x4065)))+(((r12)*(x4056)))+(((IkReal(-1.00000000000000))*(x4062)))+(((r10)*(x4055)))+(((x4053)*(x4058)))+(((IkReal(-1.00000000000000))*(sj1)*(x4063))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x4066=((sj4)*(sj5));
IkReal x4067=((IkReal(0.390000000000000))*(sj5));
IkReal x4068=((r21)*(sj6));
IkReal x4069=((IkReal(0.390000000000000))*(cj5));
IkReal x4070=((cj6)*(r00));
IkReal x4071=((IkReal(0.000500000000000000))*(cj6));
IkReal x4072=((r11)*(sj6));
IkReal x4073=((cj5)*(sj4));
IkReal x4074=((IkReal(1.00000000000000))*(r20));
IkReal x4075=((cj4)*(sj6));
IkReal x4076=((r01)*(sj6));
IkReal x4077=((IkReal(0.000500000000000000))*(sj6));
IkReal x4078=((IkReal(1.00000000000000))*(r10));
IkReal x4079=((IkReal(1.00000000000000))*(cj4)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x4077)))+(((cj6)*(r20)*(x4067)))+(((IkReal(-1.00000000000000))*(x4067)*(x4068)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-0.00200000000000000))*(cj2)))+(((r22)*(x4069)))+(((r21)*(x4071))));
evalcond[2]=((IkReal(-0.400000000000000))+(((IkReal(-1.00000000000000))*(x4067)*(x4076)))+(((r02)*(x4069)))+(((r00)*(x4077)))+(((r01)*(x4071)))+(((IkReal(-1.00000000000000))*(px)))+(((x4067)*(x4070))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4067)*(x4072)))+(((r10)*(x4077)))+(((IkReal(-1.00000000000000))*(py)))+(((cj6)*(r10)*(x4067)))+(((IkReal(-0.00200000000000000))*(sj2)))+(((r12)*(x4069)))+(((r11)*(x4071))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x4074)*(x4075)))+(((IkReal(-1.00000000000000))*(r21)*(x4079)))+(((x4068)*(x4073)))+(((r22)*(x4066)))+(((IkReal(-1.00000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj6)*(x4073)*(x4074))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r01)*(x4079)))+(((r02)*(x4066)))+(((x4073)*(x4076)))+(((IkReal(-1.00000000000000))*(x4070)*(x4073)))+(((IkReal(-1.00000000000000))*(r00)*(x4075))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x4075)*(x4078)))+(((IkReal(-1.00000000000000))*(sj2)))+(((x4072)*(x4073)))+(((r12)*(x4066)))+(((IkReal(-1.00000000000000))*(r11)*(x4079)))+(((IkReal(-1.00000000000000))*(cj6)*(x4073)*(x4078))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x4080=((IkReal(1.00000000000000))*(cj6));
IkReal x4081=((IkReal(1.00000000000000))*(cj5));
IkReal x4082=((r01)*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj4)*(x4080)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj4)*(x4081)*(x4082)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(sj6)))+(((cj4)*(cj5)*(cj6)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r02)*(x4081)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x4080)))+(((sj5)*(x4082))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj4)*(x4080)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj4)*(x4081)*(x4082)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(sj6)))+(((cj4)*(cj5)*(cj6)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(r02)*(x4081)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x4080)))+(((sj5)*(x4082)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj4)*(x4080)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj4)*(x4081)*(x4082)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(sj6)))+(((cj4)*(cj5)*(cj6)*(r00)))), ((((IkReal(-1.00000000000000))*(r02)*(x4081)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x4080)))+(((sj5)*(x4082)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x4083=IKsin(j3);
IkReal x4084=IKcos(j3);
IkReal x4085=((r11)*(sj6));
IkReal x4086=((IkReal(1.00000000000000))*(sj5));
IkReal x4087=((sj4)*(sj6));
IkReal x4088=((cj4)*(sj5));
IkReal x4089=((cj6)*(sj4));
IkReal x4090=((cj4)*(cj5));
IkReal x4091=((r01)*(sj6));
IkReal x4092=((r21)*(sj6));
IkReal x4093=((cj6)*(sj5));
IkReal x4094=((IkReal(1.00000000000000))*(cj6)*(x4090));
evalcond[0]=((((r20)*(x4093)))+(((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(x4086)*(x4092)))+(((sj2)*(x4083))));
evalcond[1]=((((r00)*(x4093)))+(((IkReal(-1.00000000000000))*(x4086)*(x4091)))+(x4084)+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((r10)*(x4093)))+(((IkReal(-1.00000000000000))*(cj2)*(x4083)))+(((IkReal(-1.00000000000000))*(x4085)*(x4086))));
evalcond[3]=((((r20)*(x4087)))+(((IkReal(-1.00000000000000))*(r20)*(x4094)))+(((r21)*(x4089)))+(((IkReal(-1.00000000000000))*(sj2)*(x4084)))+(((r22)*(x4088)))+(((x4090)*(x4092))));
evalcond[4]=((((r01)*(x4089)))+(((r00)*(x4087)))+(x4083)+(((IkReal(-1.00000000000000))*(r00)*(x4094)))+(((x4090)*(x4091)))+(((r02)*(x4088))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x4094)))+(((r10)*(x4087)))+(((x4085)*(x4090)))+(((r12)*(x4088)))+(((cj2)*(x4084)))+(((r11)*(x4089))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x4095=((sj4)*(sj5));
IkReal x4096=((IkReal(0.390000000000000))*(sj5));
IkReal x4097=((r21)*(sj6));
IkReal x4098=((IkReal(0.390000000000000))*(cj5));
IkReal x4099=((cj6)*(r00));
IkReal x4100=((IkReal(0.000500000000000000))*(cj6));
IkReal x4101=((r11)*(sj6));
IkReal x4102=((cj5)*(sj4));
IkReal x4103=((IkReal(1.00000000000000))*(r20));
IkReal x4104=((cj4)*(sj6));
IkReal x4105=((r01)*(sj6));
IkReal x4106=((IkReal(0.000500000000000000))*(sj6));
IkReal x4107=((IkReal(1.00000000000000))*(r10));
IkReal x4108=((IkReal(1.00000000000000))*(cj4)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((r22)*(x4098)))+(((r20)*(x4106)))+(((IkReal(-1.00000000000000))*(pz)))+(((cj6)*(r20)*(x4096)))+(((r21)*(x4100)))+(((IkReal(-1.00000000000000))*(x4096)*(x4097)))+(((IkReal(-0.00200000000000000))*(cj2))));
evalcond[2]=((IkReal(0.400000000000000))+(((IkReal(-1.00000000000000))*(x4096)*(x4105)))+(((IkReal(-1.00000000000000))*(px)))+(((r02)*(x4098)))+(((x4096)*(x4099)))+(((r00)*(x4106)))+(((r01)*(x4100))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x4096)*(x4101)))+(((cj6)*(r10)*(x4096)))+(((IkReal(0.00200000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(py)))+(((r12)*(x4098)))+(((r11)*(x4100)))+(((r10)*(x4106))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj6)*(x4102)*(x4103)))+(((r22)*(x4095)))+(((IkReal(-1.00000000000000))*(r21)*(x4108)))+(((x4097)*(x4102)))+(((IkReal(-1.00000000000000))*(x4103)*(x4104)))+(((IkReal(-1.00000000000000))*(cj2))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x4099)*(x4102)))+(((r02)*(x4095)))+(((IkReal(-1.00000000000000))*(r00)*(x4104)))+(((IkReal(-1.00000000000000))*(r01)*(x4108)))+(((x4102)*(x4105))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj6)*(x4102)*(x4107)))+(sj2)+(((IkReal(-1.00000000000000))*(x4104)*(x4107)))+(((IkReal(-1.00000000000000))*(r11)*(x4108)))+(((x4101)*(x4102)))+(((r12)*(x4095))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x4109=((cj4)*(cj5));
IkReal x4110=((r01)*(sj6));
IkReal x4111=((cj6)*(r00));
if( IKabs(((((r00)*(sj4)*(sj6)))+(((cj6)*(r01)*(sj4)))+(((x4109)*(x4110)))+(((IkReal(-1.00000000000000))*(x4109)*(x4111)))+(((cj4)*(r02)*(sj5))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj5)*(x4111)))+(((IkReal(-1.00000000000000))*(sj5)*(x4110)))+(((cj5)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r00)*(sj4)*(sj6)))+(((cj6)*(r01)*(sj4)))+(((x4109)*(x4110)))+(((IkReal(-1.00000000000000))*(x4109)*(x4111)))+(((cj4)*(r02)*(sj5)))))+IKsqr(((((sj5)*(x4111)))+(((IkReal(-1.00000000000000))*(sj5)*(x4110)))+(((cj5)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((r00)*(sj4)*(sj6)))+(((cj6)*(r01)*(sj4)))+(((x4109)*(x4110)))+(((IkReal(-1.00000000000000))*(x4109)*(x4111)))+(((cj4)*(r02)*(sj5)))), ((((sj5)*(x4111)))+(((IkReal(-1.00000000000000))*(sj5)*(x4110)))+(((cj5)*(r02)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x4112=IKsin(j3);
IkReal x4113=IKcos(j3);
IkReal x4114=((r11)*(sj6));
IkReal x4115=((IkReal(1.00000000000000))*(sj5));
IkReal x4116=((cj6)*(sj4));
IkReal x4117=((sj4)*(sj6));
IkReal x4118=((cj4)*(sj5));
IkReal x4119=((cj4)*(cj5));
IkReal x4120=((r01)*(sj6));
IkReal x4121=((r21)*(sj6));
IkReal x4122=((cj6)*(sj5));
IkReal x4123=((IkReal(1.00000000000000))*(x4113));
IkReal x4124=((IkReal(1.00000000000000))*(cj6)*(x4119));
evalcond[0]=((((cj5)*(r22)))+(((r20)*(x4122)))+(((sj2)*(x4112)))+(((IkReal(-1.00000000000000))*(x4115)*(x4121))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x4123)))+(((IkReal(-1.00000000000000))*(x4115)*(x4120)))+(((r00)*(x4122)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x4114)*(x4115)))+(((cj2)*(x4112)))+(((r10)*(x4122))));
evalcond[3]=((((r21)*(x4116)))+(((r20)*(x4117)))+(((IkReal(-1.00000000000000))*(sj2)*(x4123)))+(((IkReal(-1.00000000000000))*(r20)*(x4124)))+(((r22)*(x4118)))+(((x4119)*(x4121))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(x4124)))+(((r02)*(x4118)))+(((x4119)*(x4120)))+(((r00)*(x4117)))+(((IkReal(-1.00000000000000))*(x4112)))+(((r01)*(x4116))));
evalcond[5]=((((r12)*(x4118)))+(((IkReal(-1.00000000000000))*(cj2)*(x4123)))+(((IkReal(-1.00000000000000))*(r10)*(x4124)))+(((x4114)*(x4119)))+(((r11)*(x4116)))+(((r10)*(x4117))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x4125=((sj4)*(sj5));
IkReal x4126=((IkReal(0.390000000000000))*(sj5));
IkReal x4127=((r21)*(sj6));
IkReal x4128=((IkReal(0.390000000000000))*(cj5));
IkReal x4129=((cj6)*(r00));
IkReal x4130=((IkReal(0.000500000000000000))*(cj6));
IkReal x4131=((r11)*(sj6));
IkReal x4132=((cj5)*(sj4));
IkReal x4133=((r01)*(sj6));
IkReal x4134=((IkReal(1.00000000000000))*(r20));
IkReal x4135=((cj4)*(sj6));
IkReal x4136=((IkReal(0.000500000000000000))*(sj6));
IkReal x4137=((IkReal(1.00000000000000))*(r10));
IkReal x4138=((IkReal(1.00000000000000))*(cj4)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((cj6)*(r20)*(x4126)))+(((r21)*(x4130)))+(((IkReal(-1.00000000000000))*(pz)))+(((r20)*(x4136)))+(((r22)*(x4128)))+(((IkReal(-1.00000000000000))*(x4126)*(x4127))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x4126)*(x4133)))+(((r00)*(x4136)))+(((r02)*(x4128)))+(((r01)*(x4130)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.00200000000000000))*(cj1)))+(((IkReal(-0.400000000000000))*(sj1)))+(((x4126)*(x4129))));
evalcond[3]=((((cj6)*(r10)*(x4126)))+(((r12)*(x4128)))+(((IkReal(-1.00000000000000))*(x4126)*(x4131)))+(((r11)*(x4130)))+(((IkReal(0.400000000000000))*(cj1)))+(((r10)*(x4136)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.00200000000000000))*(sj1))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r21)*(x4138)))+(((IkReal(-1.00000000000000))*(cj6)*(x4132)*(x4134)))+(((IkReal(-1.00000000000000))*(x4134)*(x4135)))+(((x4127)*(x4132)))+(((r22)*(x4125))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x4135)))+(((IkReal(-1.00000000000000))*(x4129)*(x4132)))+(((r02)*(x4125)))+(((x4132)*(x4133)))+(((IkReal(-1.00000000000000))*(r01)*(x4138)))+(((IkReal(-1.00000000000000))*(cj1))));
evalcond[6]=((((r12)*(x4125)))+(((IkReal(-1.00000000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(cj6)*(x4132)*(x4137)))+(((IkReal(-1.00000000000000))*(x4135)*(x4137)))+(((x4131)*(x4132)))+(((IkReal(-1.00000000000000))*(r11)*(x4138))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x4139=((cj4)*(cj5));
IkReal x4140=((r21)*(sj6));
IkReal x4141=((IkReal(1.00000000000000))*(cj6)*(r20));
if( IKabs(((((IkReal(-1.00000000000000))*(sj5)*(x4141)))+(((sj5)*(x4140)))+(((IkReal(-1.00000000000000))*(cj5)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x4139)*(x4140)))+(((cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x4139)*(x4141)))+(((cj6)*(r21)*(sj4)))+(((r20)*(sj4)*(sj6))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(sj5)*(x4141)))+(((sj5)*(x4140)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))))+IKsqr(((((x4139)*(x4140)))+(((cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x4139)*(x4141)))+(((cj6)*(r21)*(sj4)))+(((r20)*(sj4)*(sj6)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(sj5)*(x4141)))+(((sj5)*(x4140)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))), ((((x4139)*(x4140)))+(((cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x4139)*(x4141)))+(((cj6)*(r21)*(sj4)))+(((r20)*(sj4)*(sj6)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x4142=IKcos(j3);
IkReal x4143=IKsin(j3);
IkReal x4144=((r11)*(sj6));
IkReal x4145=((IkReal(1.00000000000000))*(sj5));
IkReal x4146=((IkReal(1.00000000000000))*(cj1));
IkReal x4147=((cj6)*(sj4));
IkReal x4148=((sj4)*(sj6));
IkReal x4149=((cj4)*(sj5));
IkReal x4150=((cj4)*(cj5));
IkReal x4151=((r01)*(sj6));
IkReal x4152=((r21)*(sj6));
IkReal x4153=((cj6)*(sj5));
IkReal x4154=((IkReal(1.00000000000000))*(cj6)*(x4150));
evalcond[0]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(x4145)*(x4152)))+(x4143)+(((r20)*(x4153))));
evalcond[1]=((((r00)*(x4153)))+(((sj1)*(x4142)))+(((IkReal(-1.00000000000000))*(x4145)*(x4151)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((r10)*(x4153)))+(((IkReal(-1.00000000000000))*(x4144)*(x4145)))+(((IkReal(-1.00000000000000))*(x4142)*(x4146))));
evalcond[3]=((((r21)*(x4147)))+(((x4150)*(x4152)))+(((IkReal(-1.00000000000000))*(x4142)))+(((r22)*(x4149)))+(((r20)*(x4148)))+(((IkReal(-1.00000000000000))*(r20)*(x4154))));
evalcond[4]=((((r02)*(x4149)))+(((r01)*(x4147)))+(((r00)*(x4148)))+(((x4150)*(x4151)))+(((sj1)*(x4143)))+(((IkReal(-1.00000000000000))*(r00)*(x4154))));
evalcond[5]=((((r10)*(x4148)))+(((r12)*(x4149)))+(((r11)*(x4147)))+(((IkReal(-1.00000000000000))*(x4143)*(x4146)))+(((x4144)*(x4150)))+(((IkReal(-1.00000000000000))*(r10)*(x4154))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x4155=((sj4)*(sj5));
IkReal x4156=((IkReal(0.390000000000000))*(sj5));
IkReal x4157=((r21)*(sj6));
IkReal x4158=((IkReal(0.390000000000000))*(cj5));
IkReal x4159=((cj6)*(r00));
IkReal x4160=((IkReal(0.000500000000000000))*(cj6));
IkReal x4161=((r11)*(sj6));
IkReal x4162=((cj5)*(sj4));
IkReal x4163=((r01)*(sj6));
IkReal x4164=((IkReal(1.00000000000000))*(r20));
IkReal x4165=((cj4)*(sj6));
IkReal x4166=((IkReal(0.000500000000000000))*(sj6));
IkReal x4167=((IkReal(1.00000000000000))*(r10));
IkReal x4168=((IkReal(1.00000000000000))*(cj4)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((r20)*(x4166)))+(((r22)*(x4158)))+(((IkReal(-1.00000000000000))*(x4156)*(x4157)))+(((IkReal(-1.00000000000000))*(pz)))+(((r21)*(x4160)))+(((cj6)*(r20)*(x4156))));
evalcond[2]=((((r01)*(x4160)))+(((r02)*(x4158)))+(((r00)*(x4166)))+(((IkReal(0.00200000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(px)))+(((x4156)*(x4159)))+(((IkReal(-0.400000000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(x4156)*(x4163))));
evalcond[3]=((((r10)*(x4166)))+(((IkReal(0.400000000000000))*(cj1)))+(((r12)*(x4158)))+(((IkReal(0.00200000000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(py)))+(((r11)*(x4160)))+(((cj6)*(r10)*(x4156)))+(((IkReal(-1.00000000000000))*(x4156)*(x4161))));
evalcond[4]=((((r22)*(x4155)))+(((IkReal(-1.00000000000000))*(cj6)*(x4162)*(x4164)))+(((x4157)*(x4162)))+(((IkReal(-1.00000000000000))*(x4164)*(x4165)))+(((IkReal(-1.00000000000000))*(r21)*(x4168))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x4159)*(x4162)))+(((r02)*(x4155)))+(cj1)+(((IkReal(-1.00000000000000))*(r00)*(x4165)))+(((x4162)*(x4163)))+(((IkReal(-1.00000000000000))*(r01)*(x4168))));
evalcond[6]=((sj1)+(((IkReal(-1.00000000000000))*(x4165)*(x4167)))+(((IkReal(-1.00000000000000))*(r11)*(x4168)))+(((r12)*(x4155)))+(((IkReal(-1.00000000000000))*(cj6)*(x4162)*(x4167)))+(((x4161)*(x4162))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x4169=((cj4)*(cj5));
IkReal x4170=((cj6)*(r20));
IkReal x4171=((IkReal(1.00000000000000))*(sj4));
IkReal x4172=((IkReal(1.00000000000000))*(r21)*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(sj5)*(x4172)))+(((cj5)*(r22)))+(((sj5)*(x4170))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x4169)*(x4170)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x4171)))+(((IkReal(-1.00000000000000))*(x4169)*(x4172)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x4171))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(sj5)*(x4172)))+(((cj5)*(r22)))+(((sj5)*(x4170)))))+IKsqr(((((x4169)*(x4170)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x4171)))+(((IkReal(-1.00000000000000))*(x4169)*(x4172)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x4171)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(sj5)*(x4172)))+(((cj5)*(r22)))+(((sj5)*(x4170)))), ((((x4169)*(x4170)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x4171)))+(((IkReal(-1.00000000000000))*(x4169)*(x4172)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x4171)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x4173=IKcos(j3);
IkReal x4174=IKsin(j3);
IkReal x4175=((r11)*(sj6));
IkReal x4176=((IkReal(1.00000000000000))*(sj5));
IkReal x4177=((IkReal(1.00000000000000))*(cj1));
IkReal x4178=((sj4)*(sj6));
IkReal x4179=((cj4)*(sj5));
IkReal x4180=((cj6)*(sj4));
IkReal x4181=((cj4)*(cj5));
IkReal x4182=((r01)*(sj6));
IkReal x4183=((r21)*(sj6));
IkReal x4184=((cj6)*(sj5));
IkReal x4185=((IkReal(1.00000000000000))*(cj6)*(x4181));
evalcond[0]=((((cj5)*(r22)))+(((r20)*(x4184)))+(((IkReal(-1.00000000000000))*(x4174)))+(((IkReal(-1.00000000000000))*(x4176)*(x4183))));
evalcond[1]=((((sj1)*(x4173)))+(((IkReal(-1.00000000000000))*(x4176)*(x4182)))+(((r00)*(x4184)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x4175)*(x4176)))+(((IkReal(-1.00000000000000))*(x4173)*(x4177)))+(((r10)*(x4184))));
evalcond[3]=((((r21)*(x4180)))+(((r22)*(x4179)))+(((IkReal(-1.00000000000000))*(r20)*(x4185)))+(x4173)+(((x4181)*(x4183)))+(((r20)*(x4178))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(x4185)))+(((sj1)*(x4174)))+(((r01)*(x4180)))+(((r00)*(x4178)))+(((r02)*(x4179)))+(((x4181)*(x4182))));
evalcond[5]=((((r12)*(x4179)))+(((r11)*(x4180)))+(((IkReal(-1.00000000000000))*(x4174)*(x4177)))+(((x4175)*(x4181)))+(((r10)*(x4178)))+(((IkReal(-1.00000000000000))*(r10)*(x4185))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x4186=((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30);
IkReal x4187=((IkReal(1.00000000000000))*(sj5));
IkReal x4188=((cj2)*(sj1));
IkReal x4189=((r21)*(sj6));
IkReal x4190=((cj6)*(r20));
IkReal x4191=((cj5)*(r22));
if( IKabs(((x4186)*(((((IkReal(-1.00000000000000))*(x4191)))+(((IkReal(-1.00000000000000))*(x4187)*(x4190)))+(((sj5)*(x4189))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x4186)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)*(sj2)))+(((sj5)*(x4188)*(x4190)))+(((IkReal(-1.00000000000000))*(x4187)*(x4188)*(x4189)))+(((IkReal(-1.00000000000000))*(r11)*(sj2)*(sj6)*(x4187)))+(((x4188)*(x4191)))+(((cj6)*(r10)*(sj2)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x4186)*(((((IkReal(-1.00000000000000))*(x4191)))+(((IkReal(-1.00000000000000))*(x4187)*(x4190)))+(((sj5)*(x4189)))))))+IKsqr(((x4186)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)*(sj2)))+(((sj5)*(x4188)*(x4190)))+(((IkReal(-1.00000000000000))*(x4187)*(x4188)*(x4189)))+(((IkReal(-1.00000000000000))*(r11)*(sj2)*(sj6)*(x4187)))+(((x4188)*(x4191)))+(((cj6)*(r10)*(sj2)*(sj5)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x4186)*(((((IkReal(-1.00000000000000))*(x4191)))+(((IkReal(-1.00000000000000))*(x4187)*(x4190)))+(((sj5)*(x4189)))))), ((x4186)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)*(sj2)))+(((sj5)*(x4188)*(x4190)))+(((IkReal(-1.00000000000000))*(x4187)*(x4188)*(x4189)))+(((IkReal(-1.00000000000000))*(r11)*(sj2)*(sj6)*(x4187)))+(((x4188)*(x4191)))+(((cj6)*(r10)*(sj2)*(sj5)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x4192=IKsin(j3);
IkReal x4193=IKcos(j3);
IkReal x4194=((r11)*(sj6));
IkReal x4195=((IkReal(1.00000000000000))*(sj5));
IkReal x4196=((sj4)*(sj6));
IkReal x4197=((cj4)*(sj5));
IkReal x4198=((cj6)*(sj4));
IkReal x4199=((cj4)*(cj5));
IkReal x4200=((r01)*(sj6));
IkReal x4201=((r21)*(sj6));
IkReal x4202=((cj6)*(sj5));
IkReal x4203=((IkReal(1.00000000000000))*(x4193));
IkReal x4204=((sj1)*(x4193));
IkReal x4205=((IkReal(1.00000000000000))*(cj6)*(x4199));
IkReal x4206=((IkReal(1.00000000000000))*(cj2)*(x4192));
evalcond[0]=((((cj5)*(r22)))+(((sj2)*(x4192)))+(((IkReal(-1.00000000000000))*(x4195)*(x4201)))+(((r20)*(x4202))));
evalcond[1]=((((r00)*(x4202)))+(((IkReal(-1.00000000000000))*(x4195)*(x4200)))+(((IkReal(-1.00000000000000))*(cj1)*(x4206)))+(x4204)+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(x4194)*(x4195)))+(((IkReal(-1.00000000000000))*(cj1)*(x4203)))+(((IkReal(-1.00000000000000))*(sj1)*(x4206)))+(((r10)*(x4202))));
evalcond[3]=((((r20)*(x4196)))+(((x4199)*(x4201)))+(((r21)*(x4198)))+(((IkReal(-1.00000000000000))*(sj2)*(x4203)))+(((r22)*(x4197)))+(((IkReal(-1.00000000000000))*(r20)*(x4205))));
evalcond[4]=((((r02)*(x4197)))+(((x4199)*(x4200)))+(((sj1)*(x4192)))+(((IkReal(-1.00000000000000))*(r00)*(x4205)))+(((cj1)*(cj2)*(x4193)))+(((r00)*(x4196)))+(((r01)*(x4198))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x4205)))+(((r12)*(x4197)))+(((r11)*(x4198)))+(((cj2)*(x4204)))+(((r10)*(x4196)))+(((x4194)*(x4199)))+(((IkReal(-1.00000000000000))*(cj1)*(x4192))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x4207=(sj1)*(sj1);
IkReal x4208=(cj1)*(cj1);
IkReal x4209=((cj5)*(r12));
IkReal x4210=((cj6)*(sj5));
IkReal x4211=((IkReal(1.00000000000000))*(sj1));
IkReal x4212=((cj5)*(r02));
IkReal x4213=((IkReal(1.00000000000000))*(cj1));
IkReal x4214=((r01)*(sj5)*(sj6));
IkReal x4215=((r11)*(sj5)*(sj6));
if( IKabs(((((IKabs(((((cj2)*(x4208)))+(((cj2)*(x4207))))) != 0)?((IkReal)1/(((((cj2)*(x4208)))+(((cj2)*(x4207)))))):(IkReal)1.0e30))*(((((r10)*(sj1)*(x4210)))+(((IkReal(-1.00000000000000))*(x4213)*(x4214)))+(((sj1)*(x4209)))+(((cj1)*(r00)*(x4210)))+(((IkReal(-1.00000000000000))*(x4211)*(x4215)))+(((cj1)*(x4212))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((x4208)+(x4207))) != 0)?((IkReal)1/(((x4208)+(x4207)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x4213)*(x4215)))+(((cj1)*(x4209)))+(((sj1)*(x4214)))+(((IkReal(-1.00000000000000))*(x4211)*(x4212)))+(((IkReal(-1.00000000000000))*(r00)*(x4210)*(x4211)))+(((cj1)*(r10)*(x4210))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((cj2)*(x4208)))+(((cj2)*(x4207))))) != 0)?((IkReal)1/(((((cj2)*(x4208)))+(((cj2)*(x4207)))))):(IkReal)1.0e30))*(((((r10)*(sj1)*(x4210)))+(((IkReal(-1.00000000000000))*(x4213)*(x4214)))+(((sj1)*(x4209)))+(((cj1)*(r00)*(x4210)))+(((IkReal(-1.00000000000000))*(x4211)*(x4215)))+(((cj1)*(x4212)))))))+IKsqr(((((IKabs(((x4208)+(x4207))) != 0)?((IkReal)1/(((x4208)+(x4207)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x4213)*(x4215)))+(((cj1)*(x4209)))+(((sj1)*(x4214)))+(((IkReal(-1.00000000000000))*(x4211)*(x4212)))+(((IkReal(-1.00000000000000))*(r00)*(x4210)*(x4211)))+(((cj1)*(r10)*(x4210)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IKabs(((((cj2)*(x4208)))+(((cj2)*(x4207))))) != 0)?((IkReal)1/(((((cj2)*(x4208)))+(((cj2)*(x4207)))))):(IkReal)1.0e30))*(((((r10)*(sj1)*(x4210)))+(((IkReal(-1.00000000000000))*(x4213)*(x4214)))+(((sj1)*(x4209)))+(((cj1)*(r00)*(x4210)))+(((IkReal(-1.00000000000000))*(x4211)*(x4215)))+(((cj1)*(x4212)))))), ((((IKabs(((x4208)+(x4207))) != 0)?((IkReal)1/(((x4208)+(x4207)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x4213)*(x4215)))+(((cj1)*(x4209)))+(((sj1)*(x4214)))+(((IkReal(-1.00000000000000))*(x4211)*(x4212)))+(((IkReal(-1.00000000000000))*(r00)*(x4210)*(x4211)))+(((cj1)*(r10)*(x4210)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x4216=IKsin(j3);
IkReal x4217=IKcos(j3);
IkReal x4218=((r11)*(sj6));
IkReal x4219=((IkReal(1.00000000000000))*(sj5));
IkReal x4220=((sj4)*(sj6));
IkReal x4221=((cj4)*(sj5));
IkReal x4222=((cj6)*(sj4));
IkReal x4223=((cj4)*(cj5));
IkReal x4224=((r01)*(sj6));
IkReal x4225=((r21)*(sj6));
IkReal x4226=((cj6)*(sj5));
IkReal x4227=((IkReal(1.00000000000000))*(x4217));
IkReal x4228=((sj1)*(x4217));
IkReal x4229=((IkReal(1.00000000000000))*(cj6)*(x4223));
IkReal x4230=((IkReal(1.00000000000000))*(cj2)*(x4216));
evalcond[0]=((((cj5)*(r22)))+(((sj2)*(x4216)))+(((IkReal(-1.00000000000000))*(x4219)*(x4225)))+(((r20)*(x4226))));
evalcond[1]=((((r00)*(x4226)))+(x4228)+(((IkReal(-1.00000000000000))*(x4219)*(x4224)))+(((IkReal(-1.00000000000000))*(cj1)*(x4230)))+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((r10)*(x4226)))+(((IkReal(-1.00000000000000))*(x4218)*(x4219)))+(((IkReal(-1.00000000000000))*(sj1)*(x4230)))+(((IkReal(-1.00000000000000))*(cj1)*(x4227))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(x4227)))+(((r22)*(x4221)))+(((x4223)*(x4225)))+(((r21)*(x4222)))+(((r20)*(x4220)))+(((IkReal(-1.00000000000000))*(r20)*(x4229))));
evalcond[4]=((((r01)*(x4222)))+(((r00)*(x4220)))+(((r02)*(x4221)))+(((IkReal(-1.00000000000000))*(r00)*(x4229)))+(((sj1)*(x4216)))+(((x4223)*(x4224)))+(((cj1)*(cj2)*(x4217))));
evalcond[5]=((((x4218)*(x4223)))+(((r10)*(x4220)))+(((IkReal(-1.00000000000000))*(r10)*(x4229)))+(((cj2)*(x4228)))+(((IkReal(-1.00000000000000))*(cj1)*(x4216)))+(((r11)*(x4222)))+(((r12)*(x4221))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x4231=((cj4)*(cj5));
IkReal x4232=((r21)*(sj6));
IkReal x4233=((IkReal(1.00000000000000))*(cj6)*(r20));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(sj5)*(x4233)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))+(((sj5)*(x4232))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x4231)*(x4233)))+(((x4231)*(x4232)))+(((cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((r20)*(sj4)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(sj5)*(x4233)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))+(((sj5)*(x4232)))))), ((gconst4)*(((((IkReal(-1.00000000000000))*(x4231)*(x4233)))+(((x4231)*(x4232)))+(((cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((r20)*(sj4)*(sj6)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x4234=IKsin(j3);
IkReal x4235=IKcos(j3);
IkReal x4236=((r11)*(sj6));
IkReal x4237=((IkReal(1.00000000000000))*(sj5));
IkReal x4238=((sj4)*(sj6));
IkReal x4239=((cj4)*(sj5));
IkReal x4240=((cj6)*(sj4));
IkReal x4241=((cj4)*(cj5));
IkReal x4242=((r01)*(sj6));
IkReal x4243=((r21)*(sj6));
IkReal x4244=((cj6)*(sj5));
IkReal x4245=((IkReal(1.00000000000000))*(x4235));
IkReal x4246=((sj1)*(x4235));
IkReal x4247=((IkReal(1.00000000000000))*(cj6)*(x4241));
IkReal x4248=((IkReal(1.00000000000000))*(cj2)*(x4234));
evalcond[0]=((((cj5)*(r22)))+(((r20)*(x4244)))+(((IkReal(-1.00000000000000))*(x4237)*(x4243)))+(((sj2)*(x4234))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(x4248)))+(((r00)*(x4244)))+(((IkReal(-1.00000000000000))*(x4237)*(x4242)))+(x4246)+(((cj5)*(r02))));
evalcond[2]=((((cj5)*(r12)))+(((r10)*(x4244)))+(((IkReal(-1.00000000000000))*(cj1)*(x4245)))+(((IkReal(-1.00000000000000))*(sj1)*(x4248)))+(((IkReal(-1.00000000000000))*(x4236)*(x4237))));
evalcond[3]=((((x4241)*(x4243)))+(((IkReal(-1.00000000000000))*(sj2)*(x4245)))+(((r22)*(x4239)))+(((IkReal(-1.00000000000000))*(r20)*(x4247)))+(((r21)*(x4240)))+(((r20)*(x4238))));
evalcond[4]=((((r01)*(x4240)))+(((r00)*(x4238)))+(((x4241)*(x4242)))+(((r02)*(x4239)))+(((sj1)*(x4234)))+(((cj1)*(cj2)*(x4235)))+(((IkReal(-1.00000000000000))*(r00)*(x4247))));
evalcond[5]=((((r12)*(x4239)))+(((r10)*(x4238)))+(((IkReal(-1.00000000000000))*(cj1)*(x4234)))+(((x4236)*(x4241)))+(((IkReal(-1.00000000000000))*(r10)*(x4247)))+(((cj2)*(x4246)))+(((r11)*(x4240))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}
    }
}
return solutions.GetNumSolutions()>0;
}

static inline bool checkconsistency8(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 7; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-5*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[1]-Breal[2]) < tol && IKabs(Breal[1]*Breal[1]-Breal[3]) < tol && IKabs(Breal[0]*Breal[3]-Breal[4]) < tol && IKabs(Breal[1]*Breal[3]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol;
}
/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly8qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[16*16]) = {0};
    IkReal IKFAST_ALIGNED16(A[8*8]);
    IkReal IKFAST_ALIGNED16(work[16*16*15]);
    int ipiv[8];
    int info, coeffindex;
    const int worksize=16*16*15;
    const int matrixdim = 8;
    const int matrixdim2 = 16;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 2; ++k) {
            A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 4; ++j) {
            for(int k = 0; k < 6; ++k) {
                IkReal a = matcoeffs[coeffindex+48], b = matcoeffs[coeffindex+24], c = matcoeffs[coeffindex];
                A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 2; ++k) {
                A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[16]);
    IkReal IKFAST_ALIGNED16(wi[16]);
    IkReal IKFAST_ALIGNED16(vr[16*16]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency8(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[2]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[2]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[1];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[6]/ev[4];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[7]/ev[5];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
            }
        }
    }
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:genericrobot - cob3_1 (e2a07ddbff521f11aea8fd7127558928)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
